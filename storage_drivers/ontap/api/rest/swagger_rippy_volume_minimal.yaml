basePath: /api
consumes:
- application/json
- application/hal+json
info:
  contact:
    name: NetApp Support
    url: https://mysupport.netapp.com
  description: |
    ONTAP adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br>
    **Using the ONTAP REST API online documentation**
    Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method.
  title: ONTAP REST API
  version: v1
paths:
  /storage/volumes:
    get:
      description: |-
        Retrieves volumes.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `is_svm_root`
        * `application.*`
        * `encryption.*`
        * `clone.parent_snapshot.name`
        * `clone.parent_snapshot.uuid`
        * `clone.parent_svm.name`
        * `clone.parent_svm.uuid`
        * `clone.parent_volume.name`
        * `clone.parent_volume.uuid`
        * `clone.split_complete_percent`
        * `clone.split_estimate`
        * `clone.split_initiated`
        * `efficiency.*`
        * `error_state.*`
        * `files.*`
        * `nas.export_policy.id`
        * `nas.gid`
        * `nas.path`
        * `nas.security_style`
        * `nas.uid`
        * `nas.unix_permissions`
        * `snaplock.*`
        * `restore_to.*`
        * `snapshot_policy.uuid`
        * `quota.*`
        * `qos.*`
        * `flexcache_endpoint_type`
        * `space.block_storage_inactive_user_data`
        * `space.capacity_tier_footprint`
        * `space.footprint`
        * `space.over_provisioned`
        * `space.metadata`
        * `space.logical_space.*`
        * `space.snapshot.*`
        * `guarantee.*`
        * `autosize.*`
        * `movement.*`
        * `statistics.*`
        ### Related ONTAP commands
        * `volume show`
        * `volume clone show`
        * `volume efficiency show`
        * `volume encryption show`
        * `volume flexcache show`
        * `volume flexgroup show`
        * `volume move show`
        * `volume quota show`
        * `volume show-space`
        * `volume snaplock show`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_collection_get
      parameters:
      - description: Filter by error_state.has_bad_blocks
        in: query
        name: error_state.has_bad_blocks
        type: boolean
      - description: Filter by error_state.is_inconsistent
        in: query
        name: error_state.is_inconsistent
        type: boolean
      - description: Filter by snapmirror.is_protected
        in: query
        name: snapmirror.is_protected
        type: boolean
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by guarantee.honored
        in: query
        name: guarantee.honored
        type: boolean
      - description: Filter by guarantee.type
        in: query
        name: guarantee.type
        type: string
      - description: Filter by style
        in: query
        name: style
        type: string
      - description: Filter by encryption.status.code
        in: query
        name: encryption.status.code
        type: string
      - description: Filter by encryption.status.message
        in: query
        name: encryption.status.message
        type: string
      - description: Filter by encryption.type
        in: query
        name: encryption.type
        type: string
      - description: Filter by encryption.state
        in: query
        name: encryption.state
        type: string
      - description: Filter by encryption.key_id
        in: query
        name: encryption.key_id
        type: string
      - description: Filter by encryption.enabled
        in: query
        name: encryption.enabled
        type: boolean
      - description: Filter by encryption.rekey
        in: query
        name: encryption.rekey
        type: boolean
      - description: Filter by snaplock.autocommit_period
        in: query
        name: snaplock.autocommit_period
        type: string
      - description: Filter by snaplock.type
        in: query
        name: snaplock.type
        type: string
      - description: Filter by snaplock.litigation_count
        in: query
        name: snaplock.litigation_count
        type: integer
      - description: Filter by snaplock.privileged_delete
        in: query
        name: snaplock.privileged_delete
        type: string
      - description: Filter by snaplock.append_mode_enabled
        in: query
        name: snaplock.append_mode_enabled
        type: boolean
      - description: Filter by snaplock.compliance_clock_time
        in: query
        name: snaplock.compliance_clock_time
        type: string
      - description: Filter by snaplock.is_audit_log
        in: query
        name: snaplock.is_audit_log
        type: boolean
      - description: Filter by snaplock.retention.default
        in: query
        name: snaplock.retention.default
        type: string
      - description: Filter by snaplock.retention.minimum
        in: query
        name: snaplock.retention.minimum
        type: string
      - description: Filter by snaplock.retention.maximum
        in: query
        name: snaplock.retention.maximum
        type: string
      - description: Filter by snaplock.expiry_time
        in: query
        name: snaplock.expiry_time
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by movement.destination_aggregate.name
        in: query
        name: movement.destination_aggregate.name
        type: string
      - description: Filter by movement.destination_aggregate.uuid
        in: query
        name: movement.destination_aggregate.uuid
        type: string
      - description: Filter by movement.state
        in: query
        name: movement.state
        type: string
      - description: Filter by movement.cutover_window
        in: query
        name: movement.cutover_window
        type: integer
      - description: Filter by movement.percent_complete
        in: query
        name: movement.percent_complete
        type: integer
      - description: Filter by is_svm_root
        in: query
        name: is_svm_root
        type: boolean
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by flexcache_endpoint_type
        in: query
        name: flexcache_endpoint_type
        type: string
      - description: Filter by clone.is_flexclone
        in: query
        name: clone.is_flexclone
        type: boolean
      - description: Filter by clone.split_complete_percent
        in: query
        name: clone.split_complete_percent
        type: integer
      - description: Filter by clone.split_initiated
        in: query
        name: clone.split_initiated
        type: boolean
      - description: Filter by clone.parent_snapshot.uuid
        in: query
        name: clone.parent_snapshot.uuid
        type: string
      - description: Filter by clone.parent_snapshot.name
        in: query
        name: clone.parent_snapshot.name
        type: string
      - description: Filter by clone.parent_volume.name
        in: query
        name: clone.parent_volume.name
        type: string
      - description: Filter by clone.parent_volume.uuid
        in: query
        name: clone.parent_volume.uuid
        type: string
      - description: Filter by clone.split_estimate
        in: query
        name: clone.split_estimate
        type: integer
      - description: Filter by clone.parent_svm.uuid
        in: query
        name: clone.parent_svm.uuid
        type: string
      - description: Filter by clone.parent_svm.name
        in: query
        name: clone.parent_svm.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by aggregates.name
        in: query
        name: aggregates.name
        type: string
      - description: Filter by aggregates.uuid
        in: query
        name: aggregates.uuid
        type: string
      - description: Filter by tiering.policy
        in: query
        name: tiering.policy
        type: string
      - description: Filter by efficiency.compaction
        in: query
        name: efficiency.compaction
        type: string
      - description: Filter by efficiency.cross_volume_dedupe
        in: query
        name: efficiency.cross_volume_dedupe
        type: string
      - description: Filter by efficiency.policy.name
        in: query
        name: efficiency.policy.name
        type: string
      - description: Filter by efficiency.dedupe
        in: query
        name: efficiency.dedupe
        type: string
      - description: Filter by efficiency.compression
        in: query
        name: efficiency.compression
        type: string
      - description: Filter by space.footprint
        in: query
        name: space.footprint
        type: integer
      - description: Filter by space.snapshot.reserve_percent
        in: query
        name: space.snapshot.reserve_percent
        type: integer
      - description: Filter by space.snapshot.used
        in: query
        name: space.snapshot.used
        type: integer
      - description: Filter by space.logical_space.used_by_afs
        in: query
        name: space.logical_space.used_by_afs
        type: integer
      - description: Filter by space.logical_space.reporting
        in: query
        name: space.logical_space.reporting
        type: boolean
      - description: Filter by space.logical_space.enforcement
        in: query
        name: space.logical_space.enforcement
        type: boolean
      - description: Filter by space.logical_space.available
        in: query
        name: space.logical_space.available
        type: integer
      - description: Filter by space.size
        in: query
        name: space.size
        type: integer
      - description: Filter by space.block_storage_inactive_user_data
        in: query
        name: space.block_storage_inactive_user_data
        type: integer
      - description: Filter by space.used
        in: query
        name: space.used
        type: integer
      - description: Filter by space.over_provisioned
        in: query
        name: space.over_provisioned
        type: integer
      - description: Filter by space.metadata
        in: query
        name: space.metadata
        type: integer
      - description: Filter by space.available
        in: query
        name: space.available
        type: integer
      - description: Filter by space.capacity_tier_footprint
        in: query
        name: space.capacity_tier_footprint
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.cloud.status
        in: query
        name: statistics.cloud.status
        type: string
      - description: Filter by statistics.cloud.latency_raw.read
        in: query
        name: statistics.cloud.latency_raw.read
        type: integer
      - description: Filter by statistics.cloud.latency_raw.write
        in: query
        name: statistics.cloud.latency_raw.write
        type: integer
      - description: Filter by statistics.cloud.latency_raw.total
        in: query
        name: statistics.cloud.latency_raw.total
        type: integer
      - description: Filter by statistics.cloud.latency_raw.other
        in: query
        name: statistics.cloud.latency_raw.other
        type: integer
      - description: Filter by statistics.cloud.iops_raw.read
        in: query
        name: statistics.cloud.iops_raw.read
        type: integer
      - description: Filter by statistics.cloud.iops_raw.write
        in: query
        name: statistics.cloud.iops_raw.write
        type: integer
      - description: Filter by statistics.cloud.iops_raw.total
        in: query
        name: statistics.cloud.iops_raw.total
        type: integer
      - description: Filter by statistics.cloud.iops_raw.other
        in: query
        name: statistics.cloud.iops_raw.other
        type: integer
      - description: Filter by statistics.cloud.timestamp
        in: query
        name: statistics.cloud.timestamp
        type: string
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.throughput_raw.other
        in: query
        name: statistics.throughput_raw.other
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by snapshot_policy.name
        in: query
        name: snapshot_policy.name
        type: string
      - description: Filter by snapshot_policy.uuid
        in: query
        name: snapshot_policy.uuid
        type: string
      - description: Filter by qos.policy.uuid
        in: query
        name: qos.policy.uuid
        type: string
      - description: Filter by qos.policy.max_throughput_iops
        in: query
        name: qos.policy.max_throughput_iops
        type: integer
      - description: Filter by qos.policy.name
        in: query
        name: qos.policy.name
        type: string
      - description: Filter by qos.policy.min_throughput_iops
        in: query
        name: qos.policy.min_throughput_iops
        type: integer
      - description: Filter by qos.policy.max_throughput_mbps
        in: query
        name: qos.policy.max_throughput_mbps
        type: integer
      - description: Filter by autosize.shrink_threshold
        in: query
        name: autosize.shrink_threshold
        type: integer
      - description: Filter by autosize.minimum
        in: query
        name: autosize.minimum
        type: integer
      - description: Filter by autosize.maximum
        in: query
        name: autosize.maximum
        type: integer
      - description: Filter by autosize.mode
        in: query
        name: autosize.mode
        type: string
      - description: Filter by autosize.grow_threshold
        in: query
        name: autosize.grow_threshold
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.cloud.timestamp
        in: query
        name: metric.cloud.timestamp
        type: string
      - description: Filter by metric.cloud.latency.read
        in: query
        name: metric.cloud.latency.read
        type: integer
      - description: Filter by metric.cloud.latency.write
        in: query
        name: metric.cloud.latency.write
        type: integer
      - description: Filter by metric.cloud.latency.total
        in: query
        name: metric.cloud.latency.total
        type: integer
      - description: Filter by metric.cloud.latency.other
        in: query
        name: metric.cloud.latency.other
        type: integer
      - description: Filter by metric.cloud.status
        in: query
        name: metric.cloud.status
        type: string
      - description: Filter by metric.cloud.iops.read
        in: query
        name: metric.cloud.iops.read
        type: integer
      - description: Filter by metric.cloud.iops.write
        in: query
        name: metric.cloud.iops.write
        type: integer
      - description: Filter by metric.cloud.iops.total
        in: query
        name: metric.cloud.iops.total
        type: integer
      - description: Filter by metric.cloud.iops.other
        in: query
        name: metric.cloud.iops.other
        type: integer
      - description: Filter by metric.cloud.duration
        in: query
        name: metric.cloud.duration
        type: string
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by metric.throughput.other
        in: query
        name: metric.throughput.other
        type: integer
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by quota.state
        in: query
        name: quota.state
        type: string
      - description: Filter by consistency_group.name
        in: query
        name: consistency_group.name
        type: string
      - description: Filter by nas.path
        in: query
        name: nas.path
        type: string
      - description: Filter by nas.security_style
        in: query
        name: nas.security_style
        type: string
      - description: Filter by nas.uid
        in: query
        name: nas.uid
        type: integer
      - description: Filter by nas.gid
        in: query
        name: nas.gid
        type: integer
      - description: Filter by nas.export_policy.name
        in: query
        name: nas.export_policy.name
        type: string
      - description: Filter by nas.export_policy.id
        in: query
        name: nas.export_policy.id
        type: integer
      - description: Filter by nas.unix_permissions
        in: query
        name: nas.unix_permissions
        type: integer
      - description: Filter by size
        in: query
        name: size
        type: integer
      - description: Filter by files.maximum
        in: query
        name: files.maximum
        type: integer
      - description: Filter by files.used
        in: query
        name: files.used
        type: integer
      - description: Filter by language
        in: query
        name: language
        type: string
      - description: Filter by application.uuid
        in: query
        name: application.uuid
        type: string
      - description: Filter by application.name
        in: query
        name: application.name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |-
        Creates a volume on a specified SVM and storage aggregates.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the volume.
        * `name` - Name of the volume.
        * `aggregates.name` or `aggregates.uuid` - Existing aggregates in which to create the volume.
        ### Default property values
        * `state` -  _online_
        * `size` - _20MB_
        * `style` - _flexvol_
        * `type` - _rw_
        * `encryption.enabled` - _false_
        * `snapshot_policy.name` - _default_
        * `gaurantee.type` - _volume_
        ### Related ONTAP commands
        * `volume create`
        * `volume clone create`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/volume'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 787140 | One of \"aggregates.uuid\", \"aggregates.name\", or \"style\" must be provided. |
            | 787141 | The specified \"aggregates.name\" and \"aggregates.uuid\" refer to different aggregates. |
            | 917835 | Maximum allowed snapshot.reserve_percent value during a volume creation is 90. Use PATCH to set it to a higher value after the volume has been created. |
            | 918233 | The target field cannot be specified for this operation. |
            | 918236 | The specified \"parent_volume.uuid\" and \"parent_volume.name\" do not refer to the same volume. |
            | 918240 | The target style is an invalid volume style. |
            | 918241 | The target style is an unsupported volume style for volume creation. |
            | 918242 | When creating a flexible volume, exactly one aggregate must be specified via either \"aggregates.name\" or \"aggregates.uuid\". |
            | 918243 | The specified Snapshot copy UUID is not correct for the specified Snapshot copy name. |
            | 918244 | Invalid \"volume.type\" for clone volume. |
            | 918246 | \"volume.clone.parent_volume.name\" or \"volume.clone.parent_volume.uuid\" must be provided. |
            | 918247 | Specifying a value is not valid for a volume FlexClone creation. |
            | 918252 | \"nas.path\" is invalid. |
            | 2621706 | The specified \"svm.uuid\" and \"svm.name\" do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either \"svm.name\" or \"svm.uuid\" must be supplied. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        FlexVol volumes are logical containers used by ONTAP to serve data to clients.  They contain file systems in a NAS environment and LUNs in a SAN environment.<br/>
        A FlexGroup volume is a scale-out NAS container that provides high performance along with automatic load distribution and scalability. A FlexGroup volume contains several constituents that automatically and transparently share the traffic.</br>
        FlexClone volumes are writable, point-in-time copies of a FlexVol volume. At this time, FlexClones of FlexGroups are not supported.<br/>
        Volumes with SnapLock type Compliance or Enterprise, are referred to as SnapLock volumes. Volumes with SnapLock type cannot be of FlexGroup style. Once a SnapLock aggregate is created, by default, volumes created inside the aggregate inherit the "snaplock" property from the aggregate. It is possible to create a SnapLock volume by specifying SnapLock parameters. SnapLock parameters are only available at the "advanced" privilege level.<br/>
        ONTAP storage APIs allow you to create, modify, and monitor volumes and aggregates.<br/>
        ## Storage efficiency
        Storage efficiency is used to remove duplicate blocks in the data and to compress the data. Efficiency has deduplication, compression, cross volume deduplication, and compaction options. On All Flash systems, all efficiencies are enabled by default on volume creation. Options such as "background/inline/both" are treated as both, which means both background and inline are enabled for any efficiency option. The option "none"  disables both background and inline efficiency.<br/>
        To enable any efficiency option on all-flash or FAS systems, background deduplication is always enabled.<br/>
        ## Quotas
        Quotas provide a way to restrict or track the files and space usage by a user, group, or qtree. Quotas are enabled for a specific FlexVol or a FlexGroup volume.<br/>
        The following APIs can be used to enable or disable and obtain quota state for a FlexVol or a FlexGroup volume:
        &ndash; PATCH  /api/storage/volumes/{uuid} -d '{"quota.enabled":"true"}'
        &ndash; PATCH  /api/storage/volumes/{uuid} -d '{"quota.enabled":"false"}'
        &ndash; GET    /api/storage/volumes/{uuid}/?fields=quota.state
        ## QoS
        QoS policy and settings enforce Service Level Objectives (SLO) on a volume. SLO can be set by specifying qos.max_throughput_iops and/or qos.max_throughput_mbps or qos.min_throughput_iops. Specifying min_throughput_iops is only supported on volumes hosted on a node that is flash optimized. A pre-created QoS policy can also be used by specifying qos.name or qos.uuid property. <br/>
        ## Performance monitoring
        Performance of a volume can be monitored by the `metric.*` and `statistics.*` fields. These show the performance of the volume in terms of IOPS, latency and throughput. The `metric.*` fields denote an average whereas `statistics.*` fields denote a real-time monotonically increasing value aggregated across all nodes. <br/>
        ## Volume APIs
        The following APIs are used to perform operations related with FlexVol volumes and FlexGroup volumes:
        &ndash; POST      /api/storage/volumes
        &ndash; GET       /api/storage/volumes
        &ndash; GET       /api/storage/volumes/{uuid}
        &ndash; PATCH     /api/storage/volumes/{uuid}
        &ndash; DELETE    /api/storage/volumes/{uuid}
        ## Examples
        ### Creating a volume
        The POST request is used to create a new volume and to specify its properties.
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name": "vol1", "aggregates":[{"name":"aggr1"}], "svm":{"name" : "vs1"}}'
        # The response:
        {
          "job": {
            "uuid": "b89bc5dd-94a3-11e8-a7a3-0050568edf84",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/b89bc5dd-94a3-11e8-a7a3-0050568edf84"
              }
            }
          }
        }
        ```
        ### Creating a SnapLock volume and specifying its properties using POST
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name": "vol1",  "aggregates":[{"name": "aggr1"}],  "svm":{"name" : "vs1"}, "snaplock":{"retention":{"default": "P20Y"}}}'
        # The response:
        {
          "job": {
            "uuid": "e45b123b-c228-11e8-aa20-0050568e36bb",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/e45b123b-c228-11e8-aa20-0050568e36bb"
              }
            }
          }
        }
        ```
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name" : "vol1", "state" : "online", "type" : "RW", "aggregates" : [{"name" : "aggr1"}, {"name" : "aggr2"}, {"name":"aggr3"}], "constituents_per_aggregate" : "1", "svm" : {"name" : "vs1"}, "size" : "240MB", "encryption" : {"enabled" : "False"}, "efficiency" : {"compression" : "both"}, "autosize" : {"maximum" : "500MB", "minimum" : "240MB"}}'
        # The response:
        {
          "job": {
            "uuid": "3cfa38bd-3a78-11e9-ae39-0050568ed7dd",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/3cfa38bd-3a78-11e9-ae39-0050568ed7dd"
              }
            }
          }
        }
        ```
        ### Creating a FlexClone and specifying its properties using POST
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name":"vol1_clone",{"clone":"parent_volume": {"name": "vol1"}},"svm":{"name": "vs0"}, {"clone": {"is_flexclone":"true"}}}'
        # The response:
        HTTP/1.1 202 Accepted
        Date: Tue, 26 Feb 2019 09:06:22 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/storage/volumes/?name=vol1_clone
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "c9ee0040-39a5-11e9-9b24-00a098439a83",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/c9ee0040-39a5-11e9-9b24-00a098439a83"
              }
            }
          }
        }
        ```
        ## Volumes reported in the GET REST API
        ### The following types of volumes are reported:
        &ndash;  RW, DP and LS volume
        &ndash;  FlexGroup volume
        &ndash;  FlexCache volume
        &ndash;  FlexClone volume
        <br/>
        ### The following types of volumes are not reported:
        &ndash;  DEL volume
        &ndash;  TEMP volume
        &ndash;  Node Root volume
        &ndash;  System Vserver volume
        &ndash;  FlexGroup constituent
        &ndash;  FlexCache constituent
        ## Examples
        ### Retrieving the attributes of a volume
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "2d1167cc-c3f2-495a-a23f-8f50b071b9b8",
              "name": "vsdata_root",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/2d1167cc-c3f2-495a-a23f-8f50b071b9b8"
                }
              }
            },
            {
              "uuid": "3969be7e-78b4-4b4c-82a4-fa86331f03df",
              "name": "vsfg_root",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/3969be7e-78b4-4b4c-82a4-fa86331f03df"
                }
              }
            },
            {
              "uuid": "59c03ac5-e708-4ce8-a676-278dc249fda2",
              "name": "svm_root",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/59c03ac5-e708-4ce8-a676-278dc249fda2"
                }
              }
            },
            {
              "uuid": "6802635b-8036-11e8-aae5-0050569503ac",
              "name": "fgvol",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/6802635b-8036-11e8-aae5-0050569503ac"
                }
              }
            },
            {
              "uuid": "d0c3359c-5448-4a9b-a077-e3295a7e9057",
              "name": "datavol",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057"
                }
              }
            }
          ],
          "num_records": 5,
          "_links": {
            "self": {
              "href": "/api/storage/volumes"
            }
          }
        }
        ```
        ### Retrieving the attributes a volume
        The GET request is used to retrieve the attributes of a volume.
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "d0c3359c-5448-4a9b-a077-e3295a7e9057",
          "comment": "This is a data volume",
          "create_time": "2018-07-05T14:56:44+05:30",
          "language": "en_us",
          "name": "datavol",
          "size": 20971520,
          "state": "online",
          "style": "flexvol",
          "tiering_policy": "auto",
          "type": "rw",
          "aggregates": [
            {
              "name": "data",
              "uuid": "aa742322-36bc-4d98-bbc4-0a827534c035",
              "_links": {
                "self": {
                  "href": "/api/cluster/aggregates/data"
                }
              }
            }
          ],
          "encryption": {
            "enabled": false,
            "state": "none",
            "key_id": "",
            "type" : "none"
          },
          "error_state": {
            "has_bad_blocks": false,
            "is_inconsistent": false
          },
          "files": {
            "maximum": 566,
            "used": 96
          },
          "nas": {
            "gid": 2468,
            "security_style": "unix",
            "uid": 1357,
            "unix_permissions": 4755
            "export_policy": {
              "name": "default",
              "id": 8589934593
            }
          },
          "metric": {
            "timestamp": "2019-04-09T05:50:15Z",
            "status": "ok",
            "duration": "PT15S",
            "latency": {
              "other": 0,
              "total": 0,
              "read": 0,
              "write": 0
            },
            "iops": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            },
            "throughput": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            },
            "cloud": {
              "timestamp": "2019-04-09T05:50:15Z",
              "status": "ok",
              "duration": "PT15S",
              "iops" : {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              },
              "latency": {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              }
            }
          },
          "statistics": {
            "timestamp": "2019-04-09T05:50:42Z",
            "status": "ok",
            "latency_raw": {
              "other": 38298,
              "total": 38298,
              "read": 0,
              "write": 0
            },
            "iops_raw": {
              "read": 0,
              "write": 0,
              "other": 3,
              "total": 3
            },
            "throughput_raw": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            },
            "cloud": {
              "timestamp": "2019-04-09T05:50:42Z",
              "status": "ok",
              "iops_raw" : {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              },
              "latency_raw": {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              }
            }
          },
          "qos": {
            "policy": {
            "min_throughput_iops": 0,
            "max_throughput_iops": 1000,
            "max_throughput_mbps": 0,
            "uuid": "228454af-5a8b-11e9-bd5b-005056ac6f1f",
            "name": "pg1"
            }
          },
          "snaplock": {
            "append_mode_enabled": false,
            "autocommit_period": "none",
            "compliance_clock_time": "2019-05-24T10:59:00+05:30",
            "expiry_time": "2038-01-19T08:44:28+05:30",
            "is_audit_log": false,
            "litigation_count": 0,
            "privileged_delete": "disabled",
            "type": "enterprise",
            "retention": {
              "default": "P0Y",
              "minimum": "P0Y",
              "maximum": "P30Y"
            }
          },
          "snapshot_policy": {
            "name": "default"
          },
          "svm": {
            "name": "vsdata",
            "uuid": "d61b69f5-7458-11e8-ad3f-0050569503ac"
          },
          "_links": {
            "self": {
              "href": "/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057"
            }
          }
        }
        ```
        ### Retrieving the quota state of a FlexVol or a FlexGroup volume
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717/?fields=quota.state" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
          "name": "fv",
          "quota": {
            "state": "on"
          },
          "_links": {
            "self": {
              "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717/"
            }
          }
        }
        ```
        ## Updating the attributes of a volume
        ## Examples
        ### Updating the attributes of a volume
        The PATCH request is used to update the attributes of a volume.
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{ "size": 26214400, {"nas":{"security_style": "mixed"}, "comment": "This is a data volume" }' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Tue, 31 Jul 2018 09:36:43 GMT
        Server: libzapid-httpd
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "3c5be5a6-94a5-11e8-8ca3-00505695c11b",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/3c5be5a6-94a5-11e8-8ca3-00505695c11b"
              }
            }
          }
        }
        ```
        ### Updating the attributes of a FlexClone using PATCH
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{"clone":{"split_initiated":"true"}}' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Mon, 25 Feb 2019 10:10:19 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "8e01747f-38e5-11e9-8a3a-00a09843994b",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/8e01747f-38e5-11e9-8a3a-00a09843994b"
              }
            }
          }
        }
        ```
        ### Enabling quotas for a FlexVol or a FlexGroup volume using PATCH
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{"quota":{"enabled":"true"}}' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Mon, 25 Feb 2019 10:10:19 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "d2fe7299-57d0-11e9-a2dc-005056a7f717",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/d2fe7299-57d0-11e9-a2dc-005056a7f717"
              }
            }
          }
        }
        ```
        ### Disabling quotas for a FlexVol or a FlexGroup volume using PATCH
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{"quota":{"enabled":"false"}}' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Mon, 25 Feb 2019 10:10:19 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "0c8f6bea-57d1-11e9-a2dc-005056a7f717",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/0c8f6bea-57d1-11e9-a2dc-005056a7f717"
              }
            }
          }
        }
        ```
        ## Deleting a volume
        ## Example
        ### Deleting a volume
        The DELETE request is used to delete a volume.
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X DELETE  "https://<mgmt-ip>/api/storage/volumes/{uuid} " -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        cache-control: no-cache,no-store,must-revalidate
        connection: Keep-Alive
        content-length: 189
        content-type: application/json
        date: Wed, 01 Aug 2018 09:40:36 GMT
        keep-alive: timeout=5, max=100
        server: libzapid-httpd
        {
          "job": {
            "uuid": "f1aa3eb8-956e-11e8-86bf-0050568e2249",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f1aa3eb8-956e-11e8-86bf-0050568e2249"
              }
            }
          }
        }
        ```
      tags:
      - storage
  /storage/volumes/{uuid}:
    delete:
      description: |-
        Deletes a volume. If the UUID belongs to a volume, all of its blocks are freed and returned to its containing aggregate. If a volume is online, it is offlined before deletion. If a volume is mounted, unmount the volume by specifying the nas.path as empty before deleting it using the DELETE operation.
        ### Related ONTAP commands
        * `volume delete`
        * `volume clone delete`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Unique identifier of the volume.
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |-
        Retrieves a volume. The GET API can be used to retrieve the quota state for a FlexVol or a FlexGroup volume.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `is_svm_root`
        * `application.*`
        * `encryption.*`
        * `clone.parent_snapshot.name`
        * `clone.parent_snapshot.uuid`
        * `clone.parent_svm.name`
        * `clone.parent_svm.uuid`
        * `clone.parent_volume.name`
        * `clone.parent_volume.uuid`
        * `clone.split_complete_percent`
        * `clone.split_estimate`
        * `clone.split_initiated`
        * `efficiency.*`
        * `error_state.*`
        * `files.*`
        * `nas.export_policy.id`
        * `nas.gid`
        * `nas.path`
        * `nas.security_style`
        * `nas.uid`
        * `nas.unix_permissions`
        * `snaplock.*`
        * `restore_to.*`
        * `snapshot_policy.uuid`
        * `quota.*`
        * `qos.*`
        * `flexcache_endpoint_type`
        * `space.block_storage_inactive_user_data`
        * `space.capacity_tier_footprint`
        * `space.footprint`
        * `space.over_provisioned`
        * `space.metadata`
        * `space.logical_space.*`
        * `space.snapshot.*`
        * `guarantee.*`
        * `autosize.*`
        * `movement.*`
        * `statistics.*`
        ### Related ONTAP commands
        * `volume show`
        * `volume clone show`
        * `volume efficiency show`
        * `volume encryption show`
        * `volume flexcache show`
        * `volume flexgroup show`
        * `volume move show`
        * `volume quota show`
        * `volume show-space`
        * `volume snaplock show`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_get
      parameters:
      - description: Unique identifier of the volume.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |-
        Updates the attributes of a volume. For movement, use the "validate_only" field on the request to validate but not perform the operation. The PATCH API can be used to enable or disable quotas for a FlexVol or a FlexGroup volume.
        ### Related ONTAP commands
        * `volume modify`
        * `volume clone modify`
        * `volume efficiency modify`
        * `volume quota on`
        * `volume quota off`
        * `volume snaplock modify`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Unique identifier of the volume.
        in: path
        name: uuid
        required: true
        type: string
      - description: UUID of the Snapshot copy to restore volume to the point in time
          the Snapshot copy was taken.
        in: query
        name: restore_to.snapshot.uuid
        type: string
      - description: Name of the Snapshot copy to restore volume to the point in time
          the Snapshot copy was taken.
        in: query
        name: restore_to.snapshot.name
        type: string
      - default: use_existing_resources
        description: |
          Represents the method to modify the size of a Flexgroup. The following methods are supported:
          * use_existing_resources - Increases or decreases the size of the FlexGroup by increasing or decreasing the size of the current FlexGroup resources
          * add_new_resources - Increases the size of the FlexGroup by adding new resources
        enum:
        - use_existing_resources
        - add_new_resources
        in: query
        name: sizing_method
        type: string
      - $ref: '#/parameters/validate_only_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/volume'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 787141 | The specified \"aggregates.name\" and \"aggregates.uuid\" refer to different aggregates. |
            | 918248 | Specifying a value is not valid for initiating volume FlexClone split operation. |
            | 918251 | Specifying a value is not valid for a Snapshot copy restore operation. |
            | 918252 | specified \"nas.path\" is invalid. |
            | 918265 | Volume is on the same aggregate. |
            | 918266 | \"movement.destination_aggregate\" and \"movement.state\" are mutually exclusive, unless the state is \"cutover-wait\". |
            | 918267 | The specified \"movement.destination_aggregate\" does not exist. |
            | 13107404 | When adding new resources to a FlexGroup by specifying \"aggregates.name\" or \"aggregates.uuid\", the FlexGroup cannot be resized using \"size\". These operations must be done separately. |
            | 13109187 | When adding new resources to a FlexGroup using \"sizing_method\", \"size\" must be specified.  Neither \"aggregates.name\" nor \"aggregates.uuid\" are allowed to be specified, as the aggregates are selected automatically by the system. |
            | 13109198 | Resizing by adding new resources is only supported for FlexGroups. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/volumes/{volume.uuid}/files/{path}:
    get:
      description: |-
        Retrieves a list of files and directories for a given directory of a volume.
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/files/{path}`](#docs-storage-storage_volumes_{volume.uuid}_files_{path})
      operationId: file_info_collection_get
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Relative path of a directory in the volume.
        in: path
        name: path
        required: true
        type: string
      - description: Filter by owner_id
        in: query
        name: owner_id
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by bytes_used
        in: query
        name: bytes_used
        type: integer
      - description: Filter by hard_links_count
        in: query
        name: hard_links_count
        type: integer
      - description: Filter by changed_time
        in: query
        name: changed_time
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by unix_permissions
        in: query
        name: unix_permissions
        type: integer
      - description: Filter by is_empty
        in: query
        name: is_empty
        type: boolean
      - description: Filter by group_id
        in: query
        name: group_id
        type: integer
      - description: Filter by inode_number
        in: query
        name: inode_number
        type: integer
      - description: Filter by modified_time
        in: query
        name: modified_time
        type: string
      - description: Filter by size
        in: query
        name: size
        type: integer
      - description: Filter by path
        in: query
        name: path
        type: string
      - description: Filter by inode_generation
        in: query
        name: inode_generation
        type: integer
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by is_junction
        in: query
        name: is_junction
        type: boolean
      - description: Filter by is_vm_aligned
        in: query
        name: is_vm_aligned
        type: boolean
      - description: Filter by accessed_time
        in: query
        name: accessed_time
        type: string
      - description: Filter by creation_time
        in: query
        name: creation_time
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/file_info_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        This API is used to retrieve a list of files and directories for a given directory of a volume.
        ## Examples
        ###  Retrieving the list of files in a directory
        ```
        # The API:
        GET /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/cb6b1b39-8d21-11e9-b926-05056aca658/files/d1%2Fd2%2Fd3"  -H 'accept: application/hal+json'
        # Response for file records:
        {
          "records": [
            {
              "path": "d1/d2/d3",
              "name": ".",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2F%2E"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "..",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2F%2E%2E"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "f1"
            },
            {
              "path": "d1/d2/d3",
              "name": "d5",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2Fd5"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3"
            }
          }
        }
        ```
      tags:
      - storage
  /storage/volumes/{volume.uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for a volume.
      operationId: volume_metrics_collection_get
      parameters:
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by cloud.timestamp
        in: query
        name: cloud.timestamp
        type: string
      - description: Filter by cloud.latency.read
        in: query
        name: cloud.latency.read
        type: integer
      - description: Filter by cloud.latency.write
        in: query
        name: cloud.latency.write
        type: integer
      - description: Filter by cloud.latency.total
        in: query
        name: cloud.latency.total
        type: integer
      - description: Filter by cloud.latency.other
        in: query
        name: cloud.latency.other
        type: integer
      - description: Filter by cloud.status
        in: query
        name: cloud.status
        type: string
      - description: Filter by cloud.iops.read
        in: query
        name: cloud.iops.read
        type: integer
      - description: Filter by cloud.iops.write
        in: query
        name: cloud.iops.write
        type: integer
      - description: Filter by cloud.iops.total
        in: query
        name: cloud.iops.total
        type: integer
      - description: Filter by cloud.iops.other
        in: query
        name: cloud.iops.other
        type: integer
      - description: Filter by cloud.duration
        in: query
        name: cloud.duration
        type: string
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: Unique identifier of the volume.
        in: path
        name: volume.uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume_metrics_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/volumes/{volume.uuid}/snapshots:
    get:
      description: |
        Retrieves a collection of volume Snapshot copies.
        ### Related ONTAP commands
        * `snapshot show`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_collection_get
      parameters:
      - description: Volume
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Filter by expiry_time
        in: query
        name: expiry_time
        type: string
      - description: Filter by owners
        in: query
        name: owners
        type: string
      - description: Filter by snaplock_expiry_time
        in: query
        name: snaplock_expiry_time
        type: string
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |
        Creates a volume Snapshot copy.
        ### Required properties
        * `name` - Name of the Snapshot copy to be created.
        ### Recommended optional properties
        * `comment` - Comment associated with the Snapshot copy.
        * `expiry_time` - Snapshot copies with an expiry time set are not allowed to be deleted until the retention time is reached.
        ### Related ONTAP commands
        * `snapshot create`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        A Snapshot copy is the view of the filesystem as it exists at the time when the Snapshot copy is created. <br/>
        In ONTAP, different types of Snapshot copies are supported, such as scheduled Snapshot copies, user requested Snapshot copies, SnapMirror Snapshot copies, and so on. <br/>
        ONTAP Snapshot copy APIs allow you to create, modify, delete and retrieve Snapshot copies. <br/>
        ## Snapshot copy APIs
        The following APIs are used to perform operations related to Snapshot copies.
        &ndash; POST      /api/storage/volumes/{volume.uuid}/snapshots
        &ndash; GET       /api/storage/volumes/{volume.uuid}/snapshots
        &ndash; GET       /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        &ndash; PATCH     /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        &ndash; DELETE    /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        ## Examples
        ### Creating a Snapshot copy
        The POST operation is used to create a Snapshot copy with the specified attributes.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots
        # The call:
        curl -X POST "https://<mgmt-ip>/api/storage/volumes/{volume.uuid}/snapshots" -H "accept: application/hal+json" -d '{"name": "snapshot_copy", "comment": "Store this copy." }'
        # The response:
        HTTP/1.1 202 Accepted
        Date: Wed, 13 Mar 2019 22:43:34 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/?name=snapshot_copy
        Content-Length: 189
        Content-Type: application/json
        {
          "num_records": 1,
          "records": [
            {
              "volume": {
                "name": "v2"
              },
              "svm": {
                "uuid": "8139f958-3c6e-11e9-a45f-005056bbc848",
                "name": "vs0"
              }
              "name": "snapshot_copy",
              "comment": "Store this copy."
            }
          ],
          "job": {
            "uuid": "6f68c85b-45e1-11e9-8fc7-005056bbc848",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/6f68c85b-45e1-11e9-8fc7-005056bbc848"
              }
            }
          }
        }
        # The Job:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 22:43:57 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 224
        Content-Type: application/json
        {
          "uuid": "6f68c85b-45e1-11e9-8fc7-005056bbc848",
          "description": "POST /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/?name=snapshot_copy",
          "state": "success",
          "message": "success",
          "code": 0
        }
        ```
        ### Retrieving Snapshot copy attributes
        The GET operation is used to retrieve Snapshot copy attributes.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/{volume.uuid}/snapshots" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 21:14:06 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Type: application/json
        Transfer-Encoding: chunked
        {
          "records": [
            {
              "uuid": "402b6c73-73a0-4e89-a58a-75ee0ab3e8c0",
              "name": "hourly.2019-03-13_1305",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/402b6c73-73a0-4e89-a58a-75ee0ab3e8c0"
                }
              }
            },
            {
              "uuid": "f0dd497f-efe8-44b7-a4f4-bdd3890bc0c8",
              "name": "hourly.2019-03-13_1405",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/f0dd497f-efe8-44b7-a4f4-bdd3890bc0c8"
                }
              }
            },
            {
              "uuid": "02701900-51bd-46b8-9c77-47d9a9e2ce1d",
              "name": "hourly.2019-03-13_1522",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/02701900-51bd-46b8-9c77-47d9a9e2ce1d"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots"
            }
          }
        }
        ```
        ### Retrieving the attributes of a specific Snapshot copy
        The GET operation is used to retrieve the attributes of a specific Snapshot copy.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/402b6c73-73a0-4e89-a58a-75ee0ab3e8c0" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 22:39:26 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 308
        Content-Type: application/json
        {
          "volume": {
            "uuid": "0353dc05-405f-11e9-acb6-005056bbc848",
            "name": "v2",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848"
              }
            }
          },
          "uuid": "402b6c73-73a0-4e89-a58a-75ee0ab3e8c0",
          "svm": {
            "uuid": "8139f958-3c6e-11e9-a45f-005056bbc848",
            "name": "vs0",
            "_links": {
              "self": {
                "href": "/api/svm/svms/8139f958-3c6e-11e9-a45f-005056bbc848"
              }
            }
          },
          "name": "hourly.2019-03-13_1305",
          "create_time": "2019-03-13T13:05:00-04:00",
          "_links": {
            "self": {
              "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/402b6c73-73a0-4e89-a58a-75ee0ab3e8c0"
            }
          }
        }
        ```
        ### Updating a Snapshot copy
        The PATCH operation is used to update the specific attributes of a Snapshot copy.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f" -d '{"name": "snapshot_copy_new" }' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Wed, 13 Mar 2019 22:50:44 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/json
        {
          "job": {
            "uuid": "6f7c3a82-45e2-11e9-8fc7-005056bbc848",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/6f7c3a82-45e2-11e9-8fc7-005056bbc848"
              }
            }
          }
        }
        # The Job:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 22:54:16 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 242
        Content-Type: application/json
        {
          "uuid": "6f7c3a82-45e2-11e9-8fc7-005056bbc848",
          "description": "PATCH /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f",
          "state": "success",
          "message": "success",
          "code": 0
        }
        ```
        ### Deleting a Snapshot copy
        The DELETE operation is used to delete a Snapshot copy.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Wed, 13 Mar 2019 22:57:51 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/json
        {
          "job": {
            "uuid": "6da1dfdd-45e3-11e9-8fc7-005056bbc848",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/6da1dfdd-45e3-11e9-8fc7-005056bbc848"
              }
            }
          }
        }
        # The Job:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 23:02:46 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 243
        Content-Type: application/json
        {
          "uuid": "6da1dfdd-45e3-11e9-8fc7-005056bbc848",
          "description": "DELETE /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f",
          "state": "success",
          "message": "success",
          "code": 0
        }
        ```
      tags:
      - storage
  /storage/volumes/{volume.uuid}/snapshots/{uuid}:
    delete:
      description: |
        Deletes a Volume Snapshot copy.
        ### Related ONTAP commands
        * `snapshot delete`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |
        Retrieves details of a specific volume Snapshot copy.
        ### Related ONTAP commands
        * `snapshot show`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_get
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |
        Updates a Volume Snapshot copy.
        ### Related ONTAP commands
        * `snapshot modify`
        * `snapshot rename`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
produces:
- application/json
- application/hal+json
schemes:
- https
security:
- simple: []
securityDefinitions:
  simple:
    type: basic
swagger: '2.0'
tags:
- description: Details the features for all ONTAP APIs.
  name: docs
- description: Manages cloud (object storage) targets
  name: cloud
- description: |
    Manages clusters, nodes, jobs, and cluster software
  name: cluster
  x-ntap-long-description: |
    ## Overview
    These APIs enable you to perform a number of independent workflows, including:
    * Creating the cluster
    * Adding nodes to the cluster
    * Managing cluster configuration data (including name, version, NTP servers, name servers, and DNS domains)
    * Managing node configuration data (including node names, models, serial numbers, and HA group information)
    * Discovering the nodes on the cluster network that can be added to the cluster
    * Viewing and updating current and recent jobs
    * Updating the cluster software
    ### Pre-Cluster APIs
    A few of the cluster APIs (namely, POST/OPTIONS on /api/cluster, GET/HEAD/OPTIONS on /api/cluster/nodes, and calls on /api/cluster/jobs) are allowed before the cluster is created.  These APIs support creation of the cluster and monitoring of its progress. Any other cluster API used before the cluster is created will fail.
- description: Manages physical and logical networking
  name: networking
  x-ntap-long-description: |
    ## Overview
    The ONTAP networking APIs enable reporting on networking information, such as IPspaces, interfaces, routes, ports, service policies and broadcast domains. Some can also be used to manage networking.
    <br/>
    ---
    ## IPspaces
    IPspaces enable you to configure a single ONTAP cluster so that it can be accessed by clients from more than one administratively separate network domain, even if those clients are using the same IP address subnet range. This allows for separation of client traffic for privacy and security.<br/>
    An IPspace defines a distinct IP address space in which storage virtual machines (SVMs) reside. Ports and IP addresses defined for an IPspace are applicable only within that IPspace. A distinct routing table is maintained for each SVM within an IPspace, so that no cross-SVM or cross-IPspace traffic routing occurs.
    <br/>
    ---
    ## Ethernet
    ### Broadcast Domains
    A broadcast domain is a set of ports which would all receive a broadcast packet that is sent from any of the ports.<br/>
    By accurately representing the physical network with an ONTAP broadcast domain, ONTAP ensures that IP interfaces are able to migrate to appropriate ports in case of failure. ONTAP also ensures that characteristics, such as MTU, stay matched across all ports of the broadcast domain.<br/>
    A broadcast domain resides in an IPspace, and can be used by cluster-scoped or SVM-scoped IP interfaces in that IPspace. The scope of the broadcast domain's uniqueness is the IPspace it is in. You must create as many broadcast domains in an IPspace as there are IP subnets with interfaces in that IPspace.<br/>
    Ports are mapped to an IPspace by assigning the port's broadcast domain.
    ### Ports
    A port is a physical or virtual Ethernet network device. Physical ports may be combined into Link Aggregation Groups (LAGs, or ifgrps), or divided into Virtual LANs (VLANs).<br/>
    The GET and PATCH APIs are available for all port types. The POST and DELETE APIs are available for "lag" and "vlan" port types.<br/>
    A given port can host zero or more IP interfaces.<br/>
    A port exists in a broadcast domain and all ports within the same broadcast domain must have layer 2 network connectivity to one another. If a port within a broadcast domain goes down, any IP interfaces hosted by that port can fail over to other ports in the same broadcast domain.
     <br/>
    ---
    ## Fibre Channel
    ### Interfaces
    Fibre Channel (FC) interfaces are the logical endpoints for Fibre Channel network connections to an SVM. A Fibre Channel interface provides Fibre Channel access to storage within the interface's SVM using either Fibre Channel Protocol (FCP) or Non-Volatile Memory Express over Fibre Channel (NVMe over FC).<br/>
    The Fibre Channel interface REST API allows you to create, delete, update and discover Fibre Channel interfaces and obtain status information for Fibre Channel interfaces.<br/>
    A Fibre Channel interface is created on a Fibre Channel port that is located on a cluster node. The Fibre Channel port must be specified to identify the location of the interface for a POST or PATCH that relocates an interface. You can identify the port by either supplying the node and port names or the port UUID.
    ### Ports
    Fibre Channel ports are the physical ports of Fibre Channel adapters on ONTAP cluster nodes that can be connected to Fibre Channel networks to provide Fibre Channel network connectivity. A Fibre Channel port defines the location of a Fibre Channel interface within the ONTAP cluster.<br/>
    The Fibre Channel port REST API allows you to discover Fibre Channel ports, obtain status information for Fibre Channel ports, and configure Fibre Channel port properties.
    ### Learn More
    * _Fibre Channel Logins_ found in both the _SAN_ and _NVMe_ sections. Fibre Channel logins represent connections formed by Fibre Channel initiators that have successfully logged in to ONTAP.
    ---
    ## IP
    ### Interfaces
    An interface (also referred to as a _LIF_ in ONTAP documentation) represents a network access point to a node in a cluster. In other words, an interface is essentially an IPv4 or IPv6 address with associated attributes.<br/>
    IP interfaces are configured on ports to send and receive communications over the network. The port that will host the interface can either be explicitly specified using node and/or port fields or implicitly specified using a broadcast domain.<br/>
    The IPspace of the interface is required for cluster-scoped interfaces. The SVM owning the interface is required for SVM-scoped interfaces. These interfaces are in the SVM's IPspace.<br/>
    The service policy of an interface defines what network services are provided by the interface.
    ### Routes
    Routes indicate which IPv4 or IPv6 gateway to use to communicate with hosts that are not on the local subnet. Typically, an IP interface (or LIF) can only use a gateway if it has the same address family and is in the LIF's subnet.<br/>
    It is important that every gateway address belongs to a physical or virtual router that has connectivity to the specified destination network.<br/>
    SVM-scoped routes can only be used by IP interfaces of the specified SVM. Likewise, cluster-scoped routes can only be used by cluster-scoped IP interfaces in the specified IPspace.
    ### Service Policies
    Service policies are named groupings that define what services are supported by an IP interface. These include both built-in service policies (for example: default-data-files or default-management) and custom service policies.<br/>
    Service policies are scoped to either an SVM or IPspace.
    <br/>
    ---
- description: Manages storage virtual machines (SVMs)
  name: svm
  x-ntap-long-description: |
    ## Overview
    Storage Virtual Machine (SVM) APIs enable you to manage SVMs and their attributes, including the configuration of the CIFS and NFS protocols, export policies, name mappings between CIFS and NFS users, and network services.
    <br/>SVMs contain data volumes and one or more network interfaces through which they serve data to the clients. SVMs securely isolate the shared virtualized data storage and network, and each SVM appears as a single dedicated server to the clients. Each SVM has a separate administrator authentication domain, and each SVM can be managed independently by its SVM administrator.
    <br/>In a cluster, SVMs facilitate data access. A cluster must have at least one SVM to serve data. Multiple SVMs can coexist in a single cluster without being bound to any particular node in the cluster. However, they are bound to the physical cluster on which they exist.
    <br/>SVMs with volumes can contain files and LUNs. They provide file-level data access by using NFS and CIFS protocols for the NAS clients, and block-level data access by using iSCSI and Fibre Channel (FC) (FCoE included) for SAN hosts. The volumes within each NAS SVM are related to each other through junctions and they are mounted on junction paths. These junctions present the file system in each volume. The root volume of the SVM resides at the top level of the namespace hierarchy; additional volumes are mounted to the SVM root volume to extend the namespace. As volumes are created for the SVM, the root volume of the SVM contains junction paths.
    <br/>The ONTAP REST APIs only expose data SVMs as an SVM. The information and configuration associated with the cluster and nodes are exposed from REST, but the cluster and nodes are not treated as if they are a type of SVM from REST APIs. Some APIs that expose both cluster-owned resources and SVM-owned resources from the same endpoint only return and support the "svm" sub-object for the resources that are within a data SVM. In those endpoints, the resources that are not in a data SVM do not return the "svm" sub-object. Generally, such endpoints have a "scope" attribute that returns either "svm" or "cluster" to identify the resource as either a cluster-level resource or one that is completely contained in a data SVM.
- description: Manages SVM name services such as LDAP, NIS, and DNS
  name: name-services
  x-ntap-long-description: |
    ## Overview
    ONTAP uses name-services to obtain information about users and clients. This information is used to authenticate users accessing data on or administering the storage system, and to map user credentials in a mixed environment. If the user database is stored in NIS or LDAP servers, NIS and LDAP name services need to be configured in ONTAP.
    DNS is used for resolving the hostnames. ns-switch is used to configure the SVMs with sources to search for network information and the order in which to search them.
- description: Manages resources for storage area networks (SAN)
  name: SAN
  x-ntap-long-description: |
    ## Overview
    The storage area network (SAN) endpoints and objects enable you to configure, provision, and manage SAN-related objects.
    <br/>
    ---
    ## Fibre Channel
    ### Logins
    Fibre Channel logins represent connections, formed by Fibre Channel initiators, that have successfully logged in to ONTAP. This represents the Fibre Channel login on which higher-level protocols, such as Fibre Channel Protocol (FCP) and Non-Volatile Memory Express over Fibre Channel (NVMe over FC), rely.<br/>
    The Fibre Channel logins REST API provides information about active Fibre Channel logins.
    ### WWPN Aliases
    A WWPN (world wide port name) is a unique 64-bit identifier for a Fibre Channel initiator. It is displayed as a 16-character hexadecimal value. SAN administrators may find it easier to identify Fibre Channel initiators using an alias, especially in larger SANs.<br/>
    The WWPN alias REST API allows you to create, delete and discover aliases for WWPNs.
    ### Services
    A Fibre Channel Protocol (FCP) service defines the properties of the Fibre Channel Protocol target for an SVM. There can be at most one FCP service for a given SVM. An SVM's FCP service must be created before FCP initiators can login to the SVM.<br/>
    The Fibre Channel Proctocol (FCP) service REST API allows you to create, update, delete, and discover Fibre Channel Services for SVMs.
    Fibre Channel interfaces are the logical endpoints for Fibre Channel network connections to an SVM.
    ---
    ## iSCSI
    ### Credentials
    An iSCSI credentials object defines the authentication credentials to be used between an iSCSI initiator and ONTAP. It identifies an authentication type, user names, and the passwords that must be used to authenticate a specific initiator.<br/>
    The iSCSI credentials REST API allows you to create, update, delete, and discover iSCSI credential objects.
    ### Services
    An iSCSI service defines the properties of the iSCSI target for an SVM. There can be at most one iSCSI service for an SVM. An SVM's iSCSI service must be created before iSCSI initiators can login to the SVM.<br/>
    The iSCSI service REST API allows you to create, update, delete, and discover iSCSI services for SVMs.
    ### Sessions
    An iSCSI session consists of one or more TCP connections that link an iSCSI initiator with an iSCSI target. TCP connections can be added and removed from an iSCSI session by the iSCSI initiator. Across all TCP connections within an iSCSI session, an initiator sees one and the same target. After the connection is established, iSCSI control, data, and status messages are communicated over the session.<br/>
    The iSCSI sessions REST API provides information about iSCSI initiators that have successfully logged in to ONTAP.
    ### Learn More
    * _IP Interfaces_ found in the _networking_ section. IP interfaces are the logical endpoints for iSCSI network connections to an SVM.
    ---
    ## Initiator Groups
    An initiator group (igroup) is a collection of Fibre Channel WWPNs (world wide port names), iSCSI IQNs (qualified names), iSCSI EUIs (extended unique identifiers), or any combination of these, that identify host initiators.<br/>
    Initiator groups are used to control which hosts can access specific LUNs. To grant access to a LUN from one or more hosts, a network administrator creates an initiator group containing the hosts' initiator names, and then creates a LUN map that associates the initiator group with the LUN.<br/>
    The initator group REST API allows you to create, update, delete, and discover initiator groups. It also enables you to add and remove initiators that can access the target and associated LUNs.
    ## LUN Maps
    A LUN map is an association between a LUN and an initiator group. When a LUN is mapped to an initiator group, the group's initiators are granted access to the LUN. The relationship between an initiator group and a LUN is many initiator groups to many LUNs.<br/>
    The LUN map REST API allows you to create, delete, and discover LUN maps.
    ## LUNs
    A LUN is the logical representation of storage in a storage area network (SAN).<br/>
    The LUN REST API allows you to create, update, delete, and discover LUNs.
- description: Manages resources for Non-Volatile Memory Express (NVMe)
  name: NVMe
  x-ntap-long-description: |
    ## Overview
    The Non-Volatile Memory Express (NVMe) API endpoints and objects provide for configuration, provisioning and management of the NVMe-related objects.
    NVMe over Fabrics (NVMe-oF) refers to the extensions and changes to the base NVMe command set to support NVMe commands over a fabric interconnect and from multiple hosts simultaneously. ONTAP implements elements of both NVMe and NVMe-oF. Throughout this documentation, NVMe is generally used to refer to both NVMe and NVMe-oF.
    ### Fibre Channel Logins
    Fibre Channel logins represent connections, formed by Fibre Channel initiators, that have successfully logged in to ONTAP. This represents the Fibre Channel login on which higher-level protocols such as Fibre Channel Protocol (FCP) and Non-Volatile Memory Express over Fibre Channel (NVMe over FC) rely.<br/>
    The Fibre Channel logins REST API provides information about active Fibre Channel logins.
    ### NVMe Interfaces
    NVMe interfaces are network interfaces configured to support an NVMe over Fabrics protocol. The NVMe interfaces are Fibre Channel interfaces supporting an NVMe-oF data protocol. Regardless of the underlying physical and data protocol, NVMe interfaces are treated equally for the host-side application configuration. This endpoint provides a consolidated view of all NVMe interfaces for the purpose of configuring host-side applications.<br/>
    The NVMe interfaces REST API provides NVMe-specific information about network interfaces configured to support an NVMe-oF protocol.
    #### Learn More
    * _Fibre Channel Interfaces_ found in the _networking_ section. Fibre Channel interfaces are the logical endpoints for Fibre Channel network connections to an SVM.
    ### NVMe Services
    A Non-Volatile Memory Express (NVMe) service defines the properties of the NVMe controller target for an SVM. There can be at most one NVMe service for a given SVM. An SVM's NVMe service must be created before NVMe host initiators can connect to the SVM.<br/>
    The Non-Volatile Memory Express (NVMe) service REST API allows you to create, update, delete, and discover NVMe services for SVMs.
    ### NVMe Subsystem Controllers
    Non-Volatile Memory Express (NVMe) subsystem controllers represent dynamic connections between hosts and a storage solution.<br/>
    The NVMe subsystem controllers REST API provides information about connected hosts.
    ### NVMe Subsystem Maps
    An NVMe subsystem map is an association of an NVMe namespace with an NVMe subsystem. When an NVMe namespace is mapped to an NVMe subsystem, the NVMe subsystem's hosts are granted access to the NVMe namespace. The relationship between an NVMe subsystem and an NVMe namespace is one subsystem to many namespaces.<br/>
    The NVMe subsystem map REST API allows you to create, delete, and discover NVMe subsystem maps.
    ### NVMe Subsystems
    An NVMe subsystem maintains configuration state and namespace access control for a set of NVMe-connected hosts.<br/>
    The NVMe subsystem REST API allows you to create, update, delete, and discover NVMe subsystems. It also allows you to add and remove NVMe hosts that can access the subsystem and associated namespaces.
    ### NVMe Namespaces
    An NVMe namespace is a collection of addressable logical blocks presented to hosts connected to the storage virtual machine using the NVMe over Fabrics protocol.<br/>
    The NVMe namespace REST API allows you to create, update, delete, and discover NVMe namespaces.
- description: Manages applications
  name: application
  x-ntap-long-description: |
    ## Overview
    ONTAP application APIs simplify storage management by using terminology specific to a type of application. This application-specific terminology can be used to provision and manage ONTAP storage objects. A single call using application-specific parameters provisions storage and enables protocol access for an application following NetApp best practices. You can view and manage the ONTAP objects making up the application as a group using the application APIs. The library of available application templates already includes several database and virtualization applications.
    ## APIs
    There are several application APIs that must be used to fully manage an application. Templates are used to represent any parameters specific to a given application. Some APIs expose applications in terms of their specific template, while others only expose a generic view that all applications share. The template view is present on the _templates_ and _applications_ APIs (although these APIs do also include some generic fields). The _components_ and _snapshots_ APIs are entirely generic and do not differ across types of applications.
    <br/>The following section provides an overview of each API, followed by a lifecycle example of managing an application to demonstrate how the APIs can be used together.
    ***
    ### Template
    A template is an ONTAP representation of a specific type of application. Each template represents one type of application, the parameters that can be used to customize it, the layout of its storage, and how it can be accessed. Templates are intended to expose an application in terms specifically applicable to an administrator of a given application. As such, traditional ONTAP storage elements are generally not included in an application template.
    <br/>The template APIs can be used to discover what templates are currently available. The ONTAP API documentation also includes a model of the templates. The template APIs generally provide the same information as the documentation, but the template APIs might provide more up-to-date details about the default values of template parameters based on the current ONTAP configuration. However, only the ONTAP API documentation includes a full description of each template parameter, its usage, and whether it is optional.
    ***
    ### Application
    The application APIs are the only interfaces that allow management of an application using template properties.
    <br/>The application object includes the following three sections:
    1. Generic metadata about the application, including common fields such as the name of the application, the template used to provision it, and the generation number of the application.
    2. Statistics information about the application, including space and IOPS details about the entire application and each of its components. These are expensive to collect and should only be requested when needed using a _fields=_ query.
    3. A template view of the application. The application object itself presents a mutually exclusive list of all possible templates. Only one of these fields can be used per application. The name of the field corresponds to the name of the template used by the application. Currently, the creation of a new application and the modification of the storage service for an existing application are supported through the template parameters.
    ***
    ### Component
    The component API offers a generic view of the application and how to access the application from the host application. This is the only API that exposes the underlying ONTAP storage elements of which the application is composed. It is read-only; it cannot support modifications specific to the type of application it is presenting.
    <br/>The component object includes the following details for an application:
    1. The NFS export rules for accessing the application from the host.
    2. The CIFS share and users that can access the application from the host.
    3. The SAN initiators that can access the application from the host.
    4. For IP-based protocols, the IP addresses that are best suited for accessing the component.
    5. The underlying storage elements that make up the component, such as volumes or LUNs.
    ***
    ### Snapshot copy
    The Snapshot copy APIs offer full CRUD for application-level Snapshot copies. Application Snapshot copies can be flagged as either crash-consistent or application-consistent. From the perspective of ONTAP, there is no difference between the two. It is the responsibility of the administrator to ensure that the application is in a consistent state before flagging a Snapshot copy as application-consistent. Use of the SnapCenter Backup Management suite is recommended to ensure correct interaction between host applications and ONTAP.
    ***
    ## Example
    The following example outlines the APIs necessary to manage applications and how they fit together. However, this example does not provide detailed information on each API. See the documentation for the individual APIs for more information.
    ### 1) Discover the templates
    This documentation, which includes the model of each template as part of the _templates_ and _applications_ APIs, is the easiest and most comprehensive way to discover the available templates. The _templates_ API can also be used to query the system for templates in a programmatic way.<br/>
    To discover the templates available to provision an Oracle application, the following query is used.
    ---
    ```
    # The API:
    /api/application/templates
    # The query:
    name=oracle*
    # The call:
    curl -X GET "https://<mgmt-ip>/api/application/templates?name=oracle*" -H "accept: application/json"
    # The response:
    {
      "records": [
        {
          "name": "oracle_on_nfs", "description": "Oracle using NFS."
        },
        {
          "name": "oracle_on_san", "description": "Oracle using SAN."
        },
        {
          "name": "oracle_rac_on_nfs", "description": "Oracle RAC using NFS."
        },
        {
          "name": "oracle_rac_on_san", "description": "Oracle RAC using SAN."
        }
      ],
      "num_records": 4
    }
    ```
    ---
    ### 2) Create an application
    Now that we know the possible templates, we use one to create an application. The template properties differ from template to template, and can be found by exploring the model of the application object in this documentation. Each call to create an application must include the properties for exactly one template. These properties are provided under the property with the same name as the template. Other than the template properties, the only other required properties to create an application are the SVM and name.
    <br/>Note: In the following call example, not all of the template properties are included. Where a property is not needed or the default is sufficient, the property can be excluded. In this case using the _oracle_on_nfs_ template, the _archive_log_, and _protection_type_ are not included. The template name, _oracle_on_nfs_, is specified above the group of template properties, after the names of the application and the SVM.
    <br/>Creating an application is asynchronous, so the response for this API includes information about the job doing the work. The response header also includes the _location_ of where the application can be found if the job is successful.
    ---
    Prior to creating an application, the following prerequisites must be met for the protocols associated with the template:
    * Licences must be installed.
      * [`POST /cluster/licensing/licenses`](#cluster/license_create)
    * Aggregates must exist with enough available space and IOPS to satisfy the requested size.
      * [`POST /storage/aggregates`](#storage/aggregate_create)
    * An SVM must exist with protocol services enabled.
      * [`POST /svm/svms`](#svm/svm_create)
    * LIFs must exist. For SAN applications, only High Availability groups where each node has at least on LIF will be considered for placement of storage objects.
      * [`POST /network/ip/interfaces`](#networking/network_ip_interfaces_create)
      * [`POST /network/fc/interfaces`](#networking/fc_interface_create)
    ---
    The following are not required prior to creating an application, but might be necessary before connecting to the application:
    * Network routes must be created to access ethernet based LIFs.
      * [`POST /network/ip/routes`](#networking/network_ip_routes_create)
    * For volumes created by this operation to be successfully mounted, ONTAP requirements related to mounting must be met.
    ---
    ```
    # The API:
    /api/application/applications
    # The query:
    No query is needed for this command. Optionally, you can specify the return_timeout or set the return_records flag to alter the behavior of the command.
    # The body:
    {
      "name": "my_ora_app",
      "svm": {
        "name": "svm1"
      },
      "oracle_on_nfs": {
        "db": {
          "size": "2GB",
          "storage_service": {
            "name": "value"
          },
          "nfs_access": [
              {
                  "access": "rw",
                  "host": "0.0.0.0/0"
              }
          ]
        },
        "redo_log": {
          "size": "1GB"
        },
        "ora_home": {
          "size": "1GB"
        }
      }
    }
    # The call:
          curl -X POST "https://<mgmt-ip>/api/application/applications" -H "accept: application/hal+json" -H "content-type: application/json" -d '{ "name": "my_ora_app", "svm": { "name": "vs1" }, "oracle_on_nfs": { "db": { "size": "2GB", "storage_service": { "name": "value" }, "nfs_access": [ { "access": "rw", "host": "0.0.0.0/0" } ] }, "redo_log": { "size": "1GB" }, "ora_home": { "size": "1GB" } } }'
    # The response:
    {
      "job": {
        "uuid": "dc0d01dd-df5a-11e7-b5d2-005056b47eb2",
        "id": 94,
        "_links": {
          "self": {
            "href": "/api/cluster/jobs/dc0d01dd-df5a-11e7-b5d2-005056b47eb2"
          }
        }
      }
    }
    # The response header:
    date: Tue, 12 Dec 2017 16:38:18 GMT
    server: libzapid-httpd
    content-type: application/hal+json
    location: /api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2
    cache-control: no-cache,no-store,must-revalidate
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 203
    ```
    ---
    ### 3) Wait for the application to be created
    The call to create the application returns information about the job, including a HAL link to retrieve details about the job. The job object includes a state and a message to indicate the progress of the job. When the job is complete, and the application has been fully created, the message indicates success and the _state_ of the job property is _success_.
    <br/>For brevity purposes, the successful job response is shown here. On a real cluster, an application might take several seconds to several minutes to be created, depending on the system load. If the job is not complete, the _message_ property includes a short description on the progress of the job, and the _state_ indicates _running_.
    ---
    ```
    # The API:
    /api/cluster/jobs/{uuid}
    # The call, provided by the HAL link from step 3:
    curl -X GET "https://<mgmt-ip>/api/cluster/jobs/dc0d01dd-df5a-11e7-b5d2-005056b47eb2" -H "accept: application/hal+json"
    # The response:
    {
      "uuid": "dc0d01dd-df5a-11e7-b5d2-005056b47eb2",
      "state": "success",
      "message": "Complete: Success [0]",
      "code": 0,
      "_links": {
        "self": {
          "href": "/api/cluster/jobs/dc0d01dd-df5a-11e7-b5d2-005056b47eb2"
        }
      }
    }
    ```
    ---
    ### 4) Retrieve the new application
    You can look up the application directly without listing all the applications. Use the _location_ header that is included in the response when the application is created.
    <br/>Note: The following example uses a query to retrieve only a small number of the application's properties.
    ---
    ```
    # The API:
    /api/application/applications/{uuid}
    # The query:
    fields=name,template.name,generation,state
    # The call:
    curl -X GET "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2?fields=name,template.name,generation,state" -H "accept: application/json"
    # The response:
    {
      "uuid": "dbc10d87-df5a-11e7-b5d2-005056b47eb2",
      "name": "my_ora_app",
      "template": { "name": "oracle_on_nfs" },
      "generation": 2,
      "state": "online"
    }
    ```
    ---
    ### 5) Discover how to access the application
    The components API provides information on how to access the storage that is provisioned for the application.
    <br/>For brevity, only the names of the components are requested. See the API documentation for more information on the other available fields.
    ---
    ```
    # The API:
    api/application/applications/{application.uuid}/components
    # The query:
    fields=name
    # The call:
    curl -X GET "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/components?fields=name" -H "accept: application/json"
    # The response:
    {
      "records": [
        { "uuid": "e06fb407-df5a-11e7-b5d2-005056b47eb2", "name": "db" },
        { "uuid": "e0709732-df5a-11e7-b5d2-005056b47eb2", "name": "ora_home" },
        { "uuid": "e07158eb-df5a-11e7-b5d2-005056b47eb2", "name": "redo_log" }
      ],
      "num_records": 3
    }
    ```
    ---
    ### 6) Update the application
    To update the storage service, the same template that is used for creating the application is reused, but with only the storage_service properties set. In the generic SAN and NAS templates, the name of each component must also be specified.
    <br/>In this example, the cluster only supports the _value_ storage service, so modifications of the application to a faster storage service fail. Note how the error message indicates the parameter that caused the problem.
    <br/>Application modification, like application creation, is an asynchronous operation. If a valid command is passed, the API returns information about the job instead of an error.
    ---
    ```
    # The API:
    /api/application/applications/{uuid}
    # The body:
    {
      "oracle_on_nfs": { "db": { "storage_service": { "name": "extreme" } } }
    }
    # The call:
    curl -X PATCH "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2" -H "accept: application/hal+json" -H "content-type: application/json" -d '{ "oracle_on_nfs": { "db": { "storage_service": { "name": "extreme" } } } }'
    # The response:
    {
      "error": {
        "message": "Invalid value for parameter \"oracle_on_nfs.db.storage-service.name\": extreme. Supported values are: value.",
        "code": "65995152"
      }
    }
    ```
    ---
    ### 7) Manage Snapshot copies
    For applications created with the _local_ _protection_type_ set to _hourly_, Snapshot copies are automatically taken every hour. These Snapshot copies can be retrieved or restored using the Snapshot copy APIs. Snapshot copies can also be taken on demand using these APIs. It is important to note that the _consistency_type_ flag of the Snapshot copy is for record-keeping only: it is the responsibility of the administrator to ensure that the application is in a consistent state prior to flagging a Snapshot copy as _application_ consistent.
    <br/>Take a Snapshot copy manually:
    ---
    ```
    # The API:
    /api/application/applications/{uuid}/snapshots
    # The body:
    {
        "name": "little_bobby_tables",
        "consistency_type": "crash"
    }
    # The call:
    curl -X POST "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/snapshots" -H "accept: application/hal+json" -H "content-type: application/json" -d '{ "name": "little_bobby_tables", "consistency_type": "crash"}'
    # The response:
    {}
    # The response header:
    date: Tue, 12 Dec 2017 17:40:10 GMT
    server: libzapid-httpd
    content-type: application/hal+json
    location: /api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/snapshots/dbc10d87-df5a-11e7-b5d2-005056b47eb2_13_little_bobby_tables
    cache-control: no-cache,no-store,must-revalidate
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 3
    ```
    ---
    In the above example, the response body is empty, and the response header includes the _location_ of the newly created Snapshot copy. By default, all POST calls return an empty body unless a job is used to process the creation asynchronously. This behavior can be changed with the query flag _return_records_.
    <br/>Restoring a Snapshot copy uses an action API. Action paths can also be performed asynchronously as jobs, as with creating or modifying an application. The response header does not include a _location_, because this action is not creating a resource.
    ---
    ```
    # The API:
    /api/application/applications/{application.uuid}/snapshots/{snapshot.uuid}/restore
    # The call:
    curl -X POST "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/snapshots/dbc10d87-df5a-11e7-b5d2-005056b47eb2_13_little_bobby_tables/restore" -H "accept: application/hal+json"
    # The response:
    {
      "job": {
        "uuid": "00e81690-df64-11e7-b5d2-005056b47eb2",
        "id": 100,
        "_links": {
          "self": {
            "href": "/api/cluster/jobs/00e81690-df64-11e7-b5d2-005056b47eb2"
          }
        }
      }
    }
    # The response header:
    date: Tue, 12 Dec 2017 17:43:46 GMT
    cache-control: no-cache,no-store,must-revalidate
    server: libzapid-httpd
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 204
    content-type: application/hal+json
    ```
    ---
    ## Smart containers
    Smart containers are traditional ONTAP storage objects such as FlexVol or FlexGroup created using the application REST API.
    * NAS - FlexVolume, FlexGroup, and FlexCache objects
    * SAN - LUNs
    * NVME - Namespaces
    ---
    The benefits of creating a Smart Container are as follows:
    * ONTAP determines the best placement for the storage object based on available performance and space capacity.
    * Access controls can be optionally set.
    * Snapshot copy schedules can be optionally set.
    * A single atomic job that does all the above.
    ***
    Smart containers are similar to generic enterprise applications (NAS, SAN, NVME), but with certain restrictions. Smart containers are restricted to 1 application-component. Any post-provisioning data management operations on smart containers must be performed via PATCH operations corresponding to the object created. However, the POST, GET and DELETE operations that exist for applications will also operate for smart containers.
    <br/>To create a Smart Container the "smart_container:true" parameter must be provided.<br/>
    ---
    Prior to creating a smart container, the following prerequisites must be met for the protocols associated with the template:
    * Licences must be installed.
      * [`POST /cluster/licensing/licenses`](#cluster/license_create)
    * Aggregates must exist with enough available space to satisfy the requested size.
      * [`POST /storage/aggregates`](#storage/aggregate_create)
    * An SVM must exist with protocol services enabled.
      * [`POST /svm/svms`](#svm/svm_create)
    * LIFs must exist. For SAN objects, only High Availability groups where each node has at least one LIF to be considered for placement of storage objects.
      * [`POST /network/ip/interfaces`](#networking/network_ip_interfaces_create)
      * [`POST /network/fc/interfaces`](#networking/fc_interface_create)
    ---
    The following are not required prior to creating a smart container:
    * Network routes must be created to access Ethernet-based LIFs.
      * [`POST /network/ip/routes`](#networking/network_ip_routes_create)
    * To mount volumes by this operation successfully, all ONTAP requirements related to mounting must be met.
    ***
    ### Example
    The following example outlines the APIs necessary to create a smart container. This is an addendum to the example provided on how to create an application.
    ```
    # The API:
    /api/application/applications
    # The query:
    No query is needed for this command. Optionally, you can specify the return_timeout or set the return_records flag to alter the behavior of the command.
    # The body:
    {
      "name": "my_container",
      "svm": {
          "name":"vs1"
      },
      "template": {
          "name":"nas"
      },
      "smart_container": "true"
      "nas": {
          "application_components": [
              {
                  "share_count": "1",
                  "name": "myVolume",
                  "storage_service": {
                      "name": "value"
                  },
                  "total_size": "100mb"
              }
          ]
      }
    }
    # The call:
    curl -X POST "https://<mgmt-ip>/api/application/applications" -H "accept: application/hal+json" -H "Content-Type: application/json" -d '{"name": "my_container", "svm": {"name": "vs1"} , "smart_container": true , "template": {"name": "nas"} , "nas": {"application_components": [{"share_count": "1", "name": "myVolume", "storage_service": {"name": "value"} , "total_size": "100mb"} ] } }'
    # The response:
     {
         "job": {
             "uuid": "5440db05-77f0-11e9-a5a0-005056bba32f",
             "_links": {
                 "self": {
                     "href": "/api/cluster/jobs/5440db05-77f0-11e9-a5a0-005056bba32f"
                 }
             }
         }
     }
    # The response header:
    date: Tue, 23 May 2019 16:38:18 GMT
    server: libzapid-httpd
    content-type: application/hal+json
    location: /api/application/applications/5440db05-77f0-11e9-a5a0-005056bba32f
    cache-control: no-cache,no-store,must-revalidate
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 203
    ```
    ---
    ## Smart Container Properties
    These sections are only allowed for smart containers and will return an error when provided on traditional applications. The following is an example of the error returned:
    ```
    {
    "error": {
        "message": "Field \"<field>\" is only supported on smart containers.",
        "code": "65996161"
        }
    }
    ```
    ## Application API limitations
    ### Template versus generic
    Applications can be represented in either template or generic terms. All applications can be represented in generic terms as a list of components. Each component generally maps to a field in the template. For example, Microsoft SQL Server applications have a component named _sqldata_ that corresponds to the _db_ parameter in the sql_on_san template. These mappings are usually straightforward and allow the templates to present application terminology, while the generic view uses the traditional naming schemes for ONTAP storage elements.
    <br/>The current release supports the creation and modification of applications in template terms, but retrieval is not supported. The mapping from template to generic terms is left to your own discretion.za
    ### ONTAP feature support
    Application APIs are interfaces layered on top of traditional ONTAP storage. While the intent is to provide a full management suite through application APIs, some features of the underlying ONTAP objects are not directly supported through application APIs. Applications are provisioned using ONTAP best practices, so the need for additional modifications of the underlying objects should be minimal. If such modifications are necessary, the traditional ONTAP APIs can be used. The _/api/application/{application.uuid}/components_ API provides a _backing_storage_ field that can be used to locate the storage objects associated with an application. This API also provides details of the NFS, CIFS, or SAN protocol access objects associated with the application.
    <br/>The application APIs use the extra information known about the application to coordinate multiple ONTAP objects in unison. When using non-application APIs, certain settings might interfere with the ONTAP object coordination and cause the application APIs to behave unexpectedly. To continue to supply the full ONTAP feature set, these modifications on the underlying objects are allowed, but there is no guarantee that these modifications will not adversely affect the application experience. You should use this feature with caution.
- description: Manages backups, autosupports, and event handling
  name: support
  x-ntap-long-description: |
    ## Overview
    You can use ONTAP support APIs to manage configuration backups, autosupport settings, and event handling.
    ### Configuration backups
    Configuration backups are copies of node and cluster settings saved to an external server.
    Single-node clusters must have configuration backups as protection against corruption of the configuration database. Multi-node clusters back up the configuration automatically between the nodes in the cluster.
- description: Manage the security settings for the cluster and SVMs
  name: security
  x-ntap-long-description: |
    ## Overview
    You can use ONTAP security APIs to manage security settings for the cluster and SVMs.
    ### SAML
    Configure the SAML 2.0 SP (Service Provider) protocol inside ONTAP. Doing so redirects the authentication task to a third-party Identity Provider (IDP) that can utilize any number of approaches for multi-factor authentication. After SAML authentication is enabled, all interactive web access (System Manager, SPI) is authenticated via SAML and a third-party IDP.
- description: Manages physical and logical storage
  name: storage
  x-ntap-long-description: |
    ## Overview
    The ONTAP storage APIs can be used to manage physical and logical storage. This includes management of aggregates, volumes, LUNs, qtrees, snapshots, quotas, and storage effeciency.
    <br/>
- description: Manages asynchronous extended data protection (XDP) relationships for
    FlexVols, FlexGroups, or SVMs
  name: snapmirror
  x-ntap-long-description: |
    ## Overview
    SnapMirror technology enables customers to copy and backup their production data. The secondary or destination volume in such a backup relationship can reside anywhere, locally or remotely, and can be used to restore access to the protected data. You can restore access to protected data by drawing upon a vault of backups or, in the event that a primary is unusable, by using a disaster recovery copy that can be activated for clients and applications. SnapMirror periodically updates a replica to create new backups and/or to keep a replica up-to-date with changes that have been written to the primary. The SnapMirror subsystems are designed to keep many pairs of source (primary) and destination (secondary) copies up-to-date in an efficient and scalable manner. <br/>
    The SnapMirror APIs can be used to create and manage SnapMirror relationships of type "async", and "sync". These APIs can also be used to manage restore-relationships. These APIs allow you to manage the following endpoints:
    * SnapMirror policies - When applied to a SnapMirror relationship, the SnapMirror policy controls the behavior of the relationship and specifies the configuration attributes for that relationship.
    * SnapMirror relationships - You can create and manage SnapMirror relationships, and you can change the state of the SnapMirror relationship using a PATCH request.
    * SnapMirror transfers - You can manage data transfers on the specified SnapMirror relationship.
- description: Manages NDMP services
  name: ndmp
  x-ntap-long-description: |
    NDMP (Network Data Management Protocol) provides an open standard for network-based backup of network-attached storage (NAS). NDMP minimizes the coding required for different applications by providing standard commands for backing up and restoring file servers. NDMP increases the speed and efficiency of NAS data protection, as data can bypass backup servers and be written directly to tape storage. Starting from ONTAP 8.2, the software supports SVM aware NDMP backups. This helps in optimizing NDMP backup performance by choosing efficient data transfer paths and is fully compatible with integrated non-disruptive operations and volume mobility capabilities of ONTAP software. In order to support this feature, a CAB extension must be implemented by backup vendors.
    These APIs allow you to manage the following endpoints:
    * ndmp
    * ndmp nodes
    * ndmp svms
    * ndmp sessions
    ## APIs
    ### NDMP
    These APIs are used to manage NDMP mode, SVM-scope or node-scope.
    ### NDMP nodes
    These APIs are used to manage node configurations.
    ### NDMP SVMs
    These APIs are used to manage NDMP configurations of SVMs.
    ### NDMP sessions
    These APIs are used to manage diagnostic information on NDMP sessions belonging to a specific SVM in the case of SVM-scope or to a specific node in the case of node-scope.
- description: SnapLock is a high-performance compliance solution that uses WORM storage
    to retain files in an unmodified form.
  name: snaplock
  x-ntap-long-description: |
    SnapLock is an alternative to the traditional optical "write once, read many" (WORM) data. SnapLock is used for the storage of read-only WORM data. SnapLock is a license-based, disk-based, open-protocol feature that works with application software to administer non-rewritable storage of data. The primary objective of this feature is to provide storage-enforced WORM and retention functionality. SnapLock can be deployed for protecting data in strict regulatory environments in such a way that even the storage administrator is considered an untrusted party. SnapLock provides special purpose volumes in which files can be stored and committed to a non-erasable, non-rewritable state either forever or for a designated retention period. SnapLock allows this retention to be performed at the granularity of individual files.
    These APIs allow you to manage the following endpoints:
    * SnapLock log
    * SnapLock compliance-clock
    * SnapLock event-retention
    * SnapLock file retention
    * SnapLock privileged-delete
    * SnapLock file fingerprint
    * SnapLock legal-hold
    ## APIs
    ###  SnapLock log
    These APIs are used to create and initialize the SnapLock log configuration for an SVM, modify attributes associated with the SnapLock log configuration,and delete the auditlog configuration.
    ###  SnapLock compliance-clock
    This API  manages the ComplianceClock of the system. ComplianceClock determines the expiry time of the SnapLock objects in the system. ComplianceClock can be initialized only once by the user and once it is set, it cannot be changed or altered by the user.
    ### SnapLock event-retention
    This API is used to create Event Based Retention (EBR) policies for an SVM. A policy consists of a policy-name and a retention-period. Only a user with security login role vsadmin-snaplock is allowed to perform this operation.
    ### SnapLock file retention
    This API is used to set the retention time of a file. Retention time expects the date in ISO 8601 format or "infinite".
    ### SnapLock privileged-delete
    This API is used to perform a privileged-delete operation on unexpired WORM files on a SnapLock Enterprise volume. The only built-in role that has access to the command is "vsadmin-snaplock".
    ### SnapLock file fingerprint
    This API is used to start the fingerprint computation on a file.
    ### SnapLock legal-hold
    This API is used to retain Compliance-mode WORM files for the duration of a litigation. A file under a Legal-Hold behaves like a WORM file with an indefinite retention period. Only a user with security login role vsadmin-snaplock is allowed to perform the operation.
- description: Manages the NFS and export settings for clusters and SVMs
  name: NAS
  x-ntap-long-description: |
    ## Overview
    These APIs allow you to complete various tasks, including:
    * Creating an NFS server for an SVM
    * Managing an NFS configuration of an SVM
    * Viewing and updating the NFS configuration of an SVM
    * Configuring export policies and rules for an SVM
    * Managing export policies and rules for an SVM
    ## APIs
    ### NFS
    The NFS APIs enable you to create and configure NFS settings for an SVM. You can delete or update NFS configurations, and you can also disable or enable different NFS features as needed.
    ### Exports
    The export APIs allow you to create and manage export policies for an SVM that enable an administrator to restrict access to volumes for clients that match specific IP addresses and specific authentication types. Export APIs are also used to create export rules for an export policy. The APIs allow each rule to specify the number of mask bits in the client IP address that must be matched for that rule to apply to a particular client request. The APIs also allow each export rule to specify the authentication types that are required for both read-only and read-write operations.
    ### Kerberos
    Kerberos is a protocol designed to provide strong authentication for users and hosts within a client/server environment. The basis of the protocol is a shared, secret-key cryptology system. (Kerberos uses shared-key encryption to ensure the confidentiality of the data. It also uses hashing techniques to ensure the integrity of the data (so that no one can modify the data unless allowed to do so). With the NetApp multiprotocol storage platform, through which clients based on UNIX or Windows can access data using CIFS or NFS, it is crucial to provide the ability to use standard network services for authentication and for identity storage.<br/>
    To configure an ONTAP system to use Kerberos for NFS, Kerberos must be enabled on a data LIF in the SVM that owns the NFS server. A Kerberos realm needs to be created before enabling Kerberos on a data LIF. (The Kerberos realm is needed so that the cluster knows how to format Kerberos ticket requests.) The Kerberos APIs allow you to define, create, modify, and delete realms for the SVM. The APIs also allow you to enable/disable Kerberos on a data LIF and update the Kerberos interface configuration for a particular data LIF in the SVM.

definitions:
  account:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      applications:
        items:
          $ref: '#/definitions/account_application'
        type: array
      comment:
        description: Optional comment for the user account.
        type: string
      locked:
        default: false
        description: Locked status of the account.
        type: boolean
      name:
        description: User or group account name
        example: joe.smith
        maxLength: 64
        minLength: 3
        type: string
        x-ntap-readCreate: true
      owner:
        description: Owner name and UUID that uniquely identifies the user account.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      password:
        description: Password for the account. The password can contain a mix of lower
          and upper case alphabetic characters, digits, and special characters.
        format: password
        maxLength: 128
        minLength: 8
        type: string
      role:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Role name
            example: admin
            type: string
        type: object
      scope:
        description: Scope of the entity. Set to "cluster" for cluster owned objects
          and to "svm" for SVM owned objects.
        enum:
        - cluster
        - svm
        readOnly: true
        type: string
    type: object
  account_application:
    properties:
      application:
        description: Applications
        enum:
        - console
        - http
        - ontapi
        - service_processor
        - ssh
        type: string
      authentication_methods:
        items:
          enum:
          - password
          - publickey
          - domain
          - nsswitch
          - certificate
          - saml
          type: string
        type: array
      second_authentication_method:
        default: none
        description: An optional additional authentication method for MFA. This only
          works with SSH as the application. It is ignored for all other applications.
        enum:
        - none
        - password
        - publickey
        - nsswitch
        type: string
    type: object
  href:
    properties:
      href:
        example: /api/resourcelink
        readOnly: true
        type: string
    readOnly: true
    type: object
  error:
    properties:
      arguments:
        description: Message arguments
        items:
          $ref: '#/definitions/error_arguments'
        readOnly: true
        type: array
      code:
        description: Error code
        example: '4'
        readOnly: true
        type: string
      message:
        description: Error message
        example: entry doesn't exist
        readOnly: true
        type: string
      target:
        description: The target parameter that caused the error.
        example: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  error_arguments:
    properties:
      code:
        description: Argument code
        readOnly: true
        type: string
      message:
        description: Message argument
        readOnly: true
        type: string
    readOnly: true
    type: object
  error_response:
    properties:
      error:
        $ref: '#/definitions/error'
    readOnly: true
    type: object
  error_responses:
    properties:
      errors:
        items:
          $ref: '#/definitions/error'
        type: array
    readOnly: true
    type: object
  file_info:
    description: Information about a single file.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      accessed_time:
        description: Last access time of the file in date-time format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
      bytes_used:
        description: The actual number of bytes used on disk by this file.
        example: 4096
        type: integer
      changed_time:
        description: Last time data or attributes changed on the file in date-time
          format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
      creation_time:
        description: Creation time of the file in date-time format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
      group_id:
        description: The integer ID of the group of the file owner.
        example: 30
        type: integer
      hard_links_count:
        description: The number of hard links to the file.
        example: 1
        type: integer
      inode_generation:
        description: Inode generation number.
        example: 214753547
        type: integer
      inode_number:
        description: The file inode number.
        example: 1695
        type: integer
      is_empty:
        description: Specifies whether or not a directory is empty. A directory is
          considered empty if it only contains entries for "." and "..". This element
          is present if the file is a directory. In some special error cases, such
          as when the volume goes offline or when the directory is moved while retrieving
          this info, this field might not get set.
        example: false
        type: boolean
      is_junction:
        description: Returns "true" if the directory is a junction.
        example: false
        type: boolean
      is_vm_aligned:
        description: Returns true if the file is vm-aligned. A vm-aligned file is
          a file that is initially padded with zero-filled data so that its actual
          data starts at an offset other then zero. This is done in a VM environment
          so that read/write operations to this file are aligned to WAFL's 4k block
          boundary. The amount by which the start offset is adjusted depends on the
          vm-align setting of the hosting volume.
        example: false
        type: boolean
      modified_time:
        description: Last data modification time of the file in date-time format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
      name:
        description: Name of the file.
        example: test_file
        type: string
      owner_id:
        description: The integer ID of the file owner.
        example: 54738
        type: integer
      path:
        description: Path of the file.
        example: d1/d2/d3
        type: string
      size:
        description: The size of the file, in bytes.
        example: 200
        type: integer
      type:
        description: Type of the file.
        enum:
        - file
        - directory
        - blockdev
        - chardev
        - symlink
        - socket
        - fifo
        - stream
        - lun
        example: file
        type: string
      unix_permissions:
        description: UNIX permissions to be viewed as an octal number. It consists
          of 4 digits derived by adding up bits 4 (read), 2 (write) and 1 (execute).
          The first digit selects the set user ID(4), set group ID (2) and sticky
          (1) attributes. The second digit selects permission for the owner of the
          file; the third selects permissions for other users in the same group; the
          fourth for other users not in the group.
        example: 0755
        type: integer
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    readOnly: true
    type: object
  file_info_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/file_info'
        type: array
    type: object
  job:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      code:
        description: If the state indicates "failure", this is the final error code.
        example: 0
        readOnly: true
        type: integer
      description:
        description: The description of the job to help identify it independent of
          the UUID.
        example: App Snapshot Job
        readOnly: true
        type: string
      end_time:
        description: The time the job ended.
        format: date-time
        readOnly: true
        type: string
      message:
        description: A message corresponding to the state of the job providing additional
          details about the current state.
        example: 'Complete: Successful'
        readOnly: true
        type: string
      start_time:
        description: The time the job started.
        format: date-time
        readOnly: true
        type: string
      state:
        description: The state of the job.
        enum:
        - queued
        - running
        - paused
        - success
        - failure
        readOnly: true
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    type: object
  job_link:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      uuid:
        description: The UUID of the asynchronous job that is triggered by a POST,
          PATCH, or DELETE operation.
        format: uuid
        readOnly: true
        type: string
    type: object
  job_link_response:
    properties:
      job:
        $ref: '#/definitions/job_link'
    readOnly: true
    type: object
  job_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/job'
        type: array
    type: object
  snapshot:
    description: The Snapshot copy object represents a point in time Snapshot copy
      of a volume.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      comment:
        description: A comment associated with the Snapshot copy. This is an optional
          attribute for POST or PATCH.
        type: string
      create_time:
        description: Creation time of the Snapshot copy. It is the volume access time
          when the Snapshot copy was created.
        example: 2019-02-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      expiry_time:
        description: The expiry time for the Snapshot copy. This is an optional attribute
          for POST or PATCH. Snapshot copies with an expiry time set are not allowed
          to be deleted until the retention time is reached.
        example: 2019-02-04T19:00:00Z
        format: date-time
        type: string
      name:
        description: Snapshot copy. Valid in POST or PATCH.
        example: this_snapshot
        type: string
      owners:
        items:
          description: Owner name of the Snapshot copy. The owner name represents
            the system which owns or is dependent on the Snapshot copy. When an owner
            is present, the Snapshot copy cannot be deleted. This is different from
            when a Snapshot copy has a dependency, denoted by the "dependent" suffix.
            When a dependency is present, a Snapshot copy can be deleted if the "force"
            flag is specified. Snapshot copy deletion with the "force" flag must be
            done on the command line. If a Snapshot copy has both, an owner and dependency,
            the properties of the owner take precendence over the properties of the
            dependency.
          enum:
          - unknown
          - snapmirror
          - snapmirror_dependent
          - sync_mirror
          - volume_clone
          - volume_clone_dependent
          - snap_restore
          - snap_restore_dependent
          - dump
          - cifs_share
          - volume_copy
          - ndmp
          - worm_volume
          - sis_clone
          - s2c_iron
          - lun_clone
          - backup_dependent
          - snaplock_dependent
          - file_clone_dependent
          - volume_move_dependent
          - svmdr_dependent
          type: string
        readOnly: true
        type: array
      snaplock_expiry_time:
        description: SnapLock expiry time for the Snapshot copy, if the Snapshot copy
          is taken on a SnapLock volume. A Snapshot copy is not allowed to be deleted
          or renamed until the SnapLock ComplianceClock time goes beyond this retention
          time.
        example: 2019-02-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      state:
        description: State of the Snapshot copy. There are cases where some Snapshot
          copies are not complete. In the "partial" state, the Snapshot copy is consistent
          but exists only on the subset of the constituents that existed prior to
          the FlexGroup's expansion. Partial Snapshot copies cannot be used for a
          Snapshot copy restore operation. A Snapshot copy is in an "invalid" state
          when it is present in some FlexGroup constituents but not in others. At
          all other times, a Snapshot copy is valid.
        enum:
        - valid
        - invalid
        - partial
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: The UUID of the Snapshot copy in the volume that uniquely identifies
          the Snapshot copy in that volume.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  snapshot_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: this_snapshot
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  snapshot_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snapshot'
        type: array
    type: object
  volume:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregates:
        description: Aggregate hosting the volume. Required on POST.
        items:
          description: Aggregate
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: aggr1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          type: object
        type: array
      application:
        properties:
          name:
            description: Name of the application to which the volume belongs. Available
              only when the volume is part of an application.
            readOnly: true
            type: string
          uuid:
            description: UUID of the application to which the volume belongs. Available
              only when the volume is part of an application.
            example: 1cd8a442-86d1-11e0-ae1d-123478563412
            readOnly: true
            type: string
        type: object
      autosize:
        properties:
          grow_threshold:
            description: Used space threshold size, in percentage, for the automatic
              growth of the volume. When the amount of used space in the volume becomes
              greater than this threhold, the volume automatically grows unless it
              has reached the maximum size. The volume grows when 'space.used' is
              greater than this percent of 'space.size'. The 'grow_threshold' size
              cannot be less than or equal to the 'shrink_threshold' size..
            type: integer
          maximum:
            description: Maximum size in bytes up to which a volume grows automatically.
              This size cannot be less than the current volume size, or less than
              or equal to the minimum size of volume.
            type: integer
          minimum:
            description: Minimum size in bytes up to which the volume shrinks automatically.
              This size cannot be greater than or equal to the maximum size of volume.
            type: integer
          mode:
            description: Autosize mode for the volume.<br>grow &dash; Volume automatically
              grows when the amount of used space is above the 'grow_threshold' value.<br>grow_shrink
              &dash; Volume grows or shrinks in response to the amount of space used.<br>off
              &dash; Autosizing of the volume is disabled.
            enum:
            - grow
            - grow_shrink
            - "off"
            type: string
          shrink_threshold:
            description: Used space threshold size, in percentage, for the automatic
              shrinkage of the volume.  When the amount of used space in the volume
              drops below this threshold, the volume automatically shrinks unless
              it has reached the minimum size. The volume shrinks when the 'space.used'
              is less than the 'shrink_threshold' percent of 'space.size'. The 'shrink_threshold'
              size cannot be greater than or equal to the 'grow_threshold' size.
            type: integer
        type: object
      clone:
        properties:
          is_flexclone:
            description: Specifies if this volume is a normal FlexVol or FlexClone.
              This field needs to be set when creating a FlexClone. Valid in POST.
            type: boolean
          parent_snapshot:
            $ref: '#/definitions/snapshot_reference'
          parent_svm:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: "The name of the SVM.\n"
                example: svm1
                type: string
              uuid:
                description: |
                  The unique identifier of the SVM.
                example: 02c9e252-41be-11e9-81d5-00a0986138f7
                type: string
            type: object
          parent_volume:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: The name of the volume.
                example: volume1
                type: string
              uuid:
                description: Unique identifier for the volume. This corresponds to
                  the instance-uuid that is exposed in the CLI and ONTAPI. It does
                  not change due to a volume move.
                example: 028baa66-41bd-11e9-81d5-00a0986138f7
                type: string
            type: object
          split_complete_percent:
            description: Percentage of FlexClone blocks split from its parent volume.
            readOnly: true
            type: integer
          split_estimate:
            description: Space required by the containing-aggregate to split the FlexClone
              volume.
            readOnly: true
            type: integer
          split_initiated:
            description: This field is set when split is executed on any FlexClone,
              that is when the FlexClone volume is split from its parent FlexVol.
              This field needs to be set for splitting a FlexClone form FlexVol. Valid
              in PATCH.
            type: boolean
        type: object
      comment:
        description: A comment for the volume. Valid in POST or PATCH.
        maxLength: 1023
        minLength: 0
        type: string
      consistency_group:
        description: Consistency group the volume is part of.
        properties:
          name:
            description: Name of the consistency group.
            example: consistency_group_1
            type: string
        type: object
      constituents_per_aggregate:
        default: 1
        description: Specifies the number of times to iterate over the aggregates
          listed with the "aggregates.name" or "aggregates.uuid" when creating or
          expanding a FlexGroup. If a volume is being created on a single aggregate,
          the system will create a flexible volume if the "constituents_per_aggregate"
          field is not specified, and a FlexGroup if it is specified.  If a volume
          is being created on multiple aggregates, the system will always create a
          FlexGroup.
        maximum: 1000
        minimum: 1
        type: integer
        x-ntap-writeOnly: true
      create_time:
        description: Creation time of the volume. This field is generated when the
          volume is created.
        example: 2018-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
        x-nullable: true
      efficiency:
        properties:
          compaction:
            description: The system can be enabled/disabled compaction.<br>inline
              &dash; Data will be compacted first and written to the volume.<br>none
              &dash; None<br>mixed &dash; Read only field for FlexGroups, where some
              of the constituent volumes are compaction enabled and some are disabled.
            enum:
            - inline
            - none
            - mixed
            type: string
          compression:
            description: The system can be enabled/disabled compression.<br>inline
              &dash; Data will be compressed first and written to the volume.<br>background
              &dash; Data will be written to the volume and compressed later.<br>both
              &dash; Inline compression compresses the data and write to the volume,
              background compression compresses only the blocks on which inline compression
              is not run.<br>none &dash; None<br>mixed &dash; Read only field for
              FlexGroups, where some of the constituent volumes are compression enabled
              and some are disabled.
            enum:
            - inline
            - background
            - both
            - none
            - mixed
            type: string
          cross_volume_dedupe:
            description: The system can be enabled/disabled cross volume dedupe. it
              can be enabled only when dedupe is enabled.<br>inline &dash; Data will
              be cross volume deduped first and written to the volume.<br>background
              &dash; Data will be written to the volume and cross volume deduped later.<br>both
              &dash; Inline cross volume dedupe dedupes the data and write to the
              volume, background cross volume dedupe dedupes only the blocks on which
              inline dedupe is not run.<br>none &dash; None<br>mixed &dash; Read only
              field for FlexGroups, where some of the constituent volumes are cross
              volume dedupe enabled and some are disabled.
            enum:
            - inline
            - background
            - both
            - none
            - mixed
            type: string
          dedupe:
            description: The system can be enabled/disabled dedupe.<br>inline &dash;
              Data will be deduped first and written to the volume.<br>background
              &dash; Data will be written to the volume and deduped later.<br>both
              &dash; Inline dedupe dedupes the data and write to the volume, background
              dedupe dedupes only the blocks on which inline dedupe is not run.<br>none
              &dash; None<br>mixed &dash; Read only field for FlexGroups, where some
              of the constituent volumes are dedupe enabled and some are disabled.
            enum:
            - inline
            - background
            - both
            - none
            - mixed
            type: string
          policy:
            properties:
              name:
                description: Specifies the name of the efficiency policy.
                type: string
            type: object
        type: object
      encryption:
        properties:
          enabled:
            description: Encrypts an unencrypted volume. When set to 'true', a new
              key is generated and used to encrypt the given volume. The underlying
              SVM must be configured with the key manager.
            type: boolean
          key_id:
            description: The key ID used for creating encrypted volume. A new key-id
              is generated for creating an encrypted volume. This key-id is associated
              with the generated key.
            readOnly: true
            type: string
          rekey:
            description: If set to 'true', re-encrypts the volume with a new key.
              Valid in PATCH.
            type: boolean
            x-ntap-readModify: true
          state:
            description: Volume encryption state.<br>encrypted &dash; The volume is
              completely encrypted.<br>encrypting &dash; Encryption operation is in
              progress.<br>partial &dash; Some constituents are encrypted and some
              are not. Applicable only for FlexGroup volume.<br>rekeying. Encryption
              of volume with a new key is in progress.<br>unencrypted &dash; The volume
              is a plain-text one.
            enum:
            - encrypted
            - encrypting
            - partial
            - rekeying
            - unencrypted
            readOnly: true
            type: string
          status:
            properties:
              code:
                description: Encryption progress message code.
                readOnly: true
                type: string
              message:
                description: Encryption progress message.
                readOnly: true
                type: string
            type: object
          type:
            description: Volume encryption type.<br>none &dash; The volume is a plain-text
              one.<br>volume &dash; The volume is encrypted with NVE (NetApp Volume
              Encryption).<br>aggregate &dash; The volume is encrypted with NAE (NetApp
              Aggregate Encryption).
            enum:
            - none
            - volume
            - aggregate
            readOnly: true
            type: string
        type: object
      error_state:
        properties:
          has_bad_blocks:
            description: Indicates whether the volume has any corrupt data blocks.
              If the damaged data block is accessed, an IO error, such as EIO for
              NFS or STATUS_FILE_CORRUPT for CIFS, is returned.
            readOnly: true
            type: boolean
          is_inconsistent:
            description: Indicates whether the file system has any inconsistencies.<br>true
              &dash; File system is inconsistent.<br>false &dash; File system in not
              inconsistent.
            readOnly: true
            type: boolean
        type: object
      files:
        properties:
          maximum:
            description: The maximum number of files (inodes) for user-visible data
              allowed on the volume. This value can be increased or decreased. Increasing
              the maximum number of files does not immediately cause additional disk
              space to be used to track files. Instead, as more files are created
              on the volume, the system dynamically increases the number of disk blocks
              that are used to track files. The space assigned to track files is never
              freed, and this value cannot be decreased below the current number of
              files that can be tracked within the assigned space for the volume.
              Valid in PATCH.
            type: integer
          used:
            description: Number of files (inodes) used for user-visible data permitted
              on the volume. This field is valid only when the volume is online.
            readOnly: true
            type: integer
        type: object
      flexcache_endpoint_type:
        description: FlexCache endpoint type. <br>none &dash; The volume is neither
          a FlexCache nor origin of any FlexCache. <br>cache &dash; The volume is
          a FlexCache volume. <br>origin &dash; The volume is origin of a FlexCache
          volume.
        enum:
        - none
        - cache
        - origin
        readOnly: true
        type: string
      guarantee:
        properties:
          honored:
            description: Is the space guarantee of this volume honored in the aggregate?
            readOnly: true
            type: boolean
          type:
            description: The type of space guarantee of this volume in the aggregate.
            enum:
            - volume
            - none
            type: string
        type: object
      is_svm_root:
        description: Specifies whether the volume is a root volume of the SVM it belongs
          to.
        readOnly: true
        type: boolean
      language:
        description: Language encoding setting for volume. If no language is specified,
          the volume inherits its SVM language encoding setting.
        enum:
        - ar
        - ar.utf_8
        - c
        - c.utf_8
        - cs
        - cs.utf_8
        - da
        - da.utf_8
        - de
        - de.utf_8
        - en
        - en.utf_8
        - en_us
        - en_us.utf_8
        - es
        - es.utf_8
        - fi
        - fi.utf_8
        - fr
        - fr.utf_8
        - he
        - he.utf_8
        - hr
        - hr.utf_8
        - hu
        - hu.utf_8
        - it
        - it.utf_8
        - ja
        - ja.utf_8
        - ja_jp.932
        - ja_jp.932.utf_8
        - ja_jp.pck
        - ja_jp.pck.utf_8
        - ja_jp.pck_v2
        - ja_jp.pck_v2.utf_8
        - ja_v1
        - ja_v1.utf_8
        - ko
        - ko.utf_8
        - nl
        - nl.utf_8
        - "no"
        - no.utf_8
        - pl
        - pl.utf_8
        - pt
        - pt.utf_8
        - ro
        - ro.utf_8
        - ru
        - ru.utf_8
        - sk
        - sk.utf_8
        - sl
        - sl.utf_8
        - sv
        - sv.utf_8
        - tr
        - tr.utf_8
        - utf8mb4
        - zh
        - zh.gbk
        - zh.gbk.utf_8
        - zh.utf_8
        - zh_tw
        - zh_tw.big5
        - zh_tw.big5.utf_8
        - zh_tw.utf_8
        type: string
        x-ntap-readCreate: true
      metric:
        description: Performance numbers, such as IOPS, latency and throughput.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          cloud:
            description: Performance numbers (IOPS and latency) for cloud store. These
              numbers are relevant only for volumes hosted on FabricPools.
            properties:
              duration:
                description: |
                  The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
                enum:
                - PT15S
                - PT4M
                - PT30M
                - PT2H
                - P1D
                - PT5M
                example: PT15S
                readOnly: true
                type: string
              iops:
                description: The rate of I/O operations observed at the storage object.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              latency:
                description: The round trip latency in microseconds observed at the
                  storage object.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              status:
                description: Errors associated with the sample. For example, if the
                  aggregation of data over multiple nodes fails, then any partial
                  errors might return "ok" on success or "error" on an internal uncategorized
                  failure. Whenever a sample collection is missed but done at a later
                  time, it is back filled to the previous 15 second timestamp and
                  tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
                  when the time between two collections is not the same for all nodes.
                  Therefore, the aggregated value might be over or under inflated.
                  "Negative_delta" is returned when an expected monotonically increasing
                  value has decreased in value. "Inconsistent_old_data" is returned
                  when one or more nodes do not have the latest data.
                enum:
                - okrippy
                - errorrippy
                - partial_no_data
                - partial_no_uuid
                - partial_no_response
                - partial_other_error
                - negative_delta
                - backfilled_data
                - inconsistent_delta_time
                - inconsistent_old_data
                example: ok
                readOnly: true
                type: string
              timestamp:
                description: The timestamp of the performance data.
                example: 2017-01-25T11:20:13Z
                format: date-time
                readOnly: true
                type: string
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - okrippy
            - errorrippy
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      movement:
        description: Volume movement. All attributes are modify, that is, not writable
          through POST. Set PATCH state to destination_aggregate to initiate a volume
          move operation. Volume movement on FlexGroup constituents are not supported.
        properties:
          cutover_window:
            default: 30
            description: Time window in seconds for cutover. The allowed range is
              between 30 to 300 seconds.
            example: 30
            type: integer
          destination_aggregate:
            description: Aggregate
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: aggr1
                type: string
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
          percent_complete:
            description: Completion percentage
            readOnly: true
            type: integer
          state:
            description: State of volume move operation. PATCH the state to "aborted"
              to abort the move operation. PATCH the state to "cutover" to trigger
              cutover. PATCH the state to "paused" to pause the volume move operation
              in progress. PATCH the state to "replicating" to resume the paused volume
              move operation. PATCH the state to "cutover_wait" to go into cutover
              manually. When volume move operation is waiting to go into "cutover"
              state, this is indicated by the "cutover_pending" state. A change of
              state is only supported if volume movement is in progress.
            enum:
            - aborted
            - cutover
            - cutover_wait
            - cutover_pending
            - failed
            - paused
            - queued
            - replicating
            - success
            example: replicating
            type: string
          tiering_policy:
            description: Tiering policy for FabricPool
            enum:
            - all
            - auto
            - backup
            - none
            - snapshot_only
            type: string
            x-ntap-modifyOnly: true
        type: object
      name:
        description: Volume name. The name of volume must start with an alphabetic
          character (a to z or A to Z) or an underscore (_). The name must be 197
          or fewer characters in length for FlexGroups, and 203 or fewer characters
          in length for all other types of volumes. Volume names must be unique within
          an SVM. Required on POST.
        example: vol_cs_dept
        maxLength: 203
        minLength: 1
        type: string
      nas:
        properties:
          export_policy:
            description: Export Policy
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              id:
                example: 100
                type: integer
              name:
                example: default
                type: string
            type: object
          gid:
            default: 0
            description: The UNIX group ID of the volume. Valid in POST or PATCH.
            type: integer
          path:
            description: The fully-qualified path in the owning SVM's namespace at
              which the volume is mounted. The path is case insensitive and must be
              unique within a SVM's namespace. Path must begin with '/' and must not
              end with '/'. Only one volume can be mounted at any given junction path.
              An empty path in POST creates an unmounted volume. An empty path in
              PATCH deactivates and unmounts the volume. Taking a volume offline removes
              its junction path. This attribute is reported in GET only when the volume
              is mounted.
            example: /user/my_volume
            type: string
          security_style:
            default: unix
            description: Security style associated with the volume. Valid in POST
              or PATCH.<br>mixed &dash; Mixed-style security<br>ntfs &dash; NTFS/WIndows-style
              security<br>unified &dash; Unified-style security, unified UNIX, NFS
              and CIFS permissions<br>unix &dash; Unix-style security.
            enum:
            - mixed
            - ntfs
            - unified
            - unix
            type: string
          uid:
            default: 0
            description: The UNIX user ID of the volume. Valid in POST or PATCH.
            type: integer
          unix_permissions:
            description: UNIX permissions to be viewed as an octal number. It consists
              of 4 digits derived by adding up bits 4 (read), 2 (write) and 1 (execute).
              First digit selects the set user ID(4), set group ID (2) and sticky
              (1) attributes. The second digit selects permission for the owner of
              the file; the third selects permissions for other users in the same
              group; the fourth for other users not in the group. Valid in POST or
              PATCH. For security style "mixed" or "unix", the default setting is
              0755 in octal (493 in decimal) and for security style "ntfs", the default
              setting is 0000. In cases where only owner, group and other permissions
              are given (as in 755, representing the second, third and fourth dight),
              first digit is assumed to be zero.
            example: 0755
            type: integer
        type: object
      qos:
        description: QoS information
        properties:
          policy:
            description: When "min_throughput_iops", "max_throughput_iops" or "max_throughput_mbps"
              attributes are specified, the storage object is assigned to an auto-generated
              QoS policy group. If the attributes are later modified, the auto-generated
              QoS policy-group attributes are modified. Attributes can be removed
              by specifying "0" and policy group by specifying "none". Upon deletion
              of the storage object or if the attributes are removed, then the QoS
              policy-group is also removed.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              max_throughput_iops:
                description: Specifies the maximum throughput in IOPS, 0 means none.
                  This is mutually exclusive with name and UUID during POST and PATCH.
                example: 10000
                type: integer
              max_throughput_mbps:
                default: 0
                description: Specifies the maximum throughput in Megabytes per sec,
                  0 means none. This is mutually exclusive with name, UUID and "min_throughput_iops"
                  during POST and PATCH.
                example: 500
                type: integer
              min_throughput_iops:
                default: 0
                description: Specifies the minimum throughput in IOPS, 0 means none.
                  Setting "min_throughput" is supported on AFF platforms only, unless
                  FabricPool tiering policies are set. This is mutually exclusive
                  with name, UUID and" max_throughput_mbps" during POST and PATCH.
                example: 2000
                type: integer
              name:
                description: The QoS policy group name. This is mutually exclusive
                  with UUID and other QoS attributes during POST and PATCH.
                example: performance
                type: string
              uuid:
                description: The QoS policy group UUID. This is mutually exclusive
                  with name and other QoS attributes during POST and PATCH.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
        type: object
      quota:
        description: Quotas track the space or file usage of a user, group, or qtree
          in a FlexVol or a FlexGroup volume.
        properties:
          enabled:
            description: This option is used to enable or disable the quota for the
              volume. This option is valid only in PATCH. Quotas are enabled for FlexVols
              or FlexGroup volumes when the quota state is "on". Quotas are disabled
              for FlexVols or FlexGroup volumes when the quota state is "off".
            type: boolean
            x-ntap-modifyOnly: true
          state:
            description: Quota state of the volume
            enum:
            - corrupt
            - initializing
            - mixed
            - "off"
            - "on"
            - resizing
            readOnly: true
            type: string
        type: object
      size:
        description: Physical size of the volume, in bytes. The minimum size for a
          FlexVol volume is 20MB and the minimum size for a FlexGroup volume is 200MB
          per constituent. The recommended size for a FlexGroup volume is a minimum
          of 100GB per constituent. For all volumes, the default size is equal to
          the minimum size.
        type: integer
      snaplock:
        properties:
          append_mode_enabled:
            default: false
            description: Specifies if the volume append mode is enabled or disabled.
              When it is enabled, all the files created with write permissions on
              the volume are, by default, WORM appendable files. The user can append
              the data to a WORM appendable file but cannot modify the existing contents
              of the file nor delete the file until it expires.
            example: false
            type: boolean
          autocommit_period:
            default: none
            description: Specifies the autocommit period for SnapLock volume. All
              files which are not modified for a period greater than the autocommit
              period of the volume are committed to the WORM state. The autocommit
              period value represents a duration and must be specified in the ISO-8601
              duration format. The autocommit period can be in years, months, days,
              hours, and minutes. A period specified for years, months, and days is
              represented in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D"
              respectively, for example "P10Y" represents a duration of 10 years.
              A duration in hours and minutes is represented by "PT<num>H" and "PT<num>M"
              respectively. The period string must contain only a single time element
              that is, either years, months, days, hours, or minutes. A duration which
              combines different periods is not supported, for example "P1Y10M" is
              not supported. Apart from the duration specified in the ISO-8601 format,
              the autocommit field also accepts the string "none".
            example: P30M
            type: string
          compliance_clock_time:
            description: This is the volume compliance clock time which is used to
              manage the SnapLock objects in the volume.
            example: 2018-06-04T19:00:00Z
            format: date-time
            readOnly: true
            type: string
          expiry_time:
            description: Expiry time of the volume.
            example: Wed Sep  5 11:02:42 GMT 2018
            format: date-time
            readOnly: true
            type: string
          is_audit_log:
            description: Indicates if this volume has been configured as SnapLock
              audit log volume for the SVM .
            example: true
            readOnly: true
            type: boolean
          litigation_count:
            description: Litigation count indicates the number of active legal-holds
              on the volume.
            example: 10
            readOnly: true
            type: integer
          privileged_delete:
            description: Specifies the privileged-delete attribute of a SnapLock volume.
              On a SnapLock Enterprise (SLE) volume, a designated privileged user
              can selectively delete files irrespective of the retention time of the
              file. SLE volumes can have privileged delete as disabled, enabled or
              permanently_disabled and for SnapLock Compliance (SLC) volumes it is
              always permanently_disabled.
            enum:
            - disabled
            - enabled
            - permanently_disabled
            example: enabled
            type: string
          retention:
            properties:
              default:
                description: Specifies the default retention period that is applied
                  to files while committing them to the WORM state without an associated
                  retention period. The retention value represents a duration and
                  must be specified in the ISO-8601 duration format. The retention
                  period can be in years, months, days, hours, and minutes. A duration
                  specified for years, months, and days is represented in the ISO-8601
                  format as "P<num>Y", "P<num>M", "P<num>D" respectively, for example
                  "P10Y" represents a duration of 10 years. A duration in hours and
                  minutes is represented by "PT<num>H" and "PT<num>M" respectively.
                  The retention string must contain only a single time element that
                  is, either years, months, days, hours, or minutes. A duration which
                  combines different periods is not supported, for example "P1Y10M"
                  is not supported. Apart from the duration specified in the ISO-8601
                  format, the duration field also accepts the string "infinite" to
                  set an infinite retention period.
                example: P30Y
                type: string
              maximum:
                default: P30Y
                description: Specifies the maximum allowed retention period for files
                  committed to the WORM state on the volume. The retention value represents
                  a duration and must be specified in the ISO-8601 duration format.
                  The retention period can be in years, months, days, hours, and minutes.
                  A duration specified for years, months, and days is represented
                  in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D" respectively,
                  for example "P10Y" represents a duration of 10 years. A duration
                  in hours and minutes is represented by "PT<num>H" and "PT<num>M"
                  respectively. The retention string must contain only a single time
                  element that is, either years, months, days, hours, or minutes.
                  A duration which combines different periods is not supported, for
                  example "P1Y10M" is not supported. Apart from the duration specified
                  in the ISO-8601 format, the duration field also accepts the string
                  "infinite" to set an infinite retention period.
                example: P30Y
                type: string
              minimum:
                default: P0Y
                description: Specifies the minimum allowed retention period for files
                  committed to the WORM state on the volume. The retention value represents
                  a duration and must be specified in the ISO-8601 duration format.
                  The retention period can be in years, months, days, hours, and minutes.
                  A duration specified for years, month,s and days is represented
                  in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D" respectively,
                  for example "P10Y" represents a duration of 10 years. A duration
                  in hours and minutes is represented by "PT<num>H" and "PT<num>M"
                  respectively. The retention string must contain only a single time
                  element that is, either years, months, days, hours, or minutes.
                  A duration which combines different periods is not supported, for
                  example "P1Y10M" is not supported. Apart from the duration specified
                  in the ISO-8601 format, the duration field also accepts the string
                  "infinite" to set an infinite retention period.
                example: P30Y
                type: string
            type: object
          type:
            default: non_snaplock
            description: The SnapLock type of the volume. <br>compliance &dash; A
              SnapLock Compliance(SLC) volume provides the highest level of WORM protection
              and an administrator cannot destroy a SLC volume if it contains unexpired
              WORM files. <br> enterprise &dash; An administrator can delete a SnapLock
              Enterprise(SLE) volume.<br> non_snaplock &dash; Indicates the volume
              is non-snaplock.
            enum:
            - compliance
            - enterprise
            - non_snaplock
            example: enterprise
            readOnly: true
            type: string
        type: object
      snapmirror:
        description: Specifies attributes for SnapMirror protection.
        properties:
          is_protected:
            description: Specifies whether a volume is a SnapMirror source volume,
              using SnapMirror to protect its data.
            readOnly: true
            type: boolean
        type: object
      snapshot_policy:
        description: This is a reference to the Snapshot copy policy.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: default
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      space:
        properties:
          available:
            description: The available space, in bytes.
            readOnly: true
            type: integer
          block_storage_inactive_user_data:
            description: The size that is physically used in the block storage of
              the volume and has a cold temperature. In bytes. This parameter is only
              supported if the volume is in an aggregate that is either attached to
              a cloud store or could be attached to a cloud store.
            readOnly: true
            type: integer
          capacity_tier_footprint:
            description: The space used by capacity tier for this volume in the aggregate,
              in bytes.
            readOnly: true
            type: integer
          footprint:
            description: Data and metadata used for this volume in the aggregate,
              in bytes.
            readOnly: true
            type: integer
          logical_space:
            properties:
              available:
                description: The amount of space available in this volume with storage
                  efficiency space considered used, in bytes.
                readOnly: true
                type: integer
              enforcement:
                default: false
                description: Specifies whether space accounting for operations on
                  the volume is done along with storage efficiency.
                type: boolean
              reporting:
                default: false
                description: Specifies whether space reporting on the volume is done
                  along with storage efficiency.
                type: boolean
              used_by_afs:
                description: The virtual space used by AFS alone (includes volume
                  reserves) and along with storage efficiency, in bytes.
                readOnly: true
                type: integer
            type: object
          metadata:
            description: The space used by the total metadata in the volume, in bytes.
            readOnly: true
            type: integer
          over_provisioned:
            description: The amount of space not available for this volume in the
              aggregate, in bytes.
            readOnly: true
            type: integer
          size:
            description: Total provisioned size. The default size is equal to the
              minimum size of 20MB, in bytes.
            type: integer
          snapshot:
            properties:
              autodelete_enabled:
                default: false
                description: Specifies whether Snapshot copy autodelete is currently
                  enabled on this volume.
                type: boolean
                x-ntap-modifyOnly: true
              reserve_percent:
                default: 5
                description: The space that has been set aside as a reserve for Snapshot
                  copy usage, in percent.
                type: integer
              used:
                description: The total space used by Snapshot copies in the volume,
                  in bytes.
                readOnly: true
                type: integer
            type: object
          used:
            description: The virtual space used (includes volume reserves) before
              storage efficiency, in bytes.
            readOnly: true
            type: integer
        type: object
      state:
        description: Volume state. A volume can only be brought online if it is offline.
          Taking a volume offline removes its junction path. The 'mixed' state applies
          to FlexGroup volumes only and cannot be specified as a target state. An
          'error' state implies that the volume is not in a state to serve data.
        enum:
        - error
        - mixed
        - offline
        - online
        type: string
      statistics:
        description: These are raw performance numbers, such as IOPS latency and throughput.
          These numbers are aggregated across all nodes in the cluster and increase
          with the uptime of the cluster.
        properties:
          cloud:
            description: These are raw performance numbers (IOPS and latency) for
              the cloud store. These numbers are aggregated across all nodes in the
              cluster and increase with the uptime of the cluster. These numbers are
              relevant only for volumes hosted on FabricPools.
            properties:
              iops_raw:
                description: The number of I/O operations observed at the storage
                  object. This can be used along with delta time to calculate the
                  rate of I/O operations per unit of time.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              latency_raw:
                description: The raw latency in microseconds observed at the storage
                  object. This can be divided by the raw IOPS value to calculate the
                  average latency per I/O operation.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              status:
                description: Errors associated with the sample. For example, if the
                  aggregation of data over multiple nodes fails, then any partial
                  errors might return "ok" on success or "error" on an internal uncategorized
                  failure. Whenever a sample collection is missed but done at a later
                  time, it is back filled to the previous 15 second timestamp and
                  tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
                  when the time between two collections is not the same for all nodes.
                  Therefore, the aggregated value might be over or under inflated.
                  "Negative_delta" is returned when an expected monotonically increasing
                  value has decreased in value. "Inconsistent_old_data" is returned
                  when one or more nodes do not have the latest data.
                enum:
                - okrippy
                - errorrippy
                - partial_no_data
                - partial_no_uuid
                - partial_no_response
                - partial_other_error
                - negative_delta
                - backfilled_data
                - inconsistent_delta_time
                - inconsistent_old_data
                example: ok
                readOnly: true
                type: string
              timestamp:
                description: The timestamp of the performance data.
                example: 2017-01-25T11:20:13Z
                format: date-time
                readOnly: true
                type: string
            readOnly: true
            type: object
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This can be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This can be divided by the raw IOPS value to calculate the average latency
              per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - okrippy
            - errorrippy
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This can
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      style:
        description: The style of the volume. If "style" is not specified, the volume
          type is determined based on the specified aggregates. Specifying a single
          aggregate, without "constituents_per_aggregate", creates a flexible volume.
          Specifying multiple aggregates, or a single aggregate with "constituents_per_aggregate",
          creates a FlexGroup. Specifying a volume "style" creates a volume of that
          type. For example, if the style is "flexvol" you must specify a single aggregate.
          If the style is "flexgroup", the system either uses the specified aggregates
          or automatically provisions aggregates if there are no specified aggregates.<br>flexvol
          &dash; flexible volumes and FlexClone volumes<br>flexgroup &dash; FlexGroups.
        enum:
        - flexvol
        - flexgroup
        type: string
        x-ntap-readCreate: true
      svm:
        description: SVM containing the volume. Required on POST.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      tiering:
        properties:
          policy:
            description: Policy that determines whether the user data blocks of a
              volume in a FabricPool will be tiered to the cloud store when they become
              cold. FabricPool combines flash (performance tier) with a cloud store
              into a single aggregate. Temperature of a volume block increases if
              it is accessed frequently and decreases when it is not. Valid in POST
              or PATCH.<br>all &dash; This policy allows tiering of both Snapshot
              copies and active file system user data to the cloud store as soon as
              possible by ignoring the temperature on the volume blocks.<br>auto &dash;
              This policy allows tiering of both snapshot and active file system user
              data to the cloud store<br>none &dash; Volume blocks will not be tiered
              to the cloud store.<br>snapshot_only &dash; This policy allows tiering
              of only the volume Snapshot copies not associated with the active file
              system. The default tiering policy is "snapshot-only" for a FlexVol
              and "none" for a FlexGroup.
            enum:
            - all
            - auto
            - backup
            - none
            - snapshot_only
            type: string
          supported:
            default: false
            description: This parameter specifies whether or not FabricPools are selected
              when provisioning a FlexGroup without specifying "aggregates.name" or
              "aggregates.uuid". Only FabricPool aggregates are used if this parameter
              is set to true and only non FabricPool aggregates are used if this parameter
              is set to false. Tiering support for a FlexGroup can be changed by moving
              all of the constituents to the required aggregates. Note that in order
              to tier data, not only does the volume need to support tiering by using
              FabricPools, the tiering "policy" must not be 'none'. A volume that
              uses FabricPools but has a tiering "policy" of 'none' supports tiering,
              but will not tier any data.
            type: boolean
            x-ntap-createOnly: true
        type: object
      type:
        default: rw
        description: Type of the volume.<br>rw &dash; read-write volume.<br>dp &dash;
          data-protection volume.<br>ls &dash; load-sharing `dp` volume. Valid in
          GET.
        enum:
        - rw
        - dp
        - ls
        type: string
        x-ntap-readCreate: true
      use_mirrored_aggregates:
        default: ~
        description: Specifies whether mirrored aggregates are selected when provisioning
          a FlexGroup without specifying "aggregates.name" or "aggregates.uuid". Only
          mirrored aggregates are used if this parameter is set to 'true' and only
          unmirrored aggregates are used if this parameter is set to 'false'. Aggregate
          level mirroring for a FlexGroup can be changed by moving all of the constituents
          to the required aggregates. The default value is 'true' for a MetroCluster
          configuration and is 'false' for a non-MetroCluster configuration.
        type: boolean
        x-ntap-createOnly: true
      uuid:
        description: Unique identifier for the volume. This corresponds to the instance-uuid
          that is exposed in the CLI and ONTAPI. It does not change due to a volume
          move.
        example: 028baa66-41bd-11e9-81d5-00a0986138f7
        readOnly: true
        type: string
    type: object
  volume_metrics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - okrippy
              - errorrippy
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: true
          type: object
        type: array
    type: object
  volume_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/volume'
        type: array
    type: object
parameters:
  fields_param:
    collectionFormat: csv
    description: Specify the fields to return.
    in: query
    items:
      type: string
    name: fields
    type: array
  host_connectivity_param:
    default: false
    description: Test the connection to a specific host.
    in: query
    name: host_connectivity
    type: boolean
  max_records_param:
    description: Limit the number of records returned.
    in: query
    name: max_records
    type: integer
  order_by_param:
    collectionFormat: csv
    description: Order results by specified fields and optional [asc|desc] direction.
      Default direction is 'asc' for ascending.
    in: query
    items:
      type: string
    name: order_by
    type: array
  return_records_get_param:
    default: true
    description: The default is true for GET calls.  When set to false, only the number
      of records is returned.
    in: query
    name: return_records
    type: boolean
  return_records_update_param:
    default: false
    description: The default is false.  If set to true, the records are returned.
    in: query
    name: return_records
    type: boolean
  return_timeout_get_param:
    default: 15
    description: The number of seconds to allow the call to execute before returning.  When
      iterating over a collection, the default is 15 seconds.  ONTAP returns earlier
      if either max records or the end of the collection is reached.
    in: query
    maximum: 120
    minimum: 0
    name: return_timeout
    type: integer
  return_timeout_update_param:
    default: 0
    description: The number of seconds to allow the call to execute before returning.
      When doing a POST, PATCH, or DELETE operation on a single record, the default
      is 0 seconds.  This means that if an asynchronous operation is started, the
      server immediately returns HTTP code 202 (Accepted) along with a link to the
      job.  If a non-zero value is specified for POST, PATCH, or DELETE operations,
      ONTAP waits that length of time to see if the job completes so it can return
      something other than 202.
    in: query
    maximum: 120
    minimum: 0
    name: return_timeout
    type: integer
  svm_path_param:
    description: UUID of the SVM to which this object belongs.
    in: path
    name: svm.uuid
    required: true
    type: string
  svm_query_param:
    description: Filter by UUID of the SVM to which this object belongs.
    in: query
    name: svm.uuid
    type: string
  validate_only_param:
    description: Validate the operation and its parameters, without actually performing
      the operation.
    in: query
    name: validate_only
    type: boolean
