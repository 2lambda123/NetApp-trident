// Code generated by go-swagger; DO NOT EDIT.

package support

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAutoUpdateStatusCollectionGetParams creates a new AutoUpdateStatusCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAutoUpdateStatusCollectionGetParams() *AutoUpdateStatusCollectionGetParams {
	return &AutoUpdateStatusCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAutoUpdateStatusCollectionGetParamsWithTimeout creates a new AutoUpdateStatusCollectionGetParams object
// with the ability to set a timeout on a request.
func NewAutoUpdateStatusCollectionGetParamsWithTimeout(timeout time.Duration) *AutoUpdateStatusCollectionGetParams {
	return &AutoUpdateStatusCollectionGetParams{
		timeout: timeout,
	}
}

// NewAutoUpdateStatusCollectionGetParamsWithContext creates a new AutoUpdateStatusCollectionGetParams object
// with the ability to set a context for a request.
func NewAutoUpdateStatusCollectionGetParamsWithContext(ctx context.Context) *AutoUpdateStatusCollectionGetParams {
	return &AutoUpdateStatusCollectionGetParams{
		Context: ctx,
	}
}

// NewAutoUpdateStatusCollectionGetParamsWithHTTPClient creates a new AutoUpdateStatusCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewAutoUpdateStatusCollectionGetParamsWithHTTPClient(client *http.Client) *AutoUpdateStatusCollectionGetParams {
	return &AutoUpdateStatusCollectionGetParams{
		HTTPClient: client,
	}
}

/*
AutoUpdateStatusCollectionGetParams contains all the parameters to send to the API endpoint

	for the auto update status collection get operation.

	Typically these are written to a http.Request.
*/
type AutoUpdateStatusCollectionGetParams struct {

	/* ContentCategory.

	   Filter by content_category
	*/
	ContentCategoryQueryParameter *string

	/* ContentType.

	   Filter by content_type
	*/
	ContentTypeQueryParameter *string

	/* CreationTime.

	   Filter by creation_time
	*/
	CreationTimeQueryParameter *string

	/* Description.

	   Filter by description
	*/
	DescriptionQueryParameter *string

	/* EndTime.

	   Filter by end_time
	*/
	EndTimeQueryParameter *string

	/* ExpiryTime.

	   Filter by expiry_time
	*/
	ExpiryTimeQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* LastStateChangeTime.

	   Filter by last_state_change_time
	*/
	LastStateChangeTimeQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* PackageID.

	   Filter by package_id
	*/
	PackageIDQueryParameter *string

	/* PercentComplete.

	   Filter by percent_complete
	*/
	PercentCompleteQueryParameter *int64

	/* RemainingTime.

	   Filter by remaining_time
	*/
	RemainingTimeQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* ScheduledTime.

	   Filter by scheduled_time
	*/
	ScheduledTimeQueryParameter *string

	/* StartTime.

	   Filter by start_time
	*/
	StartTimeQueryParameter *string

	/* State.

	   Filter by state
	*/
	StateQueryParameter *string

	/* StatusArgumentsCode.

	   Filter by status.arguments.code
	*/
	StatusArgumentsCodeQueryParameter *string

	/* StatusArgumentsMessage.

	   Filter by status.arguments.message
	*/
	StatusArgumentsMessageQueryParameter *string

	/* StatusCode.

	   Filter by status.code
	*/
	StatusCodeQueryParameter *string

	/* StatusMessage.

	   Filter by status.message
	*/
	StatusMessageQueryParameter *string

	/* StatusTarget.

	   Filter by status.target
	*/
	StatusTargetQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the auto update status collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AutoUpdateStatusCollectionGetParams) WithDefaults() *AutoUpdateStatusCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the auto update status collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AutoUpdateStatusCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := AutoUpdateStatusCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithTimeout(timeout time.Duration) *AutoUpdateStatusCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithContext(ctx context.Context) *AutoUpdateStatusCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithHTTPClient(client *http.Client) *AutoUpdateStatusCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContentCategoryQueryParameter adds the contentCategory to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithContentCategoryQueryParameter(contentCategory *string) *AutoUpdateStatusCollectionGetParams {
	o.SetContentCategoryQueryParameter(contentCategory)
	return o
}

// SetContentCategoryQueryParameter adds the contentCategory to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetContentCategoryQueryParameter(contentCategory *string) {
	o.ContentCategoryQueryParameter = contentCategory
}

// WithContentTypeQueryParameter adds the contentType to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithContentTypeQueryParameter(contentType *string) *AutoUpdateStatusCollectionGetParams {
	o.SetContentTypeQueryParameter(contentType)
	return o
}

// SetContentTypeQueryParameter adds the contentType to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetContentTypeQueryParameter(contentType *string) {
	o.ContentTypeQueryParameter = contentType
}

// WithCreationTimeQueryParameter adds the creationTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithCreationTimeQueryParameter(creationTime *string) *AutoUpdateStatusCollectionGetParams {
	o.SetCreationTimeQueryParameter(creationTime)
	return o
}

// SetCreationTimeQueryParameter adds the creationTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetCreationTimeQueryParameter(creationTime *string) {
	o.CreationTimeQueryParameter = creationTime
}

// WithDescriptionQueryParameter adds the description to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithDescriptionQueryParameter(description *string) *AutoUpdateStatusCollectionGetParams {
	o.SetDescriptionQueryParameter(description)
	return o
}

// SetDescriptionQueryParameter adds the description to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetDescriptionQueryParameter(description *string) {
	o.DescriptionQueryParameter = description
}

// WithEndTimeQueryParameter adds the endTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithEndTimeQueryParameter(endTime *string) *AutoUpdateStatusCollectionGetParams {
	o.SetEndTimeQueryParameter(endTime)
	return o
}

// SetEndTimeQueryParameter adds the endTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetEndTimeQueryParameter(endTime *string) {
	o.EndTimeQueryParameter = endTime
}

// WithExpiryTimeQueryParameter adds the expiryTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithExpiryTimeQueryParameter(expiryTime *string) *AutoUpdateStatusCollectionGetParams {
	o.SetExpiryTimeQueryParameter(expiryTime)
	return o
}

// SetExpiryTimeQueryParameter adds the expiryTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetExpiryTimeQueryParameter(expiryTime *string) {
	o.ExpiryTimeQueryParameter = expiryTime
}

// WithFieldsQueryParameter adds the fields to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithFieldsQueryParameter(fields []string) *AutoUpdateStatusCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithLastStateChangeTimeQueryParameter adds the lastStateChangeTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithLastStateChangeTimeQueryParameter(lastStateChangeTime *string) *AutoUpdateStatusCollectionGetParams {
	o.SetLastStateChangeTimeQueryParameter(lastStateChangeTime)
	return o
}

// SetLastStateChangeTimeQueryParameter adds the lastStateChangeTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetLastStateChangeTimeQueryParameter(lastStateChangeTime *string) {
	o.LastStateChangeTimeQueryParameter = lastStateChangeTime
}

// WithMaxRecordsQueryParameter adds the maxRecords to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *AutoUpdateStatusCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithOrderByQueryParameter adds the orderBy to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *AutoUpdateStatusCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPackageIDQueryParameter adds the packageID to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithPackageIDQueryParameter(packageID *string) *AutoUpdateStatusCollectionGetParams {
	o.SetPackageIDQueryParameter(packageID)
	return o
}

// SetPackageIDQueryParameter adds the packageId to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetPackageIDQueryParameter(packageID *string) {
	o.PackageIDQueryParameter = packageID
}

// WithPercentCompleteQueryParameter adds the percentComplete to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithPercentCompleteQueryParameter(percentComplete *int64) *AutoUpdateStatusCollectionGetParams {
	o.SetPercentCompleteQueryParameter(percentComplete)
	return o
}

// SetPercentCompleteQueryParameter adds the percentComplete to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetPercentCompleteQueryParameter(percentComplete *int64) {
	o.PercentCompleteQueryParameter = percentComplete
}

// WithRemainingTimeQueryParameter adds the remainingTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithRemainingTimeQueryParameter(remainingTime *string) *AutoUpdateStatusCollectionGetParams {
	o.SetRemainingTimeQueryParameter(remainingTime)
	return o
}

// SetRemainingTimeQueryParameter adds the remainingTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetRemainingTimeQueryParameter(remainingTime *string) {
	o.RemainingTimeQueryParameter = remainingTime
}

// WithReturnRecordsQueryParameter adds the returnRecords to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *AutoUpdateStatusCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *AutoUpdateStatusCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithScheduledTimeQueryParameter adds the scheduledTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithScheduledTimeQueryParameter(scheduledTime *string) *AutoUpdateStatusCollectionGetParams {
	o.SetScheduledTimeQueryParameter(scheduledTime)
	return o
}

// SetScheduledTimeQueryParameter adds the scheduledTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetScheduledTimeQueryParameter(scheduledTime *string) {
	o.ScheduledTimeQueryParameter = scheduledTime
}

// WithStartTimeQueryParameter adds the startTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithStartTimeQueryParameter(startTime *string) *AutoUpdateStatusCollectionGetParams {
	o.SetStartTimeQueryParameter(startTime)
	return o
}

// SetStartTimeQueryParameter adds the startTime to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetStartTimeQueryParameter(startTime *string) {
	o.StartTimeQueryParameter = startTime
}

// WithStateQueryParameter adds the state to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithStateQueryParameter(state *string) *AutoUpdateStatusCollectionGetParams {
	o.SetStateQueryParameter(state)
	return o
}

// SetStateQueryParameter adds the state to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetStateQueryParameter(state *string) {
	o.StateQueryParameter = state
}

// WithStatusArgumentsCodeQueryParameter adds the statusArgumentsCode to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithStatusArgumentsCodeQueryParameter(statusArgumentsCode *string) *AutoUpdateStatusCollectionGetParams {
	o.SetStatusArgumentsCodeQueryParameter(statusArgumentsCode)
	return o
}

// SetStatusArgumentsCodeQueryParameter adds the statusArgumentsCode to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetStatusArgumentsCodeQueryParameter(statusArgumentsCode *string) {
	o.StatusArgumentsCodeQueryParameter = statusArgumentsCode
}

// WithStatusArgumentsMessageQueryParameter adds the statusArgumentsMessage to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithStatusArgumentsMessageQueryParameter(statusArgumentsMessage *string) *AutoUpdateStatusCollectionGetParams {
	o.SetStatusArgumentsMessageQueryParameter(statusArgumentsMessage)
	return o
}

// SetStatusArgumentsMessageQueryParameter adds the statusArgumentsMessage to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetStatusArgumentsMessageQueryParameter(statusArgumentsMessage *string) {
	o.StatusArgumentsMessageQueryParameter = statusArgumentsMessage
}

// WithStatusCodeQueryParameter adds the statusCode to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithStatusCodeQueryParameter(statusCode *string) *AutoUpdateStatusCollectionGetParams {
	o.SetStatusCodeQueryParameter(statusCode)
	return o
}

// SetStatusCodeQueryParameter adds the statusCode to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetStatusCodeQueryParameter(statusCode *string) {
	o.StatusCodeQueryParameter = statusCode
}

// WithStatusMessageQueryParameter adds the statusMessage to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithStatusMessageQueryParameter(statusMessage *string) *AutoUpdateStatusCollectionGetParams {
	o.SetStatusMessageQueryParameter(statusMessage)
	return o
}

// SetStatusMessageQueryParameter adds the statusMessage to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetStatusMessageQueryParameter(statusMessage *string) {
	o.StatusMessageQueryParameter = statusMessage
}

// WithStatusTargetQueryParameter adds the statusTarget to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithStatusTargetQueryParameter(statusTarget *string) *AutoUpdateStatusCollectionGetParams {
	o.SetStatusTargetQueryParameter(statusTarget)
	return o
}

// SetStatusTargetQueryParameter adds the statusTarget to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetStatusTargetQueryParameter(statusTarget *string) {
	o.StatusTargetQueryParameter = statusTarget
}

// WithUUIDQueryParameter adds the uuid to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) WithUUIDQueryParameter(uuid *string) *AutoUpdateStatusCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the auto update status collection get params
func (o *AutoUpdateStatusCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *AutoUpdateStatusCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ContentCategoryQueryParameter != nil {

		// query param content_category
		var qrContentCategory string

		if o.ContentCategoryQueryParameter != nil {
			qrContentCategory = *o.ContentCategoryQueryParameter
		}
		qContentCategory := qrContentCategory
		if qContentCategory != "" {

			if err := r.SetQueryParam("content_category", qContentCategory); err != nil {
				return err
			}
		}
	}

	if o.ContentTypeQueryParameter != nil {

		// query param content_type
		var qrContentType string

		if o.ContentTypeQueryParameter != nil {
			qrContentType = *o.ContentTypeQueryParameter
		}
		qContentType := qrContentType
		if qContentType != "" {

			if err := r.SetQueryParam("content_type", qContentType); err != nil {
				return err
			}
		}
	}

	if o.CreationTimeQueryParameter != nil {

		// query param creation_time
		var qrCreationTime string

		if o.CreationTimeQueryParameter != nil {
			qrCreationTime = *o.CreationTimeQueryParameter
		}
		qCreationTime := qrCreationTime
		if qCreationTime != "" {

			if err := r.SetQueryParam("creation_time", qCreationTime); err != nil {
				return err
			}
		}
	}

	if o.DescriptionQueryParameter != nil {

		// query param description
		var qrDescription string

		if o.DescriptionQueryParameter != nil {
			qrDescription = *o.DescriptionQueryParameter
		}
		qDescription := qrDescription
		if qDescription != "" {

			if err := r.SetQueryParam("description", qDescription); err != nil {
				return err
			}
		}
	}

	if o.EndTimeQueryParameter != nil {

		// query param end_time
		var qrEndTime string

		if o.EndTimeQueryParameter != nil {
			qrEndTime = *o.EndTimeQueryParameter
		}
		qEndTime := qrEndTime
		if qEndTime != "" {

			if err := r.SetQueryParam("end_time", qEndTime); err != nil {
				return err
			}
		}
	}

	if o.ExpiryTimeQueryParameter != nil {

		// query param expiry_time
		var qrExpiryTime string

		if o.ExpiryTimeQueryParameter != nil {
			qrExpiryTime = *o.ExpiryTimeQueryParameter
		}
		qExpiryTime := qrExpiryTime
		if qExpiryTime != "" {

			if err := r.SetQueryParam("expiry_time", qExpiryTime); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.LastStateChangeTimeQueryParameter != nil {

		// query param last_state_change_time
		var qrLastStateChangeTime string

		if o.LastStateChangeTimeQueryParameter != nil {
			qrLastStateChangeTime = *o.LastStateChangeTimeQueryParameter
		}
		qLastStateChangeTime := qrLastStateChangeTime
		if qLastStateChangeTime != "" {

			if err := r.SetQueryParam("last_state_change_time", qLastStateChangeTime); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PackageIDQueryParameter != nil {

		// query param package_id
		var qrPackageID string

		if o.PackageIDQueryParameter != nil {
			qrPackageID = *o.PackageIDQueryParameter
		}
		qPackageID := qrPackageID
		if qPackageID != "" {

			if err := r.SetQueryParam("package_id", qPackageID); err != nil {
				return err
			}
		}
	}

	if o.PercentCompleteQueryParameter != nil {

		// query param percent_complete
		var qrPercentComplete int64

		if o.PercentCompleteQueryParameter != nil {
			qrPercentComplete = *o.PercentCompleteQueryParameter
		}
		qPercentComplete := swag.FormatInt64(qrPercentComplete)
		if qPercentComplete != "" {

			if err := r.SetQueryParam("percent_complete", qPercentComplete); err != nil {
				return err
			}
		}
	}

	if o.RemainingTimeQueryParameter != nil {

		// query param remaining_time
		var qrRemainingTime string

		if o.RemainingTimeQueryParameter != nil {
			qrRemainingTime = *o.RemainingTimeQueryParameter
		}
		qRemainingTime := qrRemainingTime
		if qRemainingTime != "" {

			if err := r.SetQueryParam("remaining_time", qRemainingTime); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.ScheduledTimeQueryParameter != nil {

		// query param scheduled_time
		var qrScheduledTime string

		if o.ScheduledTimeQueryParameter != nil {
			qrScheduledTime = *o.ScheduledTimeQueryParameter
		}
		qScheduledTime := qrScheduledTime
		if qScheduledTime != "" {

			if err := r.SetQueryParam("scheduled_time", qScheduledTime); err != nil {
				return err
			}
		}
	}

	if o.StartTimeQueryParameter != nil {

		// query param start_time
		var qrStartTime string

		if o.StartTimeQueryParameter != nil {
			qrStartTime = *o.StartTimeQueryParameter
		}
		qStartTime := qrStartTime
		if qStartTime != "" {

			if err := r.SetQueryParam("start_time", qStartTime); err != nil {
				return err
			}
		}
	}

	if o.StateQueryParameter != nil {

		// query param state
		var qrState string

		if o.StateQueryParameter != nil {
			qrState = *o.StateQueryParameter
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.StatusArgumentsCodeQueryParameter != nil {

		// query param status.arguments.code
		var qrStatusArgumentsCode string

		if o.StatusArgumentsCodeQueryParameter != nil {
			qrStatusArgumentsCode = *o.StatusArgumentsCodeQueryParameter
		}
		qStatusArgumentsCode := qrStatusArgumentsCode
		if qStatusArgumentsCode != "" {

			if err := r.SetQueryParam("status.arguments.code", qStatusArgumentsCode); err != nil {
				return err
			}
		}
	}

	if o.StatusArgumentsMessageQueryParameter != nil {

		// query param status.arguments.message
		var qrStatusArgumentsMessage string

		if o.StatusArgumentsMessageQueryParameter != nil {
			qrStatusArgumentsMessage = *o.StatusArgumentsMessageQueryParameter
		}
		qStatusArgumentsMessage := qrStatusArgumentsMessage
		if qStatusArgumentsMessage != "" {

			if err := r.SetQueryParam("status.arguments.message", qStatusArgumentsMessage); err != nil {
				return err
			}
		}
	}

	if o.StatusCodeQueryParameter != nil {

		// query param status.code
		var qrStatusCode string

		if o.StatusCodeQueryParameter != nil {
			qrStatusCode = *o.StatusCodeQueryParameter
		}
		qStatusCode := qrStatusCode
		if qStatusCode != "" {

			if err := r.SetQueryParam("status.code", qStatusCode); err != nil {
				return err
			}
		}
	}

	if o.StatusMessageQueryParameter != nil {

		// query param status.message
		var qrStatusMessage string

		if o.StatusMessageQueryParameter != nil {
			qrStatusMessage = *o.StatusMessageQueryParameter
		}
		qStatusMessage := qrStatusMessage
		if qStatusMessage != "" {

			if err := r.SetQueryParam("status.message", qStatusMessage); err != nil {
				return err
			}
		}
	}

	if o.StatusTargetQueryParameter != nil {

		// query param status.target
		var qrStatusTarget string

		if o.StatusTargetQueryParameter != nil {
			qrStatusTarget = *o.StatusTargetQueryParameter
		}
		qStatusTarget := qrStatusTarget
		if qStatusTarget != "" {

			if err := r.SetQueryParam("status.target", qStatusTarget); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamAutoUpdateStatusCollectionGet binds the parameter fields
func (o *AutoUpdateStatusCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamAutoUpdateStatusCollectionGet binds the parameter order_by
func (o *AutoUpdateStatusCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
