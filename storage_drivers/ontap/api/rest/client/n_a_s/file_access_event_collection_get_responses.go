// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// FileAccessEventCollectionGetReader is a Reader for the FileAccessEventCollectionGet structure.
type FileAccessEventCollectionGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FileAccessEventCollectionGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFileAccessEventCollectionGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFileAccessEventCollectionGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFileAccessEventCollectionGetOK creates a FileAccessEventCollectionGetOK with default headers values
func NewFileAccessEventCollectionGetOK() *FileAccessEventCollectionGetOK {
	return &FileAccessEventCollectionGetOK{}
}

/* FileAccessEventCollectionGetOK describes a response with status code 200, with default header values.

OK
*/
type FileAccessEventCollectionGetOK struct {
	Payload *models.FileAccessEventResponse
}

func (o *FileAccessEventCollectionGetOK) Error() string {
	return fmt.Sprintf("[GET /protocols/file-access-tracing/events][%d] fileAccessEventCollectionGetOK  %+v", 200, o.Payload)
}
func (o *FileAccessEventCollectionGetOK) GetPayload() *models.FileAccessEventResponse {
	return o.Payload
}

func (o *FileAccessEventCollectionGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FileAccessEventResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFileAccessEventCollectionGetDefault creates a FileAccessEventCollectionGetDefault with default headers values
func NewFileAccessEventCollectionGetDefault(code int) *FileAccessEventCollectionGetDefault {
	return &FileAccessEventCollectionGetDefault{
		_statusCode: code,
	}
}

/* FileAccessEventCollectionGetDefault describes a response with status code -1, with default header values.

Error
*/
type FileAccessEventCollectionGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the file access event collection get default response
func (o *FileAccessEventCollectionGetDefault) Code() int {
	return o._statusCode
}

func (o *FileAccessEventCollectionGetDefault) Error() string {
	return fmt.Sprintf("[GET /protocols/file-access-tracing/events][%d] file_access_event_collection_get default  %+v", o._statusCode, o.Payload)
}
func (o *FileAccessEventCollectionGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *FileAccessEventCollectionGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
