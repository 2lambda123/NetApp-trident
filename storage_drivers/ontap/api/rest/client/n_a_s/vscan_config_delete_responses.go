// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/v21/storage_drivers/ontap/api/rest/models"
)

// VscanConfigDeleteReader is a Reader for the VscanConfigDelete structure.
type VscanConfigDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VscanConfigDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVscanConfigDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVscanConfigDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVscanConfigDeleteOK creates a VscanConfigDeleteOK with default headers values
func NewVscanConfigDeleteOK() *VscanConfigDeleteOK {
	return &VscanConfigDeleteOK{}
}

/* VscanConfigDeleteOK describes a response with status code 200, with default header values.

OK
*/
type VscanConfigDeleteOK struct {
}

func (o *VscanConfigDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /protocols/vscan/{svm.uuid}][%d] vscanConfigDeleteOK ", 200)
}

func (o *VscanConfigDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVscanConfigDeleteDefault creates a VscanConfigDeleteDefault with default headers values
func NewVscanConfigDeleteDefault(code int) *VscanConfigDeleteDefault {
	return &VscanConfigDeleteDefault{
		_statusCode: code,
	}
}

/* VscanConfigDeleteDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 10027259   | A scanner-pool, an On-Access policy, or an On-Demand policy might fail to get deleted due to either a systematic error or some hardware failure. The error code returned details the failure along with the reason for the failure. For example, \"Failed to delete On-Access policy \"sp1\". Reason: \"Failed to delete policy. Reason: policy must be disabled before being deleted.\". Retry the operation.\"

*/
type VscanConfigDeleteDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the vscan config delete default response
func (o *VscanConfigDeleteDefault) Code() int {
	return o._statusCode
}

func (o *VscanConfigDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /protocols/vscan/{svm.uuid}][%d] vscan_config_delete default  %+v", o._statusCode, o.Payload)
}
func (o *VscanConfigDeleteDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *VscanConfigDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
