// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// NewFileAccessFilterModifyParams creates a new FileAccessFilterModifyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFileAccessFilterModifyParams() *FileAccessFilterModifyParams {
	return &FileAccessFilterModifyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFileAccessFilterModifyParamsWithTimeout creates a new FileAccessFilterModifyParams object
// with the ability to set a timeout on a request.
func NewFileAccessFilterModifyParamsWithTimeout(timeout time.Duration) *FileAccessFilterModifyParams {
	return &FileAccessFilterModifyParams{
		timeout: timeout,
	}
}

// NewFileAccessFilterModifyParamsWithContext creates a new FileAccessFilterModifyParams object
// with the ability to set a context for a request.
func NewFileAccessFilterModifyParamsWithContext(ctx context.Context) *FileAccessFilterModifyParams {
	return &FileAccessFilterModifyParams{
		Context: ctx,
	}
}

// NewFileAccessFilterModifyParamsWithHTTPClient creates a new FileAccessFilterModifyParams object
// with the ability to set a custom HTTPClient for a request.
func NewFileAccessFilterModifyParamsWithHTTPClient(client *http.Client) *FileAccessFilterModifyParams {
	return &FileAccessFilterModifyParams{
		HTTPClient: client,
	}
}

/* FileAccessFilterModifyParams contains all the parameters to send to the API endpoint
   for the file access filter modify operation.

   Typically these are written to a http.Request.
*/
type FileAccessFilterModifyParams struct {

	/* Index.

	   Filter index.
	*/
	IndexPathParameter int64

	/* Info.

	   Information specification
	*/
	Info *models.FileAccessFilter

	/* SvmUUID.

	   UUID of the SVM to which this object belongs.
	*/
	SVMUUIDPathParameter string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the file access filter modify params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FileAccessFilterModifyParams) WithDefaults() *FileAccessFilterModifyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the file access filter modify params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FileAccessFilterModifyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the file access filter modify params
func (o *FileAccessFilterModifyParams) WithTimeout(timeout time.Duration) *FileAccessFilterModifyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the file access filter modify params
func (o *FileAccessFilterModifyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the file access filter modify params
func (o *FileAccessFilterModifyParams) WithContext(ctx context.Context) *FileAccessFilterModifyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the file access filter modify params
func (o *FileAccessFilterModifyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the file access filter modify params
func (o *FileAccessFilterModifyParams) WithHTTPClient(client *http.Client) *FileAccessFilterModifyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the file access filter modify params
func (o *FileAccessFilterModifyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIndexPathParameter adds the index to the file access filter modify params
func (o *FileAccessFilterModifyParams) WithIndexPathParameter(index int64) *FileAccessFilterModifyParams {
	o.SetIndexPathParameter(index)
	return o
}

// SetIndexPathParameter adds the index to the file access filter modify params
func (o *FileAccessFilterModifyParams) SetIndexPathParameter(index int64) {
	o.IndexPathParameter = index
}

// WithInfo adds the info to the file access filter modify params
func (o *FileAccessFilterModifyParams) WithInfo(info *models.FileAccessFilter) *FileAccessFilterModifyParams {
	o.SetInfo(info)
	return o
}

// SetInfo adds the info to the file access filter modify params
func (o *FileAccessFilterModifyParams) SetInfo(info *models.FileAccessFilter) {
	o.Info = info
}

// WithSVMUUIDPathParameter adds the svmUUID to the file access filter modify params
func (o *FileAccessFilterModifyParams) WithSVMUUIDPathParameter(svmUUID string) *FileAccessFilterModifyParams {
	o.SetSVMUUIDPathParameter(svmUUID)
	return o
}

// SetSVMUUIDPathParameter adds the svmUuid to the file access filter modify params
func (o *FileAccessFilterModifyParams) SetSVMUUIDPathParameter(svmUUID string) {
	o.SVMUUIDPathParameter = svmUUID
}

// WriteToRequest writes these params to a swagger request
func (o *FileAccessFilterModifyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param index
	if err := r.SetPathParam("index", swag.FormatInt64(o.IndexPathParameter)); err != nil {
		return err
	}
	if o.Info != nil {
		if err := r.SetBodyParam(o.Info); err != nil {
			return err
		}
	}

	// path param svm.uuid
	if err := r.SetPathParam("svm.uuid", o.SVMUUIDPathParameter); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
