// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// CifsDomainPreferredDcGetReader is a Reader for the CifsDomainPreferredDcGet structure.
type CifsDomainPreferredDcGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CifsDomainPreferredDcGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCifsDomainPreferredDcGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCifsDomainPreferredDcGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCifsDomainPreferredDcGetOK creates a CifsDomainPreferredDcGetOK with default headers values
func NewCifsDomainPreferredDcGetOK() *CifsDomainPreferredDcGetOK {
	return &CifsDomainPreferredDcGetOK{}
}

/* CifsDomainPreferredDcGetOK describes a response with status code 200, with default header values.

OK
*/
type CifsDomainPreferredDcGetOK struct {
	Payload *models.CifsDomainPreferredDc
}

func (o *CifsDomainPreferredDcGetOK) Error() string {
	return fmt.Sprintf("[GET /protocols/cifs/domains/{svm.uuid}/preferred-domain-controllers/{fqdn}/{server_ip}][%d] cifsDomainPreferredDcGetOK  %+v", 200, o.Payload)
}
func (o *CifsDomainPreferredDcGetOK) GetPayload() *models.CifsDomainPreferredDc {
	return o.Payload
}

func (o *CifsDomainPreferredDcGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CifsDomainPreferredDc)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCifsDomainPreferredDcGetDefault creates a CifsDomainPreferredDcGetDefault with default headers values
func NewCifsDomainPreferredDcGetDefault(code int) *CifsDomainPreferredDcGetDefault {
	return &CifsDomainPreferredDcGetDefault{
		_statusCode: code,
	}
}

/* CifsDomainPreferredDcGetDefault describes a response with status code -1, with default header values.

Error
*/
type CifsDomainPreferredDcGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the cifs domain preferred dc get default response
func (o *CifsDomainPreferredDcGetDefault) Code() int {
	return o._statusCode
}

func (o *CifsDomainPreferredDcGetDefault) Error() string {
	return fmt.Sprintf("[GET /protocols/cifs/domains/{svm.uuid}/preferred-domain-controllers/{fqdn}/{server_ip}][%d] cifs_domain_preferred_dc_get default  %+v", o._statusCode, o.Payload)
}
func (o *CifsDomainPreferredDcGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CifsDomainPreferredDcGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
