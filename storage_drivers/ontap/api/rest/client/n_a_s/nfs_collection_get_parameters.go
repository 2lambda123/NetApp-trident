// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewNfsCollectionGetParams creates a new NfsCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewNfsCollectionGetParams() *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewNfsCollectionGetParamsWithTimeout creates a new NfsCollectionGetParams object
// with the ability to set a timeout on a request.
func NewNfsCollectionGetParamsWithTimeout(timeout time.Duration) *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		timeout: timeout,
	}
}

// NewNfsCollectionGetParamsWithContext creates a new NfsCollectionGetParams object
// with the ability to set a context for a request.
func NewNfsCollectionGetParamsWithContext(ctx context.Context) *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		Context: ctx,
	}
}

// NewNfsCollectionGetParamsWithHTTPClient creates a new NfsCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewNfsCollectionGetParamsWithHTTPClient(client *http.Client) *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		HTTPClient: client,
	}
}

/* NfsCollectionGetParams contains all the parameters to send to the API endpoint
   for the nfs collection get operation.

   Typically these are written to a http.Request.
*/
type NfsCollectionGetParams struct {

	/* Enabled.

	   Filter by enabled
	*/
	EnabledQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	Fields []string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecords *int64

	/* MetricV3Duration.

	   Filter by metric.v3.duration
	*/
	MetricV3DurationQueryParameter *string

	/* MetricV3IopsOther.

	   Filter by metric.v3.iops.other
	*/
	MetricV3IopsOtherQueryParameter *int64

	/* MetricV3IopsRead.

	   Filter by metric.v3.iops.read
	*/
	MetricV3IopsReadQueryParameter *int64

	/* MetricV3IopsTotal.

	   Filter by metric.v3.iops.total
	*/
	MetricV3IopsTotalQueryParameter *int64

	/* MetricV3IopsWrite.

	   Filter by metric.v3.iops.write
	*/
	MetricV3IopsWriteQueryParameter *int64

	/* MetricV3LatencyOther.

	   Filter by metric.v3.latency.other
	*/
	MetricV3LatencyOtherQueryParameter *int64

	/* MetricV3LatencyRead.

	   Filter by metric.v3.latency.read
	*/
	MetricV3LatencyReadQueryParameter *int64

	/* MetricV3LatencyTotal.

	   Filter by metric.v3.latency.total
	*/
	MetricV3LatencyTotalQueryParameter *int64

	/* MetricV3LatencyWrite.

	   Filter by metric.v3.latency.write
	*/
	MetricV3LatencyWriteQueryParameter *int64

	/* MetricV3Status.

	   Filter by metric.v3.status
	*/
	MetricV3StatusQueryParameter *string

	/* MetricV3ThroughputRead.

	   Filter by metric.v3.throughput.read
	*/
	MetricV3ThroughputReadQueryParameter *int64

	/* MetricV3ThroughputTotal.

	   Filter by metric.v3.throughput.total
	*/
	MetricV3ThroughputTotalQueryParameter *int64

	/* MetricV3ThroughputWrite.

	   Filter by metric.v3.throughput.write
	*/
	MetricV3ThroughputWriteQueryParameter *int64

	/* MetricV3Timestamp.

	   Filter by metric.v3.timestamp
	*/
	MetricV3TimestampQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderBy []string

	/* ProtocolV3Enabled.

	   Filter by protocol.v3_enabled
	*/
	ProtocolV3EnabledQueryParameter *bool

	/* ProtocolV40Enabled.

	   Filter by protocol.v40_enabled
	*/
	ProtocolV40EnabledQueryParameter *bool

	/* ProtocolV40FeaturesACLEnabled.

	   Filter by protocol.v40_features.acl_enabled
	*/
	ProtocolV40FeaturesACLEnabledQueryParameter *bool

	/* ProtocolV40FeaturesReadDelegationEnabled.

	   Filter by protocol.v40_features.read_delegation_enabled
	*/
	ProtocolV40FeaturesReadDelegationEnabledQueryParameter *bool

	/* ProtocolV40FeaturesWriteDelegationEnabled.

	   Filter by protocol.v40_features.write_delegation_enabled
	*/
	ProtocolV40FeaturesWriteDelegationEnabledQueryParameter *bool

	/* ProtocolV41Enabled.

	   Filter by protocol.v41_enabled
	*/
	ProtocolV41EnabledQueryParameter *bool

	/* ProtocolV41FeaturesACLEnabled.

	   Filter by protocol.v41_features.acl_enabled
	*/
	ProtocolV41FeaturesACLEnabledQueryParameter *bool

	/* ProtocolV41FeaturesPnfsEnabled.

	   Filter by protocol.v41_features.pnfs_enabled
	*/
	ProtocolV41FeaturesPnfsEnabledQueryParameter *bool

	/* ProtocolV41FeaturesReadDelegationEnabled.

	   Filter by protocol.v41_features.read_delegation_enabled
	*/
	ProtocolV41FeaturesReadDelegationEnabledQueryParameter *bool

	/* ProtocolV41FeaturesWriteDelegationEnabled.

	   Filter by protocol.v41_features.write_delegation_enabled
	*/
	ProtocolV41FeaturesWriteDelegationEnabledQueryParameter *bool

	/* ProtocolV4IDDomain.

	   Filter by protocol.v4_id_domain
	*/
	ProtocolV4IDDomainQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecords *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeout *int64

	/* State.

	   Filter by state
	*/
	StateQueryParameter *string

	/* StatisticsV3IopsRawOther.

	   Filter by statistics.v3.iops_raw.other
	*/
	StatisticsV3IopsRawOtherQueryParameter *int64

	/* StatisticsV3IopsRawRead.

	   Filter by statistics.v3.iops_raw.read
	*/
	StatisticsV3IopsRawReadQueryParameter *int64

	/* StatisticsV3IopsRawTotal.

	   Filter by statistics.v3.iops_raw.total
	*/
	StatisticsV3IopsRawTotalQueryParameter *int64

	/* StatisticsV3IopsRawWrite.

	   Filter by statistics.v3.iops_raw.write
	*/
	StatisticsV3IopsRawWriteQueryParameter *int64

	/* StatisticsV3LatencyRawOther.

	   Filter by statistics.v3.latency_raw.other
	*/
	StatisticsV3LatencyRawOtherQueryParameter *int64

	/* StatisticsV3LatencyRawRead.

	   Filter by statistics.v3.latency_raw.read
	*/
	StatisticsV3LatencyRawReadQueryParameter *int64

	/* StatisticsV3LatencyRawTotal.

	   Filter by statistics.v3.latency_raw.total
	*/
	StatisticsV3LatencyRawTotalQueryParameter *int64

	/* StatisticsV3LatencyRawWrite.

	   Filter by statistics.v3.latency_raw.write
	*/
	StatisticsV3LatencyRawWriteQueryParameter *int64

	/* StatisticsV3Status.

	   Filter by statistics.v3.status
	*/
	StatisticsV3StatusQueryParameter *string

	/* StatisticsV3ThroughputRawRead.

	   Filter by statistics.v3.throughput_raw.read
	*/
	StatisticsV3ThroughputRawReadQueryParameter *int64

	/* StatisticsV3ThroughputRawTotal.

	   Filter by statistics.v3.throughput_raw.total
	*/
	StatisticsV3ThroughputRawTotalQueryParameter *int64

	/* StatisticsV3ThroughputRawWrite.

	   Filter by statistics.v3.throughput_raw.write
	*/
	StatisticsV3ThroughputRawWriteQueryParameter *int64

	/* StatisticsV3Timestamp.

	   Filter by statistics.v3.timestamp
	*/
	StatisticsV3TimestampQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* TransportTCPEnabled.

	   Filter by transport.tcp_enabled
	*/
	TransportTCPEnabledQueryParameter *bool

	/* TransportUDPEnabled.

	   Filter by transport.udp_enabled
	*/
	TransportUDPEnabledQueryParameter *bool

	/* VstorageEnabled.

	   Filter by vstorage_enabled
	*/
	VstorageEnabledQueryParameter *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the nfs collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NfsCollectionGetParams) WithDefaults() *NfsCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the nfs collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NfsCollectionGetParams) SetDefaults() {
	var (
		returnRecordsDefault = bool(true)

		returnTimeoutDefault = int64(15)
	)

	val := NfsCollectionGetParams{
		ReturnRecords: &returnRecordsDefault,
		ReturnTimeout: &returnTimeoutDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the nfs collection get params
func (o *NfsCollectionGetParams) WithTimeout(timeout time.Duration) *NfsCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the nfs collection get params
func (o *NfsCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the nfs collection get params
func (o *NfsCollectionGetParams) WithContext(ctx context.Context) *NfsCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the nfs collection get params
func (o *NfsCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the nfs collection get params
func (o *NfsCollectionGetParams) WithHTTPClient(client *http.Client) *NfsCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the nfs collection get params
func (o *NfsCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnabledQueryParameter adds the enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithEnabledQueryParameter(enabled *bool) *NfsCollectionGetParams {
	o.SetEnabledQueryParameter(enabled)
	return o
}

// SetEnabledQueryParameter adds the enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetEnabledQueryParameter(enabled *bool) {
	o.EnabledQueryParameter = enabled
}

// WithFields adds the fields to the nfs collection get params
func (o *NfsCollectionGetParams) WithFields(fields []string) *NfsCollectionGetParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the nfs collection get params
func (o *NfsCollectionGetParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithMaxRecords adds the maxRecords to the nfs collection get params
func (o *NfsCollectionGetParams) WithMaxRecords(maxRecords *int64) *NfsCollectionGetParams {
	o.SetMaxRecords(maxRecords)
	return o
}

// SetMaxRecords adds the maxRecords to the nfs collection get params
func (o *NfsCollectionGetParams) SetMaxRecords(maxRecords *int64) {
	o.MaxRecords = maxRecords
}

// WithMetricV3DurationQueryParameter adds the metricV3Duration to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3DurationQueryParameter(metricV3Duration *string) *NfsCollectionGetParams {
	o.SetMetricV3DurationQueryParameter(metricV3Duration)
	return o
}

// SetMetricV3DurationQueryParameter adds the metricV3Duration to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3DurationQueryParameter(metricV3Duration *string) {
	o.MetricV3DurationQueryParameter = metricV3Duration
}

// WithMetricV3IopsOtherQueryParameter adds the metricV3IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsOtherQueryParameter(metricV3IopsOther *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsOtherQueryParameter(metricV3IopsOther)
	return o
}

// SetMetricV3IopsOtherQueryParameter adds the metricV3IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsOtherQueryParameter(metricV3IopsOther *int64) {
	o.MetricV3IopsOtherQueryParameter = metricV3IopsOther
}

// WithMetricV3IopsReadQueryParameter adds the metricV3IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsReadQueryParameter(metricV3IopsRead *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsReadQueryParameter(metricV3IopsRead)
	return o
}

// SetMetricV3IopsReadQueryParameter adds the metricV3IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsReadQueryParameter(metricV3IopsRead *int64) {
	o.MetricV3IopsReadQueryParameter = metricV3IopsRead
}

// WithMetricV3IopsTotalQueryParameter adds the metricV3IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsTotalQueryParameter(metricV3IopsTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsTotalQueryParameter(metricV3IopsTotal)
	return o
}

// SetMetricV3IopsTotalQueryParameter adds the metricV3IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsTotalQueryParameter(metricV3IopsTotal *int64) {
	o.MetricV3IopsTotalQueryParameter = metricV3IopsTotal
}

// WithMetricV3IopsWriteQueryParameter adds the metricV3IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsWriteQueryParameter(metricV3IopsWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsWriteQueryParameter(metricV3IopsWrite)
	return o
}

// SetMetricV3IopsWriteQueryParameter adds the metricV3IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsWriteQueryParameter(metricV3IopsWrite *int64) {
	o.MetricV3IopsWriteQueryParameter = metricV3IopsWrite
}

// WithMetricV3LatencyOtherQueryParameter adds the metricV3LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyOtherQueryParameter(metricV3LatencyOther *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyOtherQueryParameter(metricV3LatencyOther)
	return o
}

// SetMetricV3LatencyOtherQueryParameter adds the metricV3LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyOtherQueryParameter(metricV3LatencyOther *int64) {
	o.MetricV3LatencyOtherQueryParameter = metricV3LatencyOther
}

// WithMetricV3LatencyReadQueryParameter adds the metricV3LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyReadQueryParameter(metricV3LatencyRead *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyReadQueryParameter(metricV3LatencyRead)
	return o
}

// SetMetricV3LatencyReadQueryParameter adds the metricV3LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyReadQueryParameter(metricV3LatencyRead *int64) {
	o.MetricV3LatencyReadQueryParameter = metricV3LatencyRead
}

// WithMetricV3LatencyTotalQueryParameter adds the metricV3LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyTotalQueryParameter(metricV3LatencyTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyTotalQueryParameter(metricV3LatencyTotal)
	return o
}

// SetMetricV3LatencyTotalQueryParameter adds the metricV3LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyTotalQueryParameter(metricV3LatencyTotal *int64) {
	o.MetricV3LatencyTotalQueryParameter = metricV3LatencyTotal
}

// WithMetricV3LatencyWriteQueryParameter adds the metricV3LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyWriteQueryParameter(metricV3LatencyWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyWriteQueryParameter(metricV3LatencyWrite)
	return o
}

// SetMetricV3LatencyWriteQueryParameter adds the metricV3LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyWriteQueryParameter(metricV3LatencyWrite *int64) {
	o.MetricV3LatencyWriteQueryParameter = metricV3LatencyWrite
}

// WithMetricV3StatusQueryParameter adds the metricV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3StatusQueryParameter(metricV3Status *string) *NfsCollectionGetParams {
	o.SetMetricV3StatusQueryParameter(metricV3Status)
	return o
}

// SetMetricV3StatusQueryParameter adds the metricV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3StatusQueryParameter(metricV3Status *string) {
	o.MetricV3StatusQueryParameter = metricV3Status
}

// WithMetricV3ThroughputReadQueryParameter adds the metricV3ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3ThroughputReadQueryParameter(metricV3ThroughputRead *int64) *NfsCollectionGetParams {
	o.SetMetricV3ThroughputReadQueryParameter(metricV3ThroughputRead)
	return o
}

// SetMetricV3ThroughputReadQueryParameter adds the metricV3ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3ThroughputReadQueryParameter(metricV3ThroughputRead *int64) {
	o.MetricV3ThroughputReadQueryParameter = metricV3ThroughputRead
}

// WithMetricV3ThroughputTotalQueryParameter adds the metricV3ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3ThroughputTotalQueryParameter(metricV3ThroughputTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV3ThroughputTotalQueryParameter(metricV3ThroughputTotal)
	return o
}

// SetMetricV3ThroughputTotalQueryParameter adds the metricV3ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3ThroughputTotalQueryParameter(metricV3ThroughputTotal *int64) {
	o.MetricV3ThroughputTotalQueryParameter = metricV3ThroughputTotal
}

// WithMetricV3ThroughputWriteQueryParameter adds the metricV3ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3ThroughputWriteQueryParameter(metricV3ThroughputWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV3ThroughputWriteQueryParameter(metricV3ThroughputWrite)
	return o
}

// SetMetricV3ThroughputWriteQueryParameter adds the metricV3ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3ThroughputWriteQueryParameter(metricV3ThroughputWrite *int64) {
	o.MetricV3ThroughputWriteQueryParameter = metricV3ThroughputWrite
}

// WithMetricV3TimestampQueryParameter adds the metricV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3TimestampQueryParameter(metricV3Timestamp *string) *NfsCollectionGetParams {
	o.SetMetricV3TimestampQueryParameter(metricV3Timestamp)
	return o
}

// SetMetricV3TimestampQueryParameter adds the metricV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3TimestampQueryParameter(metricV3Timestamp *string) {
	o.MetricV3TimestampQueryParameter = metricV3Timestamp
}

// WithOrderBy adds the orderBy to the nfs collection get params
func (o *NfsCollectionGetParams) WithOrderBy(orderBy []string) *NfsCollectionGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the nfs collection get params
func (o *NfsCollectionGetParams) SetOrderBy(orderBy []string) {
	o.OrderBy = orderBy
}

// WithProtocolV3EnabledQueryParameter adds the protocolV3Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3EnabledQueryParameter(protocolV3Enabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV3EnabledQueryParameter(protocolV3Enabled)
	return o
}

// SetProtocolV3EnabledQueryParameter adds the protocolV3Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3EnabledQueryParameter(protocolV3Enabled *bool) {
	o.ProtocolV3EnabledQueryParameter = protocolV3Enabled
}

// WithProtocolV40EnabledQueryParameter adds the protocolV40Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40EnabledQueryParameter(protocolV40Enabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40EnabledQueryParameter(protocolV40Enabled)
	return o
}

// SetProtocolV40EnabledQueryParameter adds the protocolV40Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40EnabledQueryParameter(protocolV40Enabled *bool) {
	o.ProtocolV40EnabledQueryParameter = protocolV40Enabled
}

// WithProtocolV40FeaturesACLEnabledQueryParameter adds the protocolV40FeaturesACLEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesACLEnabledQueryParameter(protocolV40FeaturesACLEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesACLEnabledQueryParameter(protocolV40FeaturesACLEnabled)
	return o
}

// SetProtocolV40FeaturesACLEnabledQueryParameter adds the protocolV40FeaturesAclEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesACLEnabledQueryParameter(protocolV40FeaturesACLEnabled *bool) {
	o.ProtocolV40FeaturesACLEnabledQueryParameter = protocolV40FeaturesACLEnabled
}

// WithProtocolV40FeaturesReadDelegationEnabledQueryParameter adds the protocolV40FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesReadDelegationEnabledQueryParameter(protocolV40FeaturesReadDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesReadDelegationEnabledQueryParameter(protocolV40FeaturesReadDelegationEnabled)
	return o
}

// SetProtocolV40FeaturesReadDelegationEnabledQueryParameter adds the protocolV40FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesReadDelegationEnabledQueryParameter(protocolV40FeaturesReadDelegationEnabled *bool) {
	o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter = protocolV40FeaturesReadDelegationEnabled
}

// WithProtocolV40FeaturesWriteDelegationEnabledQueryParameter adds the protocolV40FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesWriteDelegationEnabledQueryParameter(protocolV40FeaturesWriteDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesWriteDelegationEnabledQueryParameter(protocolV40FeaturesWriteDelegationEnabled)
	return o
}

// SetProtocolV40FeaturesWriteDelegationEnabledQueryParameter adds the protocolV40FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesWriteDelegationEnabledQueryParameter(protocolV40FeaturesWriteDelegationEnabled *bool) {
	o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter = protocolV40FeaturesWriteDelegationEnabled
}

// WithProtocolV41EnabledQueryParameter adds the protocolV41Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41EnabledQueryParameter(protocolV41Enabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41EnabledQueryParameter(protocolV41Enabled)
	return o
}

// SetProtocolV41EnabledQueryParameter adds the protocolV41Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41EnabledQueryParameter(protocolV41Enabled *bool) {
	o.ProtocolV41EnabledQueryParameter = protocolV41Enabled
}

// WithProtocolV41FeaturesACLEnabledQueryParameter adds the protocolV41FeaturesACLEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesACLEnabledQueryParameter(protocolV41FeaturesACLEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesACLEnabledQueryParameter(protocolV41FeaturesACLEnabled)
	return o
}

// SetProtocolV41FeaturesACLEnabledQueryParameter adds the protocolV41FeaturesAclEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesACLEnabledQueryParameter(protocolV41FeaturesACLEnabled *bool) {
	o.ProtocolV41FeaturesACLEnabledQueryParameter = protocolV41FeaturesACLEnabled
}

// WithProtocolV41FeaturesPnfsEnabledQueryParameter adds the protocolV41FeaturesPnfsEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesPnfsEnabledQueryParameter(protocolV41FeaturesPnfsEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesPnfsEnabledQueryParameter(protocolV41FeaturesPnfsEnabled)
	return o
}

// SetProtocolV41FeaturesPnfsEnabledQueryParameter adds the protocolV41FeaturesPnfsEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesPnfsEnabledQueryParameter(protocolV41FeaturesPnfsEnabled *bool) {
	o.ProtocolV41FeaturesPnfsEnabledQueryParameter = protocolV41FeaturesPnfsEnabled
}

// WithProtocolV41FeaturesReadDelegationEnabledQueryParameter adds the protocolV41FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesReadDelegationEnabledQueryParameter(protocolV41FeaturesReadDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesReadDelegationEnabledQueryParameter(protocolV41FeaturesReadDelegationEnabled)
	return o
}

// SetProtocolV41FeaturesReadDelegationEnabledQueryParameter adds the protocolV41FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesReadDelegationEnabledQueryParameter(protocolV41FeaturesReadDelegationEnabled *bool) {
	o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter = protocolV41FeaturesReadDelegationEnabled
}

// WithProtocolV41FeaturesWriteDelegationEnabledQueryParameter adds the protocolV41FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesWriteDelegationEnabledQueryParameter(protocolV41FeaturesWriteDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesWriteDelegationEnabledQueryParameter(protocolV41FeaturesWriteDelegationEnabled)
	return o
}

// SetProtocolV41FeaturesWriteDelegationEnabledQueryParameter adds the protocolV41FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesWriteDelegationEnabledQueryParameter(protocolV41FeaturesWriteDelegationEnabled *bool) {
	o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter = protocolV41FeaturesWriteDelegationEnabled
}

// WithProtocolV4IDDomainQueryParameter adds the protocolV4IDDomain to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV4IDDomainQueryParameter(protocolV4IDDomain *string) *NfsCollectionGetParams {
	o.SetProtocolV4IDDomainQueryParameter(protocolV4IDDomain)
	return o
}

// SetProtocolV4IDDomainQueryParameter adds the protocolV4IdDomain to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV4IDDomainQueryParameter(protocolV4IDDomain *string) {
	o.ProtocolV4IDDomainQueryParameter = protocolV4IDDomain
}

// WithReturnRecords adds the returnRecords to the nfs collection get params
func (o *NfsCollectionGetParams) WithReturnRecords(returnRecords *bool) *NfsCollectionGetParams {
	o.SetReturnRecords(returnRecords)
	return o
}

// SetReturnRecords adds the returnRecords to the nfs collection get params
func (o *NfsCollectionGetParams) SetReturnRecords(returnRecords *bool) {
	o.ReturnRecords = returnRecords
}

// WithReturnTimeout adds the returnTimeout to the nfs collection get params
func (o *NfsCollectionGetParams) WithReturnTimeout(returnTimeout *int64) *NfsCollectionGetParams {
	o.SetReturnTimeout(returnTimeout)
	return o
}

// SetReturnTimeout adds the returnTimeout to the nfs collection get params
func (o *NfsCollectionGetParams) SetReturnTimeout(returnTimeout *int64) {
	o.ReturnTimeout = returnTimeout
}

// WithStateQueryParameter adds the state to the nfs collection get params
func (o *NfsCollectionGetParams) WithStateQueryParameter(state *string) *NfsCollectionGetParams {
	o.SetStateQueryParameter(state)
	return o
}

// SetStateQueryParameter adds the state to the nfs collection get params
func (o *NfsCollectionGetParams) SetStateQueryParameter(state *string) {
	o.StateQueryParameter = state
}

// WithStatisticsV3IopsRawOtherQueryParameter adds the statisticsV3IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawOtherQueryParameter(statisticsV3IopsRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawOtherQueryParameter(statisticsV3IopsRawOther)
	return o
}

// SetStatisticsV3IopsRawOtherQueryParameter adds the statisticsV3IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawOtherQueryParameter(statisticsV3IopsRawOther *int64) {
	o.StatisticsV3IopsRawOtherQueryParameter = statisticsV3IopsRawOther
}

// WithStatisticsV3IopsRawReadQueryParameter adds the statisticsV3IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawReadQueryParameter(statisticsV3IopsRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawReadQueryParameter(statisticsV3IopsRawRead)
	return o
}

// SetStatisticsV3IopsRawReadQueryParameter adds the statisticsV3IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawReadQueryParameter(statisticsV3IopsRawRead *int64) {
	o.StatisticsV3IopsRawReadQueryParameter = statisticsV3IopsRawRead
}

// WithStatisticsV3IopsRawTotalQueryParameter adds the statisticsV3IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawTotalQueryParameter(statisticsV3IopsRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawTotalQueryParameter(statisticsV3IopsRawTotal)
	return o
}

// SetStatisticsV3IopsRawTotalQueryParameter adds the statisticsV3IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawTotalQueryParameter(statisticsV3IopsRawTotal *int64) {
	o.StatisticsV3IopsRawTotalQueryParameter = statisticsV3IopsRawTotal
}

// WithStatisticsV3IopsRawWriteQueryParameter adds the statisticsV3IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawWriteQueryParameter(statisticsV3IopsRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawWriteQueryParameter(statisticsV3IopsRawWrite)
	return o
}

// SetStatisticsV3IopsRawWriteQueryParameter adds the statisticsV3IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawWriteQueryParameter(statisticsV3IopsRawWrite *int64) {
	o.StatisticsV3IopsRawWriteQueryParameter = statisticsV3IopsRawWrite
}

// WithStatisticsV3LatencyRawOtherQueryParameter adds the statisticsV3LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawOtherQueryParameter(statisticsV3LatencyRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawOtherQueryParameter(statisticsV3LatencyRawOther)
	return o
}

// SetStatisticsV3LatencyRawOtherQueryParameter adds the statisticsV3LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawOtherQueryParameter(statisticsV3LatencyRawOther *int64) {
	o.StatisticsV3LatencyRawOtherQueryParameter = statisticsV3LatencyRawOther
}

// WithStatisticsV3LatencyRawReadQueryParameter adds the statisticsV3LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawReadQueryParameter(statisticsV3LatencyRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawReadQueryParameter(statisticsV3LatencyRawRead)
	return o
}

// SetStatisticsV3LatencyRawReadQueryParameter adds the statisticsV3LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawReadQueryParameter(statisticsV3LatencyRawRead *int64) {
	o.StatisticsV3LatencyRawReadQueryParameter = statisticsV3LatencyRawRead
}

// WithStatisticsV3LatencyRawTotalQueryParameter adds the statisticsV3LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawTotalQueryParameter(statisticsV3LatencyRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawTotalQueryParameter(statisticsV3LatencyRawTotal)
	return o
}

// SetStatisticsV3LatencyRawTotalQueryParameter adds the statisticsV3LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawTotalQueryParameter(statisticsV3LatencyRawTotal *int64) {
	o.StatisticsV3LatencyRawTotalQueryParameter = statisticsV3LatencyRawTotal
}

// WithStatisticsV3LatencyRawWriteQueryParameter adds the statisticsV3LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawWriteQueryParameter(statisticsV3LatencyRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawWriteQueryParameter(statisticsV3LatencyRawWrite)
	return o
}

// SetStatisticsV3LatencyRawWriteQueryParameter adds the statisticsV3LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawWriteQueryParameter(statisticsV3LatencyRawWrite *int64) {
	o.StatisticsV3LatencyRawWriteQueryParameter = statisticsV3LatencyRawWrite
}

// WithStatisticsV3StatusQueryParameter adds the statisticsV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3StatusQueryParameter(statisticsV3Status *string) *NfsCollectionGetParams {
	o.SetStatisticsV3StatusQueryParameter(statisticsV3Status)
	return o
}

// SetStatisticsV3StatusQueryParameter adds the statisticsV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3StatusQueryParameter(statisticsV3Status *string) {
	o.StatisticsV3StatusQueryParameter = statisticsV3Status
}

// WithStatisticsV3ThroughputRawReadQueryParameter adds the statisticsV3ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3ThroughputRawReadQueryParameter(statisticsV3ThroughputRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3ThroughputRawReadQueryParameter(statisticsV3ThroughputRawRead)
	return o
}

// SetStatisticsV3ThroughputRawReadQueryParameter adds the statisticsV3ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3ThroughputRawReadQueryParameter(statisticsV3ThroughputRawRead *int64) {
	o.StatisticsV3ThroughputRawReadQueryParameter = statisticsV3ThroughputRawRead
}

// WithStatisticsV3ThroughputRawTotalQueryParameter adds the statisticsV3ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3ThroughputRawTotalQueryParameter(statisticsV3ThroughputRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3ThroughputRawTotalQueryParameter(statisticsV3ThroughputRawTotal)
	return o
}

// SetStatisticsV3ThroughputRawTotalQueryParameter adds the statisticsV3ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3ThroughputRawTotalQueryParameter(statisticsV3ThroughputRawTotal *int64) {
	o.StatisticsV3ThroughputRawTotalQueryParameter = statisticsV3ThroughputRawTotal
}

// WithStatisticsV3ThroughputRawWriteQueryParameter adds the statisticsV3ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3ThroughputRawWriteQueryParameter(statisticsV3ThroughputRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3ThroughputRawWriteQueryParameter(statisticsV3ThroughputRawWrite)
	return o
}

// SetStatisticsV3ThroughputRawWriteQueryParameter adds the statisticsV3ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3ThroughputRawWriteQueryParameter(statisticsV3ThroughputRawWrite *int64) {
	o.StatisticsV3ThroughputRawWriteQueryParameter = statisticsV3ThroughputRawWrite
}

// WithStatisticsV3TimestampQueryParameter adds the statisticsV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3TimestampQueryParameter(statisticsV3Timestamp *string) *NfsCollectionGetParams {
	o.SetStatisticsV3TimestampQueryParameter(statisticsV3Timestamp)
	return o
}

// SetStatisticsV3TimestampQueryParameter adds the statisticsV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3TimestampQueryParameter(statisticsV3Timestamp *string) {
	o.StatisticsV3TimestampQueryParameter = statisticsV3Timestamp
}

// WithSVMNameQueryParameter adds the svmName to the nfs collection get params
func (o *NfsCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *NfsCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the nfs collection get params
func (o *NfsCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the nfs collection get params
func (o *NfsCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *NfsCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the nfs collection get params
func (o *NfsCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithTransportTCPEnabledQueryParameter adds the transportTCPEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithTransportTCPEnabledQueryParameter(transportTCPEnabled *bool) *NfsCollectionGetParams {
	o.SetTransportTCPEnabledQueryParameter(transportTCPEnabled)
	return o
}

// SetTransportTCPEnabledQueryParameter adds the transportTcpEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetTransportTCPEnabledQueryParameter(transportTCPEnabled *bool) {
	o.TransportTCPEnabledQueryParameter = transportTCPEnabled
}

// WithTransportUDPEnabledQueryParameter adds the transportUDPEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithTransportUDPEnabledQueryParameter(transportUDPEnabled *bool) *NfsCollectionGetParams {
	o.SetTransportUDPEnabledQueryParameter(transportUDPEnabled)
	return o
}

// SetTransportUDPEnabledQueryParameter adds the transportUdpEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetTransportUDPEnabledQueryParameter(transportUDPEnabled *bool) {
	o.TransportUDPEnabledQueryParameter = transportUDPEnabled
}

// WithVstorageEnabledQueryParameter adds the vstorageEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithVstorageEnabledQueryParameter(vstorageEnabled *bool) *NfsCollectionGetParams {
	o.SetVstorageEnabledQueryParameter(vstorageEnabled)
	return o
}

// SetVstorageEnabledQueryParameter adds the vstorageEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetVstorageEnabledQueryParameter(vstorageEnabled *bool) {
	o.VstorageEnabledQueryParameter = vstorageEnabled
}

// WriteToRequest writes these params to a swagger request
func (o *NfsCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EnabledQueryParameter != nil {

		// query param enabled
		var qrEnabled bool

		if o.EnabledQueryParameter != nil {
			qrEnabled = *o.EnabledQueryParameter
		}
		qEnabled := swag.FormatBool(qrEnabled)
		if qEnabled != "" {

			if err := r.SetQueryParam("enabled", qEnabled); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.MaxRecords != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecords != nil {
			qrMaxRecords = *o.MaxRecords
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricV3DurationQueryParameter != nil {

		// query param metric.v3.duration
		var qrMetricV3Duration string

		if o.MetricV3DurationQueryParameter != nil {
			qrMetricV3Duration = *o.MetricV3DurationQueryParameter
		}
		qMetricV3Duration := qrMetricV3Duration
		if qMetricV3Duration != "" {

			if err := r.SetQueryParam("metric.v3.duration", qMetricV3Duration); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsOtherQueryParameter != nil {

		// query param metric.v3.iops.other
		var qrMetricV3IopsOther int64

		if o.MetricV3IopsOtherQueryParameter != nil {
			qrMetricV3IopsOther = *o.MetricV3IopsOtherQueryParameter
		}
		qMetricV3IopsOther := swag.FormatInt64(qrMetricV3IopsOther)
		if qMetricV3IopsOther != "" {

			if err := r.SetQueryParam("metric.v3.iops.other", qMetricV3IopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsReadQueryParameter != nil {

		// query param metric.v3.iops.read
		var qrMetricV3IopsRead int64

		if o.MetricV3IopsReadQueryParameter != nil {
			qrMetricV3IopsRead = *o.MetricV3IopsReadQueryParameter
		}
		qMetricV3IopsRead := swag.FormatInt64(qrMetricV3IopsRead)
		if qMetricV3IopsRead != "" {

			if err := r.SetQueryParam("metric.v3.iops.read", qMetricV3IopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsTotalQueryParameter != nil {

		// query param metric.v3.iops.total
		var qrMetricV3IopsTotal int64

		if o.MetricV3IopsTotalQueryParameter != nil {
			qrMetricV3IopsTotal = *o.MetricV3IopsTotalQueryParameter
		}
		qMetricV3IopsTotal := swag.FormatInt64(qrMetricV3IopsTotal)
		if qMetricV3IopsTotal != "" {

			if err := r.SetQueryParam("metric.v3.iops.total", qMetricV3IopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsWriteQueryParameter != nil {

		// query param metric.v3.iops.write
		var qrMetricV3IopsWrite int64

		if o.MetricV3IopsWriteQueryParameter != nil {
			qrMetricV3IopsWrite = *o.MetricV3IopsWriteQueryParameter
		}
		qMetricV3IopsWrite := swag.FormatInt64(qrMetricV3IopsWrite)
		if qMetricV3IopsWrite != "" {

			if err := r.SetQueryParam("metric.v3.iops.write", qMetricV3IopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyOtherQueryParameter != nil {

		// query param metric.v3.latency.other
		var qrMetricV3LatencyOther int64

		if o.MetricV3LatencyOtherQueryParameter != nil {
			qrMetricV3LatencyOther = *o.MetricV3LatencyOtherQueryParameter
		}
		qMetricV3LatencyOther := swag.FormatInt64(qrMetricV3LatencyOther)
		if qMetricV3LatencyOther != "" {

			if err := r.SetQueryParam("metric.v3.latency.other", qMetricV3LatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyReadQueryParameter != nil {

		// query param metric.v3.latency.read
		var qrMetricV3LatencyRead int64

		if o.MetricV3LatencyReadQueryParameter != nil {
			qrMetricV3LatencyRead = *o.MetricV3LatencyReadQueryParameter
		}
		qMetricV3LatencyRead := swag.FormatInt64(qrMetricV3LatencyRead)
		if qMetricV3LatencyRead != "" {

			if err := r.SetQueryParam("metric.v3.latency.read", qMetricV3LatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyTotalQueryParameter != nil {

		// query param metric.v3.latency.total
		var qrMetricV3LatencyTotal int64

		if o.MetricV3LatencyTotalQueryParameter != nil {
			qrMetricV3LatencyTotal = *o.MetricV3LatencyTotalQueryParameter
		}
		qMetricV3LatencyTotal := swag.FormatInt64(qrMetricV3LatencyTotal)
		if qMetricV3LatencyTotal != "" {

			if err := r.SetQueryParam("metric.v3.latency.total", qMetricV3LatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyWriteQueryParameter != nil {

		// query param metric.v3.latency.write
		var qrMetricV3LatencyWrite int64

		if o.MetricV3LatencyWriteQueryParameter != nil {
			qrMetricV3LatencyWrite = *o.MetricV3LatencyWriteQueryParameter
		}
		qMetricV3LatencyWrite := swag.FormatInt64(qrMetricV3LatencyWrite)
		if qMetricV3LatencyWrite != "" {

			if err := r.SetQueryParam("metric.v3.latency.write", qMetricV3LatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV3StatusQueryParameter != nil {

		// query param metric.v3.status
		var qrMetricV3Status string

		if o.MetricV3StatusQueryParameter != nil {
			qrMetricV3Status = *o.MetricV3StatusQueryParameter
		}
		qMetricV3Status := qrMetricV3Status
		if qMetricV3Status != "" {

			if err := r.SetQueryParam("metric.v3.status", qMetricV3Status); err != nil {
				return err
			}
		}
	}

	if o.MetricV3ThroughputReadQueryParameter != nil {

		// query param metric.v3.throughput.read
		var qrMetricV3ThroughputRead int64

		if o.MetricV3ThroughputReadQueryParameter != nil {
			qrMetricV3ThroughputRead = *o.MetricV3ThroughputReadQueryParameter
		}
		qMetricV3ThroughputRead := swag.FormatInt64(qrMetricV3ThroughputRead)
		if qMetricV3ThroughputRead != "" {

			if err := r.SetQueryParam("metric.v3.throughput.read", qMetricV3ThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV3ThroughputTotalQueryParameter != nil {

		// query param metric.v3.throughput.total
		var qrMetricV3ThroughputTotal int64

		if o.MetricV3ThroughputTotalQueryParameter != nil {
			qrMetricV3ThroughputTotal = *o.MetricV3ThroughputTotalQueryParameter
		}
		qMetricV3ThroughputTotal := swag.FormatInt64(qrMetricV3ThroughputTotal)
		if qMetricV3ThroughputTotal != "" {

			if err := r.SetQueryParam("metric.v3.throughput.total", qMetricV3ThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV3ThroughputWriteQueryParameter != nil {

		// query param metric.v3.throughput.write
		var qrMetricV3ThroughputWrite int64

		if o.MetricV3ThroughputWriteQueryParameter != nil {
			qrMetricV3ThroughputWrite = *o.MetricV3ThroughputWriteQueryParameter
		}
		qMetricV3ThroughputWrite := swag.FormatInt64(qrMetricV3ThroughputWrite)
		if qMetricV3ThroughputWrite != "" {

			if err := r.SetQueryParam("metric.v3.throughput.write", qMetricV3ThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV3TimestampQueryParameter != nil {

		// query param metric.v3.timestamp
		var qrMetricV3Timestamp string

		if o.MetricV3TimestampQueryParameter != nil {
			qrMetricV3Timestamp = *o.MetricV3TimestampQueryParameter
		}
		qMetricV3Timestamp := qrMetricV3Timestamp
		if qMetricV3Timestamp != "" {

			if err := r.SetQueryParam("metric.v3.timestamp", qMetricV3Timestamp); err != nil {
				return err
			}
		}
	}

	if o.OrderBy != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ProtocolV3EnabledQueryParameter != nil {

		// query param protocol.v3_enabled
		var qrProtocolV3Enabled bool

		if o.ProtocolV3EnabledQueryParameter != nil {
			qrProtocolV3Enabled = *o.ProtocolV3EnabledQueryParameter
		}
		qProtocolV3Enabled := swag.FormatBool(qrProtocolV3Enabled)
		if qProtocolV3Enabled != "" {

			if err := r.SetQueryParam("protocol.v3_enabled", qProtocolV3Enabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40EnabledQueryParameter != nil {

		// query param protocol.v40_enabled
		var qrProtocolV40Enabled bool

		if o.ProtocolV40EnabledQueryParameter != nil {
			qrProtocolV40Enabled = *o.ProtocolV40EnabledQueryParameter
		}
		qProtocolV40Enabled := swag.FormatBool(qrProtocolV40Enabled)
		if qProtocolV40Enabled != "" {

			if err := r.SetQueryParam("protocol.v40_enabled", qProtocolV40Enabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesACLEnabledQueryParameter != nil {

		// query param protocol.v40_features.acl_enabled
		var qrProtocolV40FeaturesACLEnabled bool

		if o.ProtocolV40FeaturesACLEnabledQueryParameter != nil {
			qrProtocolV40FeaturesACLEnabled = *o.ProtocolV40FeaturesACLEnabledQueryParameter
		}
		qProtocolV40FeaturesACLEnabled := swag.FormatBool(qrProtocolV40FeaturesACLEnabled)
		if qProtocolV40FeaturesACLEnabled != "" {

			if err := r.SetQueryParam("protocol.v40_features.acl_enabled", qProtocolV40FeaturesACLEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter != nil {

		// query param protocol.v40_features.read_delegation_enabled
		var qrProtocolV40FeaturesReadDelegationEnabled bool

		if o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter != nil {
			qrProtocolV40FeaturesReadDelegationEnabled = *o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter
		}
		qProtocolV40FeaturesReadDelegationEnabled := swag.FormatBool(qrProtocolV40FeaturesReadDelegationEnabled)
		if qProtocolV40FeaturesReadDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v40_features.read_delegation_enabled", qProtocolV40FeaturesReadDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter != nil {

		// query param protocol.v40_features.write_delegation_enabled
		var qrProtocolV40FeaturesWriteDelegationEnabled bool

		if o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter != nil {
			qrProtocolV40FeaturesWriteDelegationEnabled = *o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter
		}
		qProtocolV40FeaturesWriteDelegationEnabled := swag.FormatBool(qrProtocolV40FeaturesWriteDelegationEnabled)
		if qProtocolV40FeaturesWriteDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v40_features.write_delegation_enabled", qProtocolV40FeaturesWriteDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41EnabledQueryParameter != nil {

		// query param protocol.v41_enabled
		var qrProtocolV41Enabled bool

		if o.ProtocolV41EnabledQueryParameter != nil {
			qrProtocolV41Enabled = *o.ProtocolV41EnabledQueryParameter
		}
		qProtocolV41Enabled := swag.FormatBool(qrProtocolV41Enabled)
		if qProtocolV41Enabled != "" {

			if err := r.SetQueryParam("protocol.v41_enabled", qProtocolV41Enabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesACLEnabledQueryParameter != nil {

		// query param protocol.v41_features.acl_enabled
		var qrProtocolV41FeaturesACLEnabled bool

		if o.ProtocolV41FeaturesACLEnabledQueryParameter != nil {
			qrProtocolV41FeaturesACLEnabled = *o.ProtocolV41FeaturesACLEnabledQueryParameter
		}
		qProtocolV41FeaturesACLEnabled := swag.FormatBool(qrProtocolV41FeaturesACLEnabled)
		if qProtocolV41FeaturesACLEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.acl_enabled", qProtocolV41FeaturesACLEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesPnfsEnabledQueryParameter != nil {

		// query param protocol.v41_features.pnfs_enabled
		var qrProtocolV41FeaturesPnfsEnabled bool

		if o.ProtocolV41FeaturesPnfsEnabledQueryParameter != nil {
			qrProtocolV41FeaturesPnfsEnabled = *o.ProtocolV41FeaturesPnfsEnabledQueryParameter
		}
		qProtocolV41FeaturesPnfsEnabled := swag.FormatBool(qrProtocolV41FeaturesPnfsEnabled)
		if qProtocolV41FeaturesPnfsEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.pnfs_enabled", qProtocolV41FeaturesPnfsEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter != nil {

		// query param protocol.v41_features.read_delegation_enabled
		var qrProtocolV41FeaturesReadDelegationEnabled bool

		if o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter != nil {
			qrProtocolV41FeaturesReadDelegationEnabled = *o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter
		}
		qProtocolV41FeaturesReadDelegationEnabled := swag.FormatBool(qrProtocolV41FeaturesReadDelegationEnabled)
		if qProtocolV41FeaturesReadDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.read_delegation_enabled", qProtocolV41FeaturesReadDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter != nil {

		// query param protocol.v41_features.write_delegation_enabled
		var qrProtocolV41FeaturesWriteDelegationEnabled bool

		if o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter != nil {
			qrProtocolV41FeaturesWriteDelegationEnabled = *o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter
		}
		qProtocolV41FeaturesWriteDelegationEnabled := swag.FormatBool(qrProtocolV41FeaturesWriteDelegationEnabled)
		if qProtocolV41FeaturesWriteDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.write_delegation_enabled", qProtocolV41FeaturesWriteDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV4IDDomainQueryParameter != nil {

		// query param protocol.v4_id_domain
		var qrProtocolV4IDDomain string

		if o.ProtocolV4IDDomainQueryParameter != nil {
			qrProtocolV4IDDomain = *o.ProtocolV4IDDomainQueryParameter
		}
		qProtocolV4IDDomain := qrProtocolV4IDDomain
		if qProtocolV4IDDomain != "" {

			if err := r.SetQueryParam("protocol.v4_id_domain", qProtocolV4IDDomain); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecords != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecords != nil {
			qrReturnRecords = *o.ReturnRecords
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeout != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeout != nil {
			qrReturnTimeout = *o.ReturnTimeout
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.StateQueryParameter != nil {

		// query param state
		var qrState string

		if o.StateQueryParameter != nil {
			qrState = *o.StateQueryParameter
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawOtherQueryParameter != nil {

		// query param statistics.v3.iops_raw.other
		var qrStatisticsV3IopsRawOther int64

		if o.StatisticsV3IopsRawOtherQueryParameter != nil {
			qrStatisticsV3IopsRawOther = *o.StatisticsV3IopsRawOtherQueryParameter
		}
		qStatisticsV3IopsRawOther := swag.FormatInt64(qrStatisticsV3IopsRawOther)
		if qStatisticsV3IopsRawOther != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.other", qStatisticsV3IopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawReadQueryParameter != nil {

		// query param statistics.v3.iops_raw.read
		var qrStatisticsV3IopsRawRead int64

		if o.StatisticsV3IopsRawReadQueryParameter != nil {
			qrStatisticsV3IopsRawRead = *o.StatisticsV3IopsRawReadQueryParameter
		}
		qStatisticsV3IopsRawRead := swag.FormatInt64(qrStatisticsV3IopsRawRead)
		if qStatisticsV3IopsRawRead != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.read", qStatisticsV3IopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawTotalQueryParameter != nil {

		// query param statistics.v3.iops_raw.total
		var qrStatisticsV3IopsRawTotal int64

		if o.StatisticsV3IopsRawTotalQueryParameter != nil {
			qrStatisticsV3IopsRawTotal = *o.StatisticsV3IopsRawTotalQueryParameter
		}
		qStatisticsV3IopsRawTotal := swag.FormatInt64(qrStatisticsV3IopsRawTotal)
		if qStatisticsV3IopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.total", qStatisticsV3IopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawWriteQueryParameter != nil {

		// query param statistics.v3.iops_raw.write
		var qrStatisticsV3IopsRawWrite int64

		if o.StatisticsV3IopsRawWriteQueryParameter != nil {
			qrStatisticsV3IopsRawWrite = *o.StatisticsV3IopsRawWriteQueryParameter
		}
		qStatisticsV3IopsRawWrite := swag.FormatInt64(qrStatisticsV3IopsRawWrite)
		if qStatisticsV3IopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.write", qStatisticsV3IopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawOtherQueryParameter != nil {

		// query param statistics.v3.latency_raw.other
		var qrStatisticsV3LatencyRawOther int64

		if o.StatisticsV3LatencyRawOtherQueryParameter != nil {
			qrStatisticsV3LatencyRawOther = *o.StatisticsV3LatencyRawOtherQueryParameter
		}
		qStatisticsV3LatencyRawOther := swag.FormatInt64(qrStatisticsV3LatencyRawOther)
		if qStatisticsV3LatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.other", qStatisticsV3LatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawReadQueryParameter != nil {

		// query param statistics.v3.latency_raw.read
		var qrStatisticsV3LatencyRawRead int64

		if o.StatisticsV3LatencyRawReadQueryParameter != nil {
			qrStatisticsV3LatencyRawRead = *o.StatisticsV3LatencyRawReadQueryParameter
		}
		qStatisticsV3LatencyRawRead := swag.FormatInt64(qrStatisticsV3LatencyRawRead)
		if qStatisticsV3LatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.read", qStatisticsV3LatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawTotalQueryParameter != nil {

		// query param statistics.v3.latency_raw.total
		var qrStatisticsV3LatencyRawTotal int64

		if o.StatisticsV3LatencyRawTotalQueryParameter != nil {
			qrStatisticsV3LatencyRawTotal = *o.StatisticsV3LatencyRawTotalQueryParameter
		}
		qStatisticsV3LatencyRawTotal := swag.FormatInt64(qrStatisticsV3LatencyRawTotal)
		if qStatisticsV3LatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.total", qStatisticsV3LatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawWriteQueryParameter != nil {

		// query param statistics.v3.latency_raw.write
		var qrStatisticsV3LatencyRawWrite int64

		if o.StatisticsV3LatencyRawWriteQueryParameter != nil {
			qrStatisticsV3LatencyRawWrite = *o.StatisticsV3LatencyRawWriteQueryParameter
		}
		qStatisticsV3LatencyRawWrite := swag.FormatInt64(qrStatisticsV3LatencyRawWrite)
		if qStatisticsV3LatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.write", qStatisticsV3LatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3StatusQueryParameter != nil {

		// query param statistics.v3.status
		var qrStatisticsV3Status string

		if o.StatisticsV3StatusQueryParameter != nil {
			qrStatisticsV3Status = *o.StatisticsV3StatusQueryParameter
		}
		qStatisticsV3Status := qrStatisticsV3Status
		if qStatisticsV3Status != "" {

			if err := r.SetQueryParam("statistics.v3.status", qStatisticsV3Status); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3ThroughputRawReadQueryParameter != nil {

		// query param statistics.v3.throughput_raw.read
		var qrStatisticsV3ThroughputRawRead int64

		if o.StatisticsV3ThroughputRawReadQueryParameter != nil {
			qrStatisticsV3ThroughputRawRead = *o.StatisticsV3ThroughputRawReadQueryParameter
		}
		qStatisticsV3ThroughputRawRead := swag.FormatInt64(qrStatisticsV3ThroughputRawRead)
		if qStatisticsV3ThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.v3.throughput_raw.read", qStatisticsV3ThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3ThroughputRawTotalQueryParameter != nil {

		// query param statistics.v3.throughput_raw.total
		var qrStatisticsV3ThroughputRawTotal int64

		if o.StatisticsV3ThroughputRawTotalQueryParameter != nil {
			qrStatisticsV3ThroughputRawTotal = *o.StatisticsV3ThroughputRawTotalQueryParameter
		}
		qStatisticsV3ThroughputRawTotal := swag.FormatInt64(qrStatisticsV3ThroughputRawTotal)
		if qStatisticsV3ThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.v3.throughput_raw.total", qStatisticsV3ThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3ThroughputRawWriteQueryParameter != nil {

		// query param statistics.v3.throughput_raw.write
		var qrStatisticsV3ThroughputRawWrite int64

		if o.StatisticsV3ThroughputRawWriteQueryParameter != nil {
			qrStatisticsV3ThroughputRawWrite = *o.StatisticsV3ThroughputRawWriteQueryParameter
		}
		qStatisticsV3ThroughputRawWrite := swag.FormatInt64(qrStatisticsV3ThroughputRawWrite)
		if qStatisticsV3ThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.v3.throughput_raw.write", qStatisticsV3ThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3TimestampQueryParameter != nil {

		// query param statistics.v3.timestamp
		var qrStatisticsV3Timestamp string

		if o.StatisticsV3TimestampQueryParameter != nil {
			qrStatisticsV3Timestamp = *o.StatisticsV3TimestampQueryParameter
		}
		qStatisticsV3Timestamp := qrStatisticsV3Timestamp
		if qStatisticsV3Timestamp != "" {

			if err := r.SetQueryParam("statistics.v3.timestamp", qStatisticsV3Timestamp); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.TransportTCPEnabledQueryParameter != nil {

		// query param transport.tcp_enabled
		var qrTransportTCPEnabled bool

		if o.TransportTCPEnabledQueryParameter != nil {
			qrTransportTCPEnabled = *o.TransportTCPEnabledQueryParameter
		}
		qTransportTCPEnabled := swag.FormatBool(qrTransportTCPEnabled)
		if qTransportTCPEnabled != "" {

			if err := r.SetQueryParam("transport.tcp_enabled", qTransportTCPEnabled); err != nil {
				return err
			}
		}
	}

	if o.TransportUDPEnabledQueryParameter != nil {

		// query param transport.udp_enabled
		var qrTransportUDPEnabled bool

		if o.TransportUDPEnabledQueryParameter != nil {
			qrTransportUDPEnabled = *o.TransportUDPEnabledQueryParameter
		}
		qTransportUDPEnabled := swag.FormatBool(qrTransportUDPEnabled)
		if qTransportUDPEnabled != "" {

			if err := r.SetQueryParam("transport.udp_enabled", qTransportUDPEnabled); err != nil {
				return err
			}
		}
	}

	if o.VstorageEnabledQueryParameter != nil {

		// query param vstorage_enabled
		var qrVstorageEnabled bool

		if o.VstorageEnabledQueryParameter != nil {
			qrVstorageEnabled = *o.VstorageEnabledQueryParameter
		}
		qVstorageEnabled := swag.FormatBool(qrVstorageEnabled)
		if qVstorageEnabled != "" {

			if err := r.SetQueryParam("vstorage_enabled", qVstorageEnabled); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamNfsCollectionGet binds the parameter fields
func (o *NfsCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamNfsCollectionGet binds the parameter order_by
func (o *NfsCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderBy

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
