// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewNfsCollectionGetParams creates a new NfsCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewNfsCollectionGetParams() *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewNfsCollectionGetParamsWithTimeout creates a new NfsCollectionGetParams object
// with the ability to set a timeout on a request.
func NewNfsCollectionGetParamsWithTimeout(timeout time.Duration) *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		timeout: timeout,
	}
}

// NewNfsCollectionGetParamsWithContext creates a new NfsCollectionGetParams object
// with the ability to set a context for a request.
func NewNfsCollectionGetParamsWithContext(ctx context.Context) *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		Context: ctx,
	}
}

// NewNfsCollectionGetParamsWithHTTPClient creates a new NfsCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewNfsCollectionGetParamsWithHTTPClient(client *http.Client) *NfsCollectionGetParams {
	return &NfsCollectionGetParams{
		HTTPClient: client,
	}
}

/*
NfsCollectionGetParams contains all the parameters to send to the API endpoint

	for the nfs collection get operation.

	Typically these are written to a http.Request.
*/
type NfsCollectionGetParams struct {

	/* AccessCacheConfigHarvestTimeout.

	   Filter by access_cache_config.harvest_timeout
	*/
	AccessCacheConfigHarvestTimeoutQueryParameter *int64

	/* AccessCacheConfigIsDNSTTLEnabled.

	   Filter by access_cache_config.isDnsTTLEnabled
	*/
	AccessCacheConfigIsDNSTTLEnabledQueryParameter *bool

	/* AccessCacheConfigTTLFailure.

	   Filter by access_cache_config.ttl_failure
	*/
	AccessCacheConfigTTLFailureQueryParameter *int64

	/* AccessCacheConfigTTLNegative.

	   Filter by access_cache_config.ttl_negative
	*/
	AccessCacheConfigTTLNegativeQueryParameter *int64

	/* AccessCacheConfigTTLPositive.

	   Filter by access_cache_config.ttl_positive
	*/
	AccessCacheConfigTTLPositiveQueryParameter *int64

	/* AuthSysExtendedGroupsEnabled.

	   Filter by auth_sys_extended_groups_enabled
	*/
	AuthSysExtendedGroupsEnabledQueryParameter *bool

	/* CredentialCacheNegativeTTL.

	   Filter by credential_cache.negative_ttl
	*/
	CredentialCacheNegativeTTLQueryParameter *int64

	/* CredentialCachePositiveTTL.

	   Filter by credential_cache.positive_ttl
	*/
	CredentialCachePositiveTTLQueryParameter *int64

	/* CredentialCacheTransientErrorTTL.

	   Filter by credential_cache.transient_error_ttl
	*/
	CredentialCacheTransientErrorTTLQueryParameter *int64

	/* Enabled.

	   Filter by enabled
	*/
	EnabledQueryParameter *bool

	/* ExportsNameServiceLookupProtocol.

	   Filter by exports.name_service_lookup_protocol
	*/
	ExportsNameServiceLookupProtocolQueryParameter *string

	/* ExportsNetgroupTrustAnyNsswitchNoMatch.

	   Filter by exports.netgroup_trust_any_nsswitch_no_match
	*/
	ExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter *bool

	/* ExtendedGroupsLimit.

	   Filter by extended_groups_limit
	*/
	ExtendedGroupsLimitQueryParameter *int64

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* FileSessionIoGroupingCount.

	   Filter by file_session_io_grouping_count
	*/
	FileSessionIoGroupingCountQueryParameter *int64

	/* FileSessionIoGroupingDuration.

	   Filter by file_session_io_grouping_duration
	*/
	FileSessionIoGroupingDurationQueryParameter *int64

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* MetricV3Duration.

	   Filter by metric.v3.duration
	*/
	MetricV3DurationQueryParameter *string

	/* MetricV3IopsOther.

	   Filter by metric.v3.iops.other
	*/
	MetricV3IopsOtherQueryParameter *int64

	/* MetricV3IopsRead.

	   Filter by metric.v3.iops.read
	*/
	MetricV3IopsReadQueryParameter *int64

	/* MetricV3IopsTotal.

	   Filter by metric.v3.iops.total
	*/
	MetricV3IopsTotalQueryParameter *int64

	/* MetricV3IopsWrite.

	   Filter by metric.v3.iops.write
	*/
	MetricV3IopsWriteQueryParameter *int64

	/* MetricV3LatencyOther.

	   Filter by metric.v3.latency.other
	*/
	MetricV3LatencyOtherQueryParameter *int64

	/* MetricV3LatencyRead.

	   Filter by metric.v3.latency.read
	*/
	MetricV3LatencyReadQueryParameter *int64

	/* MetricV3LatencyTotal.

	   Filter by metric.v3.latency.total
	*/
	MetricV3LatencyTotalQueryParameter *int64

	/* MetricV3LatencyWrite.

	   Filter by metric.v3.latency.write
	*/
	MetricV3LatencyWriteQueryParameter *int64

	/* MetricV3Status.

	   Filter by metric.v3.status
	*/
	MetricV3StatusQueryParameter *string

	/* MetricV3ThroughputRead.

	   Filter by metric.v3.throughput.read
	*/
	MetricV3ThroughputReadQueryParameter *int64

	/* MetricV3ThroughputTotal.

	   Filter by metric.v3.throughput.total
	*/
	MetricV3ThroughputTotalQueryParameter *int64

	/* MetricV3ThroughputWrite.

	   Filter by metric.v3.throughput.write
	*/
	MetricV3ThroughputWriteQueryParameter *int64

	/* MetricV3Timestamp.

	   Filter by metric.v3.timestamp
	*/
	MetricV3TimestampQueryParameter *string

	/* MetricV4Duration.

	   Filter by metric.v4.duration
	*/
	MetricV4DurationQueryParameter *string

	/* MetricV4IopsOther.

	   Filter by metric.v4.iops.other
	*/
	MetricV4IopsOtherQueryParameter *int64

	/* MetricV4IopsRead.

	   Filter by metric.v4.iops.read
	*/
	MetricV4IopsReadQueryParameter *int64

	/* MetricV4IopsTotal.

	   Filter by metric.v4.iops.total
	*/
	MetricV4IopsTotalQueryParameter *int64

	/* MetricV4IopsWrite.

	   Filter by metric.v4.iops.write
	*/
	MetricV4IopsWriteQueryParameter *int64

	/* MetricV4LatencyOther.

	   Filter by metric.v4.latency.other
	*/
	MetricV4LatencyOtherQueryParameter *int64

	/* MetricV4LatencyRead.

	   Filter by metric.v4.latency.read
	*/
	MetricV4LatencyReadQueryParameter *int64

	/* MetricV4LatencyTotal.

	   Filter by metric.v4.latency.total
	*/
	MetricV4LatencyTotalQueryParameter *int64

	/* MetricV4LatencyWrite.

	   Filter by metric.v4.latency.write
	*/
	MetricV4LatencyWriteQueryParameter *int64

	/* MetricV4Status.

	   Filter by metric.v4.status
	*/
	MetricV4StatusQueryParameter *string

	/* MetricV4ThroughputRead.

	   Filter by metric.v4.throughput.read
	*/
	MetricV4ThroughputReadQueryParameter *int64

	/* MetricV4ThroughputTotal.

	   Filter by metric.v4.throughput.total
	*/
	MetricV4ThroughputTotalQueryParameter *int64

	/* MetricV4ThroughputWrite.

	   Filter by metric.v4.throughput.write
	*/
	MetricV4ThroughputWriteQueryParameter *int64

	/* MetricV4Timestamp.

	   Filter by metric.v4.timestamp
	*/
	MetricV4TimestampQueryParameter *string

	/* MetricV41Duration.

	   Filter by metric.v41.duration
	*/
	MetricV41DurationQueryParameter *string

	/* MetricV41IopsOther.

	   Filter by metric.v41.iops.other
	*/
	MetricV41IopsOtherQueryParameter *int64

	/* MetricV41IopsRead.

	   Filter by metric.v41.iops.read
	*/
	MetricV41IopsReadQueryParameter *int64

	/* MetricV41IopsTotal.

	   Filter by metric.v41.iops.total
	*/
	MetricV41IopsTotalQueryParameter *int64

	/* MetricV41IopsWrite.

	   Filter by metric.v41.iops.write
	*/
	MetricV41IopsWriteQueryParameter *int64

	/* MetricV41LatencyOther.

	   Filter by metric.v41.latency.other
	*/
	MetricV41LatencyOtherQueryParameter *int64

	/* MetricV41LatencyRead.

	   Filter by metric.v41.latency.read
	*/
	MetricV41LatencyReadQueryParameter *int64

	/* MetricV41LatencyTotal.

	   Filter by metric.v41.latency.total
	*/
	MetricV41LatencyTotalQueryParameter *int64

	/* MetricV41LatencyWrite.

	   Filter by metric.v41.latency.write
	*/
	MetricV41LatencyWriteQueryParameter *int64

	/* MetricV41Status.

	   Filter by metric.v41.status
	*/
	MetricV41StatusQueryParameter *string

	/* MetricV41ThroughputRead.

	   Filter by metric.v41.throughput.read
	*/
	MetricV41ThroughputReadQueryParameter *int64

	/* MetricV41ThroughputTotal.

	   Filter by metric.v41.throughput.total
	*/
	MetricV41ThroughputTotalQueryParameter *int64

	/* MetricV41ThroughputWrite.

	   Filter by metric.v41.throughput.write
	*/
	MetricV41ThroughputWriteQueryParameter *int64

	/* MetricV41Timestamp.

	   Filter by metric.v41.timestamp
	*/
	MetricV41TimestampQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* ProtocolV364bitIdentifiersEnabled.

	   Filter by protocol.v3_64bit_identifiers_enabled
	*/
	ProtocolV364bitIDentifiersEnabledQueryParameter *bool

	/* ProtocolV3Enabled.

	   Filter by protocol.v3_enabled
	*/
	ProtocolV3EnabledQueryParameter *bool

	/* ProtocolV3FeaturesConnectionDrop.

	   Filter by protocol.v3_features.connection_drop
	*/
	ProtocolV3FeaturesConnectionDropQueryParameter *bool

	/* ProtocolV3FeaturesEjukeboxEnabled.

	   Filter by protocol.v3_features.ejukebox_enabled
	*/
	ProtocolV3FeaturesEjukeboxEnabledQueryParameter *bool

	/* ProtocolV3FeaturesFsidChange.

	   Filter by protocol.v3_features.fsid_change
	*/
	ProtocolV3FeaturesFsIDChangeQueryParameter *bool

	/* ProtocolV3FeaturesMountDaemonPort.

	   Filter by protocol.v3_features.mount_daemon_port
	*/
	ProtocolV3FeaturesMountDaemonPortQueryParameter *int64

	/* ProtocolV3FeaturesMountRootOnly.

	   Filter by protocol.v3_features.mount_root_only
	*/
	ProtocolV3FeaturesMountRootOnlyQueryParameter *bool

	/* ProtocolV3FeaturesNetworkLockManagerPort.

	   Filter by protocol.v3_features.network_lock_manager_port
	*/
	ProtocolV3FeaturesNetworkLockManagerPortQueryParameter *int64

	/* ProtocolV3FeaturesNetworkStatusMonitorPort.

	   Filter by protocol.v3_features.network_status_monitor_port
	*/
	ProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter *int64

	/* ProtocolV3FeaturesRquotaDaemonPort.

	   Filter by protocol.v3_features.rquota_daemon_port
	*/
	ProtocolV3FeaturesRquotaDaemonPortQueryParameter *int64

	/* ProtocolV40Enabled.

	   Filter by protocol.v40_enabled
	*/
	ProtocolV40EnabledQueryParameter *bool

	/* ProtocolV40FeaturesACLEnabled.

	   Filter by protocol.v40_features.acl_enabled
	*/
	ProtocolV40FeaturesACLEnabledQueryParameter *bool

	/* ProtocolV40FeaturesACLMaxAces.

	   Filter by protocol.v40_features.acl_max_aces
	*/
	ProtocolV40FeaturesACLMaxAcesQueryParameter *int64

	/* ProtocolV40FeaturesACLPreserve.

	   Filter by protocol.v40_features.acl_preserve
	*/
	ProtocolV40FeaturesACLPreserveQueryParameter *bool

	/* ProtocolV40FeaturesReadDelegationEnabled.

	   Filter by protocol.v40_features.read_delegation_enabled
	*/
	ProtocolV40FeaturesReadDelegationEnabledQueryParameter *bool

	/* ProtocolV40FeaturesWriteDelegationEnabled.

	   Filter by protocol.v40_features.write_delegation_enabled
	*/
	ProtocolV40FeaturesWriteDelegationEnabledQueryParameter *bool

	/* ProtocolV41Enabled.

	   Filter by protocol.v41_enabled
	*/
	ProtocolV41EnabledQueryParameter *bool

	/* ProtocolV41FeaturesACLEnabled.

	   Filter by protocol.v41_features.acl_enabled
	*/
	ProtocolV41FeaturesACLEnabledQueryParameter *bool

	/* ProtocolV41FeaturesImplementationDomain.

	   Filter by protocol.v41_features.implementation_domain
	*/
	ProtocolV41FeaturesImplementationDomainQueryParameter *string

	/* ProtocolV41FeaturesImplementationName.

	   Filter by protocol.v41_features.implementation_name
	*/
	ProtocolV41FeaturesImplementationNameQueryParameter *string

	/* ProtocolV41FeaturesPnfsEnabled.

	   Filter by protocol.v41_features.pnfs_enabled
	*/
	ProtocolV41FeaturesPnfsEnabledQueryParameter *bool

	/* ProtocolV41FeaturesReadDelegationEnabled.

	   Filter by protocol.v41_features.read_delegation_enabled
	*/
	ProtocolV41FeaturesReadDelegationEnabledQueryParameter *bool

	/* ProtocolV41FeaturesWriteDelegationEnabled.

	   Filter by protocol.v41_features.write_delegation_enabled
	*/
	ProtocolV41FeaturesWriteDelegationEnabledQueryParameter *bool

	/* ProtocolV464bitIdentifiersEnabled.

	   Filter by protocol.v4_64bit_identifiers_enabled
	*/
	ProtocolV464bitIDentifiersEnabledQueryParameter *bool

	/* ProtocolV4IDDomain.

	   Filter by protocol.v4_id_domain
	*/
	ProtocolV4IDDomainQueryParameter *string

	/* ProtocolAccessRulesAuthType.

	   Authentication method used to check the client's access to the volume.

	   Default: "sys"
	*/
	ProtocolAccessRulesAuthTypeQueryParameter *string

	/* ProtocolAccessRulesCifsAccessType.

	   Filter by protocol_access_rules.cifs_access_type
	*/
	ProtocolAccessRulesCifsAccessTypeQueryParameter *string

	/* ProtocolAccessRulesClientIP.

	   IP address for the client for which access needs to be checked.
	*/
	ProtocolAccessRulesClientIPQueryParameter *string

	/* ProtocolAccessRulesNfs3AccessType.

	   Filter by protocol_access_rules.nfs3_access_type
	*/
	ProtocolAccessRulesNfs3AccessTypeQueryParameter *string

	/* ProtocolAccessRulesNfs4AccessType.

	   Filter by protocol_access_rules.nfs4_access_type
	*/
	ProtocolAccessRulesNfs4AccessTypeQueryParameter *string

	/* ProtocolAccessRulesVolume.

	   Volume on which access needs to be checked.
	*/
	ProtocolAccessRulesVolumeQueryParameter *string

	/* QtreeExportEnabled.

	   Filter by qtree.export_enabled
	*/
	QtreeExportEnabledQueryParameter *bool

	/* QtreeValidateExport.

	   Filter by qtree.validate_export
	*/
	QtreeValidateExportQueryParameter *bool

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* RootIgnoreNtACL.

	   Filter by root.ignore_nt_acl
	*/
	RootIgnoreNtACLQueryParameter *bool

	/* RootSkipWritePermissionCheck.

	   Filter by root.skip_write_permission_check
	*/
	RootSkIPWritePermissionCheckQueryParameter *bool

	/* RquotaEnabled.

	   Filter by rquota_enabled
	*/
	RquotaEnabledQueryParameter *bool

	/* SecurityChownMode.

	   Filter by security.chown_mode
	*/
	SecurityChownModeQueryParameter *string

	/* SecurityNtACLDisplayPermission.

	   Filter by security.nt_acl_display_permission
	*/
	SecurityNtACLDisplayPermissionQueryParameter *bool

	/* SecurityNtfsUnixSecurity.

	   Filter by security.ntfs_unix_security
	*/
	SecurityNtfsUnixSecurityQueryParameter *string

	/* SecurityPermittedEncryptionTypes.

	   Filter by security.permitted_encryption_types
	*/
	SecurityPermittedEncryptionTypesQueryParameter *string

	/* SecurityRpcsecContextIdle.

	   Filter by security.rpcsec_context_idle
	*/
	SecurityRpcsecContextIDleQueryParameter *int64

	/* ShowmountEnabled.

	   Filter by showmount_enabled
	*/
	ShowmountEnabledQueryParameter *bool

	/* State.

	   Filter by state
	*/
	StateQueryParameter *string

	/* StatisticsV3IopsRawOther.

	   Filter by statistics.v3.iops_raw.other
	*/
	StatisticsV3IopsRawOtherQueryParameter *int64

	/* StatisticsV3IopsRawRead.

	   Filter by statistics.v3.iops_raw.read
	*/
	StatisticsV3IopsRawReadQueryParameter *int64

	/* StatisticsV3IopsRawTotal.

	   Filter by statistics.v3.iops_raw.total
	*/
	StatisticsV3IopsRawTotalQueryParameter *int64

	/* StatisticsV3IopsRawWrite.

	   Filter by statistics.v3.iops_raw.write
	*/
	StatisticsV3IopsRawWriteQueryParameter *int64

	/* StatisticsV3LatencyRawOther.

	   Filter by statistics.v3.latency_raw.other
	*/
	StatisticsV3LatencyRawOtherQueryParameter *int64

	/* StatisticsV3LatencyRawRead.

	   Filter by statistics.v3.latency_raw.read
	*/
	StatisticsV3LatencyRawReadQueryParameter *int64

	/* StatisticsV3LatencyRawTotal.

	   Filter by statistics.v3.latency_raw.total
	*/
	StatisticsV3LatencyRawTotalQueryParameter *int64

	/* StatisticsV3LatencyRawWrite.

	   Filter by statistics.v3.latency_raw.write
	*/
	StatisticsV3LatencyRawWriteQueryParameter *int64

	/* StatisticsV3Status.

	   Filter by statistics.v3.status
	*/
	StatisticsV3StatusQueryParameter *string

	/* StatisticsV3ThroughputRawRead.

	   Filter by statistics.v3.throughput_raw.read
	*/
	StatisticsV3ThroughputRawReadQueryParameter *int64

	/* StatisticsV3ThroughputRawTotal.

	   Filter by statistics.v3.throughput_raw.total
	*/
	StatisticsV3ThroughputRawTotalQueryParameter *int64

	/* StatisticsV3ThroughputRawWrite.

	   Filter by statistics.v3.throughput_raw.write
	*/
	StatisticsV3ThroughputRawWriteQueryParameter *int64

	/* StatisticsV3Timestamp.

	   Filter by statistics.v3.timestamp
	*/
	StatisticsV3TimestampQueryParameter *string

	/* StatisticsV4IopsRawOther.

	   Filter by statistics.v4.iops_raw.other
	*/
	StatisticsV4IopsRawOtherQueryParameter *int64

	/* StatisticsV4IopsRawRead.

	   Filter by statistics.v4.iops_raw.read
	*/
	StatisticsV4IopsRawReadQueryParameter *int64

	/* StatisticsV4IopsRawTotal.

	   Filter by statistics.v4.iops_raw.total
	*/
	StatisticsV4IopsRawTotalQueryParameter *int64

	/* StatisticsV4IopsRawWrite.

	   Filter by statistics.v4.iops_raw.write
	*/
	StatisticsV4IopsRawWriteQueryParameter *int64

	/* StatisticsV4LatencyRawOther.

	   Filter by statistics.v4.latency_raw.other
	*/
	StatisticsV4LatencyRawOtherQueryParameter *int64

	/* StatisticsV4LatencyRawRead.

	   Filter by statistics.v4.latency_raw.read
	*/
	StatisticsV4LatencyRawReadQueryParameter *int64

	/* StatisticsV4LatencyRawTotal.

	   Filter by statistics.v4.latency_raw.total
	*/
	StatisticsV4LatencyRawTotalQueryParameter *int64

	/* StatisticsV4LatencyRawWrite.

	   Filter by statistics.v4.latency_raw.write
	*/
	StatisticsV4LatencyRawWriteQueryParameter *int64

	/* StatisticsV4Status.

	   Filter by statistics.v4.status
	*/
	StatisticsV4StatusQueryParameter *string

	/* StatisticsV4ThroughputRawRead.

	   Filter by statistics.v4.throughput_raw.read
	*/
	StatisticsV4ThroughputRawReadQueryParameter *int64

	/* StatisticsV4ThroughputRawTotal.

	   Filter by statistics.v4.throughput_raw.total
	*/
	StatisticsV4ThroughputRawTotalQueryParameter *int64

	/* StatisticsV4ThroughputRawWrite.

	   Filter by statistics.v4.throughput_raw.write
	*/
	StatisticsV4ThroughputRawWriteQueryParameter *int64

	/* StatisticsV4Timestamp.

	   Filter by statistics.v4.timestamp
	*/
	StatisticsV4TimestampQueryParameter *string

	/* StatisticsV41IopsRawOther.

	   Filter by statistics.v41.iops_raw.other
	*/
	StatisticsV41IopsRawOtherQueryParameter *int64

	/* StatisticsV41IopsRawRead.

	   Filter by statistics.v41.iops_raw.read
	*/
	StatisticsV41IopsRawReadQueryParameter *int64

	/* StatisticsV41IopsRawTotal.

	   Filter by statistics.v41.iops_raw.total
	*/
	StatisticsV41IopsRawTotalQueryParameter *int64

	/* StatisticsV41IopsRawWrite.

	   Filter by statistics.v41.iops_raw.write
	*/
	StatisticsV41IopsRawWriteQueryParameter *int64

	/* StatisticsV41LatencyRawOther.

	   Filter by statistics.v41.latency_raw.other
	*/
	StatisticsV41LatencyRawOtherQueryParameter *int64

	/* StatisticsV41LatencyRawRead.

	   Filter by statistics.v41.latency_raw.read
	*/
	StatisticsV41LatencyRawReadQueryParameter *int64

	/* StatisticsV41LatencyRawTotal.

	   Filter by statistics.v41.latency_raw.total
	*/
	StatisticsV41LatencyRawTotalQueryParameter *int64

	/* StatisticsV41LatencyRawWrite.

	   Filter by statistics.v41.latency_raw.write
	*/
	StatisticsV41LatencyRawWriteQueryParameter *int64

	/* StatisticsV41Status.

	   Filter by statistics.v41.status
	*/
	StatisticsV41StatusQueryParameter *string

	/* StatisticsV41ThroughputRawRead.

	   Filter by statistics.v41.throughput_raw.read
	*/
	StatisticsV41ThroughputRawReadQueryParameter *int64

	/* StatisticsV41ThroughputRawTotal.

	   Filter by statistics.v41.throughput_raw.total
	*/
	StatisticsV41ThroughputRawTotalQueryParameter *int64

	/* StatisticsV41ThroughputRawWrite.

	   Filter by statistics.v41.throughput_raw.write
	*/
	StatisticsV41ThroughputRawWriteQueryParameter *int64

	/* StatisticsV41Timestamp.

	   Filter by statistics.v41.timestamp
	*/
	StatisticsV41TimestampQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* TransportTCPEnabled.

	   Filter by transport.tcp_enabled
	*/
	TransportTCPEnabledQueryParameter *bool

	/* TransportTCPMaxTransferSize.

	   Filter by transport.tcp_max_transfer_size
	*/
	TransportTCPMaxTransferSizeQueryParameter *int64

	/* TransportUDPEnabled.

	   Filter by transport.udp_enabled
	*/
	TransportUDPEnabledQueryParameter *bool

	/* VstorageEnabled.

	   Filter by vstorage_enabled
	*/
	VstorageEnabledQueryParameter *bool

	/* WindowsDefaultUser.

	   Filter by windows.default_user
	*/
	WindowsDefaultUserQueryParameter *string

	/* WindowsMapUnknownUIDToDefaultUser.

	   Filter by windows.map_unknown_uid_to_default_user
	*/
	WindowsMapUnknownUIDToDefaultUserQueryParameter *bool

	/* WindowsV3MsDosClientEnabled.

	   Filter by windows.v3_ms_dos_client_enabled
	*/
	WindowsV3MsDosClientEnabledQueryParameter *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the nfs collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NfsCollectionGetParams) WithDefaults() *NfsCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the nfs collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NfsCollectionGetParams) SetDefaults() {
	var (
		protocolAccessRulesAuthTypeQueryParameterDefault = string("sys")

		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := NfsCollectionGetParams{
		ProtocolAccessRulesAuthTypeQueryParameter: &protocolAccessRulesAuthTypeQueryParameterDefault,
		ReturnRecordsQueryParameter:               &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter:               &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the nfs collection get params
func (o *NfsCollectionGetParams) WithTimeout(timeout time.Duration) *NfsCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the nfs collection get params
func (o *NfsCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the nfs collection get params
func (o *NfsCollectionGetParams) WithContext(ctx context.Context) *NfsCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the nfs collection get params
func (o *NfsCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the nfs collection get params
func (o *NfsCollectionGetParams) WithHTTPClient(client *http.Client) *NfsCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the nfs collection get params
func (o *NfsCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessCacheConfigHarvestTimeoutQueryParameter adds the accessCacheConfigHarvestTimeout to the nfs collection get params
func (o *NfsCollectionGetParams) WithAccessCacheConfigHarvestTimeoutQueryParameter(accessCacheConfigHarvestTimeout *int64) *NfsCollectionGetParams {
	o.SetAccessCacheConfigHarvestTimeoutQueryParameter(accessCacheConfigHarvestTimeout)
	return o
}

// SetAccessCacheConfigHarvestTimeoutQueryParameter adds the accessCacheConfigHarvestTimeout to the nfs collection get params
func (o *NfsCollectionGetParams) SetAccessCacheConfigHarvestTimeoutQueryParameter(accessCacheConfigHarvestTimeout *int64) {
	o.AccessCacheConfigHarvestTimeoutQueryParameter = accessCacheConfigHarvestTimeout
}

// WithAccessCacheConfigIsDNSTTLEnabledQueryParameter adds the accessCacheConfigIsDNSTTLEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithAccessCacheConfigIsDNSTTLEnabledQueryParameter(accessCacheConfigIsDNSTTLEnabled *bool) *NfsCollectionGetParams {
	o.SetAccessCacheConfigIsDNSTTLEnabledQueryParameter(accessCacheConfigIsDNSTTLEnabled)
	return o
}

// SetAccessCacheConfigIsDNSTTLEnabledQueryParameter adds the accessCacheConfigIsDnsTtlEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetAccessCacheConfigIsDNSTTLEnabledQueryParameter(accessCacheConfigIsDNSTTLEnabled *bool) {
	o.AccessCacheConfigIsDNSTTLEnabledQueryParameter = accessCacheConfigIsDNSTTLEnabled
}

// WithAccessCacheConfigTTLFailureQueryParameter adds the accessCacheConfigTTLFailure to the nfs collection get params
func (o *NfsCollectionGetParams) WithAccessCacheConfigTTLFailureQueryParameter(accessCacheConfigTTLFailure *int64) *NfsCollectionGetParams {
	o.SetAccessCacheConfigTTLFailureQueryParameter(accessCacheConfigTTLFailure)
	return o
}

// SetAccessCacheConfigTTLFailureQueryParameter adds the accessCacheConfigTtlFailure to the nfs collection get params
func (o *NfsCollectionGetParams) SetAccessCacheConfigTTLFailureQueryParameter(accessCacheConfigTTLFailure *int64) {
	o.AccessCacheConfigTTLFailureQueryParameter = accessCacheConfigTTLFailure
}

// WithAccessCacheConfigTTLNegativeQueryParameter adds the accessCacheConfigTTLNegative to the nfs collection get params
func (o *NfsCollectionGetParams) WithAccessCacheConfigTTLNegativeQueryParameter(accessCacheConfigTTLNegative *int64) *NfsCollectionGetParams {
	o.SetAccessCacheConfigTTLNegativeQueryParameter(accessCacheConfigTTLNegative)
	return o
}

// SetAccessCacheConfigTTLNegativeQueryParameter adds the accessCacheConfigTtlNegative to the nfs collection get params
func (o *NfsCollectionGetParams) SetAccessCacheConfigTTLNegativeQueryParameter(accessCacheConfigTTLNegative *int64) {
	o.AccessCacheConfigTTLNegativeQueryParameter = accessCacheConfigTTLNegative
}

// WithAccessCacheConfigTTLPositiveQueryParameter adds the accessCacheConfigTTLPositive to the nfs collection get params
func (o *NfsCollectionGetParams) WithAccessCacheConfigTTLPositiveQueryParameter(accessCacheConfigTTLPositive *int64) *NfsCollectionGetParams {
	o.SetAccessCacheConfigTTLPositiveQueryParameter(accessCacheConfigTTLPositive)
	return o
}

// SetAccessCacheConfigTTLPositiveQueryParameter adds the accessCacheConfigTtlPositive to the nfs collection get params
func (o *NfsCollectionGetParams) SetAccessCacheConfigTTLPositiveQueryParameter(accessCacheConfigTTLPositive *int64) {
	o.AccessCacheConfigTTLPositiveQueryParameter = accessCacheConfigTTLPositive
}

// WithAuthSysExtendedGroupsEnabledQueryParameter adds the authSysExtendedGroupsEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithAuthSysExtendedGroupsEnabledQueryParameter(authSysExtendedGroupsEnabled *bool) *NfsCollectionGetParams {
	o.SetAuthSysExtendedGroupsEnabledQueryParameter(authSysExtendedGroupsEnabled)
	return o
}

// SetAuthSysExtendedGroupsEnabledQueryParameter adds the authSysExtendedGroupsEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetAuthSysExtendedGroupsEnabledQueryParameter(authSysExtendedGroupsEnabled *bool) {
	o.AuthSysExtendedGroupsEnabledQueryParameter = authSysExtendedGroupsEnabled
}

// WithCredentialCacheNegativeTTLQueryParameter adds the credentialCacheNegativeTTL to the nfs collection get params
func (o *NfsCollectionGetParams) WithCredentialCacheNegativeTTLQueryParameter(credentialCacheNegativeTTL *int64) *NfsCollectionGetParams {
	o.SetCredentialCacheNegativeTTLQueryParameter(credentialCacheNegativeTTL)
	return o
}

// SetCredentialCacheNegativeTTLQueryParameter adds the credentialCacheNegativeTtl to the nfs collection get params
func (o *NfsCollectionGetParams) SetCredentialCacheNegativeTTLQueryParameter(credentialCacheNegativeTTL *int64) {
	o.CredentialCacheNegativeTTLQueryParameter = credentialCacheNegativeTTL
}

// WithCredentialCachePositiveTTLQueryParameter adds the credentialCachePositiveTTL to the nfs collection get params
func (o *NfsCollectionGetParams) WithCredentialCachePositiveTTLQueryParameter(credentialCachePositiveTTL *int64) *NfsCollectionGetParams {
	o.SetCredentialCachePositiveTTLQueryParameter(credentialCachePositiveTTL)
	return o
}

// SetCredentialCachePositiveTTLQueryParameter adds the credentialCachePositiveTtl to the nfs collection get params
func (o *NfsCollectionGetParams) SetCredentialCachePositiveTTLQueryParameter(credentialCachePositiveTTL *int64) {
	o.CredentialCachePositiveTTLQueryParameter = credentialCachePositiveTTL
}

// WithCredentialCacheTransientErrorTTLQueryParameter adds the credentialCacheTransientErrorTTL to the nfs collection get params
func (o *NfsCollectionGetParams) WithCredentialCacheTransientErrorTTLQueryParameter(credentialCacheTransientErrorTTL *int64) *NfsCollectionGetParams {
	o.SetCredentialCacheTransientErrorTTLQueryParameter(credentialCacheTransientErrorTTL)
	return o
}

// SetCredentialCacheTransientErrorTTLQueryParameter adds the credentialCacheTransientErrorTtl to the nfs collection get params
func (o *NfsCollectionGetParams) SetCredentialCacheTransientErrorTTLQueryParameter(credentialCacheTransientErrorTTL *int64) {
	o.CredentialCacheTransientErrorTTLQueryParameter = credentialCacheTransientErrorTTL
}

// WithEnabledQueryParameter adds the enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithEnabledQueryParameter(enabled *bool) *NfsCollectionGetParams {
	o.SetEnabledQueryParameter(enabled)
	return o
}

// SetEnabledQueryParameter adds the enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetEnabledQueryParameter(enabled *bool) {
	o.EnabledQueryParameter = enabled
}

// WithExportsNameServiceLookupProtocolQueryParameter adds the exportsNameServiceLookupProtocol to the nfs collection get params
func (o *NfsCollectionGetParams) WithExportsNameServiceLookupProtocolQueryParameter(exportsNameServiceLookupProtocol *string) *NfsCollectionGetParams {
	o.SetExportsNameServiceLookupProtocolQueryParameter(exportsNameServiceLookupProtocol)
	return o
}

// SetExportsNameServiceLookupProtocolQueryParameter adds the exportsNameServiceLookupProtocol to the nfs collection get params
func (o *NfsCollectionGetParams) SetExportsNameServiceLookupProtocolQueryParameter(exportsNameServiceLookupProtocol *string) {
	o.ExportsNameServiceLookupProtocolQueryParameter = exportsNameServiceLookupProtocol
}

// WithExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter adds the exportsNetgroupTrustAnyNsswitchNoMatch to the nfs collection get params
func (o *NfsCollectionGetParams) WithExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter(exportsNetgroupTrustAnyNsswitchNoMatch *bool) *NfsCollectionGetParams {
	o.SetExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter(exportsNetgroupTrustAnyNsswitchNoMatch)
	return o
}

// SetExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter adds the exportsNetgroupTrustAnyNsswitchNoMatch to the nfs collection get params
func (o *NfsCollectionGetParams) SetExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter(exportsNetgroupTrustAnyNsswitchNoMatch *bool) {
	o.ExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter = exportsNetgroupTrustAnyNsswitchNoMatch
}

// WithExtendedGroupsLimitQueryParameter adds the extendedGroupsLimit to the nfs collection get params
func (o *NfsCollectionGetParams) WithExtendedGroupsLimitQueryParameter(extendedGroupsLimit *int64) *NfsCollectionGetParams {
	o.SetExtendedGroupsLimitQueryParameter(extendedGroupsLimit)
	return o
}

// SetExtendedGroupsLimitQueryParameter adds the extendedGroupsLimit to the nfs collection get params
func (o *NfsCollectionGetParams) SetExtendedGroupsLimitQueryParameter(extendedGroupsLimit *int64) {
	o.ExtendedGroupsLimitQueryParameter = extendedGroupsLimit
}

// WithFieldsQueryParameter adds the fields to the nfs collection get params
func (o *NfsCollectionGetParams) WithFieldsQueryParameter(fields []string) *NfsCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the nfs collection get params
func (o *NfsCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithFileSessionIoGroupingCountQueryParameter adds the fileSessionIoGroupingCount to the nfs collection get params
func (o *NfsCollectionGetParams) WithFileSessionIoGroupingCountQueryParameter(fileSessionIoGroupingCount *int64) *NfsCollectionGetParams {
	o.SetFileSessionIoGroupingCountQueryParameter(fileSessionIoGroupingCount)
	return o
}

// SetFileSessionIoGroupingCountQueryParameter adds the fileSessionIoGroupingCount to the nfs collection get params
func (o *NfsCollectionGetParams) SetFileSessionIoGroupingCountQueryParameter(fileSessionIoGroupingCount *int64) {
	o.FileSessionIoGroupingCountQueryParameter = fileSessionIoGroupingCount
}

// WithFileSessionIoGroupingDurationQueryParameter adds the fileSessionIoGroupingDuration to the nfs collection get params
func (o *NfsCollectionGetParams) WithFileSessionIoGroupingDurationQueryParameter(fileSessionIoGroupingDuration *int64) *NfsCollectionGetParams {
	o.SetFileSessionIoGroupingDurationQueryParameter(fileSessionIoGroupingDuration)
	return o
}

// SetFileSessionIoGroupingDurationQueryParameter adds the fileSessionIoGroupingDuration to the nfs collection get params
func (o *NfsCollectionGetParams) SetFileSessionIoGroupingDurationQueryParameter(fileSessionIoGroupingDuration *int64) {
	o.FileSessionIoGroupingDurationQueryParameter = fileSessionIoGroupingDuration
}

// WithMaxRecordsQueryParameter adds the maxRecords to the nfs collection get params
func (o *NfsCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *NfsCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the nfs collection get params
func (o *NfsCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMetricV3DurationQueryParameter adds the metricV3Duration to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3DurationQueryParameter(metricV3Duration *string) *NfsCollectionGetParams {
	o.SetMetricV3DurationQueryParameter(metricV3Duration)
	return o
}

// SetMetricV3DurationQueryParameter adds the metricV3Duration to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3DurationQueryParameter(metricV3Duration *string) {
	o.MetricV3DurationQueryParameter = metricV3Duration
}

// WithMetricV3IopsOtherQueryParameter adds the metricV3IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsOtherQueryParameter(metricV3IopsOther *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsOtherQueryParameter(metricV3IopsOther)
	return o
}

// SetMetricV3IopsOtherQueryParameter adds the metricV3IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsOtherQueryParameter(metricV3IopsOther *int64) {
	o.MetricV3IopsOtherQueryParameter = metricV3IopsOther
}

// WithMetricV3IopsReadQueryParameter adds the metricV3IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsReadQueryParameter(metricV3IopsRead *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsReadQueryParameter(metricV3IopsRead)
	return o
}

// SetMetricV3IopsReadQueryParameter adds the metricV3IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsReadQueryParameter(metricV3IopsRead *int64) {
	o.MetricV3IopsReadQueryParameter = metricV3IopsRead
}

// WithMetricV3IopsTotalQueryParameter adds the metricV3IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsTotalQueryParameter(metricV3IopsTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsTotalQueryParameter(metricV3IopsTotal)
	return o
}

// SetMetricV3IopsTotalQueryParameter adds the metricV3IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsTotalQueryParameter(metricV3IopsTotal *int64) {
	o.MetricV3IopsTotalQueryParameter = metricV3IopsTotal
}

// WithMetricV3IopsWriteQueryParameter adds the metricV3IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3IopsWriteQueryParameter(metricV3IopsWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV3IopsWriteQueryParameter(metricV3IopsWrite)
	return o
}

// SetMetricV3IopsWriteQueryParameter adds the metricV3IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3IopsWriteQueryParameter(metricV3IopsWrite *int64) {
	o.MetricV3IopsWriteQueryParameter = metricV3IopsWrite
}

// WithMetricV3LatencyOtherQueryParameter adds the metricV3LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyOtherQueryParameter(metricV3LatencyOther *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyOtherQueryParameter(metricV3LatencyOther)
	return o
}

// SetMetricV3LatencyOtherQueryParameter adds the metricV3LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyOtherQueryParameter(metricV3LatencyOther *int64) {
	o.MetricV3LatencyOtherQueryParameter = metricV3LatencyOther
}

// WithMetricV3LatencyReadQueryParameter adds the metricV3LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyReadQueryParameter(metricV3LatencyRead *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyReadQueryParameter(metricV3LatencyRead)
	return o
}

// SetMetricV3LatencyReadQueryParameter adds the metricV3LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyReadQueryParameter(metricV3LatencyRead *int64) {
	o.MetricV3LatencyReadQueryParameter = metricV3LatencyRead
}

// WithMetricV3LatencyTotalQueryParameter adds the metricV3LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyTotalQueryParameter(metricV3LatencyTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyTotalQueryParameter(metricV3LatencyTotal)
	return o
}

// SetMetricV3LatencyTotalQueryParameter adds the metricV3LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyTotalQueryParameter(metricV3LatencyTotal *int64) {
	o.MetricV3LatencyTotalQueryParameter = metricV3LatencyTotal
}

// WithMetricV3LatencyWriteQueryParameter adds the metricV3LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3LatencyWriteQueryParameter(metricV3LatencyWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV3LatencyWriteQueryParameter(metricV3LatencyWrite)
	return o
}

// SetMetricV3LatencyWriteQueryParameter adds the metricV3LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3LatencyWriteQueryParameter(metricV3LatencyWrite *int64) {
	o.MetricV3LatencyWriteQueryParameter = metricV3LatencyWrite
}

// WithMetricV3StatusQueryParameter adds the metricV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3StatusQueryParameter(metricV3Status *string) *NfsCollectionGetParams {
	o.SetMetricV3StatusQueryParameter(metricV3Status)
	return o
}

// SetMetricV3StatusQueryParameter adds the metricV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3StatusQueryParameter(metricV3Status *string) {
	o.MetricV3StatusQueryParameter = metricV3Status
}

// WithMetricV3ThroughputReadQueryParameter adds the metricV3ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3ThroughputReadQueryParameter(metricV3ThroughputRead *int64) *NfsCollectionGetParams {
	o.SetMetricV3ThroughputReadQueryParameter(metricV3ThroughputRead)
	return o
}

// SetMetricV3ThroughputReadQueryParameter adds the metricV3ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3ThroughputReadQueryParameter(metricV3ThroughputRead *int64) {
	o.MetricV3ThroughputReadQueryParameter = metricV3ThroughputRead
}

// WithMetricV3ThroughputTotalQueryParameter adds the metricV3ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3ThroughputTotalQueryParameter(metricV3ThroughputTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV3ThroughputTotalQueryParameter(metricV3ThroughputTotal)
	return o
}

// SetMetricV3ThroughputTotalQueryParameter adds the metricV3ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3ThroughputTotalQueryParameter(metricV3ThroughputTotal *int64) {
	o.MetricV3ThroughputTotalQueryParameter = metricV3ThroughputTotal
}

// WithMetricV3ThroughputWriteQueryParameter adds the metricV3ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3ThroughputWriteQueryParameter(metricV3ThroughputWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV3ThroughputWriteQueryParameter(metricV3ThroughputWrite)
	return o
}

// SetMetricV3ThroughputWriteQueryParameter adds the metricV3ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3ThroughputWriteQueryParameter(metricV3ThroughputWrite *int64) {
	o.MetricV3ThroughputWriteQueryParameter = metricV3ThroughputWrite
}

// WithMetricV3TimestampQueryParameter adds the metricV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV3TimestampQueryParameter(metricV3Timestamp *string) *NfsCollectionGetParams {
	o.SetMetricV3TimestampQueryParameter(metricV3Timestamp)
	return o
}

// SetMetricV3TimestampQueryParameter adds the metricV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV3TimestampQueryParameter(metricV3Timestamp *string) {
	o.MetricV3TimestampQueryParameter = metricV3Timestamp
}

// WithMetricV4DurationQueryParameter adds the metricV4Duration to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4DurationQueryParameter(metricV4Duration *string) *NfsCollectionGetParams {
	o.SetMetricV4DurationQueryParameter(metricV4Duration)
	return o
}

// SetMetricV4DurationQueryParameter adds the metricV4Duration to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4DurationQueryParameter(metricV4Duration *string) {
	o.MetricV4DurationQueryParameter = metricV4Duration
}

// WithMetricV4IopsOtherQueryParameter adds the metricV4IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4IopsOtherQueryParameter(metricV4IopsOther *int64) *NfsCollectionGetParams {
	o.SetMetricV4IopsOtherQueryParameter(metricV4IopsOther)
	return o
}

// SetMetricV4IopsOtherQueryParameter adds the metricV4IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4IopsOtherQueryParameter(metricV4IopsOther *int64) {
	o.MetricV4IopsOtherQueryParameter = metricV4IopsOther
}

// WithMetricV4IopsReadQueryParameter adds the metricV4IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4IopsReadQueryParameter(metricV4IopsRead *int64) *NfsCollectionGetParams {
	o.SetMetricV4IopsReadQueryParameter(metricV4IopsRead)
	return o
}

// SetMetricV4IopsReadQueryParameter adds the metricV4IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4IopsReadQueryParameter(metricV4IopsRead *int64) {
	o.MetricV4IopsReadQueryParameter = metricV4IopsRead
}

// WithMetricV4IopsTotalQueryParameter adds the metricV4IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4IopsTotalQueryParameter(metricV4IopsTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV4IopsTotalQueryParameter(metricV4IopsTotal)
	return o
}

// SetMetricV4IopsTotalQueryParameter adds the metricV4IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4IopsTotalQueryParameter(metricV4IopsTotal *int64) {
	o.MetricV4IopsTotalQueryParameter = metricV4IopsTotal
}

// WithMetricV4IopsWriteQueryParameter adds the metricV4IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4IopsWriteQueryParameter(metricV4IopsWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV4IopsWriteQueryParameter(metricV4IopsWrite)
	return o
}

// SetMetricV4IopsWriteQueryParameter adds the metricV4IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4IopsWriteQueryParameter(metricV4IopsWrite *int64) {
	o.MetricV4IopsWriteQueryParameter = metricV4IopsWrite
}

// WithMetricV4LatencyOtherQueryParameter adds the metricV4LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4LatencyOtherQueryParameter(metricV4LatencyOther *int64) *NfsCollectionGetParams {
	o.SetMetricV4LatencyOtherQueryParameter(metricV4LatencyOther)
	return o
}

// SetMetricV4LatencyOtherQueryParameter adds the metricV4LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4LatencyOtherQueryParameter(metricV4LatencyOther *int64) {
	o.MetricV4LatencyOtherQueryParameter = metricV4LatencyOther
}

// WithMetricV4LatencyReadQueryParameter adds the metricV4LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4LatencyReadQueryParameter(metricV4LatencyRead *int64) *NfsCollectionGetParams {
	o.SetMetricV4LatencyReadQueryParameter(metricV4LatencyRead)
	return o
}

// SetMetricV4LatencyReadQueryParameter adds the metricV4LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4LatencyReadQueryParameter(metricV4LatencyRead *int64) {
	o.MetricV4LatencyReadQueryParameter = metricV4LatencyRead
}

// WithMetricV4LatencyTotalQueryParameter adds the metricV4LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4LatencyTotalQueryParameter(metricV4LatencyTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV4LatencyTotalQueryParameter(metricV4LatencyTotal)
	return o
}

// SetMetricV4LatencyTotalQueryParameter adds the metricV4LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4LatencyTotalQueryParameter(metricV4LatencyTotal *int64) {
	o.MetricV4LatencyTotalQueryParameter = metricV4LatencyTotal
}

// WithMetricV4LatencyWriteQueryParameter adds the metricV4LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4LatencyWriteQueryParameter(metricV4LatencyWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV4LatencyWriteQueryParameter(metricV4LatencyWrite)
	return o
}

// SetMetricV4LatencyWriteQueryParameter adds the metricV4LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4LatencyWriteQueryParameter(metricV4LatencyWrite *int64) {
	o.MetricV4LatencyWriteQueryParameter = metricV4LatencyWrite
}

// WithMetricV4StatusQueryParameter adds the metricV4Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4StatusQueryParameter(metricV4Status *string) *NfsCollectionGetParams {
	o.SetMetricV4StatusQueryParameter(metricV4Status)
	return o
}

// SetMetricV4StatusQueryParameter adds the metricV4Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4StatusQueryParameter(metricV4Status *string) {
	o.MetricV4StatusQueryParameter = metricV4Status
}

// WithMetricV4ThroughputReadQueryParameter adds the metricV4ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4ThroughputReadQueryParameter(metricV4ThroughputRead *int64) *NfsCollectionGetParams {
	o.SetMetricV4ThroughputReadQueryParameter(metricV4ThroughputRead)
	return o
}

// SetMetricV4ThroughputReadQueryParameter adds the metricV4ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4ThroughputReadQueryParameter(metricV4ThroughputRead *int64) {
	o.MetricV4ThroughputReadQueryParameter = metricV4ThroughputRead
}

// WithMetricV4ThroughputTotalQueryParameter adds the metricV4ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4ThroughputTotalQueryParameter(metricV4ThroughputTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV4ThroughputTotalQueryParameter(metricV4ThroughputTotal)
	return o
}

// SetMetricV4ThroughputTotalQueryParameter adds the metricV4ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4ThroughputTotalQueryParameter(metricV4ThroughputTotal *int64) {
	o.MetricV4ThroughputTotalQueryParameter = metricV4ThroughputTotal
}

// WithMetricV4ThroughputWriteQueryParameter adds the metricV4ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4ThroughputWriteQueryParameter(metricV4ThroughputWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV4ThroughputWriteQueryParameter(metricV4ThroughputWrite)
	return o
}

// SetMetricV4ThroughputWriteQueryParameter adds the metricV4ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4ThroughputWriteQueryParameter(metricV4ThroughputWrite *int64) {
	o.MetricV4ThroughputWriteQueryParameter = metricV4ThroughputWrite
}

// WithMetricV4TimestampQueryParameter adds the metricV4Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV4TimestampQueryParameter(metricV4Timestamp *string) *NfsCollectionGetParams {
	o.SetMetricV4TimestampQueryParameter(metricV4Timestamp)
	return o
}

// SetMetricV4TimestampQueryParameter adds the metricV4Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV4TimestampQueryParameter(metricV4Timestamp *string) {
	o.MetricV4TimestampQueryParameter = metricV4Timestamp
}

// WithMetricV41DurationQueryParameter adds the metricV41Duration to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41DurationQueryParameter(metricV41Duration *string) *NfsCollectionGetParams {
	o.SetMetricV41DurationQueryParameter(metricV41Duration)
	return o
}

// SetMetricV41DurationQueryParameter adds the metricV41Duration to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41DurationQueryParameter(metricV41Duration *string) {
	o.MetricV41DurationQueryParameter = metricV41Duration
}

// WithMetricV41IopsOtherQueryParameter adds the metricV41IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41IopsOtherQueryParameter(metricV41IopsOther *int64) *NfsCollectionGetParams {
	o.SetMetricV41IopsOtherQueryParameter(metricV41IopsOther)
	return o
}

// SetMetricV41IopsOtherQueryParameter adds the metricV41IopsOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41IopsOtherQueryParameter(metricV41IopsOther *int64) {
	o.MetricV41IopsOtherQueryParameter = metricV41IopsOther
}

// WithMetricV41IopsReadQueryParameter adds the metricV41IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41IopsReadQueryParameter(metricV41IopsRead *int64) *NfsCollectionGetParams {
	o.SetMetricV41IopsReadQueryParameter(metricV41IopsRead)
	return o
}

// SetMetricV41IopsReadQueryParameter adds the metricV41IopsRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41IopsReadQueryParameter(metricV41IopsRead *int64) {
	o.MetricV41IopsReadQueryParameter = metricV41IopsRead
}

// WithMetricV41IopsTotalQueryParameter adds the metricV41IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41IopsTotalQueryParameter(metricV41IopsTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV41IopsTotalQueryParameter(metricV41IopsTotal)
	return o
}

// SetMetricV41IopsTotalQueryParameter adds the metricV41IopsTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41IopsTotalQueryParameter(metricV41IopsTotal *int64) {
	o.MetricV41IopsTotalQueryParameter = metricV41IopsTotal
}

// WithMetricV41IopsWriteQueryParameter adds the metricV41IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41IopsWriteQueryParameter(metricV41IopsWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV41IopsWriteQueryParameter(metricV41IopsWrite)
	return o
}

// SetMetricV41IopsWriteQueryParameter adds the metricV41IopsWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41IopsWriteQueryParameter(metricV41IopsWrite *int64) {
	o.MetricV41IopsWriteQueryParameter = metricV41IopsWrite
}

// WithMetricV41LatencyOtherQueryParameter adds the metricV41LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41LatencyOtherQueryParameter(metricV41LatencyOther *int64) *NfsCollectionGetParams {
	o.SetMetricV41LatencyOtherQueryParameter(metricV41LatencyOther)
	return o
}

// SetMetricV41LatencyOtherQueryParameter adds the metricV41LatencyOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41LatencyOtherQueryParameter(metricV41LatencyOther *int64) {
	o.MetricV41LatencyOtherQueryParameter = metricV41LatencyOther
}

// WithMetricV41LatencyReadQueryParameter adds the metricV41LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41LatencyReadQueryParameter(metricV41LatencyRead *int64) *NfsCollectionGetParams {
	o.SetMetricV41LatencyReadQueryParameter(metricV41LatencyRead)
	return o
}

// SetMetricV41LatencyReadQueryParameter adds the metricV41LatencyRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41LatencyReadQueryParameter(metricV41LatencyRead *int64) {
	o.MetricV41LatencyReadQueryParameter = metricV41LatencyRead
}

// WithMetricV41LatencyTotalQueryParameter adds the metricV41LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41LatencyTotalQueryParameter(metricV41LatencyTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV41LatencyTotalQueryParameter(metricV41LatencyTotal)
	return o
}

// SetMetricV41LatencyTotalQueryParameter adds the metricV41LatencyTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41LatencyTotalQueryParameter(metricV41LatencyTotal *int64) {
	o.MetricV41LatencyTotalQueryParameter = metricV41LatencyTotal
}

// WithMetricV41LatencyWriteQueryParameter adds the metricV41LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41LatencyWriteQueryParameter(metricV41LatencyWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV41LatencyWriteQueryParameter(metricV41LatencyWrite)
	return o
}

// SetMetricV41LatencyWriteQueryParameter adds the metricV41LatencyWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41LatencyWriteQueryParameter(metricV41LatencyWrite *int64) {
	o.MetricV41LatencyWriteQueryParameter = metricV41LatencyWrite
}

// WithMetricV41StatusQueryParameter adds the metricV41Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41StatusQueryParameter(metricV41Status *string) *NfsCollectionGetParams {
	o.SetMetricV41StatusQueryParameter(metricV41Status)
	return o
}

// SetMetricV41StatusQueryParameter adds the metricV41Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41StatusQueryParameter(metricV41Status *string) {
	o.MetricV41StatusQueryParameter = metricV41Status
}

// WithMetricV41ThroughputReadQueryParameter adds the metricV41ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41ThroughputReadQueryParameter(metricV41ThroughputRead *int64) *NfsCollectionGetParams {
	o.SetMetricV41ThroughputReadQueryParameter(metricV41ThroughputRead)
	return o
}

// SetMetricV41ThroughputReadQueryParameter adds the metricV41ThroughputRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41ThroughputReadQueryParameter(metricV41ThroughputRead *int64) {
	o.MetricV41ThroughputReadQueryParameter = metricV41ThroughputRead
}

// WithMetricV41ThroughputTotalQueryParameter adds the metricV41ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41ThroughputTotalQueryParameter(metricV41ThroughputTotal *int64) *NfsCollectionGetParams {
	o.SetMetricV41ThroughputTotalQueryParameter(metricV41ThroughputTotal)
	return o
}

// SetMetricV41ThroughputTotalQueryParameter adds the metricV41ThroughputTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41ThroughputTotalQueryParameter(metricV41ThroughputTotal *int64) {
	o.MetricV41ThroughputTotalQueryParameter = metricV41ThroughputTotal
}

// WithMetricV41ThroughputWriteQueryParameter adds the metricV41ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41ThroughputWriteQueryParameter(metricV41ThroughputWrite *int64) *NfsCollectionGetParams {
	o.SetMetricV41ThroughputWriteQueryParameter(metricV41ThroughputWrite)
	return o
}

// SetMetricV41ThroughputWriteQueryParameter adds the metricV41ThroughputWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41ThroughputWriteQueryParameter(metricV41ThroughputWrite *int64) {
	o.MetricV41ThroughputWriteQueryParameter = metricV41ThroughputWrite
}

// WithMetricV41TimestampQueryParameter adds the metricV41Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithMetricV41TimestampQueryParameter(metricV41Timestamp *string) *NfsCollectionGetParams {
	o.SetMetricV41TimestampQueryParameter(metricV41Timestamp)
	return o
}

// SetMetricV41TimestampQueryParameter adds the metricV41Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetMetricV41TimestampQueryParameter(metricV41Timestamp *string) {
	o.MetricV41TimestampQueryParameter = metricV41Timestamp
}

// WithOrderByQueryParameter adds the orderBy to the nfs collection get params
func (o *NfsCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *NfsCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the nfs collection get params
func (o *NfsCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithProtocolV364bitIDentifiersEnabledQueryParameter adds the protocolV364bitIdentifiersEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV364bitIDentifiersEnabledQueryParameter(protocolV364bitIdentifiersEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV364bitIDentifiersEnabledQueryParameter(protocolV364bitIdentifiersEnabled)
	return o
}

// SetProtocolV364bitIDentifiersEnabledQueryParameter adds the protocolV364bitIdentifiersEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV364bitIDentifiersEnabledQueryParameter(protocolV364bitIdentifiersEnabled *bool) {
	o.ProtocolV364bitIDentifiersEnabledQueryParameter = protocolV364bitIdentifiersEnabled
}

// WithProtocolV3EnabledQueryParameter adds the protocolV3Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3EnabledQueryParameter(protocolV3Enabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV3EnabledQueryParameter(protocolV3Enabled)
	return o
}

// SetProtocolV3EnabledQueryParameter adds the protocolV3Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3EnabledQueryParameter(protocolV3Enabled *bool) {
	o.ProtocolV3EnabledQueryParameter = protocolV3Enabled
}

// WithProtocolV3FeaturesConnectionDropQueryParameter adds the protocolV3FeaturesConnectionDrop to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesConnectionDropQueryParameter(protocolV3FeaturesConnectionDrop *bool) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesConnectionDropQueryParameter(protocolV3FeaturesConnectionDrop)
	return o
}

// SetProtocolV3FeaturesConnectionDropQueryParameter adds the protocolV3FeaturesConnectionDrop to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesConnectionDropQueryParameter(protocolV3FeaturesConnectionDrop *bool) {
	o.ProtocolV3FeaturesConnectionDropQueryParameter = protocolV3FeaturesConnectionDrop
}

// WithProtocolV3FeaturesEjukeboxEnabledQueryParameter adds the protocolV3FeaturesEjukeboxEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesEjukeboxEnabledQueryParameter(protocolV3FeaturesEjukeboxEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesEjukeboxEnabledQueryParameter(protocolV3FeaturesEjukeboxEnabled)
	return o
}

// SetProtocolV3FeaturesEjukeboxEnabledQueryParameter adds the protocolV3FeaturesEjukeboxEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesEjukeboxEnabledQueryParameter(protocolV3FeaturesEjukeboxEnabled *bool) {
	o.ProtocolV3FeaturesEjukeboxEnabledQueryParameter = protocolV3FeaturesEjukeboxEnabled
}

// WithProtocolV3FeaturesFsIDChangeQueryParameter adds the protocolV3FeaturesFsidChange to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesFsIDChangeQueryParameter(protocolV3FeaturesFsidChange *bool) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesFsIDChangeQueryParameter(protocolV3FeaturesFsidChange)
	return o
}

// SetProtocolV3FeaturesFsIDChangeQueryParameter adds the protocolV3FeaturesFsidChange to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesFsIDChangeQueryParameter(protocolV3FeaturesFsidChange *bool) {
	o.ProtocolV3FeaturesFsIDChangeQueryParameter = protocolV3FeaturesFsidChange
}

// WithProtocolV3FeaturesMountDaemonPortQueryParameter adds the protocolV3FeaturesMountDaemonPort to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesMountDaemonPortQueryParameter(protocolV3FeaturesMountDaemonPort *int64) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesMountDaemonPortQueryParameter(protocolV3FeaturesMountDaemonPort)
	return o
}

// SetProtocolV3FeaturesMountDaemonPortQueryParameter adds the protocolV3FeaturesMountDaemonPort to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesMountDaemonPortQueryParameter(protocolV3FeaturesMountDaemonPort *int64) {
	o.ProtocolV3FeaturesMountDaemonPortQueryParameter = protocolV3FeaturesMountDaemonPort
}

// WithProtocolV3FeaturesMountRootOnlyQueryParameter adds the protocolV3FeaturesMountRootOnly to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesMountRootOnlyQueryParameter(protocolV3FeaturesMountRootOnly *bool) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesMountRootOnlyQueryParameter(protocolV3FeaturesMountRootOnly)
	return o
}

// SetProtocolV3FeaturesMountRootOnlyQueryParameter adds the protocolV3FeaturesMountRootOnly to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesMountRootOnlyQueryParameter(protocolV3FeaturesMountRootOnly *bool) {
	o.ProtocolV3FeaturesMountRootOnlyQueryParameter = protocolV3FeaturesMountRootOnly
}

// WithProtocolV3FeaturesNetworkLockManagerPortQueryParameter adds the protocolV3FeaturesNetworkLockManagerPort to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesNetworkLockManagerPortQueryParameter(protocolV3FeaturesNetworkLockManagerPort *int64) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesNetworkLockManagerPortQueryParameter(protocolV3FeaturesNetworkLockManagerPort)
	return o
}

// SetProtocolV3FeaturesNetworkLockManagerPortQueryParameter adds the protocolV3FeaturesNetworkLockManagerPort to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesNetworkLockManagerPortQueryParameter(protocolV3FeaturesNetworkLockManagerPort *int64) {
	o.ProtocolV3FeaturesNetworkLockManagerPortQueryParameter = protocolV3FeaturesNetworkLockManagerPort
}

// WithProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter adds the protocolV3FeaturesNetworkStatusMonitorPort to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter(protocolV3FeaturesNetworkStatusMonitorPort *int64) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter(protocolV3FeaturesNetworkStatusMonitorPort)
	return o
}

// SetProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter adds the protocolV3FeaturesNetworkStatusMonitorPort to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter(protocolV3FeaturesNetworkStatusMonitorPort *int64) {
	o.ProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter = protocolV3FeaturesNetworkStatusMonitorPort
}

// WithProtocolV3FeaturesRquotaDaemonPortQueryParameter adds the protocolV3FeaturesRquotaDaemonPort to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV3FeaturesRquotaDaemonPortQueryParameter(protocolV3FeaturesRquotaDaemonPort *int64) *NfsCollectionGetParams {
	o.SetProtocolV3FeaturesRquotaDaemonPortQueryParameter(protocolV3FeaturesRquotaDaemonPort)
	return o
}

// SetProtocolV3FeaturesRquotaDaemonPortQueryParameter adds the protocolV3FeaturesRquotaDaemonPort to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV3FeaturesRquotaDaemonPortQueryParameter(protocolV3FeaturesRquotaDaemonPort *int64) {
	o.ProtocolV3FeaturesRquotaDaemonPortQueryParameter = protocolV3FeaturesRquotaDaemonPort
}

// WithProtocolV40EnabledQueryParameter adds the protocolV40Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40EnabledQueryParameter(protocolV40Enabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40EnabledQueryParameter(protocolV40Enabled)
	return o
}

// SetProtocolV40EnabledQueryParameter adds the protocolV40Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40EnabledQueryParameter(protocolV40Enabled *bool) {
	o.ProtocolV40EnabledQueryParameter = protocolV40Enabled
}

// WithProtocolV40FeaturesACLEnabledQueryParameter adds the protocolV40FeaturesACLEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesACLEnabledQueryParameter(protocolV40FeaturesACLEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesACLEnabledQueryParameter(protocolV40FeaturesACLEnabled)
	return o
}

// SetProtocolV40FeaturesACLEnabledQueryParameter adds the protocolV40FeaturesAclEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesACLEnabledQueryParameter(protocolV40FeaturesACLEnabled *bool) {
	o.ProtocolV40FeaturesACLEnabledQueryParameter = protocolV40FeaturesACLEnabled
}

// WithProtocolV40FeaturesACLMaxAcesQueryParameter adds the protocolV40FeaturesACLMaxAces to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesACLMaxAcesQueryParameter(protocolV40FeaturesACLMaxAces *int64) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesACLMaxAcesQueryParameter(protocolV40FeaturesACLMaxAces)
	return o
}

// SetProtocolV40FeaturesACLMaxAcesQueryParameter adds the protocolV40FeaturesAclMaxAces to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesACLMaxAcesQueryParameter(protocolV40FeaturesACLMaxAces *int64) {
	o.ProtocolV40FeaturesACLMaxAcesQueryParameter = protocolV40FeaturesACLMaxAces
}

// WithProtocolV40FeaturesACLPreserveQueryParameter adds the protocolV40FeaturesACLPreserve to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesACLPreserveQueryParameter(protocolV40FeaturesACLPreserve *bool) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesACLPreserveQueryParameter(protocolV40FeaturesACLPreserve)
	return o
}

// SetProtocolV40FeaturesACLPreserveQueryParameter adds the protocolV40FeaturesAclPreserve to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesACLPreserveQueryParameter(protocolV40FeaturesACLPreserve *bool) {
	o.ProtocolV40FeaturesACLPreserveQueryParameter = protocolV40FeaturesACLPreserve
}

// WithProtocolV40FeaturesReadDelegationEnabledQueryParameter adds the protocolV40FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesReadDelegationEnabledQueryParameter(protocolV40FeaturesReadDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesReadDelegationEnabledQueryParameter(protocolV40FeaturesReadDelegationEnabled)
	return o
}

// SetProtocolV40FeaturesReadDelegationEnabledQueryParameter adds the protocolV40FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesReadDelegationEnabledQueryParameter(protocolV40FeaturesReadDelegationEnabled *bool) {
	o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter = protocolV40FeaturesReadDelegationEnabled
}

// WithProtocolV40FeaturesWriteDelegationEnabledQueryParameter adds the protocolV40FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV40FeaturesWriteDelegationEnabledQueryParameter(protocolV40FeaturesWriteDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV40FeaturesWriteDelegationEnabledQueryParameter(protocolV40FeaturesWriteDelegationEnabled)
	return o
}

// SetProtocolV40FeaturesWriteDelegationEnabledQueryParameter adds the protocolV40FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV40FeaturesWriteDelegationEnabledQueryParameter(protocolV40FeaturesWriteDelegationEnabled *bool) {
	o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter = protocolV40FeaturesWriteDelegationEnabled
}

// WithProtocolV41EnabledQueryParameter adds the protocolV41Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41EnabledQueryParameter(protocolV41Enabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41EnabledQueryParameter(protocolV41Enabled)
	return o
}

// SetProtocolV41EnabledQueryParameter adds the protocolV41Enabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41EnabledQueryParameter(protocolV41Enabled *bool) {
	o.ProtocolV41EnabledQueryParameter = protocolV41Enabled
}

// WithProtocolV41FeaturesACLEnabledQueryParameter adds the protocolV41FeaturesACLEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesACLEnabledQueryParameter(protocolV41FeaturesACLEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesACLEnabledQueryParameter(protocolV41FeaturesACLEnabled)
	return o
}

// SetProtocolV41FeaturesACLEnabledQueryParameter adds the protocolV41FeaturesAclEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesACLEnabledQueryParameter(protocolV41FeaturesACLEnabled *bool) {
	o.ProtocolV41FeaturesACLEnabledQueryParameter = protocolV41FeaturesACLEnabled
}

// WithProtocolV41FeaturesImplementationDomainQueryParameter adds the protocolV41FeaturesImplementationDomain to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesImplementationDomainQueryParameter(protocolV41FeaturesImplementationDomain *string) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesImplementationDomainQueryParameter(protocolV41FeaturesImplementationDomain)
	return o
}

// SetProtocolV41FeaturesImplementationDomainQueryParameter adds the protocolV41FeaturesImplementationDomain to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesImplementationDomainQueryParameter(protocolV41FeaturesImplementationDomain *string) {
	o.ProtocolV41FeaturesImplementationDomainQueryParameter = protocolV41FeaturesImplementationDomain
}

// WithProtocolV41FeaturesImplementationNameQueryParameter adds the protocolV41FeaturesImplementationName to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesImplementationNameQueryParameter(protocolV41FeaturesImplementationName *string) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesImplementationNameQueryParameter(protocolV41FeaturesImplementationName)
	return o
}

// SetProtocolV41FeaturesImplementationNameQueryParameter adds the protocolV41FeaturesImplementationName to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesImplementationNameQueryParameter(protocolV41FeaturesImplementationName *string) {
	o.ProtocolV41FeaturesImplementationNameQueryParameter = protocolV41FeaturesImplementationName
}

// WithProtocolV41FeaturesPnfsEnabledQueryParameter adds the protocolV41FeaturesPnfsEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesPnfsEnabledQueryParameter(protocolV41FeaturesPnfsEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesPnfsEnabledQueryParameter(protocolV41FeaturesPnfsEnabled)
	return o
}

// SetProtocolV41FeaturesPnfsEnabledQueryParameter adds the protocolV41FeaturesPnfsEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesPnfsEnabledQueryParameter(protocolV41FeaturesPnfsEnabled *bool) {
	o.ProtocolV41FeaturesPnfsEnabledQueryParameter = protocolV41FeaturesPnfsEnabled
}

// WithProtocolV41FeaturesReadDelegationEnabledQueryParameter adds the protocolV41FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesReadDelegationEnabledQueryParameter(protocolV41FeaturesReadDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesReadDelegationEnabledQueryParameter(protocolV41FeaturesReadDelegationEnabled)
	return o
}

// SetProtocolV41FeaturesReadDelegationEnabledQueryParameter adds the protocolV41FeaturesReadDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesReadDelegationEnabledQueryParameter(protocolV41FeaturesReadDelegationEnabled *bool) {
	o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter = protocolV41FeaturesReadDelegationEnabled
}

// WithProtocolV41FeaturesWriteDelegationEnabledQueryParameter adds the protocolV41FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV41FeaturesWriteDelegationEnabledQueryParameter(protocolV41FeaturesWriteDelegationEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV41FeaturesWriteDelegationEnabledQueryParameter(protocolV41FeaturesWriteDelegationEnabled)
	return o
}

// SetProtocolV41FeaturesWriteDelegationEnabledQueryParameter adds the protocolV41FeaturesWriteDelegationEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV41FeaturesWriteDelegationEnabledQueryParameter(protocolV41FeaturesWriteDelegationEnabled *bool) {
	o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter = protocolV41FeaturesWriteDelegationEnabled
}

// WithProtocolV464bitIDentifiersEnabledQueryParameter adds the protocolV464bitIdentifiersEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV464bitIDentifiersEnabledQueryParameter(protocolV464bitIdentifiersEnabled *bool) *NfsCollectionGetParams {
	o.SetProtocolV464bitIDentifiersEnabledQueryParameter(protocolV464bitIdentifiersEnabled)
	return o
}

// SetProtocolV464bitIDentifiersEnabledQueryParameter adds the protocolV464bitIdentifiersEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV464bitIDentifiersEnabledQueryParameter(protocolV464bitIdentifiersEnabled *bool) {
	o.ProtocolV464bitIDentifiersEnabledQueryParameter = protocolV464bitIdentifiersEnabled
}

// WithProtocolV4IDDomainQueryParameter adds the protocolV4IDDomain to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolV4IDDomainQueryParameter(protocolV4IDDomain *string) *NfsCollectionGetParams {
	o.SetProtocolV4IDDomainQueryParameter(protocolV4IDDomain)
	return o
}

// SetProtocolV4IDDomainQueryParameter adds the protocolV4IdDomain to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolV4IDDomainQueryParameter(protocolV4IDDomain *string) {
	o.ProtocolV4IDDomainQueryParameter = protocolV4IDDomain
}

// WithProtocolAccessRulesAuthTypeQueryParameter adds the protocolAccessRulesAuthType to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolAccessRulesAuthTypeQueryParameter(protocolAccessRulesAuthType *string) *NfsCollectionGetParams {
	o.SetProtocolAccessRulesAuthTypeQueryParameter(protocolAccessRulesAuthType)
	return o
}

// SetProtocolAccessRulesAuthTypeQueryParameter adds the protocolAccessRulesAuthType to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolAccessRulesAuthTypeQueryParameter(protocolAccessRulesAuthType *string) {
	o.ProtocolAccessRulesAuthTypeQueryParameter = protocolAccessRulesAuthType
}

// WithProtocolAccessRulesCifsAccessTypeQueryParameter adds the protocolAccessRulesCifsAccessType to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolAccessRulesCifsAccessTypeQueryParameter(protocolAccessRulesCifsAccessType *string) *NfsCollectionGetParams {
	o.SetProtocolAccessRulesCifsAccessTypeQueryParameter(protocolAccessRulesCifsAccessType)
	return o
}

// SetProtocolAccessRulesCifsAccessTypeQueryParameter adds the protocolAccessRulesCifsAccessType to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolAccessRulesCifsAccessTypeQueryParameter(protocolAccessRulesCifsAccessType *string) {
	o.ProtocolAccessRulesCifsAccessTypeQueryParameter = protocolAccessRulesCifsAccessType
}

// WithProtocolAccessRulesClientIPQueryParameter adds the protocolAccessRulesClientIP to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolAccessRulesClientIPQueryParameter(protocolAccessRulesClientIP *string) *NfsCollectionGetParams {
	o.SetProtocolAccessRulesClientIPQueryParameter(protocolAccessRulesClientIP)
	return o
}

// SetProtocolAccessRulesClientIPQueryParameter adds the protocolAccessRulesClientIp to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolAccessRulesClientIPQueryParameter(protocolAccessRulesClientIP *string) {
	o.ProtocolAccessRulesClientIPQueryParameter = protocolAccessRulesClientIP
}

// WithProtocolAccessRulesNfs3AccessTypeQueryParameter adds the protocolAccessRulesNfs3AccessType to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolAccessRulesNfs3AccessTypeQueryParameter(protocolAccessRulesNfs3AccessType *string) *NfsCollectionGetParams {
	o.SetProtocolAccessRulesNfs3AccessTypeQueryParameter(protocolAccessRulesNfs3AccessType)
	return o
}

// SetProtocolAccessRulesNfs3AccessTypeQueryParameter adds the protocolAccessRulesNfs3AccessType to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolAccessRulesNfs3AccessTypeQueryParameter(protocolAccessRulesNfs3AccessType *string) {
	o.ProtocolAccessRulesNfs3AccessTypeQueryParameter = protocolAccessRulesNfs3AccessType
}

// WithProtocolAccessRulesNfs4AccessTypeQueryParameter adds the protocolAccessRulesNfs4AccessType to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolAccessRulesNfs4AccessTypeQueryParameter(protocolAccessRulesNfs4AccessType *string) *NfsCollectionGetParams {
	o.SetProtocolAccessRulesNfs4AccessTypeQueryParameter(protocolAccessRulesNfs4AccessType)
	return o
}

// SetProtocolAccessRulesNfs4AccessTypeQueryParameter adds the protocolAccessRulesNfs4AccessType to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolAccessRulesNfs4AccessTypeQueryParameter(protocolAccessRulesNfs4AccessType *string) {
	o.ProtocolAccessRulesNfs4AccessTypeQueryParameter = protocolAccessRulesNfs4AccessType
}

// WithProtocolAccessRulesVolumeQueryParameter adds the protocolAccessRulesVolume to the nfs collection get params
func (o *NfsCollectionGetParams) WithProtocolAccessRulesVolumeQueryParameter(protocolAccessRulesVolume *string) *NfsCollectionGetParams {
	o.SetProtocolAccessRulesVolumeQueryParameter(protocolAccessRulesVolume)
	return o
}

// SetProtocolAccessRulesVolumeQueryParameter adds the protocolAccessRulesVolume to the nfs collection get params
func (o *NfsCollectionGetParams) SetProtocolAccessRulesVolumeQueryParameter(protocolAccessRulesVolume *string) {
	o.ProtocolAccessRulesVolumeQueryParameter = protocolAccessRulesVolume
}

// WithQtreeExportEnabledQueryParameter adds the qtreeExportEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithQtreeExportEnabledQueryParameter(qtreeExportEnabled *bool) *NfsCollectionGetParams {
	o.SetQtreeExportEnabledQueryParameter(qtreeExportEnabled)
	return o
}

// SetQtreeExportEnabledQueryParameter adds the qtreeExportEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetQtreeExportEnabledQueryParameter(qtreeExportEnabled *bool) {
	o.QtreeExportEnabledQueryParameter = qtreeExportEnabled
}

// WithQtreeValidateExportQueryParameter adds the qtreeValidateExport to the nfs collection get params
func (o *NfsCollectionGetParams) WithQtreeValidateExportQueryParameter(qtreeValidateExport *bool) *NfsCollectionGetParams {
	o.SetQtreeValidateExportQueryParameter(qtreeValidateExport)
	return o
}

// SetQtreeValidateExportQueryParameter adds the qtreeValidateExport to the nfs collection get params
func (o *NfsCollectionGetParams) SetQtreeValidateExportQueryParameter(qtreeValidateExport *bool) {
	o.QtreeValidateExportQueryParameter = qtreeValidateExport
}

// WithReturnRecordsQueryParameter adds the returnRecords to the nfs collection get params
func (o *NfsCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *NfsCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the nfs collection get params
func (o *NfsCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the nfs collection get params
func (o *NfsCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *NfsCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the nfs collection get params
func (o *NfsCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithRootIgnoreNtACLQueryParameter adds the rootIgnoreNtACL to the nfs collection get params
func (o *NfsCollectionGetParams) WithRootIgnoreNtACLQueryParameter(rootIgnoreNtACL *bool) *NfsCollectionGetParams {
	o.SetRootIgnoreNtACLQueryParameter(rootIgnoreNtACL)
	return o
}

// SetRootIgnoreNtACLQueryParameter adds the rootIgnoreNtAcl to the nfs collection get params
func (o *NfsCollectionGetParams) SetRootIgnoreNtACLQueryParameter(rootIgnoreNtACL *bool) {
	o.RootIgnoreNtACLQueryParameter = rootIgnoreNtACL
}

// WithRootSkIPWritePermissionCheckQueryParameter adds the rootSkipWritePermissionCheck to the nfs collection get params
func (o *NfsCollectionGetParams) WithRootSkIPWritePermissionCheckQueryParameter(rootSkipWritePermissionCheck *bool) *NfsCollectionGetParams {
	o.SetRootSkIPWritePermissionCheckQueryParameter(rootSkipWritePermissionCheck)
	return o
}

// SetRootSkIPWritePermissionCheckQueryParameter adds the rootSkipWritePermissionCheck to the nfs collection get params
func (o *NfsCollectionGetParams) SetRootSkIPWritePermissionCheckQueryParameter(rootSkipWritePermissionCheck *bool) {
	o.RootSkIPWritePermissionCheckQueryParameter = rootSkipWritePermissionCheck
}

// WithRquotaEnabledQueryParameter adds the rquotaEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithRquotaEnabledQueryParameter(rquotaEnabled *bool) *NfsCollectionGetParams {
	o.SetRquotaEnabledQueryParameter(rquotaEnabled)
	return o
}

// SetRquotaEnabledQueryParameter adds the rquotaEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetRquotaEnabledQueryParameter(rquotaEnabled *bool) {
	o.RquotaEnabledQueryParameter = rquotaEnabled
}

// WithSecurityChownModeQueryParameter adds the securityChownMode to the nfs collection get params
func (o *NfsCollectionGetParams) WithSecurityChownModeQueryParameter(securityChownMode *string) *NfsCollectionGetParams {
	o.SetSecurityChownModeQueryParameter(securityChownMode)
	return o
}

// SetSecurityChownModeQueryParameter adds the securityChownMode to the nfs collection get params
func (o *NfsCollectionGetParams) SetSecurityChownModeQueryParameter(securityChownMode *string) {
	o.SecurityChownModeQueryParameter = securityChownMode
}

// WithSecurityNtACLDisplayPermissionQueryParameter adds the securityNtACLDisplayPermission to the nfs collection get params
func (o *NfsCollectionGetParams) WithSecurityNtACLDisplayPermissionQueryParameter(securityNtACLDisplayPermission *bool) *NfsCollectionGetParams {
	o.SetSecurityNtACLDisplayPermissionQueryParameter(securityNtACLDisplayPermission)
	return o
}

// SetSecurityNtACLDisplayPermissionQueryParameter adds the securityNtAclDisplayPermission to the nfs collection get params
func (o *NfsCollectionGetParams) SetSecurityNtACLDisplayPermissionQueryParameter(securityNtACLDisplayPermission *bool) {
	o.SecurityNtACLDisplayPermissionQueryParameter = securityNtACLDisplayPermission
}

// WithSecurityNtfsUnixSecurityQueryParameter adds the securityNtfsUnixSecurity to the nfs collection get params
func (o *NfsCollectionGetParams) WithSecurityNtfsUnixSecurityQueryParameter(securityNtfsUnixSecurity *string) *NfsCollectionGetParams {
	o.SetSecurityNtfsUnixSecurityQueryParameter(securityNtfsUnixSecurity)
	return o
}

// SetSecurityNtfsUnixSecurityQueryParameter adds the securityNtfsUnixSecurity to the nfs collection get params
func (o *NfsCollectionGetParams) SetSecurityNtfsUnixSecurityQueryParameter(securityNtfsUnixSecurity *string) {
	o.SecurityNtfsUnixSecurityQueryParameter = securityNtfsUnixSecurity
}

// WithSecurityPermittedEncryptionTypesQueryParameter adds the securityPermittedEncryptionTypes to the nfs collection get params
func (o *NfsCollectionGetParams) WithSecurityPermittedEncryptionTypesQueryParameter(securityPermittedEncryptionTypes *string) *NfsCollectionGetParams {
	o.SetSecurityPermittedEncryptionTypesQueryParameter(securityPermittedEncryptionTypes)
	return o
}

// SetSecurityPermittedEncryptionTypesQueryParameter adds the securityPermittedEncryptionTypes to the nfs collection get params
func (o *NfsCollectionGetParams) SetSecurityPermittedEncryptionTypesQueryParameter(securityPermittedEncryptionTypes *string) {
	o.SecurityPermittedEncryptionTypesQueryParameter = securityPermittedEncryptionTypes
}

// WithSecurityRpcsecContextIDleQueryParameter adds the securityRpcsecContextIdle to the nfs collection get params
func (o *NfsCollectionGetParams) WithSecurityRpcsecContextIDleQueryParameter(securityRpcsecContextIdle *int64) *NfsCollectionGetParams {
	o.SetSecurityRpcsecContextIDleQueryParameter(securityRpcsecContextIdle)
	return o
}

// SetSecurityRpcsecContextIDleQueryParameter adds the securityRpcsecContextIdle to the nfs collection get params
func (o *NfsCollectionGetParams) SetSecurityRpcsecContextIDleQueryParameter(securityRpcsecContextIdle *int64) {
	o.SecurityRpcsecContextIDleQueryParameter = securityRpcsecContextIdle
}

// WithShowmountEnabledQueryParameter adds the showmountEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithShowmountEnabledQueryParameter(showmountEnabled *bool) *NfsCollectionGetParams {
	o.SetShowmountEnabledQueryParameter(showmountEnabled)
	return o
}

// SetShowmountEnabledQueryParameter adds the showmountEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetShowmountEnabledQueryParameter(showmountEnabled *bool) {
	o.ShowmountEnabledQueryParameter = showmountEnabled
}

// WithStateQueryParameter adds the state to the nfs collection get params
func (o *NfsCollectionGetParams) WithStateQueryParameter(state *string) *NfsCollectionGetParams {
	o.SetStateQueryParameter(state)
	return o
}

// SetStateQueryParameter adds the state to the nfs collection get params
func (o *NfsCollectionGetParams) SetStateQueryParameter(state *string) {
	o.StateQueryParameter = state
}

// WithStatisticsV3IopsRawOtherQueryParameter adds the statisticsV3IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawOtherQueryParameter(statisticsV3IopsRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawOtherQueryParameter(statisticsV3IopsRawOther)
	return o
}

// SetStatisticsV3IopsRawOtherQueryParameter adds the statisticsV3IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawOtherQueryParameter(statisticsV3IopsRawOther *int64) {
	o.StatisticsV3IopsRawOtherQueryParameter = statisticsV3IopsRawOther
}

// WithStatisticsV3IopsRawReadQueryParameter adds the statisticsV3IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawReadQueryParameter(statisticsV3IopsRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawReadQueryParameter(statisticsV3IopsRawRead)
	return o
}

// SetStatisticsV3IopsRawReadQueryParameter adds the statisticsV3IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawReadQueryParameter(statisticsV3IopsRawRead *int64) {
	o.StatisticsV3IopsRawReadQueryParameter = statisticsV3IopsRawRead
}

// WithStatisticsV3IopsRawTotalQueryParameter adds the statisticsV3IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawTotalQueryParameter(statisticsV3IopsRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawTotalQueryParameter(statisticsV3IopsRawTotal)
	return o
}

// SetStatisticsV3IopsRawTotalQueryParameter adds the statisticsV3IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawTotalQueryParameter(statisticsV3IopsRawTotal *int64) {
	o.StatisticsV3IopsRawTotalQueryParameter = statisticsV3IopsRawTotal
}

// WithStatisticsV3IopsRawWriteQueryParameter adds the statisticsV3IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3IopsRawWriteQueryParameter(statisticsV3IopsRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3IopsRawWriteQueryParameter(statisticsV3IopsRawWrite)
	return o
}

// SetStatisticsV3IopsRawWriteQueryParameter adds the statisticsV3IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3IopsRawWriteQueryParameter(statisticsV3IopsRawWrite *int64) {
	o.StatisticsV3IopsRawWriteQueryParameter = statisticsV3IopsRawWrite
}

// WithStatisticsV3LatencyRawOtherQueryParameter adds the statisticsV3LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawOtherQueryParameter(statisticsV3LatencyRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawOtherQueryParameter(statisticsV3LatencyRawOther)
	return o
}

// SetStatisticsV3LatencyRawOtherQueryParameter adds the statisticsV3LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawOtherQueryParameter(statisticsV3LatencyRawOther *int64) {
	o.StatisticsV3LatencyRawOtherQueryParameter = statisticsV3LatencyRawOther
}

// WithStatisticsV3LatencyRawReadQueryParameter adds the statisticsV3LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawReadQueryParameter(statisticsV3LatencyRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawReadQueryParameter(statisticsV3LatencyRawRead)
	return o
}

// SetStatisticsV3LatencyRawReadQueryParameter adds the statisticsV3LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawReadQueryParameter(statisticsV3LatencyRawRead *int64) {
	o.StatisticsV3LatencyRawReadQueryParameter = statisticsV3LatencyRawRead
}

// WithStatisticsV3LatencyRawTotalQueryParameter adds the statisticsV3LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawTotalQueryParameter(statisticsV3LatencyRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawTotalQueryParameter(statisticsV3LatencyRawTotal)
	return o
}

// SetStatisticsV3LatencyRawTotalQueryParameter adds the statisticsV3LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawTotalQueryParameter(statisticsV3LatencyRawTotal *int64) {
	o.StatisticsV3LatencyRawTotalQueryParameter = statisticsV3LatencyRawTotal
}

// WithStatisticsV3LatencyRawWriteQueryParameter adds the statisticsV3LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3LatencyRawWriteQueryParameter(statisticsV3LatencyRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3LatencyRawWriteQueryParameter(statisticsV3LatencyRawWrite)
	return o
}

// SetStatisticsV3LatencyRawWriteQueryParameter adds the statisticsV3LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3LatencyRawWriteQueryParameter(statisticsV3LatencyRawWrite *int64) {
	o.StatisticsV3LatencyRawWriteQueryParameter = statisticsV3LatencyRawWrite
}

// WithStatisticsV3StatusQueryParameter adds the statisticsV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3StatusQueryParameter(statisticsV3Status *string) *NfsCollectionGetParams {
	o.SetStatisticsV3StatusQueryParameter(statisticsV3Status)
	return o
}

// SetStatisticsV3StatusQueryParameter adds the statisticsV3Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3StatusQueryParameter(statisticsV3Status *string) {
	o.StatisticsV3StatusQueryParameter = statisticsV3Status
}

// WithStatisticsV3ThroughputRawReadQueryParameter adds the statisticsV3ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3ThroughputRawReadQueryParameter(statisticsV3ThroughputRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3ThroughputRawReadQueryParameter(statisticsV3ThroughputRawRead)
	return o
}

// SetStatisticsV3ThroughputRawReadQueryParameter adds the statisticsV3ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3ThroughputRawReadQueryParameter(statisticsV3ThroughputRawRead *int64) {
	o.StatisticsV3ThroughputRawReadQueryParameter = statisticsV3ThroughputRawRead
}

// WithStatisticsV3ThroughputRawTotalQueryParameter adds the statisticsV3ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3ThroughputRawTotalQueryParameter(statisticsV3ThroughputRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3ThroughputRawTotalQueryParameter(statisticsV3ThroughputRawTotal)
	return o
}

// SetStatisticsV3ThroughputRawTotalQueryParameter adds the statisticsV3ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3ThroughputRawTotalQueryParameter(statisticsV3ThroughputRawTotal *int64) {
	o.StatisticsV3ThroughputRawTotalQueryParameter = statisticsV3ThroughputRawTotal
}

// WithStatisticsV3ThroughputRawWriteQueryParameter adds the statisticsV3ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3ThroughputRawWriteQueryParameter(statisticsV3ThroughputRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV3ThroughputRawWriteQueryParameter(statisticsV3ThroughputRawWrite)
	return o
}

// SetStatisticsV3ThroughputRawWriteQueryParameter adds the statisticsV3ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3ThroughputRawWriteQueryParameter(statisticsV3ThroughputRawWrite *int64) {
	o.StatisticsV3ThroughputRawWriteQueryParameter = statisticsV3ThroughputRawWrite
}

// WithStatisticsV3TimestampQueryParameter adds the statisticsV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV3TimestampQueryParameter(statisticsV3Timestamp *string) *NfsCollectionGetParams {
	o.SetStatisticsV3TimestampQueryParameter(statisticsV3Timestamp)
	return o
}

// SetStatisticsV3TimestampQueryParameter adds the statisticsV3Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV3TimestampQueryParameter(statisticsV3Timestamp *string) {
	o.StatisticsV3TimestampQueryParameter = statisticsV3Timestamp
}

// WithStatisticsV4IopsRawOtherQueryParameter adds the statisticsV4IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4IopsRawOtherQueryParameter(statisticsV4IopsRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4IopsRawOtherQueryParameter(statisticsV4IopsRawOther)
	return o
}

// SetStatisticsV4IopsRawOtherQueryParameter adds the statisticsV4IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4IopsRawOtherQueryParameter(statisticsV4IopsRawOther *int64) {
	o.StatisticsV4IopsRawOtherQueryParameter = statisticsV4IopsRawOther
}

// WithStatisticsV4IopsRawReadQueryParameter adds the statisticsV4IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4IopsRawReadQueryParameter(statisticsV4IopsRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4IopsRawReadQueryParameter(statisticsV4IopsRawRead)
	return o
}

// SetStatisticsV4IopsRawReadQueryParameter adds the statisticsV4IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4IopsRawReadQueryParameter(statisticsV4IopsRawRead *int64) {
	o.StatisticsV4IopsRawReadQueryParameter = statisticsV4IopsRawRead
}

// WithStatisticsV4IopsRawTotalQueryParameter adds the statisticsV4IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4IopsRawTotalQueryParameter(statisticsV4IopsRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4IopsRawTotalQueryParameter(statisticsV4IopsRawTotal)
	return o
}

// SetStatisticsV4IopsRawTotalQueryParameter adds the statisticsV4IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4IopsRawTotalQueryParameter(statisticsV4IopsRawTotal *int64) {
	o.StatisticsV4IopsRawTotalQueryParameter = statisticsV4IopsRawTotal
}

// WithStatisticsV4IopsRawWriteQueryParameter adds the statisticsV4IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4IopsRawWriteQueryParameter(statisticsV4IopsRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4IopsRawWriteQueryParameter(statisticsV4IopsRawWrite)
	return o
}

// SetStatisticsV4IopsRawWriteQueryParameter adds the statisticsV4IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4IopsRawWriteQueryParameter(statisticsV4IopsRawWrite *int64) {
	o.StatisticsV4IopsRawWriteQueryParameter = statisticsV4IopsRawWrite
}

// WithStatisticsV4LatencyRawOtherQueryParameter adds the statisticsV4LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4LatencyRawOtherQueryParameter(statisticsV4LatencyRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4LatencyRawOtherQueryParameter(statisticsV4LatencyRawOther)
	return o
}

// SetStatisticsV4LatencyRawOtherQueryParameter adds the statisticsV4LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4LatencyRawOtherQueryParameter(statisticsV4LatencyRawOther *int64) {
	o.StatisticsV4LatencyRawOtherQueryParameter = statisticsV4LatencyRawOther
}

// WithStatisticsV4LatencyRawReadQueryParameter adds the statisticsV4LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4LatencyRawReadQueryParameter(statisticsV4LatencyRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4LatencyRawReadQueryParameter(statisticsV4LatencyRawRead)
	return o
}

// SetStatisticsV4LatencyRawReadQueryParameter adds the statisticsV4LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4LatencyRawReadQueryParameter(statisticsV4LatencyRawRead *int64) {
	o.StatisticsV4LatencyRawReadQueryParameter = statisticsV4LatencyRawRead
}

// WithStatisticsV4LatencyRawTotalQueryParameter adds the statisticsV4LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4LatencyRawTotalQueryParameter(statisticsV4LatencyRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4LatencyRawTotalQueryParameter(statisticsV4LatencyRawTotal)
	return o
}

// SetStatisticsV4LatencyRawTotalQueryParameter adds the statisticsV4LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4LatencyRawTotalQueryParameter(statisticsV4LatencyRawTotal *int64) {
	o.StatisticsV4LatencyRawTotalQueryParameter = statisticsV4LatencyRawTotal
}

// WithStatisticsV4LatencyRawWriteQueryParameter adds the statisticsV4LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4LatencyRawWriteQueryParameter(statisticsV4LatencyRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4LatencyRawWriteQueryParameter(statisticsV4LatencyRawWrite)
	return o
}

// SetStatisticsV4LatencyRawWriteQueryParameter adds the statisticsV4LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4LatencyRawWriteQueryParameter(statisticsV4LatencyRawWrite *int64) {
	o.StatisticsV4LatencyRawWriteQueryParameter = statisticsV4LatencyRawWrite
}

// WithStatisticsV4StatusQueryParameter adds the statisticsV4Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4StatusQueryParameter(statisticsV4Status *string) *NfsCollectionGetParams {
	o.SetStatisticsV4StatusQueryParameter(statisticsV4Status)
	return o
}

// SetStatisticsV4StatusQueryParameter adds the statisticsV4Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4StatusQueryParameter(statisticsV4Status *string) {
	o.StatisticsV4StatusQueryParameter = statisticsV4Status
}

// WithStatisticsV4ThroughputRawReadQueryParameter adds the statisticsV4ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4ThroughputRawReadQueryParameter(statisticsV4ThroughputRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4ThroughputRawReadQueryParameter(statisticsV4ThroughputRawRead)
	return o
}

// SetStatisticsV4ThroughputRawReadQueryParameter adds the statisticsV4ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4ThroughputRawReadQueryParameter(statisticsV4ThroughputRawRead *int64) {
	o.StatisticsV4ThroughputRawReadQueryParameter = statisticsV4ThroughputRawRead
}

// WithStatisticsV4ThroughputRawTotalQueryParameter adds the statisticsV4ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4ThroughputRawTotalQueryParameter(statisticsV4ThroughputRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4ThroughputRawTotalQueryParameter(statisticsV4ThroughputRawTotal)
	return o
}

// SetStatisticsV4ThroughputRawTotalQueryParameter adds the statisticsV4ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4ThroughputRawTotalQueryParameter(statisticsV4ThroughputRawTotal *int64) {
	o.StatisticsV4ThroughputRawTotalQueryParameter = statisticsV4ThroughputRawTotal
}

// WithStatisticsV4ThroughputRawWriteQueryParameter adds the statisticsV4ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4ThroughputRawWriteQueryParameter(statisticsV4ThroughputRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV4ThroughputRawWriteQueryParameter(statisticsV4ThroughputRawWrite)
	return o
}

// SetStatisticsV4ThroughputRawWriteQueryParameter adds the statisticsV4ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4ThroughputRawWriteQueryParameter(statisticsV4ThroughputRawWrite *int64) {
	o.StatisticsV4ThroughputRawWriteQueryParameter = statisticsV4ThroughputRawWrite
}

// WithStatisticsV4TimestampQueryParameter adds the statisticsV4Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV4TimestampQueryParameter(statisticsV4Timestamp *string) *NfsCollectionGetParams {
	o.SetStatisticsV4TimestampQueryParameter(statisticsV4Timestamp)
	return o
}

// SetStatisticsV4TimestampQueryParameter adds the statisticsV4Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV4TimestampQueryParameter(statisticsV4Timestamp *string) {
	o.StatisticsV4TimestampQueryParameter = statisticsV4Timestamp
}

// WithStatisticsV41IopsRawOtherQueryParameter adds the statisticsV41IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41IopsRawOtherQueryParameter(statisticsV41IopsRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41IopsRawOtherQueryParameter(statisticsV41IopsRawOther)
	return o
}

// SetStatisticsV41IopsRawOtherQueryParameter adds the statisticsV41IopsRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41IopsRawOtherQueryParameter(statisticsV41IopsRawOther *int64) {
	o.StatisticsV41IopsRawOtherQueryParameter = statisticsV41IopsRawOther
}

// WithStatisticsV41IopsRawReadQueryParameter adds the statisticsV41IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41IopsRawReadQueryParameter(statisticsV41IopsRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41IopsRawReadQueryParameter(statisticsV41IopsRawRead)
	return o
}

// SetStatisticsV41IopsRawReadQueryParameter adds the statisticsV41IopsRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41IopsRawReadQueryParameter(statisticsV41IopsRawRead *int64) {
	o.StatisticsV41IopsRawReadQueryParameter = statisticsV41IopsRawRead
}

// WithStatisticsV41IopsRawTotalQueryParameter adds the statisticsV41IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41IopsRawTotalQueryParameter(statisticsV41IopsRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41IopsRawTotalQueryParameter(statisticsV41IopsRawTotal)
	return o
}

// SetStatisticsV41IopsRawTotalQueryParameter adds the statisticsV41IopsRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41IopsRawTotalQueryParameter(statisticsV41IopsRawTotal *int64) {
	o.StatisticsV41IopsRawTotalQueryParameter = statisticsV41IopsRawTotal
}

// WithStatisticsV41IopsRawWriteQueryParameter adds the statisticsV41IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41IopsRawWriteQueryParameter(statisticsV41IopsRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41IopsRawWriteQueryParameter(statisticsV41IopsRawWrite)
	return o
}

// SetStatisticsV41IopsRawWriteQueryParameter adds the statisticsV41IopsRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41IopsRawWriteQueryParameter(statisticsV41IopsRawWrite *int64) {
	o.StatisticsV41IopsRawWriteQueryParameter = statisticsV41IopsRawWrite
}

// WithStatisticsV41LatencyRawOtherQueryParameter adds the statisticsV41LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41LatencyRawOtherQueryParameter(statisticsV41LatencyRawOther *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41LatencyRawOtherQueryParameter(statisticsV41LatencyRawOther)
	return o
}

// SetStatisticsV41LatencyRawOtherQueryParameter adds the statisticsV41LatencyRawOther to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41LatencyRawOtherQueryParameter(statisticsV41LatencyRawOther *int64) {
	o.StatisticsV41LatencyRawOtherQueryParameter = statisticsV41LatencyRawOther
}

// WithStatisticsV41LatencyRawReadQueryParameter adds the statisticsV41LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41LatencyRawReadQueryParameter(statisticsV41LatencyRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41LatencyRawReadQueryParameter(statisticsV41LatencyRawRead)
	return o
}

// SetStatisticsV41LatencyRawReadQueryParameter adds the statisticsV41LatencyRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41LatencyRawReadQueryParameter(statisticsV41LatencyRawRead *int64) {
	o.StatisticsV41LatencyRawReadQueryParameter = statisticsV41LatencyRawRead
}

// WithStatisticsV41LatencyRawTotalQueryParameter adds the statisticsV41LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41LatencyRawTotalQueryParameter(statisticsV41LatencyRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41LatencyRawTotalQueryParameter(statisticsV41LatencyRawTotal)
	return o
}

// SetStatisticsV41LatencyRawTotalQueryParameter adds the statisticsV41LatencyRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41LatencyRawTotalQueryParameter(statisticsV41LatencyRawTotal *int64) {
	o.StatisticsV41LatencyRawTotalQueryParameter = statisticsV41LatencyRawTotal
}

// WithStatisticsV41LatencyRawWriteQueryParameter adds the statisticsV41LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41LatencyRawWriteQueryParameter(statisticsV41LatencyRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41LatencyRawWriteQueryParameter(statisticsV41LatencyRawWrite)
	return o
}

// SetStatisticsV41LatencyRawWriteQueryParameter adds the statisticsV41LatencyRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41LatencyRawWriteQueryParameter(statisticsV41LatencyRawWrite *int64) {
	o.StatisticsV41LatencyRawWriteQueryParameter = statisticsV41LatencyRawWrite
}

// WithStatisticsV41StatusQueryParameter adds the statisticsV41Status to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41StatusQueryParameter(statisticsV41Status *string) *NfsCollectionGetParams {
	o.SetStatisticsV41StatusQueryParameter(statisticsV41Status)
	return o
}

// SetStatisticsV41StatusQueryParameter adds the statisticsV41Status to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41StatusQueryParameter(statisticsV41Status *string) {
	o.StatisticsV41StatusQueryParameter = statisticsV41Status
}

// WithStatisticsV41ThroughputRawReadQueryParameter adds the statisticsV41ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41ThroughputRawReadQueryParameter(statisticsV41ThroughputRawRead *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41ThroughputRawReadQueryParameter(statisticsV41ThroughputRawRead)
	return o
}

// SetStatisticsV41ThroughputRawReadQueryParameter adds the statisticsV41ThroughputRawRead to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41ThroughputRawReadQueryParameter(statisticsV41ThroughputRawRead *int64) {
	o.StatisticsV41ThroughputRawReadQueryParameter = statisticsV41ThroughputRawRead
}

// WithStatisticsV41ThroughputRawTotalQueryParameter adds the statisticsV41ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41ThroughputRawTotalQueryParameter(statisticsV41ThroughputRawTotal *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41ThroughputRawTotalQueryParameter(statisticsV41ThroughputRawTotal)
	return o
}

// SetStatisticsV41ThroughputRawTotalQueryParameter adds the statisticsV41ThroughputRawTotal to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41ThroughputRawTotalQueryParameter(statisticsV41ThroughputRawTotal *int64) {
	o.StatisticsV41ThroughputRawTotalQueryParameter = statisticsV41ThroughputRawTotal
}

// WithStatisticsV41ThroughputRawWriteQueryParameter adds the statisticsV41ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41ThroughputRawWriteQueryParameter(statisticsV41ThroughputRawWrite *int64) *NfsCollectionGetParams {
	o.SetStatisticsV41ThroughputRawWriteQueryParameter(statisticsV41ThroughputRawWrite)
	return o
}

// SetStatisticsV41ThroughputRawWriteQueryParameter adds the statisticsV41ThroughputRawWrite to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41ThroughputRawWriteQueryParameter(statisticsV41ThroughputRawWrite *int64) {
	o.StatisticsV41ThroughputRawWriteQueryParameter = statisticsV41ThroughputRawWrite
}

// WithStatisticsV41TimestampQueryParameter adds the statisticsV41Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) WithStatisticsV41TimestampQueryParameter(statisticsV41Timestamp *string) *NfsCollectionGetParams {
	o.SetStatisticsV41TimestampQueryParameter(statisticsV41Timestamp)
	return o
}

// SetStatisticsV41TimestampQueryParameter adds the statisticsV41Timestamp to the nfs collection get params
func (o *NfsCollectionGetParams) SetStatisticsV41TimestampQueryParameter(statisticsV41Timestamp *string) {
	o.StatisticsV41TimestampQueryParameter = statisticsV41Timestamp
}

// WithSVMNameQueryParameter adds the svmName to the nfs collection get params
func (o *NfsCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *NfsCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the nfs collection get params
func (o *NfsCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the nfs collection get params
func (o *NfsCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *NfsCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the nfs collection get params
func (o *NfsCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithTransportTCPEnabledQueryParameter adds the transportTCPEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithTransportTCPEnabledQueryParameter(transportTCPEnabled *bool) *NfsCollectionGetParams {
	o.SetTransportTCPEnabledQueryParameter(transportTCPEnabled)
	return o
}

// SetTransportTCPEnabledQueryParameter adds the transportTcpEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetTransportTCPEnabledQueryParameter(transportTCPEnabled *bool) {
	o.TransportTCPEnabledQueryParameter = transportTCPEnabled
}

// WithTransportTCPMaxTransferSizeQueryParameter adds the transportTCPMaxTransferSize to the nfs collection get params
func (o *NfsCollectionGetParams) WithTransportTCPMaxTransferSizeQueryParameter(transportTCPMaxTransferSize *int64) *NfsCollectionGetParams {
	o.SetTransportTCPMaxTransferSizeQueryParameter(transportTCPMaxTransferSize)
	return o
}

// SetTransportTCPMaxTransferSizeQueryParameter adds the transportTcpMaxTransferSize to the nfs collection get params
func (o *NfsCollectionGetParams) SetTransportTCPMaxTransferSizeQueryParameter(transportTCPMaxTransferSize *int64) {
	o.TransportTCPMaxTransferSizeQueryParameter = transportTCPMaxTransferSize
}

// WithTransportUDPEnabledQueryParameter adds the transportUDPEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithTransportUDPEnabledQueryParameter(transportUDPEnabled *bool) *NfsCollectionGetParams {
	o.SetTransportUDPEnabledQueryParameter(transportUDPEnabled)
	return o
}

// SetTransportUDPEnabledQueryParameter adds the transportUdpEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetTransportUDPEnabledQueryParameter(transportUDPEnabled *bool) {
	o.TransportUDPEnabledQueryParameter = transportUDPEnabled
}

// WithVstorageEnabledQueryParameter adds the vstorageEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithVstorageEnabledQueryParameter(vstorageEnabled *bool) *NfsCollectionGetParams {
	o.SetVstorageEnabledQueryParameter(vstorageEnabled)
	return o
}

// SetVstorageEnabledQueryParameter adds the vstorageEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetVstorageEnabledQueryParameter(vstorageEnabled *bool) {
	o.VstorageEnabledQueryParameter = vstorageEnabled
}

// WithWindowsDefaultUserQueryParameter adds the windowsDefaultUser to the nfs collection get params
func (o *NfsCollectionGetParams) WithWindowsDefaultUserQueryParameter(windowsDefaultUser *string) *NfsCollectionGetParams {
	o.SetWindowsDefaultUserQueryParameter(windowsDefaultUser)
	return o
}

// SetWindowsDefaultUserQueryParameter adds the windowsDefaultUser to the nfs collection get params
func (o *NfsCollectionGetParams) SetWindowsDefaultUserQueryParameter(windowsDefaultUser *string) {
	o.WindowsDefaultUserQueryParameter = windowsDefaultUser
}

// WithWindowsMapUnknownUIDToDefaultUserQueryParameter adds the windowsMapUnknownUIDToDefaultUser to the nfs collection get params
func (o *NfsCollectionGetParams) WithWindowsMapUnknownUIDToDefaultUserQueryParameter(windowsMapUnknownUIDToDefaultUser *bool) *NfsCollectionGetParams {
	o.SetWindowsMapUnknownUIDToDefaultUserQueryParameter(windowsMapUnknownUIDToDefaultUser)
	return o
}

// SetWindowsMapUnknownUIDToDefaultUserQueryParameter adds the windowsMapUnknownUidToDefaultUser to the nfs collection get params
func (o *NfsCollectionGetParams) SetWindowsMapUnknownUIDToDefaultUserQueryParameter(windowsMapUnknownUIDToDefaultUser *bool) {
	o.WindowsMapUnknownUIDToDefaultUserQueryParameter = windowsMapUnknownUIDToDefaultUser
}

// WithWindowsV3MsDosClientEnabledQueryParameter adds the windowsV3MsDosClientEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) WithWindowsV3MsDosClientEnabledQueryParameter(windowsV3MsDosClientEnabled *bool) *NfsCollectionGetParams {
	o.SetWindowsV3MsDosClientEnabledQueryParameter(windowsV3MsDosClientEnabled)
	return o
}

// SetWindowsV3MsDosClientEnabledQueryParameter adds the windowsV3MsDosClientEnabled to the nfs collection get params
func (o *NfsCollectionGetParams) SetWindowsV3MsDosClientEnabledQueryParameter(windowsV3MsDosClientEnabled *bool) {
	o.WindowsV3MsDosClientEnabledQueryParameter = windowsV3MsDosClientEnabled
}

// WriteToRequest writes these params to a swagger request
func (o *NfsCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessCacheConfigHarvestTimeoutQueryParameter != nil {

		// query param access_cache_config.harvest_timeout
		var qrAccessCacheConfigHarvestTimeout int64

		if o.AccessCacheConfigHarvestTimeoutQueryParameter != nil {
			qrAccessCacheConfigHarvestTimeout = *o.AccessCacheConfigHarvestTimeoutQueryParameter
		}
		qAccessCacheConfigHarvestTimeout := swag.FormatInt64(qrAccessCacheConfigHarvestTimeout)
		if qAccessCacheConfigHarvestTimeout != "" {

			if err := r.SetQueryParam("access_cache_config.harvest_timeout", qAccessCacheConfigHarvestTimeout); err != nil {
				return err
			}
		}
	}

	if o.AccessCacheConfigIsDNSTTLEnabledQueryParameter != nil {

		// query param access_cache_config.isDnsTTLEnabled
		var qrAccessCacheConfigIsDNSTTLEnabled bool

		if o.AccessCacheConfigIsDNSTTLEnabledQueryParameter != nil {
			qrAccessCacheConfigIsDNSTTLEnabled = *o.AccessCacheConfigIsDNSTTLEnabledQueryParameter
		}
		qAccessCacheConfigIsDNSTTLEnabled := swag.FormatBool(qrAccessCacheConfigIsDNSTTLEnabled)
		if qAccessCacheConfigIsDNSTTLEnabled != "" {

			if err := r.SetQueryParam("access_cache_config.isDnsTTLEnabled", qAccessCacheConfigIsDNSTTLEnabled); err != nil {
				return err
			}
		}
	}

	if o.AccessCacheConfigTTLFailureQueryParameter != nil {

		// query param access_cache_config.ttl_failure
		var qrAccessCacheConfigTTLFailure int64

		if o.AccessCacheConfigTTLFailureQueryParameter != nil {
			qrAccessCacheConfigTTLFailure = *o.AccessCacheConfigTTLFailureQueryParameter
		}
		qAccessCacheConfigTTLFailure := swag.FormatInt64(qrAccessCacheConfigTTLFailure)
		if qAccessCacheConfigTTLFailure != "" {

			if err := r.SetQueryParam("access_cache_config.ttl_failure", qAccessCacheConfigTTLFailure); err != nil {
				return err
			}
		}
	}

	if o.AccessCacheConfigTTLNegativeQueryParameter != nil {

		// query param access_cache_config.ttl_negative
		var qrAccessCacheConfigTTLNegative int64

		if o.AccessCacheConfigTTLNegativeQueryParameter != nil {
			qrAccessCacheConfigTTLNegative = *o.AccessCacheConfigTTLNegativeQueryParameter
		}
		qAccessCacheConfigTTLNegative := swag.FormatInt64(qrAccessCacheConfigTTLNegative)
		if qAccessCacheConfigTTLNegative != "" {

			if err := r.SetQueryParam("access_cache_config.ttl_negative", qAccessCacheConfigTTLNegative); err != nil {
				return err
			}
		}
	}

	if o.AccessCacheConfigTTLPositiveQueryParameter != nil {

		// query param access_cache_config.ttl_positive
		var qrAccessCacheConfigTTLPositive int64

		if o.AccessCacheConfigTTLPositiveQueryParameter != nil {
			qrAccessCacheConfigTTLPositive = *o.AccessCacheConfigTTLPositiveQueryParameter
		}
		qAccessCacheConfigTTLPositive := swag.FormatInt64(qrAccessCacheConfigTTLPositive)
		if qAccessCacheConfigTTLPositive != "" {

			if err := r.SetQueryParam("access_cache_config.ttl_positive", qAccessCacheConfigTTLPositive); err != nil {
				return err
			}
		}
	}

	if o.AuthSysExtendedGroupsEnabledQueryParameter != nil {

		// query param auth_sys_extended_groups_enabled
		var qrAuthSysExtendedGroupsEnabled bool

		if o.AuthSysExtendedGroupsEnabledQueryParameter != nil {
			qrAuthSysExtendedGroupsEnabled = *o.AuthSysExtendedGroupsEnabledQueryParameter
		}
		qAuthSysExtendedGroupsEnabled := swag.FormatBool(qrAuthSysExtendedGroupsEnabled)
		if qAuthSysExtendedGroupsEnabled != "" {

			if err := r.SetQueryParam("auth_sys_extended_groups_enabled", qAuthSysExtendedGroupsEnabled); err != nil {
				return err
			}
		}
	}

	if o.CredentialCacheNegativeTTLQueryParameter != nil {

		// query param credential_cache.negative_ttl
		var qrCredentialCacheNegativeTTL int64

		if o.CredentialCacheNegativeTTLQueryParameter != nil {
			qrCredentialCacheNegativeTTL = *o.CredentialCacheNegativeTTLQueryParameter
		}
		qCredentialCacheNegativeTTL := swag.FormatInt64(qrCredentialCacheNegativeTTL)
		if qCredentialCacheNegativeTTL != "" {

			if err := r.SetQueryParam("credential_cache.negative_ttl", qCredentialCacheNegativeTTL); err != nil {
				return err
			}
		}
	}

	if o.CredentialCachePositiveTTLQueryParameter != nil {

		// query param credential_cache.positive_ttl
		var qrCredentialCachePositiveTTL int64

		if o.CredentialCachePositiveTTLQueryParameter != nil {
			qrCredentialCachePositiveTTL = *o.CredentialCachePositiveTTLQueryParameter
		}
		qCredentialCachePositiveTTL := swag.FormatInt64(qrCredentialCachePositiveTTL)
		if qCredentialCachePositiveTTL != "" {

			if err := r.SetQueryParam("credential_cache.positive_ttl", qCredentialCachePositiveTTL); err != nil {
				return err
			}
		}
	}

	if o.CredentialCacheTransientErrorTTLQueryParameter != nil {

		// query param credential_cache.transient_error_ttl
		var qrCredentialCacheTransientErrorTTL int64

		if o.CredentialCacheTransientErrorTTLQueryParameter != nil {
			qrCredentialCacheTransientErrorTTL = *o.CredentialCacheTransientErrorTTLQueryParameter
		}
		qCredentialCacheTransientErrorTTL := swag.FormatInt64(qrCredentialCacheTransientErrorTTL)
		if qCredentialCacheTransientErrorTTL != "" {

			if err := r.SetQueryParam("credential_cache.transient_error_ttl", qCredentialCacheTransientErrorTTL); err != nil {
				return err
			}
		}
	}

	if o.EnabledQueryParameter != nil {

		// query param enabled
		var qrEnabled bool

		if o.EnabledQueryParameter != nil {
			qrEnabled = *o.EnabledQueryParameter
		}
		qEnabled := swag.FormatBool(qrEnabled)
		if qEnabled != "" {

			if err := r.SetQueryParam("enabled", qEnabled); err != nil {
				return err
			}
		}
	}

	if o.ExportsNameServiceLookupProtocolQueryParameter != nil {

		// query param exports.name_service_lookup_protocol
		var qrExportsNameServiceLookupProtocol string

		if o.ExportsNameServiceLookupProtocolQueryParameter != nil {
			qrExportsNameServiceLookupProtocol = *o.ExportsNameServiceLookupProtocolQueryParameter
		}
		qExportsNameServiceLookupProtocol := qrExportsNameServiceLookupProtocol
		if qExportsNameServiceLookupProtocol != "" {

			if err := r.SetQueryParam("exports.name_service_lookup_protocol", qExportsNameServiceLookupProtocol); err != nil {
				return err
			}
		}
	}

	if o.ExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter != nil {

		// query param exports.netgroup_trust_any_nsswitch_no_match
		var qrExportsNetgroupTrustAnyNsswitchNoMatch bool

		if o.ExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter != nil {
			qrExportsNetgroupTrustAnyNsswitchNoMatch = *o.ExportsNetgroupTrustAnyNsswitchNoMatchQueryParameter
		}
		qExportsNetgroupTrustAnyNsswitchNoMatch := swag.FormatBool(qrExportsNetgroupTrustAnyNsswitchNoMatch)
		if qExportsNetgroupTrustAnyNsswitchNoMatch != "" {

			if err := r.SetQueryParam("exports.netgroup_trust_any_nsswitch_no_match", qExportsNetgroupTrustAnyNsswitchNoMatch); err != nil {
				return err
			}
		}
	}

	if o.ExtendedGroupsLimitQueryParameter != nil {

		// query param extended_groups_limit
		var qrExtendedGroupsLimit int64

		if o.ExtendedGroupsLimitQueryParameter != nil {
			qrExtendedGroupsLimit = *o.ExtendedGroupsLimitQueryParameter
		}
		qExtendedGroupsLimit := swag.FormatInt64(qrExtendedGroupsLimit)
		if qExtendedGroupsLimit != "" {

			if err := r.SetQueryParam("extended_groups_limit", qExtendedGroupsLimit); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.FileSessionIoGroupingCountQueryParameter != nil {

		// query param file_session_io_grouping_count
		var qrFileSessionIoGroupingCount int64

		if o.FileSessionIoGroupingCountQueryParameter != nil {
			qrFileSessionIoGroupingCount = *o.FileSessionIoGroupingCountQueryParameter
		}
		qFileSessionIoGroupingCount := swag.FormatInt64(qrFileSessionIoGroupingCount)
		if qFileSessionIoGroupingCount != "" {

			if err := r.SetQueryParam("file_session_io_grouping_count", qFileSessionIoGroupingCount); err != nil {
				return err
			}
		}
	}

	if o.FileSessionIoGroupingDurationQueryParameter != nil {

		// query param file_session_io_grouping_duration
		var qrFileSessionIoGroupingDuration int64

		if o.FileSessionIoGroupingDurationQueryParameter != nil {
			qrFileSessionIoGroupingDuration = *o.FileSessionIoGroupingDurationQueryParameter
		}
		qFileSessionIoGroupingDuration := swag.FormatInt64(qrFileSessionIoGroupingDuration)
		if qFileSessionIoGroupingDuration != "" {

			if err := r.SetQueryParam("file_session_io_grouping_duration", qFileSessionIoGroupingDuration); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricV3DurationQueryParameter != nil {

		// query param metric.v3.duration
		var qrMetricV3Duration string

		if o.MetricV3DurationQueryParameter != nil {
			qrMetricV3Duration = *o.MetricV3DurationQueryParameter
		}
		qMetricV3Duration := qrMetricV3Duration
		if qMetricV3Duration != "" {

			if err := r.SetQueryParam("metric.v3.duration", qMetricV3Duration); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsOtherQueryParameter != nil {

		// query param metric.v3.iops.other
		var qrMetricV3IopsOther int64

		if o.MetricV3IopsOtherQueryParameter != nil {
			qrMetricV3IopsOther = *o.MetricV3IopsOtherQueryParameter
		}
		qMetricV3IopsOther := swag.FormatInt64(qrMetricV3IopsOther)
		if qMetricV3IopsOther != "" {

			if err := r.SetQueryParam("metric.v3.iops.other", qMetricV3IopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsReadQueryParameter != nil {

		// query param metric.v3.iops.read
		var qrMetricV3IopsRead int64

		if o.MetricV3IopsReadQueryParameter != nil {
			qrMetricV3IopsRead = *o.MetricV3IopsReadQueryParameter
		}
		qMetricV3IopsRead := swag.FormatInt64(qrMetricV3IopsRead)
		if qMetricV3IopsRead != "" {

			if err := r.SetQueryParam("metric.v3.iops.read", qMetricV3IopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsTotalQueryParameter != nil {

		// query param metric.v3.iops.total
		var qrMetricV3IopsTotal int64

		if o.MetricV3IopsTotalQueryParameter != nil {
			qrMetricV3IopsTotal = *o.MetricV3IopsTotalQueryParameter
		}
		qMetricV3IopsTotal := swag.FormatInt64(qrMetricV3IopsTotal)
		if qMetricV3IopsTotal != "" {

			if err := r.SetQueryParam("metric.v3.iops.total", qMetricV3IopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV3IopsWriteQueryParameter != nil {

		// query param metric.v3.iops.write
		var qrMetricV3IopsWrite int64

		if o.MetricV3IopsWriteQueryParameter != nil {
			qrMetricV3IopsWrite = *o.MetricV3IopsWriteQueryParameter
		}
		qMetricV3IopsWrite := swag.FormatInt64(qrMetricV3IopsWrite)
		if qMetricV3IopsWrite != "" {

			if err := r.SetQueryParam("metric.v3.iops.write", qMetricV3IopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyOtherQueryParameter != nil {

		// query param metric.v3.latency.other
		var qrMetricV3LatencyOther int64

		if o.MetricV3LatencyOtherQueryParameter != nil {
			qrMetricV3LatencyOther = *o.MetricV3LatencyOtherQueryParameter
		}
		qMetricV3LatencyOther := swag.FormatInt64(qrMetricV3LatencyOther)
		if qMetricV3LatencyOther != "" {

			if err := r.SetQueryParam("metric.v3.latency.other", qMetricV3LatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyReadQueryParameter != nil {

		// query param metric.v3.latency.read
		var qrMetricV3LatencyRead int64

		if o.MetricV3LatencyReadQueryParameter != nil {
			qrMetricV3LatencyRead = *o.MetricV3LatencyReadQueryParameter
		}
		qMetricV3LatencyRead := swag.FormatInt64(qrMetricV3LatencyRead)
		if qMetricV3LatencyRead != "" {

			if err := r.SetQueryParam("metric.v3.latency.read", qMetricV3LatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyTotalQueryParameter != nil {

		// query param metric.v3.latency.total
		var qrMetricV3LatencyTotal int64

		if o.MetricV3LatencyTotalQueryParameter != nil {
			qrMetricV3LatencyTotal = *o.MetricV3LatencyTotalQueryParameter
		}
		qMetricV3LatencyTotal := swag.FormatInt64(qrMetricV3LatencyTotal)
		if qMetricV3LatencyTotal != "" {

			if err := r.SetQueryParam("metric.v3.latency.total", qMetricV3LatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV3LatencyWriteQueryParameter != nil {

		// query param metric.v3.latency.write
		var qrMetricV3LatencyWrite int64

		if o.MetricV3LatencyWriteQueryParameter != nil {
			qrMetricV3LatencyWrite = *o.MetricV3LatencyWriteQueryParameter
		}
		qMetricV3LatencyWrite := swag.FormatInt64(qrMetricV3LatencyWrite)
		if qMetricV3LatencyWrite != "" {

			if err := r.SetQueryParam("metric.v3.latency.write", qMetricV3LatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV3StatusQueryParameter != nil {

		// query param metric.v3.status
		var qrMetricV3Status string

		if o.MetricV3StatusQueryParameter != nil {
			qrMetricV3Status = *o.MetricV3StatusQueryParameter
		}
		qMetricV3Status := qrMetricV3Status
		if qMetricV3Status != "" {

			if err := r.SetQueryParam("metric.v3.status", qMetricV3Status); err != nil {
				return err
			}
		}
	}

	if o.MetricV3ThroughputReadQueryParameter != nil {

		// query param metric.v3.throughput.read
		var qrMetricV3ThroughputRead int64

		if o.MetricV3ThroughputReadQueryParameter != nil {
			qrMetricV3ThroughputRead = *o.MetricV3ThroughputReadQueryParameter
		}
		qMetricV3ThroughputRead := swag.FormatInt64(qrMetricV3ThroughputRead)
		if qMetricV3ThroughputRead != "" {

			if err := r.SetQueryParam("metric.v3.throughput.read", qMetricV3ThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV3ThroughputTotalQueryParameter != nil {

		// query param metric.v3.throughput.total
		var qrMetricV3ThroughputTotal int64

		if o.MetricV3ThroughputTotalQueryParameter != nil {
			qrMetricV3ThroughputTotal = *o.MetricV3ThroughputTotalQueryParameter
		}
		qMetricV3ThroughputTotal := swag.FormatInt64(qrMetricV3ThroughputTotal)
		if qMetricV3ThroughputTotal != "" {

			if err := r.SetQueryParam("metric.v3.throughput.total", qMetricV3ThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV3ThroughputWriteQueryParameter != nil {

		// query param metric.v3.throughput.write
		var qrMetricV3ThroughputWrite int64

		if o.MetricV3ThroughputWriteQueryParameter != nil {
			qrMetricV3ThroughputWrite = *o.MetricV3ThroughputWriteQueryParameter
		}
		qMetricV3ThroughputWrite := swag.FormatInt64(qrMetricV3ThroughputWrite)
		if qMetricV3ThroughputWrite != "" {

			if err := r.SetQueryParam("metric.v3.throughput.write", qMetricV3ThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV3TimestampQueryParameter != nil {

		// query param metric.v3.timestamp
		var qrMetricV3Timestamp string

		if o.MetricV3TimestampQueryParameter != nil {
			qrMetricV3Timestamp = *o.MetricV3TimestampQueryParameter
		}
		qMetricV3Timestamp := qrMetricV3Timestamp
		if qMetricV3Timestamp != "" {

			if err := r.SetQueryParam("metric.v3.timestamp", qMetricV3Timestamp); err != nil {
				return err
			}
		}
	}

	if o.MetricV4DurationQueryParameter != nil {

		// query param metric.v4.duration
		var qrMetricV4Duration string

		if o.MetricV4DurationQueryParameter != nil {
			qrMetricV4Duration = *o.MetricV4DurationQueryParameter
		}
		qMetricV4Duration := qrMetricV4Duration
		if qMetricV4Duration != "" {

			if err := r.SetQueryParam("metric.v4.duration", qMetricV4Duration); err != nil {
				return err
			}
		}
	}

	if o.MetricV4IopsOtherQueryParameter != nil {

		// query param metric.v4.iops.other
		var qrMetricV4IopsOther int64

		if o.MetricV4IopsOtherQueryParameter != nil {
			qrMetricV4IopsOther = *o.MetricV4IopsOtherQueryParameter
		}
		qMetricV4IopsOther := swag.FormatInt64(qrMetricV4IopsOther)
		if qMetricV4IopsOther != "" {

			if err := r.SetQueryParam("metric.v4.iops.other", qMetricV4IopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV4IopsReadQueryParameter != nil {

		// query param metric.v4.iops.read
		var qrMetricV4IopsRead int64

		if o.MetricV4IopsReadQueryParameter != nil {
			qrMetricV4IopsRead = *o.MetricV4IopsReadQueryParameter
		}
		qMetricV4IopsRead := swag.FormatInt64(qrMetricV4IopsRead)
		if qMetricV4IopsRead != "" {

			if err := r.SetQueryParam("metric.v4.iops.read", qMetricV4IopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV4IopsTotalQueryParameter != nil {

		// query param metric.v4.iops.total
		var qrMetricV4IopsTotal int64

		if o.MetricV4IopsTotalQueryParameter != nil {
			qrMetricV4IopsTotal = *o.MetricV4IopsTotalQueryParameter
		}
		qMetricV4IopsTotal := swag.FormatInt64(qrMetricV4IopsTotal)
		if qMetricV4IopsTotal != "" {

			if err := r.SetQueryParam("metric.v4.iops.total", qMetricV4IopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV4IopsWriteQueryParameter != nil {

		// query param metric.v4.iops.write
		var qrMetricV4IopsWrite int64

		if o.MetricV4IopsWriteQueryParameter != nil {
			qrMetricV4IopsWrite = *o.MetricV4IopsWriteQueryParameter
		}
		qMetricV4IopsWrite := swag.FormatInt64(qrMetricV4IopsWrite)
		if qMetricV4IopsWrite != "" {

			if err := r.SetQueryParam("metric.v4.iops.write", qMetricV4IopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV4LatencyOtherQueryParameter != nil {

		// query param metric.v4.latency.other
		var qrMetricV4LatencyOther int64

		if o.MetricV4LatencyOtherQueryParameter != nil {
			qrMetricV4LatencyOther = *o.MetricV4LatencyOtherQueryParameter
		}
		qMetricV4LatencyOther := swag.FormatInt64(qrMetricV4LatencyOther)
		if qMetricV4LatencyOther != "" {

			if err := r.SetQueryParam("metric.v4.latency.other", qMetricV4LatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV4LatencyReadQueryParameter != nil {

		// query param metric.v4.latency.read
		var qrMetricV4LatencyRead int64

		if o.MetricV4LatencyReadQueryParameter != nil {
			qrMetricV4LatencyRead = *o.MetricV4LatencyReadQueryParameter
		}
		qMetricV4LatencyRead := swag.FormatInt64(qrMetricV4LatencyRead)
		if qMetricV4LatencyRead != "" {

			if err := r.SetQueryParam("metric.v4.latency.read", qMetricV4LatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV4LatencyTotalQueryParameter != nil {

		// query param metric.v4.latency.total
		var qrMetricV4LatencyTotal int64

		if o.MetricV4LatencyTotalQueryParameter != nil {
			qrMetricV4LatencyTotal = *o.MetricV4LatencyTotalQueryParameter
		}
		qMetricV4LatencyTotal := swag.FormatInt64(qrMetricV4LatencyTotal)
		if qMetricV4LatencyTotal != "" {

			if err := r.SetQueryParam("metric.v4.latency.total", qMetricV4LatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV4LatencyWriteQueryParameter != nil {

		// query param metric.v4.latency.write
		var qrMetricV4LatencyWrite int64

		if o.MetricV4LatencyWriteQueryParameter != nil {
			qrMetricV4LatencyWrite = *o.MetricV4LatencyWriteQueryParameter
		}
		qMetricV4LatencyWrite := swag.FormatInt64(qrMetricV4LatencyWrite)
		if qMetricV4LatencyWrite != "" {

			if err := r.SetQueryParam("metric.v4.latency.write", qMetricV4LatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV4StatusQueryParameter != nil {

		// query param metric.v4.status
		var qrMetricV4Status string

		if o.MetricV4StatusQueryParameter != nil {
			qrMetricV4Status = *o.MetricV4StatusQueryParameter
		}
		qMetricV4Status := qrMetricV4Status
		if qMetricV4Status != "" {

			if err := r.SetQueryParam("metric.v4.status", qMetricV4Status); err != nil {
				return err
			}
		}
	}

	if o.MetricV4ThroughputReadQueryParameter != nil {

		// query param metric.v4.throughput.read
		var qrMetricV4ThroughputRead int64

		if o.MetricV4ThroughputReadQueryParameter != nil {
			qrMetricV4ThroughputRead = *o.MetricV4ThroughputReadQueryParameter
		}
		qMetricV4ThroughputRead := swag.FormatInt64(qrMetricV4ThroughputRead)
		if qMetricV4ThroughputRead != "" {

			if err := r.SetQueryParam("metric.v4.throughput.read", qMetricV4ThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV4ThroughputTotalQueryParameter != nil {

		// query param metric.v4.throughput.total
		var qrMetricV4ThroughputTotal int64

		if o.MetricV4ThroughputTotalQueryParameter != nil {
			qrMetricV4ThroughputTotal = *o.MetricV4ThroughputTotalQueryParameter
		}
		qMetricV4ThroughputTotal := swag.FormatInt64(qrMetricV4ThroughputTotal)
		if qMetricV4ThroughputTotal != "" {

			if err := r.SetQueryParam("metric.v4.throughput.total", qMetricV4ThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV4ThroughputWriteQueryParameter != nil {

		// query param metric.v4.throughput.write
		var qrMetricV4ThroughputWrite int64

		if o.MetricV4ThroughputWriteQueryParameter != nil {
			qrMetricV4ThroughputWrite = *o.MetricV4ThroughputWriteQueryParameter
		}
		qMetricV4ThroughputWrite := swag.FormatInt64(qrMetricV4ThroughputWrite)
		if qMetricV4ThroughputWrite != "" {

			if err := r.SetQueryParam("metric.v4.throughput.write", qMetricV4ThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV4TimestampQueryParameter != nil {

		// query param metric.v4.timestamp
		var qrMetricV4Timestamp string

		if o.MetricV4TimestampQueryParameter != nil {
			qrMetricV4Timestamp = *o.MetricV4TimestampQueryParameter
		}
		qMetricV4Timestamp := qrMetricV4Timestamp
		if qMetricV4Timestamp != "" {

			if err := r.SetQueryParam("metric.v4.timestamp", qMetricV4Timestamp); err != nil {
				return err
			}
		}
	}

	if o.MetricV41DurationQueryParameter != nil {

		// query param metric.v41.duration
		var qrMetricV41Duration string

		if o.MetricV41DurationQueryParameter != nil {
			qrMetricV41Duration = *o.MetricV41DurationQueryParameter
		}
		qMetricV41Duration := qrMetricV41Duration
		if qMetricV41Duration != "" {

			if err := r.SetQueryParam("metric.v41.duration", qMetricV41Duration); err != nil {
				return err
			}
		}
	}

	if o.MetricV41IopsOtherQueryParameter != nil {

		// query param metric.v41.iops.other
		var qrMetricV41IopsOther int64

		if o.MetricV41IopsOtherQueryParameter != nil {
			qrMetricV41IopsOther = *o.MetricV41IopsOtherQueryParameter
		}
		qMetricV41IopsOther := swag.FormatInt64(qrMetricV41IopsOther)
		if qMetricV41IopsOther != "" {

			if err := r.SetQueryParam("metric.v41.iops.other", qMetricV41IopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV41IopsReadQueryParameter != nil {

		// query param metric.v41.iops.read
		var qrMetricV41IopsRead int64

		if o.MetricV41IopsReadQueryParameter != nil {
			qrMetricV41IopsRead = *o.MetricV41IopsReadQueryParameter
		}
		qMetricV41IopsRead := swag.FormatInt64(qrMetricV41IopsRead)
		if qMetricV41IopsRead != "" {

			if err := r.SetQueryParam("metric.v41.iops.read", qMetricV41IopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV41IopsTotalQueryParameter != nil {

		// query param metric.v41.iops.total
		var qrMetricV41IopsTotal int64

		if o.MetricV41IopsTotalQueryParameter != nil {
			qrMetricV41IopsTotal = *o.MetricV41IopsTotalQueryParameter
		}
		qMetricV41IopsTotal := swag.FormatInt64(qrMetricV41IopsTotal)
		if qMetricV41IopsTotal != "" {

			if err := r.SetQueryParam("metric.v41.iops.total", qMetricV41IopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV41IopsWriteQueryParameter != nil {

		// query param metric.v41.iops.write
		var qrMetricV41IopsWrite int64

		if o.MetricV41IopsWriteQueryParameter != nil {
			qrMetricV41IopsWrite = *o.MetricV41IopsWriteQueryParameter
		}
		qMetricV41IopsWrite := swag.FormatInt64(qrMetricV41IopsWrite)
		if qMetricV41IopsWrite != "" {

			if err := r.SetQueryParam("metric.v41.iops.write", qMetricV41IopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV41LatencyOtherQueryParameter != nil {

		// query param metric.v41.latency.other
		var qrMetricV41LatencyOther int64

		if o.MetricV41LatencyOtherQueryParameter != nil {
			qrMetricV41LatencyOther = *o.MetricV41LatencyOtherQueryParameter
		}
		qMetricV41LatencyOther := swag.FormatInt64(qrMetricV41LatencyOther)
		if qMetricV41LatencyOther != "" {

			if err := r.SetQueryParam("metric.v41.latency.other", qMetricV41LatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricV41LatencyReadQueryParameter != nil {

		// query param metric.v41.latency.read
		var qrMetricV41LatencyRead int64

		if o.MetricV41LatencyReadQueryParameter != nil {
			qrMetricV41LatencyRead = *o.MetricV41LatencyReadQueryParameter
		}
		qMetricV41LatencyRead := swag.FormatInt64(qrMetricV41LatencyRead)
		if qMetricV41LatencyRead != "" {

			if err := r.SetQueryParam("metric.v41.latency.read", qMetricV41LatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV41LatencyTotalQueryParameter != nil {

		// query param metric.v41.latency.total
		var qrMetricV41LatencyTotal int64

		if o.MetricV41LatencyTotalQueryParameter != nil {
			qrMetricV41LatencyTotal = *o.MetricV41LatencyTotalQueryParameter
		}
		qMetricV41LatencyTotal := swag.FormatInt64(qrMetricV41LatencyTotal)
		if qMetricV41LatencyTotal != "" {

			if err := r.SetQueryParam("metric.v41.latency.total", qMetricV41LatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV41LatencyWriteQueryParameter != nil {

		// query param metric.v41.latency.write
		var qrMetricV41LatencyWrite int64

		if o.MetricV41LatencyWriteQueryParameter != nil {
			qrMetricV41LatencyWrite = *o.MetricV41LatencyWriteQueryParameter
		}
		qMetricV41LatencyWrite := swag.FormatInt64(qrMetricV41LatencyWrite)
		if qMetricV41LatencyWrite != "" {

			if err := r.SetQueryParam("metric.v41.latency.write", qMetricV41LatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV41StatusQueryParameter != nil {

		// query param metric.v41.status
		var qrMetricV41Status string

		if o.MetricV41StatusQueryParameter != nil {
			qrMetricV41Status = *o.MetricV41StatusQueryParameter
		}
		qMetricV41Status := qrMetricV41Status
		if qMetricV41Status != "" {

			if err := r.SetQueryParam("metric.v41.status", qMetricV41Status); err != nil {
				return err
			}
		}
	}

	if o.MetricV41ThroughputReadQueryParameter != nil {

		// query param metric.v41.throughput.read
		var qrMetricV41ThroughputRead int64

		if o.MetricV41ThroughputReadQueryParameter != nil {
			qrMetricV41ThroughputRead = *o.MetricV41ThroughputReadQueryParameter
		}
		qMetricV41ThroughputRead := swag.FormatInt64(qrMetricV41ThroughputRead)
		if qMetricV41ThroughputRead != "" {

			if err := r.SetQueryParam("metric.v41.throughput.read", qMetricV41ThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricV41ThroughputTotalQueryParameter != nil {

		// query param metric.v41.throughput.total
		var qrMetricV41ThroughputTotal int64

		if o.MetricV41ThroughputTotalQueryParameter != nil {
			qrMetricV41ThroughputTotal = *o.MetricV41ThroughputTotalQueryParameter
		}
		qMetricV41ThroughputTotal := swag.FormatInt64(qrMetricV41ThroughputTotal)
		if qMetricV41ThroughputTotal != "" {

			if err := r.SetQueryParam("metric.v41.throughput.total", qMetricV41ThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricV41ThroughputWriteQueryParameter != nil {

		// query param metric.v41.throughput.write
		var qrMetricV41ThroughputWrite int64

		if o.MetricV41ThroughputWriteQueryParameter != nil {
			qrMetricV41ThroughputWrite = *o.MetricV41ThroughputWriteQueryParameter
		}
		qMetricV41ThroughputWrite := swag.FormatInt64(qrMetricV41ThroughputWrite)
		if qMetricV41ThroughputWrite != "" {

			if err := r.SetQueryParam("metric.v41.throughput.write", qMetricV41ThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricV41TimestampQueryParameter != nil {

		// query param metric.v41.timestamp
		var qrMetricV41Timestamp string

		if o.MetricV41TimestampQueryParameter != nil {
			qrMetricV41Timestamp = *o.MetricV41TimestampQueryParameter
		}
		qMetricV41Timestamp := qrMetricV41Timestamp
		if qMetricV41Timestamp != "" {

			if err := r.SetQueryParam("metric.v41.timestamp", qMetricV41Timestamp); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ProtocolV364bitIDentifiersEnabledQueryParameter != nil {

		// query param protocol.v3_64bit_identifiers_enabled
		var qrProtocolV364bitIdentifiersEnabled bool

		if o.ProtocolV364bitIDentifiersEnabledQueryParameter != nil {
			qrProtocolV364bitIdentifiersEnabled = *o.ProtocolV364bitIDentifiersEnabledQueryParameter
		}
		qProtocolV364bitIdentifiersEnabled := swag.FormatBool(qrProtocolV364bitIdentifiersEnabled)
		if qProtocolV364bitIdentifiersEnabled != "" {

			if err := r.SetQueryParam("protocol.v3_64bit_identifiers_enabled", qProtocolV364bitIdentifiersEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3EnabledQueryParameter != nil {

		// query param protocol.v3_enabled
		var qrProtocolV3Enabled bool

		if o.ProtocolV3EnabledQueryParameter != nil {
			qrProtocolV3Enabled = *o.ProtocolV3EnabledQueryParameter
		}
		qProtocolV3Enabled := swag.FormatBool(qrProtocolV3Enabled)
		if qProtocolV3Enabled != "" {

			if err := r.SetQueryParam("protocol.v3_enabled", qProtocolV3Enabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesConnectionDropQueryParameter != nil {

		// query param protocol.v3_features.connection_drop
		var qrProtocolV3FeaturesConnectionDrop bool

		if o.ProtocolV3FeaturesConnectionDropQueryParameter != nil {
			qrProtocolV3FeaturesConnectionDrop = *o.ProtocolV3FeaturesConnectionDropQueryParameter
		}
		qProtocolV3FeaturesConnectionDrop := swag.FormatBool(qrProtocolV3FeaturesConnectionDrop)
		if qProtocolV3FeaturesConnectionDrop != "" {

			if err := r.SetQueryParam("protocol.v3_features.connection_drop", qProtocolV3FeaturesConnectionDrop); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesEjukeboxEnabledQueryParameter != nil {

		// query param protocol.v3_features.ejukebox_enabled
		var qrProtocolV3FeaturesEjukeboxEnabled bool

		if o.ProtocolV3FeaturesEjukeboxEnabledQueryParameter != nil {
			qrProtocolV3FeaturesEjukeboxEnabled = *o.ProtocolV3FeaturesEjukeboxEnabledQueryParameter
		}
		qProtocolV3FeaturesEjukeboxEnabled := swag.FormatBool(qrProtocolV3FeaturesEjukeboxEnabled)
		if qProtocolV3FeaturesEjukeboxEnabled != "" {

			if err := r.SetQueryParam("protocol.v3_features.ejukebox_enabled", qProtocolV3FeaturesEjukeboxEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesFsIDChangeQueryParameter != nil {

		// query param protocol.v3_features.fsid_change
		var qrProtocolV3FeaturesFsidChange bool

		if o.ProtocolV3FeaturesFsIDChangeQueryParameter != nil {
			qrProtocolV3FeaturesFsidChange = *o.ProtocolV3FeaturesFsIDChangeQueryParameter
		}
		qProtocolV3FeaturesFsidChange := swag.FormatBool(qrProtocolV3FeaturesFsidChange)
		if qProtocolV3FeaturesFsidChange != "" {

			if err := r.SetQueryParam("protocol.v3_features.fsid_change", qProtocolV3FeaturesFsidChange); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesMountDaemonPortQueryParameter != nil {

		// query param protocol.v3_features.mount_daemon_port
		var qrProtocolV3FeaturesMountDaemonPort int64

		if o.ProtocolV3FeaturesMountDaemonPortQueryParameter != nil {
			qrProtocolV3FeaturesMountDaemonPort = *o.ProtocolV3FeaturesMountDaemonPortQueryParameter
		}
		qProtocolV3FeaturesMountDaemonPort := swag.FormatInt64(qrProtocolV3FeaturesMountDaemonPort)
		if qProtocolV3FeaturesMountDaemonPort != "" {

			if err := r.SetQueryParam("protocol.v3_features.mount_daemon_port", qProtocolV3FeaturesMountDaemonPort); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesMountRootOnlyQueryParameter != nil {

		// query param protocol.v3_features.mount_root_only
		var qrProtocolV3FeaturesMountRootOnly bool

		if o.ProtocolV3FeaturesMountRootOnlyQueryParameter != nil {
			qrProtocolV3FeaturesMountRootOnly = *o.ProtocolV3FeaturesMountRootOnlyQueryParameter
		}
		qProtocolV3FeaturesMountRootOnly := swag.FormatBool(qrProtocolV3FeaturesMountRootOnly)
		if qProtocolV3FeaturesMountRootOnly != "" {

			if err := r.SetQueryParam("protocol.v3_features.mount_root_only", qProtocolV3FeaturesMountRootOnly); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesNetworkLockManagerPortQueryParameter != nil {

		// query param protocol.v3_features.network_lock_manager_port
		var qrProtocolV3FeaturesNetworkLockManagerPort int64

		if o.ProtocolV3FeaturesNetworkLockManagerPortQueryParameter != nil {
			qrProtocolV3FeaturesNetworkLockManagerPort = *o.ProtocolV3FeaturesNetworkLockManagerPortQueryParameter
		}
		qProtocolV3FeaturesNetworkLockManagerPort := swag.FormatInt64(qrProtocolV3FeaturesNetworkLockManagerPort)
		if qProtocolV3FeaturesNetworkLockManagerPort != "" {

			if err := r.SetQueryParam("protocol.v3_features.network_lock_manager_port", qProtocolV3FeaturesNetworkLockManagerPort); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter != nil {

		// query param protocol.v3_features.network_status_monitor_port
		var qrProtocolV3FeaturesNetworkStatusMonitorPort int64

		if o.ProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter != nil {
			qrProtocolV3FeaturesNetworkStatusMonitorPort = *o.ProtocolV3FeaturesNetworkStatusMonitorPortQueryParameter
		}
		qProtocolV3FeaturesNetworkStatusMonitorPort := swag.FormatInt64(qrProtocolV3FeaturesNetworkStatusMonitorPort)
		if qProtocolV3FeaturesNetworkStatusMonitorPort != "" {

			if err := r.SetQueryParam("protocol.v3_features.network_status_monitor_port", qProtocolV3FeaturesNetworkStatusMonitorPort); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV3FeaturesRquotaDaemonPortQueryParameter != nil {

		// query param protocol.v3_features.rquota_daemon_port
		var qrProtocolV3FeaturesRquotaDaemonPort int64

		if o.ProtocolV3FeaturesRquotaDaemonPortQueryParameter != nil {
			qrProtocolV3FeaturesRquotaDaemonPort = *o.ProtocolV3FeaturesRquotaDaemonPortQueryParameter
		}
		qProtocolV3FeaturesRquotaDaemonPort := swag.FormatInt64(qrProtocolV3FeaturesRquotaDaemonPort)
		if qProtocolV3FeaturesRquotaDaemonPort != "" {

			if err := r.SetQueryParam("protocol.v3_features.rquota_daemon_port", qProtocolV3FeaturesRquotaDaemonPort); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40EnabledQueryParameter != nil {

		// query param protocol.v40_enabled
		var qrProtocolV40Enabled bool

		if o.ProtocolV40EnabledQueryParameter != nil {
			qrProtocolV40Enabled = *o.ProtocolV40EnabledQueryParameter
		}
		qProtocolV40Enabled := swag.FormatBool(qrProtocolV40Enabled)
		if qProtocolV40Enabled != "" {

			if err := r.SetQueryParam("protocol.v40_enabled", qProtocolV40Enabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesACLEnabledQueryParameter != nil {

		// query param protocol.v40_features.acl_enabled
		var qrProtocolV40FeaturesACLEnabled bool

		if o.ProtocolV40FeaturesACLEnabledQueryParameter != nil {
			qrProtocolV40FeaturesACLEnabled = *o.ProtocolV40FeaturesACLEnabledQueryParameter
		}
		qProtocolV40FeaturesACLEnabled := swag.FormatBool(qrProtocolV40FeaturesACLEnabled)
		if qProtocolV40FeaturesACLEnabled != "" {

			if err := r.SetQueryParam("protocol.v40_features.acl_enabled", qProtocolV40FeaturesACLEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesACLMaxAcesQueryParameter != nil {

		// query param protocol.v40_features.acl_max_aces
		var qrProtocolV40FeaturesACLMaxAces int64

		if o.ProtocolV40FeaturesACLMaxAcesQueryParameter != nil {
			qrProtocolV40FeaturesACLMaxAces = *o.ProtocolV40FeaturesACLMaxAcesQueryParameter
		}
		qProtocolV40FeaturesACLMaxAces := swag.FormatInt64(qrProtocolV40FeaturesACLMaxAces)
		if qProtocolV40FeaturesACLMaxAces != "" {

			if err := r.SetQueryParam("protocol.v40_features.acl_max_aces", qProtocolV40FeaturesACLMaxAces); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesACLPreserveQueryParameter != nil {

		// query param protocol.v40_features.acl_preserve
		var qrProtocolV40FeaturesACLPreserve bool

		if o.ProtocolV40FeaturesACLPreserveQueryParameter != nil {
			qrProtocolV40FeaturesACLPreserve = *o.ProtocolV40FeaturesACLPreserveQueryParameter
		}
		qProtocolV40FeaturesACLPreserve := swag.FormatBool(qrProtocolV40FeaturesACLPreserve)
		if qProtocolV40FeaturesACLPreserve != "" {

			if err := r.SetQueryParam("protocol.v40_features.acl_preserve", qProtocolV40FeaturesACLPreserve); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter != nil {

		// query param protocol.v40_features.read_delegation_enabled
		var qrProtocolV40FeaturesReadDelegationEnabled bool

		if o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter != nil {
			qrProtocolV40FeaturesReadDelegationEnabled = *o.ProtocolV40FeaturesReadDelegationEnabledQueryParameter
		}
		qProtocolV40FeaturesReadDelegationEnabled := swag.FormatBool(qrProtocolV40FeaturesReadDelegationEnabled)
		if qProtocolV40FeaturesReadDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v40_features.read_delegation_enabled", qProtocolV40FeaturesReadDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter != nil {

		// query param protocol.v40_features.write_delegation_enabled
		var qrProtocolV40FeaturesWriteDelegationEnabled bool

		if o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter != nil {
			qrProtocolV40FeaturesWriteDelegationEnabled = *o.ProtocolV40FeaturesWriteDelegationEnabledQueryParameter
		}
		qProtocolV40FeaturesWriteDelegationEnabled := swag.FormatBool(qrProtocolV40FeaturesWriteDelegationEnabled)
		if qProtocolV40FeaturesWriteDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v40_features.write_delegation_enabled", qProtocolV40FeaturesWriteDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41EnabledQueryParameter != nil {

		// query param protocol.v41_enabled
		var qrProtocolV41Enabled bool

		if o.ProtocolV41EnabledQueryParameter != nil {
			qrProtocolV41Enabled = *o.ProtocolV41EnabledQueryParameter
		}
		qProtocolV41Enabled := swag.FormatBool(qrProtocolV41Enabled)
		if qProtocolV41Enabled != "" {

			if err := r.SetQueryParam("protocol.v41_enabled", qProtocolV41Enabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesACLEnabledQueryParameter != nil {

		// query param protocol.v41_features.acl_enabled
		var qrProtocolV41FeaturesACLEnabled bool

		if o.ProtocolV41FeaturesACLEnabledQueryParameter != nil {
			qrProtocolV41FeaturesACLEnabled = *o.ProtocolV41FeaturesACLEnabledQueryParameter
		}
		qProtocolV41FeaturesACLEnabled := swag.FormatBool(qrProtocolV41FeaturesACLEnabled)
		if qProtocolV41FeaturesACLEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.acl_enabled", qProtocolV41FeaturesACLEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesImplementationDomainQueryParameter != nil {

		// query param protocol.v41_features.implementation_domain
		var qrProtocolV41FeaturesImplementationDomain string

		if o.ProtocolV41FeaturesImplementationDomainQueryParameter != nil {
			qrProtocolV41FeaturesImplementationDomain = *o.ProtocolV41FeaturesImplementationDomainQueryParameter
		}
		qProtocolV41FeaturesImplementationDomain := qrProtocolV41FeaturesImplementationDomain
		if qProtocolV41FeaturesImplementationDomain != "" {

			if err := r.SetQueryParam("protocol.v41_features.implementation_domain", qProtocolV41FeaturesImplementationDomain); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesImplementationNameQueryParameter != nil {

		// query param protocol.v41_features.implementation_name
		var qrProtocolV41FeaturesImplementationName string

		if o.ProtocolV41FeaturesImplementationNameQueryParameter != nil {
			qrProtocolV41FeaturesImplementationName = *o.ProtocolV41FeaturesImplementationNameQueryParameter
		}
		qProtocolV41FeaturesImplementationName := qrProtocolV41FeaturesImplementationName
		if qProtocolV41FeaturesImplementationName != "" {

			if err := r.SetQueryParam("protocol.v41_features.implementation_name", qProtocolV41FeaturesImplementationName); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesPnfsEnabledQueryParameter != nil {

		// query param protocol.v41_features.pnfs_enabled
		var qrProtocolV41FeaturesPnfsEnabled bool

		if o.ProtocolV41FeaturesPnfsEnabledQueryParameter != nil {
			qrProtocolV41FeaturesPnfsEnabled = *o.ProtocolV41FeaturesPnfsEnabledQueryParameter
		}
		qProtocolV41FeaturesPnfsEnabled := swag.FormatBool(qrProtocolV41FeaturesPnfsEnabled)
		if qProtocolV41FeaturesPnfsEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.pnfs_enabled", qProtocolV41FeaturesPnfsEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter != nil {

		// query param protocol.v41_features.read_delegation_enabled
		var qrProtocolV41FeaturesReadDelegationEnabled bool

		if o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter != nil {
			qrProtocolV41FeaturesReadDelegationEnabled = *o.ProtocolV41FeaturesReadDelegationEnabledQueryParameter
		}
		qProtocolV41FeaturesReadDelegationEnabled := swag.FormatBool(qrProtocolV41FeaturesReadDelegationEnabled)
		if qProtocolV41FeaturesReadDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.read_delegation_enabled", qProtocolV41FeaturesReadDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter != nil {

		// query param protocol.v41_features.write_delegation_enabled
		var qrProtocolV41FeaturesWriteDelegationEnabled bool

		if o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter != nil {
			qrProtocolV41FeaturesWriteDelegationEnabled = *o.ProtocolV41FeaturesWriteDelegationEnabledQueryParameter
		}
		qProtocolV41FeaturesWriteDelegationEnabled := swag.FormatBool(qrProtocolV41FeaturesWriteDelegationEnabled)
		if qProtocolV41FeaturesWriteDelegationEnabled != "" {

			if err := r.SetQueryParam("protocol.v41_features.write_delegation_enabled", qProtocolV41FeaturesWriteDelegationEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV464bitIDentifiersEnabledQueryParameter != nil {

		// query param protocol.v4_64bit_identifiers_enabled
		var qrProtocolV464bitIdentifiersEnabled bool

		if o.ProtocolV464bitIDentifiersEnabledQueryParameter != nil {
			qrProtocolV464bitIdentifiersEnabled = *o.ProtocolV464bitIDentifiersEnabledQueryParameter
		}
		qProtocolV464bitIdentifiersEnabled := swag.FormatBool(qrProtocolV464bitIdentifiersEnabled)
		if qProtocolV464bitIdentifiersEnabled != "" {

			if err := r.SetQueryParam("protocol.v4_64bit_identifiers_enabled", qProtocolV464bitIdentifiersEnabled); err != nil {
				return err
			}
		}
	}

	if o.ProtocolV4IDDomainQueryParameter != nil {

		// query param protocol.v4_id_domain
		var qrProtocolV4IDDomain string

		if o.ProtocolV4IDDomainQueryParameter != nil {
			qrProtocolV4IDDomain = *o.ProtocolV4IDDomainQueryParameter
		}
		qProtocolV4IDDomain := qrProtocolV4IDDomain
		if qProtocolV4IDDomain != "" {

			if err := r.SetQueryParam("protocol.v4_id_domain", qProtocolV4IDDomain); err != nil {
				return err
			}
		}
	}

	if o.ProtocolAccessRulesAuthTypeQueryParameter != nil {

		// query param protocol_access_rules.auth_type
		var qrProtocolAccessRulesAuthType string

		if o.ProtocolAccessRulesAuthTypeQueryParameter != nil {
			qrProtocolAccessRulesAuthType = *o.ProtocolAccessRulesAuthTypeQueryParameter
		}
		qProtocolAccessRulesAuthType := qrProtocolAccessRulesAuthType
		if qProtocolAccessRulesAuthType != "" {

			if err := r.SetQueryParam("protocol_access_rules.auth_type", qProtocolAccessRulesAuthType); err != nil {
				return err
			}
		}
	}

	if o.ProtocolAccessRulesCifsAccessTypeQueryParameter != nil {

		// query param protocol_access_rules.cifs_access_type
		var qrProtocolAccessRulesCifsAccessType string

		if o.ProtocolAccessRulesCifsAccessTypeQueryParameter != nil {
			qrProtocolAccessRulesCifsAccessType = *o.ProtocolAccessRulesCifsAccessTypeQueryParameter
		}
		qProtocolAccessRulesCifsAccessType := qrProtocolAccessRulesCifsAccessType
		if qProtocolAccessRulesCifsAccessType != "" {

			if err := r.SetQueryParam("protocol_access_rules.cifs_access_type", qProtocolAccessRulesCifsAccessType); err != nil {
				return err
			}
		}
	}

	if o.ProtocolAccessRulesClientIPQueryParameter != nil {

		// query param protocol_access_rules.client_ip
		var qrProtocolAccessRulesClientIP string

		if o.ProtocolAccessRulesClientIPQueryParameter != nil {
			qrProtocolAccessRulesClientIP = *o.ProtocolAccessRulesClientIPQueryParameter
		}
		qProtocolAccessRulesClientIP := qrProtocolAccessRulesClientIP
		if qProtocolAccessRulesClientIP != "" {

			if err := r.SetQueryParam("protocol_access_rules.client_ip", qProtocolAccessRulesClientIP); err != nil {
				return err
			}
		}
	}

	if o.ProtocolAccessRulesNfs3AccessTypeQueryParameter != nil {

		// query param protocol_access_rules.nfs3_access_type
		var qrProtocolAccessRulesNfs3AccessType string

		if o.ProtocolAccessRulesNfs3AccessTypeQueryParameter != nil {
			qrProtocolAccessRulesNfs3AccessType = *o.ProtocolAccessRulesNfs3AccessTypeQueryParameter
		}
		qProtocolAccessRulesNfs3AccessType := qrProtocolAccessRulesNfs3AccessType
		if qProtocolAccessRulesNfs3AccessType != "" {

			if err := r.SetQueryParam("protocol_access_rules.nfs3_access_type", qProtocolAccessRulesNfs3AccessType); err != nil {
				return err
			}
		}
	}

	if o.ProtocolAccessRulesNfs4AccessTypeQueryParameter != nil {

		// query param protocol_access_rules.nfs4_access_type
		var qrProtocolAccessRulesNfs4AccessType string

		if o.ProtocolAccessRulesNfs4AccessTypeQueryParameter != nil {
			qrProtocolAccessRulesNfs4AccessType = *o.ProtocolAccessRulesNfs4AccessTypeQueryParameter
		}
		qProtocolAccessRulesNfs4AccessType := qrProtocolAccessRulesNfs4AccessType
		if qProtocolAccessRulesNfs4AccessType != "" {

			if err := r.SetQueryParam("protocol_access_rules.nfs4_access_type", qProtocolAccessRulesNfs4AccessType); err != nil {
				return err
			}
		}
	}

	if o.ProtocolAccessRulesVolumeQueryParameter != nil {

		// query param protocol_access_rules.volume
		var qrProtocolAccessRulesVolume string

		if o.ProtocolAccessRulesVolumeQueryParameter != nil {
			qrProtocolAccessRulesVolume = *o.ProtocolAccessRulesVolumeQueryParameter
		}
		qProtocolAccessRulesVolume := qrProtocolAccessRulesVolume
		if qProtocolAccessRulesVolume != "" {

			if err := r.SetQueryParam("protocol_access_rules.volume", qProtocolAccessRulesVolume); err != nil {
				return err
			}
		}
	}

	if o.QtreeExportEnabledQueryParameter != nil {

		// query param qtree.export_enabled
		var qrQtreeExportEnabled bool

		if o.QtreeExportEnabledQueryParameter != nil {
			qrQtreeExportEnabled = *o.QtreeExportEnabledQueryParameter
		}
		qQtreeExportEnabled := swag.FormatBool(qrQtreeExportEnabled)
		if qQtreeExportEnabled != "" {

			if err := r.SetQueryParam("qtree.export_enabled", qQtreeExportEnabled); err != nil {
				return err
			}
		}
	}

	if o.QtreeValidateExportQueryParameter != nil {

		// query param qtree.validate_export
		var qrQtreeValidateExport bool

		if o.QtreeValidateExportQueryParameter != nil {
			qrQtreeValidateExport = *o.QtreeValidateExportQueryParameter
		}
		qQtreeValidateExport := swag.FormatBool(qrQtreeValidateExport)
		if qQtreeValidateExport != "" {

			if err := r.SetQueryParam("qtree.validate_export", qQtreeValidateExport); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.RootIgnoreNtACLQueryParameter != nil {

		// query param root.ignore_nt_acl
		var qrRootIgnoreNtACL bool

		if o.RootIgnoreNtACLQueryParameter != nil {
			qrRootIgnoreNtACL = *o.RootIgnoreNtACLQueryParameter
		}
		qRootIgnoreNtACL := swag.FormatBool(qrRootIgnoreNtACL)
		if qRootIgnoreNtACL != "" {

			if err := r.SetQueryParam("root.ignore_nt_acl", qRootIgnoreNtACL); err != nil {
				return err
			}
		}
	}

	if o.RootSkIPWritePermissionCheckQueryParameter != nil {

		// query param root.skip_write_permission_check
		var qrRootSkipWritePermissionCheck bool

		if o.RootSkIPWritePermissionCheckQueryParameter != nil {
			qrRootSkipWritePermissionCheck = *o.RootSkIPWritePermissionCheckQueryParameter
		}
		qRootSkipWritePermissionCheck := swag.FormatBool(qrRootSkipWritePermissionCheck)
		if qRootSkipWritePermissionCheck != "" {

			if err := r.SetQueryParam("root.skip_write_permission_check", qRootSkipWritePermissionCheck); err != nil {
				return err
			}
		}
	}

	if o.RquotaEnabledQueryParameter != nil {

		// query param rquota_enabled
		var qrRquotaEnabled bool

		if o.RquotaEnabledQueryParameter != nil {
			qrRquotaEnabled = *o.RquotaEnabledQueryParameter
		}
		qRquotaEnabled := swag.FormatBool(qrRquotaEnabled)
		if qRquotaEnabled != "" {

			if err := r.SetQueryParam("rquota_enabled", qRquotaEnabled); err != nil {
				return err
			}
		}
	}

	if o.SecurityChownModeQueryParameter != nil {

		// query param security.chown_mode
		var qrSecurityChownMode string

		if o.SecurityChownModeQueryParameter != nil {
			qrSecurityChownMode = *o.SecurityChownModeQueryParameter
		}
		qSecurityChownMode := qrSecurityChownMode
		if qSecurityChownMode != "" {

			if err := r.SetQueryParam("security.chown_mode", qSecurityChownMode); err != nil {
				return err
			}
		}
	}

	if o.SecurityNtACLDisplayPermissionQueryParameter != nil {

		// query param security.nt_acl_display_permission
		var qrSecurityNtACLDisplayPermission bool

		if o.SecurityNtACLDisplayPermissionQueryParameter != nil {
			qrSecurityNtACLDisplayPermission = *o.SecurityNtACLDisplayPermissionQueryParameter
		}
		qSecurityNtACLDisplayPermission := swag.FormatBool(qrSecurityNtACLDisplayPermission)
		if qSecurityNtACLDisplayPermission != "" {

			if err := r.SetQueryParam("security.nt_acl_display_permission", qSecurityNtACLDisplayPermission); err != nil {
				return err
			}
		}
	}

	if o.SecurityNtfsUnixSecurityQueryParameter != nil {

		// query param security.ntfs_unix_security
		var qrSecurityNtfsUnixSecurity string

		if o.SecurityNtfsUnixSecurityQueryParameter != nil {
			qrSecurityNtfsUnixSecurity = *o.SecurityNtfsUnixSecurityQueryParameter
		}
		qSecurityNtfsUnixSecurity := qrSecurityNtfsUnixSecurity
		if qSecurityNtfsUnixSecurity != "" {

			if err := r.SetQueryParam("security.ntfs_unix_security", qSecurityNtfsUnixSecurity); err != nil {
				return err
			}
		}
	}

	if o.SecurityPermittedEncryptionTypesQueryParameter != nil {

		// query param security.permitted_encryption_types
		var qrSecurityPermittedEncryptionTypes string

		if o.SecurityPermittedEncryptionTypesQueryParameter != nil {
			qrSecurityPermittedEncryptionTypes = *o.SecurityPermittedEncryptionTypesQueryParameter
		}
		qSecurityPermittedEncryptionTypes := qrSecurityPermittedEncryptionTypes
		if qSecurityPermittedEncryptionTypes != "" {

			if err := r.SetQueryParam("security.permitted_encryption_types", qSecurityPermittedEncryptionTypes); err != nil {
				return err
			}
		}
	}

	if o.SecurityRpcsecContextIDleQueryParameter != nil {

		// query param security.rpcsec_context_idle
		var qrSecurityRpcsecContextIdle int64

		if o.SecurityRpcsecContextIDleQueryParameter != nil {
			qrSecurityRpcsecContextIdle = *o.SecurityRpcsecContextIDleQueryParameter
		}
		qSecurityRpcsecContextIdle := swag.FormatInt64(qrSecurityRpcsecContextIdle)
		if qSecurityRpcsecContextIdle != "" {

			if err := r.SetQueryParam("security.rpcsec_context_idle", qSecurityRpcsecContextIdle); err != nil {
				return err
			}
		}
	}

	if o.ShowmountEnabledQueryParameter != nil {

		// query param showmount_enabled
		var qrShowmountEnabled bool

		if o.ShowmountEnabledQueryParameter != nil {
			qrShowmountEnabled = *o.ShowmountEnabledQueryParameter
		}
		qShowmountEnabled := swag.FormatBool(qrShowmountEnabled)
		if qShowmountEnabled != "" {

			if err := r.SetQueryParam("showmount_enabled", qShowmountEnabled); err != nil {
				return err
			}
		}
	}

	if o.StateQueryParameter != nil {

		// query param state
		var qrState string

		if o.StateQueryParameter != nil {
			qrState = *o.StateQueryParameter
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawOtherQueryParameter != nil {

		// query param statistics.v3.iops_raw.other
		var qrStatisticsV3IopsRawOther int64

		if o.StatisticsV3IopsRawOtherQueryParameter != nil {
			qrStatisticsV3IopsRawOther = *o.StatisticsV3IopsRawOtherQueryParameter
		}
		qStatisticsV3IopsRawOther := swag.FormatInt64(qrStatisticsV3IopsRawOther)
		if qStatisticsV3IopsRawOther != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.other", qStatisticsV3IopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawReadQueryParameter != nil {

		// query param statistics.v3.iops_raw.read
		var qrStatisticsV3IopsRawRead int64

		if o.StatisticsV3IopsRawReadQueryParameter != nil {
			qrStatisticsV3IopsRawRead = *o.StatisticsV3IopsRawReadQueryParameter
		}
		qStatisticsV3IopsRawRead := swag.FormatInt64(qrStatisticsV3IopsRawRead)
		if qStatisticsV3IopsRawRead != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.read", qStatisticsV3IopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawTotalQueryParameter != nil {

		// query param statistics.v3.iops_raw.total
		var qrStatisticsV3IopsRawTotal int64

		if o.StatisticsV3IopsRawTotalQueryParameter != nil {
			qrStatisticsV3IopsRawTotal = *o.StatisticsV3IopsRawTotalQueryParameter
		}
		qStatisticsV3IopsRawTotal := swag.FormatInt64(qrStatisticsV3IopsRawTotal)
		if qStatisticsV3IopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.total", qStatisticsV3IopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3IopsRawWriteQueryParameter != nil {

		// query param statistics.v3.iops_raw.write
		var qrStatisticsV3IopsRawWrite int64

		if o.StatisticsV3IopsRawWriteQueryParameter != nil {
			qrStatisticsV3IopsRawWrite = *o.StatisticsV3IopsRawWriteQueryParameter
		}
		qStatisticsV3IopsRawWrite := swag.FormatInt64(qrStatisticsV3IopsRawWrite)
		if qStatisticsV3IopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.v3.iops_raw.write", qStatisticsV3IopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawOtherQueryParameter != nil {

		// query param statistics.v3.latency_raw.other
		var qrStatisticsV3LatencyRawOther int64

		if o.StatisticsV3LatencyRawOtherQueryParameter != nil {
			qrStatisticsV3LatencyRawOther = *o.StatisticsV3LatencyRawOtherQueryParameter
		}
		qStatisticsV3LatencyRawOther := swag.FormatInt64(qrStatisticsV3LatencyRawOther)
		if qStatisticsV3LatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.other", qStatisticsV3LatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawReadQueryParameter != nil {

		// query param statistics.v3.latency_raw.read
		var qrStatisticsV3LatencyRawRead int64

		if o.StatisticsV3LatencyRawReadQueryParameter != nil {
			qrStatisticsV3LatencyRawRead = *o.StatisticsV3LatencyRawReadQueryParameter
		}
		qStatisticsV3LatencyRawRead := swag.FormatInt64(qrStatisticsV3LatencyRawRead)
		if qStatisticsV3LatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.read", qStatisticsV3LatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawTotalQueryParameter != nil {

		// query param statistics.v3.latency_raw.total
		var qrStatisticsV3LatencyRawTotal int64

		if o.StatisticsV3LatencyRawTotalQueryParameter != nil {
			qrStatisticsV3LatencyRawTotal = *o.StatisticsV3LatencyRawTotalQueryParameter
		}
		qStatisticsV3LatencyRawTotal := swag.FormatInt64(qrStatisticsV3LatencyRawTotal)
		if qStatisticsV3LatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.total", qStatisticsV3LatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3LatencyRawWriteQueryParameter != nil {

		// query param statistics.v3.latency_raw.write
		var qrStatisticsV3LatencyRawWrite int64

		if o.StatisticsV3LatencyRawWriteQueryParameter != nil {
			qrStatisticsV3LatencyRawWrite = *o.StatisticsV3LatencyRawWriteQueryParameter
		}
		qStatisticsV3LatencyRawWrite := swag.FormatInt64(qrStatisticsV3LatencyRawWrite)
		if qStatisticsV3LatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.v3.latency_raw.write", qStatisticsV3LatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3StatusQueryParameter != nil {

		// query param statistics.v3.status
		var qrStatisticsV3Status string

		if o.StatisticsV3StatusQueryParameter != nil {
			qrStatisticsV3Status = *o.StatisticsV3StatusQueryParameter
		}
		qStatisticsV3Status := qrStatisticsV3Status
		if qStatisticsV3Status != "" {

			if err := r.SetQueryParam("statistics.v3.status", qStatisticsV3Status); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3ThroughputRawReadQueryParameter != nil {

		// query param statistics.v3.throughput_raw.read
		var qrStatisticsV3ThroughputRawRead int64

		if o.StatisticsV3ThroughputRawReadQueryParameter != nil {
			qrStatisticsV3ThroughputRawRead = *o.StatisticsV3ThroughputRawReadQueryParameter
		}
		qStatisticsV3ThroughputRawRead := swag.FormatInt64(qrStatisticsV3ThroughputRawRead)
		if qStatisticsV3ThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.v3.throughput_raw.read", qStatisticsV3ThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3ThroughputRawTotalQueryParameter != nil {

		// query param statistics.v3.throughput_raw.total
		var qrStatisticsV3ThroughputRawTotal int64

		if o.StatisticsV3ThroughputRawTotalQueryParameter != nil {
			qrStatisticsV3ThroughputRawTotal = *o.StatisticsV3ThroughputRawTotalQueryParameter
		}
		qStatisticsV3ThroughputRawTotal := swag.FormatInt64(qrStatisticsV3ThroughputRawTotal)
		if qStatisticsV3ThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.v3.throughput_raw.total", qStatisticsV3ThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3ThroughputRawWriteQueryParameter != nil {

		// query param statistics.v3.throughput_raw.write
		var qrStatisticsV3ThroughputRawWrite int64

		if o.StatisticsV3ThroughputRawWriteQueryParameter != nil {
			qrStatisticsV3ThroughputRawWrite = *o.StatisticsV3ThroughputRawWriteQueryParameter
		}
		qStatisticsV3ThroughputRawWrite := swag.FormatInt64(qrStatisticsV3ThroughputRawWrite)
		if qStatisticsV3ThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.v3.throughput_raw.write", qStatisticsV3ThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV3TimestampQueryParameter != nil {

		// query param statistics.v3.timestamp
		var qrStatisticsV3Timestamp string

		if o.StatisticsV3TimestampQueryParameter != nil {
			qrStatisticsV3Timestamp = *o.StatisticsV3TimestampQueryParameter
		}
		qStatisticsV3Timestamp := qrStatisticsV3Timestamp
		if qStatisticsV3Timestamp != "" {

			if err := r.SetQueryParam("statistics.v3.timestamp", qStatisticsV3Timestamp); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4IopsRawOtherQueryParameter != nil {

		// query param statistics.v4.iops_raw.other
		var qrStatisticsV4IopsRawOther int64

		if o.StatisticsV4IopsRawOtherQueryParameter != nil {
			qrStatisticsV4IopsRawOther = *o.StatisticsV4IopsRawOtherQueryParameter
		}
		qStatisticsV4IopsRawOther := swag.FormatInt64(qrStatisticsV4IopsRawOther)
		if qStatisticsV4IopsRawOther != "" {

			if err := r.SetQueryParam("statistics.v4.iops_raw.other", qStatisticsV4IopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4IopsRawReadQueryParameter != nil {

		// query param statistics.v4.iops_raw.read
		var qrStatisticsV4IopsRawRead int64

		if o.StatisticsV4IopsRawReadQueryParameter != nil {
			qrStatisticsV4IopsRawRead = *o.StatisticsV4IopsRawReadQueryParameter
		}
		qStatisticsV4IopsRawRead := swag.FormatInt64(qrStatisticsV4IopsRawRead)
		if qStatisticsV4IopsRawRead != "" {

			if err := r.SetQueryParam("statistics.v4.iops_raw.read", qStatisticsV4IopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4IopsRawTotalQueryParameter != nil {

		// query param statistics.v4.iops_raw.total
		var qrStatisticsV4IopsRawTotal int64

		if o.StatisticsV4IopsRawTotalQueryParameter != nil {
			qrStatisticsV4IopsRawTotal = *o.StatisticsV4IopsRawTotalQueryParameter
		}
		qStatisticsV4IopsRawTotal := swag.FormatInt64(qrStatisticsV4IopsRawTotal)
		if qStatisticsV4IopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.v4.iops_raw.total", qStatisticsV4IopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4IopsRawWriteQueryParameter != nil {

		// query param statistics.v4.iops_raw.write
		var qrStatisticsV4IopsRawWrite int64

		if o.StatisticsV4IopsRawWriteQueryParameter != nil {
			qrStatisticsV4IopsRawWrite = *o.StatisticsV4IopsRawWriteQueryParameter
		}
		qStatisticsV4IopsRawWrite := swag.FormatInt64(qrStatisticsV4IopsRawWrite)
		if qStatisticsV4IopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.v4.iops_raw.write", qStatisticsV4IopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4LatencyRawOtherQueryParameter != nil {

		// query param statistics.v4.latency_raw.other
		var qrStatisticsV4LatencyRawOther int64

		if o.StatisticsV4LatencyRawOtherQueryParameter != nil {
			qrStatisticsV4LatencyRawOther = *o.StatisticsV4LatencyRawOtherQueryParameter
		}
		qStatisticsV4LatencyRawOther := swag.FormatInt64(qrStatisticsV4LatencyRawOther)
		if qStatisticsV4LatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.v4.latency_raw.other", qStatisticsV4LatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4LatencyRawReadQueryParameter != nil {

		// query param statistics.v4.latency_raw.read
		var qrStatisticsV4LatencyRawRead int64

		if o.StatisticsV4LatencyRawReadQueryParameter != nil {
			qrStatisticsV4LatencyRawRead = *o.StatisticsV4LatencyRawReadQueryParameter
		}
		qStatisticsV4LatencyRawRead := swag.FormatInt64(qrStatisticsV4LatencyRawRead)
		if qStatisticsV4LatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.v4.latency_raw.read", qStatisticsV4LatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4LatencyRawTotalQueryParameter != nil {

		// query param statistics.v4.latency_raw.total
		var qrStatisticsV4LatencyRawTotal int64

		if o.StatisticsV4LatencyRawTotalQueryParameter != nil {
			qrStatisticsV4LatencyRawTotal = *o.StatisticsV4LatencyRawTotalQueryParameter
		}
		qStatisticsV4LatencyRawTotal := swag.FormatInt64(qrStatisticsV4LatencyRawTotal)
		if qStatisticsV4LatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.v4.latency_raw.total", qStatisticsV4LatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4LatencyRawWriteQueryParameter != nil {

		// query param statistics.v4.latency_raw.write
		var qrStatisticsV4LatencyRawWrite int64

		if o.StatisticsV4LatencyRawWriteQueryParameter != nil {
			qrStatisticsV4LatencyRawWrite = *o.StatisticsV4LatencyRawWriteQueryParameter
		}
		qStatisticsV4LatencyRawWrite := swag.FormatInt64(qrStatisticsV4LatencyRawWrite)
		if qStatisticsV4LatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.v4.latency_raw.write", qStatisticsV4LatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4StatusQueryParameter != nil {

		// query param statistics.v4.status
		var qrStatisticsV4Status string

		if o.StatisticsV4StatusQueryParameter != nil {
			qrStatisticsV4Status = *o.StatisticsV4StatusQueryParameter
		}
		qStatisticsV4Status := qrStatisticsV4Status
		if qStatisticsV4Status != "" {

			if err := r.SetQueryParam("statistics.v4.status", qStatisticsV4Status); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4ThroughputRawReadQueryParameter != nil {

		// query param statistics.v4.throughput_raw.read
		var qrStatisticsV4ThroughputRawRead int64

		if o.StatisticsV4ThroughputRawReadQueryParameter != nil {
			qrStatisticsV4ThroughputRawRead = *o.StatisticsV4ThroughputRawReadQueryParameter
		}
		qStatisticsV4ThroughputRawRead := swag.FormatInt64(qrStatisticsV4ThroughputRawRead)
		if qStatisticsV4ThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.v4.throughput_raw.read", qStatisticsV4ThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4ThroughputRawTotalQueryParameter != nil {

		// query param statistics.v4.throughput_raw.total
		var qrStatisticsV4ThroughputRawTotal int64

		if o.StatisticsV4ThroughputRawTotalQueryParameter != nil {
			qrStatisticsV4ThroughputRawTotal = *o.StatisticsV4ThroughputRawTotalQueryParameter
		}
		qStatisticsV4ThroughputRawTotal := swag.FormatInt64(qrStatisticsV4ThroughputRawTotal)
		if qStatisticsV4ThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.v4.throughput_raw.total", qStatisticsV4ThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4ThroughputRawWriteQueryParameter != nil {

		// query param statistics.v4.throughput_raw.write
		var qrStatisticsV4ThroughputRawWrite int64

		if o.StatisticsV4ThroughputRawWriteQueryParameter != nil {
			qrStatisticsV4ThroughputRawWrite = *o.StatisticsV4ThroughputRawWriteQueryParameter
		}
		qStatisticsV4ThroughputRawWrite := swag.FormatInt64(qrStatisticsV4ThroughputRawWrite)
		if qStatisticsV4ThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.v4.throughput_raw.write", qStatisticsV4ThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV4TimestampQueryParameter != nil {

		// query param statistics.v4.timestamp
		var qrStatisticsV4Timestamp string

		if o.StatisticsV4TimestampQueryParameter != nil {
			qrStatisticsV4Timestamp = *o.StatisticsV4TimestampQueryParameter
		}
		qStatisticsV4Timestamp := qrStatisticsV4Timestamp
		if qStatisticsV4Timestamp != "" {

			if err := r.SetQueryParam("statistics.v4.timestamp", qStatisticsV4Timestamp); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41IopsRawOtherQueryParameter != nil {

		// query param statistics.v41.iops_raw.other
		var qrStatisticsV41IopsRawOther int64

		if o.StatisticsV41IopsRawOtherQueryParameter != nil {
			qrStatisticsV41IopsRawOther = *o.StatisticsV41IopsRawOtherQueryParameter
		}
		qStatisticsV41IopsRawOther := swag.FormatInt64(qrStatisticsV41IopsRawOther)
		if qStatisticsV41IopsRawOther != "" {

			if err := r.SetQueryParam("statistics.v41.iops_raw.other", qStatisticsV41IopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41IopsRawReadQueryParameter != nil {

		// query param statistics.v41.iops_raw.read
		var qrStatisticsV41IopsRawRead int64

		if o.StatisticsV41IopsRawReadQueryParameter != nil {
			qrStatisticsV41IopsRawRead = *o.StatisticsV41IopsRawReadQueryParameter
		}
		qStatisticsV41IopsRawRead := swag.FormatInt64(qrStatisticsV41IopsRawRead)
		if qStatisticsV41IopsRawRead != "" {

			if err := r.SetQueryParam("statistics.v41.iops_raw.read", qStatisticsV41IopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41IopsRawTotalQueryParameter != nil {

		// query param statistics.v41.iops_raw.total
		var qrStatisticsV41IopsRawTotal int64

		if o.StatisticsV41IopsRawTotalQueryParameter != nil {
			qrStatisticsV41IopsRawTotal = *o.StatisticsV41IopsRawTotalQueryParameter
		}
		qStatisticsV41IopsRawTotal := swag.FormatInt64(qrStatisticsV41IopsRawTotal)
		if qStatisticsV41IopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.v41.iops_raw.total", qStatisticsV41IopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41IopsRawWriteQueryParameter != nil {

		// query param statistics.v41.iops_raw.write
		var qrStatisticsV41IopsRawWrite int64

		if o.StatisticsV41IopsRawWriteQueryParameter != nil {
			qrStatisticsV41IopsRawWrite = *o.StatisticsV41IopsRawWriteQueryParameter
		}
		qStatisticsV41IopsRawWrite := swag.FormatInt64(qrStatisticsV41IopsRawWrite)
		if qStatisticsV41IopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.v41.iops_raw.write", qStatisticsV41IopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41LatencyRawOtherQueryParameter != nil {

		// query param statistics.v41.latency_raw.other
		var qrStatisticsV41LatencyRawOther int64

		if o.StatisticsV41LatencyRawOtherQueryParameter != nil {
			qrStatisticsV41LatencyRawOther = *o.StatisticsV41LatencyRawOtherQueryParameter
		}
		qStatisticsV41LatencyRawOther := swag.FormatInt64(qrStatisticsV41LatencyRawOther)
		if qStatisticsV41LatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.v41.latency_raw.other", qStatisticsV41LatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41LatencyRawReadQueryParameter != nil {

		// query param statistics.v41.latency_raw.read
		var qrStatisticsV41LatencyRawRead int64

		if o.StatisticsV41LatencyRawReadQueryParameter != nil {
			qrStatisticsV41LatencyRawRead = *o.StatisticsV41LatencyRawReadQueryParameter
		}
		qStatisticsV41LatencyRawRead := swag.FormatInt64(qrStatisticsV41LatencyRawRead)
		if qStatisticsV41LatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.v41.latency_raw.read", qStatisticsV41LatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41LatencyRawTotalQueryParameter != nil {

		// query param statistics.v41.latency_raw.total
		var qrStatisticsV41LatencyRawTotal int64

		if o.StatisticsV41LatencyRawTotalQueryParameter != nil {
			qrStatisticsV41LatencyRawTotal = *o.StatisticsV41LatencyRawTotalQueryParameter
		}
		qStatisticsV41LatencyRawTotal := swag.FormatInt64(qrStatisticsV41LatencyRawTotal)
		if qStatisticsV41LatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.v41.latency_raw.total", qStatisticsV41LatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41LatencyRawWriteQueryParameter != nil {

		// query param statistics.v41.latency_raw.write
		var qrStatisticsV41LatencyRawWrite int64

		if o.StatisticsV41LatencyRawWriteQueryParameter != nil {
			qrStatisticsV41LatencyRawWrite = *o.StatisticsV41LatencyRawWriteQueryParameter
		}
		qStatisticsV41LatencyRawWrite := swag.FormatInt64(qrStatisticsV41LatencyRawWrite)
		if qStatisticsV41LatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.v41.latency_raw.write", qStatisticsV41LatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41StatusQueryParameter != nil {

		// query param statistics.v41.status
		var qrStatisticsV41Status string

		if o.StatisticsV41StatusQueryParameter != nil {
			qrStatisticsV41Status = *o.StatisticsV41StatusQueryParameter
		}
		qStatisticsV41Status := qrStatisticsV41Status
		if qStatisticsV41Status != "" {

			if err := r.SetQueryParam("statistics.v41.status", qStatisticsV41Status); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41ThroughputRawReadQueryParameter != nil {

		// query param statistics.v41.throughput_raw.read
		var qrStatisticsV41ThroughputRawRead int64

		if o.StatisticsV41ThroughputRawReadQueryParameter != nil {
			qrStatisticsV41ThroughputRawRead = *o.StatisticsV41ThroughputRawReadQueryParameter
		}
		qStatisticsV41ThroughputRawRead := swag.FormatInt64(qrStatisticsV41ThroughputRawRead)
		if qStatisticsV41ThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.v41.throughput_raw.read", qStatisticsV41ThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41ThroughputRawTotalQueryParameter != nil {

		// query param statistics.v41.throughput_raw.total
		var qrStatisticsV41ThroughputRawTotal int64

		if o.StatisticsV41ThroughputRawTotalQueryParameter != nil {
			qrStatisticsV41ThroughputRawTotal = *o.StatisticsV41ThroughputRawTotalQueryParameter
		}
		qStatisticsV41ThroughputRawTotal := swag.FormatInt64(qrStatisticsV41ThroughputRawTotal)
		if qStatisticsV41ThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.v41.throughput_raw.total", qStatisticsV41ThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41ThroughputRawWriteQueryParameter != nil {

		// query param statistics.v41.throughput_raw.write
		var qrStatisticsV41ThroughputRawWrite int64

		if o.StatisticsV41ThroughputRawWriteQueryParameter != nil {
			qrStatisticsV41ThroughputRawWrite = *o.StatisticsV41ThroughputRawWriteQueryParameter
		}
		qStatisticsV41ThroughputRawWrite := swag.FormatInt64(qrStatisticsV41ThroughputRawWrite)
		if qStatisticsV41ThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.v41.throughput_raw.write", qStatisticsV41ThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsV41TimestampQueryParameter != nil {

		// query param statistics.v41.timestamp
		var qrStatisticsV41Timestamp string

		if o.StatisticsV41TimestampQueryParameter != nil {
			qrStatisticsV41Timestamp = *o.StatisticsV41TimestampQueryParameter
		}
		qStatisticsV41Timestamp := qrStatisticsV41Timestamp
		if qStatisticsV41Timestamp != "" {

			if err := r.SetQueryParam("statistics.v41.timestamp", qStatisticsV41Timestamp); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.TransportTCPEnabledQueryParameter != nil {

		// query param transport.tcp_enabled
		var qrTransportTCPEnabled bool

		if o.TransportTCPEnabledQueryParameter != nil {
			qrTransportTCPEnabled = *o.TransportTCPEnabledQueryParameter
		}
		qTransportTCPEnabled := swag.FormatBool(qrTransportTCPEnabled)
		if qTransportTCPEnabled != "" {

			if err := r.SetQueryParam("transport.tcp_enabled", qTransportTCPEnabled); err != nil {
				return err
			}
		}
	}

	if o.TransportTCPMaxTransferSizeQueryParameter != nil {

		// query param transport.tcp_max_transfer_size
		var qrTransportTCPMaxTransferSize int64

		if o.TransportTCPMaxTransferSizeQueryParameter != nil {
			qrTransportTCPMaxTransferSize = *o.TransportTCPMaxTransferSizeQueryParameter
		}
		qTransportTCPMaxTransferSize := swag.FormatInt64(qrTransportTCPMaxTransferSize)
		if qTransportTCPMaxTransferSize != "" {

			if err := r.SetQueryParam("transport.tcp_max_transfer_size", qTransportTCPMaxTransferSize); err != nil {
				return err
			}
		}
	}

	if o.TransportUDPEnabledQueryParameter != nil {

		// query param transport.udp_enabled
		var qrTransportUDPEnabled bool

		if o.TransportUDPEnabledQueryParameter != nil {
			qrTransportUDPEnabled = *o.TransportUDPEnabledQueryParameter
		}
		qTransportUDPEnabled := swag.FormatBool(qrTransportUDPEnabled)
		if qTransportUDPEnabled != "" {

			if err := r.SetQueryParam("transport.udp_enabled", qTransportUDPEnabled); err != nil {
				return err
			}
		}
	}

	if o.VstorageEnabledQueryParameter != nil {

		// query param vstorage_enabled
		var qrVstorageEnabled bool

		if o.VstorageEnabledQueryParameter != nil {
			qrVstorageEnabled = *o.VstorageEnabledQueryParameter
		}
		qVstorageEnabled := swag.FormatBool(qrVstorageEnabled)
		if qVstorageEnabled != "" {

			if err := r.SetQueryParam("vstorage_enabled", qVstorageEnabled); err != nil {
				return err
			}
		}
	}

	if o.WindowsDefaultUserQueryParameter != nil {

		// query param windows.default_user
		var qrWindowsDefaultUser string

		if o.WindowsDefaultUserQueryParameter != nil {
			qrWindowsDefaultUser = *o.WindowsDefaultUserQueryParameter
		}
		qWindowsDefaultUser := qrWindowsDefaultUser
		if qWindowsDefaultUser != "" {

			if err := r.SetQueryParam("windows.default_user", qWindowsDefaultUser); err != nil {
				return err
			}
		}
	}

	if o.WindowsMapUnknownUIDToDefaultUserQueryParameter != nil {

		// query param windows.map_unknown_uid_to_default_user
		var qrWindowsMapUnknownUIDToDefaultUser bool

		if o.WindowsMapUnknownUIDToDefaultUserQueryParameter != nil {
			qrWindowsMapUnknownUIDToDefaultUser = *o.WindowsMapUnknownUIDToDefaultUserQueryParameter
		}
		qWindowsMapUnknownUIDToDefaultUser := swag.FormatBool(qrWindowsMapUnknownUIDToDefaultUser)
		if qWindowsMapUnknownUIDToDefaultUser != "" {

			if err := r.SetQueryParam("windows.map_unknown_uid_to_default_user", qWindowsMapUnknownUIDToDefaultUser); err != nil {
				return err
			}
		}
	}

	if o.WindowsV3MsDosClientEnabledQueryParameter != nil {

		// query param windows.v3_ms_dos_client_enabled
		var qrWindowsV3MsDosClientEnabled bool

		if o.WindowsV3MsDosClientEnabledQueryParameter != nil {
			qrWindowsV3MsDosClientEnabled = *o.WindowsV3MsDosClientEnabledQueryParameter
		}
		qWindowsV3MsDosClientEnabled := swag.FormatBool(qrWindowsV3MsDosClientEnabled)
		if qWindowsV3MsDosClientEnabled != "" {

			if err := r.SetQueryParam("windows.v3_ms_dos_client_enabled", qWindowsV3MsDosClientEnabled); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamNfsCollectionGet binds the parameter fields
func (o *NfsCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamNfsCollectionGet binds the parameter order_by
func (o *NfsCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
