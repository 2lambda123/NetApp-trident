// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewExportPolicyCollectionGetParams creates a new ExportPolicyCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewExportPolicyCollectionGetParams() *ExportPolicyCollectionGetParams {
	return &ExportPolicyCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewExportPolicyCollectionGetParamsWithTimeout creates a new ExportPolicyCollectionGetParams object
// with the ability to set a timeout on a request.
func NewExportPolicyCollectionGetParamsWithTimeout(timeout time.Duration) *ExportPolicyCollectionGetParams {
	return &ExportPolicyCollectionGetParams{
		timeout: timeout,
	}
}

// NewExportPolicyCollectionGetParamsWithContext creates a new ExportPolicyCollectionGetParams object
// with the ability to set a context for a request.
func NewExportPolicyCollectionGetParamsWithContext(ctx context.Context) *ExportPolicyCollectionGetParams {
	return &ExportPolicyCollectionGetParams{
		Context: ctx,
	}
}

// NewExportPolicyCollectionGetParamsWithHTTPClient creates a new ExportPolicyCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewExportPolicyCollectionGetParamsWithHTTPClient(client *http.Client) *ExportPolicyCollectionGetParams {
	return &ExportPolicyCollectionGetParams{
		HTTPClient: client,
	}
}

/* ExportPolicyCollectionGetParams contains all the parameters to send to the API endpoint
   for the export policy collection get operation.

   Typically these are written to a http.Request.
*/
type ExportPolicyCollectionGetParams struct {

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* ID.

	   Filter by id
	*/
	IDQueryParameter *int64

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* RulesAllowDeviceCreation.

	   Filter by rules.allow_device_creation
	*/
	RulesAllowDeviceCreationQueryParameter *bool

	/* RulesAllowSuid.

	   Filter by rules.allow_suid
	*/
	RulesAllowSUIDQueryParameter *bool

	/* RulesAnonymousUser.

	   Filter by rules.anonymous_user
	*/
	RulesAnonymousUserQueryParameter *string

	/* RulesChownMode.

	   Filter by rules.chown_mode
	*/
	RulesChownModeQueryParameter *string

	/* RulesClientsMatch.

	   Filter by rules.clients.match
	*/
	RulesClientsMatchQueryParameter *string

	/* RulesIndex.

	   Filter by rules.index
	*/
	RulesIndexQueryParameter *int64

	/* RulesNtfsUnixSecurity.

	   Filter by rules.ntfs_unix_security
	*/
	RulesNtfsUnixSecurityQueryParameter *string

	/* RulesProtocols.

	   Filter by rules.protocols
	*/
	RulesProtocolsQueryParameter *string

	/* RulesRoRule.

	   Filter by rules.ro_rule
	*/
	RulesRoRuleQueryParameter *string

	/* RulesRwRule.

	   Filter by rules.rw_rule
	*/
	RulesRwRuleQueryParameter *string

	/* RulesSuperuser.

	   Filter by rules.superuser
	*/
	RulesSuperuserQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the export policy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ExportPolicyCollectionGetParams) WithDefaults() *ExportPolicyCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the export policy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ExportPolicyCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := ExportPolicyCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithTimeout(timeout time.Duration) *ExportPolicyCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithContext(ctx context.Context) *ExportPolicyCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithHTTPClient(client *http.Client) *ExportPolicyCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsQueryParameter adds the fields to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithFieldsQueryParameter(fields []string) *ExportPolicyCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithIDQueryParameter adds the id to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithIDQueryParameter(id *int64) *ExportPolicyCollectionGetParams {
	o.SetIDQueryParameter(id)
	return o
}

// SetIDQueryParameter adds the id to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetIDQueryParameter(id *int64) {
	o.IDQueryParameter = id
}

// WithMaxRecordsQueryParameter adds the maxRecords to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *ExportPolicyCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithNameQueryParameter(name *string) *ExportPolicyCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *ExportPolicyCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithReturnRecordsQueryParameter adds the returnRecords to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *ExportPolicyCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *ExportPolicyCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithRulesAllowDeviceCreationQueryParameter adds the rulesAllowDeviceCreation to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesAllowDeviceCreationQueryParameter(rulesAllowDeviceCreation *bool) *ExportPolicyCollectionGetParams {
	o.SetRulesAllowDeviceCreationQueryParameter(rulesAllowDeviceCreation)
	return o
}

// SetRulesAllowDeviceCreationQueryParameter adds the rulesAllowDeviceCreation to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesAllowDeviceCreationQueryParameter(rulesAllowDeviceCreation *bool) {
	o.RulesAllowDeviceCreationQueryParameter = rulesAllowDeviceCreation
}

// WithRulesAllowSUIDQueryParameter adds the rulesAllowSuid to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesAllowSUIDQueryParameter(rulesAllowSuid *bool) *ExportPolicyCollectionGetParams {
	o.SetRulesAllowSUIDQueryParameter(rulesAllowSuid)
	return o
}

// SetRulesAllowSUIDQueryParameter adds the rulesAllowSuid to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesAllowSUIDQueryParameter(rulesAllowSuid *bool) {
	o.RulesAllowSUIDQueryParameter = rulesAllowSuid
}

// WithRulesAnonymousUserQueryParameter adds the rulesAnonymousUser to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesAnonymousUserQueryParameter(rulesAnonymousUser *string) *ExportPolicyCollectionGetParams {
	o.SetRulesAnonymousUserQueryParameter(rulesAnonymousUser)
	return o
}

// SetRulesAnonymousUserQueryParameter adds the rulesAnonymousUser to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesAnonymousUserQueryParameter(rulesAnonymousUser *string) {
	o.RulesAnonymousUserQueryParameter = rulesAnonymousUser
}

// WithRulesChownModeQueryParameter adds the rulesChownMode to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesChownModeQueryParameter(rulesChownMode *string) *ExportPolicyCollectionGetParams {
	o.SetRulesChownModeQueryParameter(rulesChownMode)
	return o
}

// SetRulesChownModeQueryParameter adds the rulesChownMode to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesChownModeQueryParameter(rulesChownMode *string) {
	o.RulesChownModeQueryParameter = rulesChownMode
}

// WithRulesClientsMatchQueryParameter adds the rulesClientsMatch to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesClientsMatchQueryParameter(rulesClientsMatch *string) *ExportPolicyCollectionGetParams {
	o.SetRulesClientsMatchQueryParameter(rulesClientsMatch)
	return o
}

// SetRulesClientsMatchQueryParameter adds the rulesClientsMatch to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesClientsMatchQueryParameter(rulesClientsMatch *string) {
	o.RulesClientsMatchQueryParameter = rulesClientsMatch
}

// WithRulesIndexQueryParameter adds the rulesIndex to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesIndexQueryParameter(rulesIndex *int64) *ExportPolicyCollectionGetParams {
	o.SetRulesIndexQueryParameter(rulesIndex)
	return o
}

// SetRulesIndexQueryParameter adds the rulesIndex to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesIndexQueryParameter(rulesIndex *int64) {
	o.RulesIndexQueryParameter = rulesIndex
}

// WithRulesNtfsUnixSecurityQueryParameter adds the rulesNtfsUnixSecurity to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesNtfsUnixSecurityQueryParameter(rulesNtfsUnixSecurity *string) *ExportPolicyCollectionGetParams {
	o.SetRulesNtfsUnixSecurityQueryParameter(rulesNtfsUnixSecurity)
	return o
}

// SetRulesNtfsUnixSecurityQueryParameter adds the rulesNtfsUnixSecurity to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesNtfsUnixSecurityQueryParameter(rulesNtfsUnixSecurity *string) {
	o.RulesNtfsUnixSecurityQueryParameter = rulesNtfsUnixSecurity
}

// WithRulesProtocolsQueryParameter adds the rulesProtocols to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesProtocolsQueryParameter(rulesProtocols *string) *ExportPolicyCollectionGetParams {
	o.SetRulesProtocolsQueryParameter(rulesProtocols)
	return o
}

// SetRulesProtocolsQueryParameter adds the rulesProtocols to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesProtocolsQueryParameter(rulesProtocols *string) {
	o.RulesProtocolsQueryParameter = rulesProtocols
}

// WithRulesRoRuleQueryParameter adds the rulesRoRule to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesRoRuleQueryParameter(rulesRoRule *string) *ExportPolicyCollectionGetParams {
	o.SetRulesRoRuleQueryParameter(rulesRoRule)
	return o
}

// SetRulesRoRuleQueryParameter adds the rulesRoRule to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesRoRuleQueryParameter(rulesRoRule *string) {
	o.RulesRoRuleQueryParameter = rulesRoRule
}

// WithRulesRwRuleQueryParameter adds the rulesRwRule to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesRwRuleQueryParameter(rulesRwRule *string) *ExportPolicyCollectionGetParams {
	o.SetRulesRwRuleQueryParameter(rulesRwRule)
	return o
}

// SetRulesRwRuleQueryParameter adds the rulesRwRule to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesRwRuleQueryParameter(rulesRwRule *string) {
	o.RulesRwRuleQueryParameter = rulesRwRule
}

// WithRulesSuperuserQueryParameter adds the rulesSuperuser to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithRulesSuperuserQueryParameter(rulesSuperuser *string) *ExportPolicyCollectionGetParams {
	o.SetRulesSuperuserQueryParameter(rulesSuperuser)
	return o
}

// SetRulesSuperuserQueryParameter adds the rulesSuperuser to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetRulesSuperuserQueryParameter(rulesSuperuser *string) {
	o.RulesSuperuserQueryParameter = rulesSuperuser
}

// WithSVMNameQueryParameter adds the svmName to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *ExportPolicyCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *ExportPolicyCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the export policy collection get params
func (o *ExportPolicyCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WriteToRequest writes these params to a swagger request
func (o *ExportPolicyCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.IDQueryParameter != nil {

		// query param id
		var qrID int64

		if o.IDQueryParameter != nil {
			qrID = *o.IDQueryParameter
		}
		qID := swag.FormatInt64(qrID)
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.RulesAllowDeviceCreationQueryParameter != nil {

		// query param rules.allow_device_creation
		var qrRulesAllowDeviceCreation bool

		if o.RulesAllowDeviceCreationQueryParameter != nil {
			qrRulesAllowDeviceCreation = *o.RulesAllowDeviceCreationQueryParameter
		}
		qRulesAllowDeviceCreation := swag.FormatBool(qrRulesAllowDeviceCreation)
		if qRulesAllowDeviceCreation != "" {

			if err := r.SetQueryParam("rules.allow_device_creation", qRulesAllowDeviceCreation); err != nil {
				return err
			}
		}
	}

	if o.RulesAllowSUIDQueryParameter != nil {

		// query param rules.allow_suid
		var qrRulesAllowSuid bool

		if o.RulesAllowSUIDQueryParameter != nil {
			qrRulesAllowSuid = *o.RulesAllowSUIDQueryParameter
		}
		qRulesAllowSuid := swag.FormatBool(qrRulesAllowSuid)
		if qRulesAllowSuid != "" {

			if err := r.SetQueryParam("rules.allow_suid", qRulesAllowSuid); err != nil {
				return err
			}
		}
	}

	if o.RulesAnonymousUserQueryParameter != nil {

		// query param rules.anonymous_user
		var qrRulesAnonymousUser string

		if o.RulesAnonymousUserQueryParameter != nil {
			qrRulesAnonymousUser = *o.RulesAnonymousUserQueryParameter
		}
		qRulesAnonymousUser := qrRulesAnonymousUser
		if qRulesAnonymousUser != "" {

			if err := r.SetQueryParam("rules.anonymous_user", qRulesAnonymousUser); err != nil {
				return err
			}
		}
	}

	if o.RulesChownModeQueryParameter != nil {

		// query param rules.chown_mode
		var qrRulesChownMode string

		if o.RulesChownModeQueryParameter != nil {
			qrRulesChownMode = *o.RulesChownModeQueryParameter
		}
		qRulesChownMode := qrRulesChownMode
		if qRulesChownMode != "" {

			if err := r.SetQueryParam("rules.chown_mode", qRulesChownMode); err != nil {
				return err
			}
		}
	}

	if o.RulesClientsMatchQueryParameter != nil {

		// query param rules.clients.match
		var qrRulesClientsMatch string

		if o.RulesClientsMatchQueryParameter != nil {
			qrRulesClientsMatch = *o.RulesClientsMatchQueryParameter
		}
		qRulesClientsMatch := qrRulesClientsMatch
		if qRulesClientsMatch != "" {

			if err := r.SetQueryParam("rules.clients.match", qRulesClientsMatch); err != nil {
				return err
			}
		}
	}

	if o.RulesIndexQueryParameter != nil {

		// query param rules.index
		var qrRulesIndex int64

		if o.RulesIndexQueryParameter != nil {
			qrRulesIndex = *o.RulesIndexQueryParameter
		}
		qRulesIndex := swag.FormatInt64(qrRulesIndex)
		if qRulesIndex != "" {

			if err := r.SetQueryParam("rules.index", qRulesIndex); err != nil {
				return err
			}
		}
	}

	if o.RulesNtfsUnixSecurityQueryParameter != nil {

		// query param rules.ntfs_unix_security
		var qrRulesNtfsUnixSecurity string

		if o.RulesNtfsUnixSecurityQueryParameter != nil {
			qrRulesNtfsUnixSecurity = *o.RulesNtfsUnixSecurityQueryParameter
		}
		qRulesNtfsUnixSecurity := qrRulesNtfsUnixSecurity
		if qRulesNtfsUnixSecurity != "" {

			if err := r.SetQueryParam("rules.ntfs_unix_security", qRulesNtfsUnixSecurity); err != nil {
				return err
			}
		}
	}

	if o.RulesProtocolsQueryParameter != nil {

		// query param rules.protocols
		var qrRulesProtocols string

		if o.RulesProtocolsQueryParameter != nil {
			qrRulesProtocols = *o.RulesProtocolsQueryParameter
		}
		qRulesProtocols := qrRulesProtocols
		if qRulesProtocols != "" {

			if err := r.SetQueryParam("rules.protocols", qRulesProtocols); err != nil {
				return err
			}
		}
	}

	if o.RulesRoRuleQueryParameter != nil {

		// query param rules.ro_rule
		var qrRulesRoRule string

		if o.RulesRoRuleQueryParameter != nil {
			qrRulesRoRule = *o.RulesRoRuleQueryParameter
		}
		qRulesRoRule := qrRulesRoRule
		if qRulesRoRule != "" {

			if err := r.SetQueryParam("rules.ro_rule", qRulesRoRule); err != nil {
				return err
			}
		}
	}

	if o.RulesRwRuleQueryParameter != nil {

		// query param rules.rw_rule
		var qrRulesRwRule string

		if o.RulesRwRuleQueryParameter != nil {
			qrRulesRwRule = *o.RulesRwRuleQueryParameter
		}
		qRulesRwRule := qrRulesRwRule
		if qRulesRwRule != "" {

			if err := r.SetQueryParam("rules.rw_rule", qRulesRwRule); err != nil {
				return err
			}
		}
	}

	if o.RulesSuperuserQueryParameter != nil {

		// query param rules.superuser
		var qrRulesSuperuser string

		if o.RulesSuperuserQueryParameter != nil {
			qrRulesSuperuser = *o.RulesSuperuserQueryParameter
		}
		qRulesSuperuser := qrRulesSuperuser
		if qRulesSuperuser != "" {

			if err := r.SetQueryParam("rules.superuser", qRulesSuperuser); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamExportPolicyCollectionGet binds the parameter fields
func (o *ExportPolicyCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamExportPolicyCollectionGet binds the parameter order_by
func (o *ExportPolicyCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
