// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCifsDomainCollectionGetParams creates a new CifsDomainCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCifsDomainCollectionGetParams() *CifsDomainCollectionGetParams {
	return &CifsDomainCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCifsDomainCollectionGetParamsWithTimeout creates a new CifsDomainCollectionGetParams object
// with the ability to set a timeout on a request.
func NewCifsDomainCollectionGetParamsWithTimeout(timeout time.Duration) *CifsDomainCollectionGetParams {
	return &CifsDomainCollectionGetParams{
		timeout: timeout,
	}
}

// NewCifsDomainCollectionGetParamsWithContext creates a new CifsDomainCollectionGetParams object
// with the ability to set a context for a request.
func NewCifsDomainCollectionGetParamsWithContext(ctx context.Context) *CifsDomainCollectionGetParams {
	return &CifsDomainCollectionGetParams{
		Context: ctx,
	}
}

// NewCifsDomainCollectionGetParamsWithHTTPClient creates a new CifsDomainCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewCifsDomainCollectionGetParamsWithHTTPClient(client *http.Client) *CifsDomainCollectionGetParams {
	return &CifsDomainCollectionGetParams{
		HTTPClient: client,
	}
}

/*
CifsDomainCollectionGetParams contains all the parameters to send to the API endpoint

	for the cifs domain collection get operation.

	Typically these are written to a http.Request.
*/
type CifsDomainCollectionGetParams struct {

	/* DiscoveredServersDomain.

	   Filter by discovered_servers.domain
	*/
	DiscoveredServersDomainQueryParameter *string

	/* DiscoveredServersNodeName.

	   Filter by discovered_servers.node.name
	*/
	DiscoveredServersNodeNameQueryParameter *string

	/* DiscoveredServersNodeUUID.

	   Filter by discovered_servers.node.uuid
	*/
	DiscoveredServersNodeUUIDQueryParameter *string

	/* DiscoveredServersPreference.

	   Filter by discovered_servers.preference
	*/
	DiscoveredServersPreferenceQueryParameter *string

	/* DiscoveredServersServerIP.

	   Filter by discovered_servers.server_ip
	*/
	DiscoveredServersServerIPQueryParameter *string

	/* DiscoveredServersServerName.

	   Filter by discovered_servers.server_name
	*/
	DiscoveredServersServerNameQueryParameter *string

	/* DiscoveredServersServerType.

	   Filter by discovered_servers.server_type
	*/
	DiscoveredServersServerTypeQueryParameter *string

	/* DiscoveredServersState.

	   Filter by discovered_servers.state
	*/
	DiscoveredServersStateQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* NameMappingTrustedDomains.

	   Filter by name_mapping.trusted_domains
	*/
	NameMappingTrustedDomainsQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* PasswordScheduleScheduleDescription.

	   Filter by password_schedule.schedule_description
	*/
	PasswordScheduleScheduleDescriptionQueryParameter *string

	/* PasswordScheduleScheduleEnabled.

	   Filter by password_schedule.schedule_enabled
	*/
	PasswordScheduleScheduleEnabledQueryParameter *bool

	/* PasswordScheduleScheduleLastChangedTime.

	   Filter by password_schedule.schedule_last_changed_time
	*/
	PasswordScheduleScheduleLastChangedTimeQueryParameter *string

	/* PasswordScheduleScheduleRandomizedMinute.

	   Filter by password_schedule.schedule_randomized_minute
	*/
	PasswordScheduleScheduleRandomizedMinuteQueryParameter *int64

	/* PasswordScheduleScheduleWarnMessage.

	   Filter by password_schedule.schedule_warn_message
	*/
	PasswordScheduleScheduleWarnMessageQueryParameter *string

	/* PasswordScheduleScheduleWeeklyInterval.

	   Filter by password_schedule.schedule_weekly_interval
	*/
	PasswordScheduleScheduleWeeklyIntervalQueryParameter *int64

	/* PreferredDcsFqdn.

	   Filter by preferred_dcs.fqdn
	*/
	PreferredDcsFqdnQueryParameter *string

	/* PreferredDcsServerIP.

	   Filter by preferred_dcs.server_ip
	*/
	PreferredDcsServerIPQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* TrustRelationshipsHomeDomain.

	   Filter by trust_relationships.home_domain
	*/
	TrustRelationshipsHomeDomainQueryParameter *string

	/* TrustRelationshipsNodeName.

	   Filter by trust_relationships.node.name
	*/
	TrustRelationshipsNodeNameQueryParameter *string

	/* TrustRelationshipsNodeUUID.

	   Filter by trust_relationships.node.uuid
	*/
	TrustRelationshipsNodeUUIDQueryParameter *string

	/* TrustRelationshipsTrustedDomains.

	   Filter by trust_relationships.trusted_domains
	*/
	TrustRelationshipsTrustedDomainsQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cifs domain collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CifsDomainCollectionGetParams) WithDefaults() *CifsDomainCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cifs domain collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CifsDomainCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := CifsDomainCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithTimeout(timeout time.Duration) *CifsDomainCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithContext(ctx context.Context) *CifsDomainCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithHTTPClient(client *http.Client) *CifsDomainCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDiscoveredServersDomainQueryParameter adds the discoveredServersDomain to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersDomainQueryParameter(discoveredServersDomain *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersDomainQueryParameter(discoveredServersDomain)
	return o
}

// SetDiscoveredServersDomainQueryParameter adds the discoveredServersDomain to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersDomainQueryParameter(discoveredServersDomain *string) {
	o.DiscoveredServersDomainQueryParameter = discoveredServersDomain
}

// WithDiscoveredServersNodeNameQueryParameter adds the discoveredServersNodeName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersNodeNameQueryParameter(discoveredServersNodeName *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersNodeNameQueryParameter(discoveredServersNodeName)
	return o
}

// SetDiscoveredServersNodeNameQueryParameter adds the discoveredServersNodeName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersNodeNameQueryParameter(discoveredServersNodeName *string) {
	o.DiscoveredServersNodeNameQueryParameter = discoveredServersNodeName
}

// WithDiscoveredServersNodeUUIDQueryParameter adds the discoveredServersNodeUUID to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersNodeUUIDQueryParameter(discoveredServersNodeUUID *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersNodeUUIDQueryParameter(discoveredServersNodeUUID)
	return o
}

// SetDiscoveredServersNodeUUIDQueryParameter adds the discoveredServersNodeUuid to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersNodeUUIDQueryParameter(discoveredServersNodeUUID *string) {
	o.DiscoveredServersNodeUUIDQueryParameter = discoveredServersNodeUUID
}

// WithDiscoveredServersPreferenceQueryParameter adds the discoveredServersPreference to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersPreferenceQueryParameter(discoveredServersPreference *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersPreferenceQueryParameter(discoveredServersPreference)
	return o
}

// SetDiscoveredServersPreferenceQueryParameter adds the discoveredServersPreference to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersPreferenceQueryParameter(discoveredServersPreference *string) {
	o.DiscoveredServersPreferenceQueryParameter = discoveredServersPreference
}

// WithDiscoveredServersServerIPQueryParameter adds the discoveredServersServerIP to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersServerIPQueryParameter(discoveredServersServerIP *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersServerIPQueryParameter(discoveredServersServerIP)
	return o
}

// SetDiscoveredServersServerIPQueryParameter adds the discoveredServersServerIp to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersServerIPQueryParameter(discoveredServersServerIP *string) {
	o.DiscoveredServersServerIPQueryParameter = discoveredServersServerIP
}

// WithDiscoveredServersServerNameQueryParameter adds the discoveredServersServerName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersServerNameQueryParameter(discoveredServersServerName *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersServerNameQueryParameter(discoveredServersServerName)
	return o
}

// SetDiscoveredServersServerNameQueryParameter adds the discoveredServersServerName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersServerNameQueryParameter(discoveredServersServerName *string) {
	o.DiscoveredServersServerNameQueryParameter = discoveredServersServerName
}

// WithDiscoveredServersServerTypeQueryParameter adds the discoveredServersServerType to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersServerTypeQueryParameter(discoveredServersServerType *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersServerTypeQueryParameter(discoveredServersServerType)
	return o
}

// SetDiscoveredServersServerTypeQueryParameter adds the discoveredServersServerType to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersServerTypeQueryParameter(discoveredServersServerType *string) {
	o.DiscoveredServersServerTypeQueryParameter = discoveredServersServerType
}

// WithDiscoveredServersStateQueryParameter adds the discoveredServersState to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithDiscoveredServersStateQueryParameter(discoveredServersState *string) *CifsDomainCollectionGetParams {
	o.SetDiscoveredServersStateQueryParameter(discoveredServersState)
	return o
}

// SetDiscoveredServersStateQueryParameter adds the discoveredServersState to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetDiscoveredServersStateQueryParameter(discoveredServersState *string) {
	o.DiscoveredServersStateQueryParameter = discoveredServersState
}

// WithFieldsQueryParameter adds the fields to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithFieldsQueryParameter(fields []string) *CifsDomainCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithMaxRecordsQueryParameter adds the maxRecords to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *CifsDomainCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameMappingTrustedDomainsQueryParameter adds the nameMappingTrustedDomains to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithNameMappingTrustedDomainsQueryParameter(nameMappingTrustedDomains *string) *CifsDomainCollectionGetParams {
	o.SetNameMappingTrustedDomainsQueryParameter(nameMappingTrustedDomains)
	return o
}

// SetNameMappingTrustedDomainsQueryParameter adds the nameMappingTrustedDomains to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetNameMappingTrustedDomainsQueryParameter(nameMappingTrustedDomains *string) {
	o.NameMappingTrustedDomainsQueryParameter = nameMappingTrustedDomains
}

// WithOrderByQueryParameter adds the orderBy to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *CifsDomainCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPasswordScheduleScheduleDescriptionQueryParameter adds the passwordScheduleScheduleDescription to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPasswordScheduleScheduleDescriptionQueryParameter(passwordScheduleScheduleDescription *string) *CifsDomainCollectionGetParams {
	o.SetPasswordScheduleScheduleDescriptionQueryParameter(passwordScheduleScheduleDescription)
	return o
}

// SetPasswordScheduleScheduleDescriptionQueryParameter adds the passwordScheduleScheduleDescription to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPasswordScheduleScheduleDescriptionQueryParameter(passwordScheduleScheduleDescription *string) {
	o.PasswordScheduleScheduleDescriptionQueryParameter = passwordScheduleScheduleDescription
}

// WithPasswordScheduleScheduleEnabledQueryParameter adds the passwordScheduleScheduleEnabled to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPasswordScheduleScheduleEnabledQueryParameter(passwordScheduleScheduleEnabled *bool) *CifsDomainCollectionGetParams {
	o.SetPasswordScheduleScheduleEnabledQueryParameter(passwordScheduleScheduleEnabled)
	return o
}

// SetPasswordScheduleScheduleEnabledQueryParameter adds the passwordScheduleScheduleEnabled to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPasswordScheduleScheduleEnabledQueryParameter(passwordScheduleScheduleEnabled *bool) {
	o.PasswordScheduleScheduleEnabledQueryParameter = passwordScheduleScheduleEnabled
}

// WithPasswordScheduleScheduleLastChangedTimeQueryParameter adds the passwordScheduleScheduleLastChangedTime to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPasswordScheduleScheduleLastChangedTimeQueryParameter(passwordScheduleScheduleLastChangedTime *string) *CifsDomainCollectionGetParams {
	o.SetPasswordScheduleScheduleLastChangedTimeQueryParameter(passwordScheduleScheduleLastChangedTime)
	return o
}

// SetPasswordScheduleScheduleLastChangedTimeQueryParameter adds the passwordScheduleScheduleLastChangedTime to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPasswordScheduleScheduleLastChangedTimeQueryParameter(passwordScheduleScheduleLastChangedTime *string) {
	o.PasswordScheduleScheduleLastChangedTimeQueryParameter = passwordScheduleScheduleLastChangedTime
}

// WithPasswordScheduleScheduleRandomizedMinuteQueryParameter adds the passwordScheduleScheduleRandomizedMinute to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPasswordScheduleScheduleRandomizedMinuteQueryParameter(passwordScheduleScheduleRandomizedMinute *int64) *CifsDomainCollectionGetParams {
	o.SetPasswordScheduleScheduleRandomizedMinuteQueryParameter(passwordScheduleScheduleRandomizedMinute)
	return o
}

// SetPasswordScheduleScheduleRandomizedMinuteQueryParameter adds the passwordScheduleScheduleRandomizedMinute to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPasswordScheduleScheduleRandomizedMinuteQueryParameter(passwordScheduleScheduleRandomizedMinute *int64) {
	o.PasswordScheduleScheduleRandomizedMinuteQueryParameter = passwordScheduleScheduleRandomizedMinute
}

// WithPasswordScheduleScheduleWarnMessageQueryParameter adds the passwordScheduleScheduleWarnMessage to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPasswordScheduleScheduleWarnMessageQueryParameter(passwordScheduleScheduleWarnMessage *string) *CifsDomainCollectionGetParams {
	o.SetPasswordScheduleScheduleWarnMessageQueryParameter(passwordScheduleScheduleWarnMessage)
	return o
}

// SetPasswordScheduleScheduleWarnMessageQueryParameter adds the passwordScheduleScheduleWarnMessage to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPasswordScheduleScheduleWarnMessageQueryParameter(passwordScheduleScheduleWarnMessage *string) {
	o.PasswordScheduleScheduleWarnMessageQueryParameter = passwordScheduleScheduleWarnMessage
}

// WithPasswordScheduleScheduleWeeklyIntervalQueryParameter adds the passwordScheduleScheduleWeeklyInterval to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPasswordScheduleScheduleWeeklyIntervalQueryParameter(passwordScheduleScheduleWeeklyInterval *int64) *CifsDomainCollectionGetParams {
	o.SetPasswordScheduleScheduleWeeklyIntervalQueryParameter(passwordScheduleScheduleWeeklyInterval)
	return o
}

// SetPasswordScheduleScheduleWeeklyIntervalQueryParameter adds the passwordScheduleScheduleWeeklyInterval to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPasswordScheduleScheduleWeeklyIntervalQueryParameter(passwordScheduleScheduleWeeklyInterval *int64) {
	o.PasswordScheduleScheduleWeeklyIntervalQueryParameter = passwordScheduleScheduleWeeklyInterval
}

// WithPreferredDcsFqdnQueryParameter adds the preferredDcsFqdn to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPreferredDcsFqdnQueryParameter(preferredDcsFqdn *string) *CifsDomainCollectionGetParams {
	o.SetPreferredDcsFqdnQueryParameter(preferredDcsFqdn)
	return o
}

// SetPreferredDcsFqdnQueryParameter adds the preferredDcsFqdn to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPreferredDcsFqdnQueryParameter(preferredDcsFqdn *string) {
	o.PreferredDcsFqdnQueryParameter = preferredDcsFqdn
}

// WithPreferredDcsServerIPQueryParameter adds the preferredDcsServerIP to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithPreferredDcsServerIPQueryParameter(preferredDcsServerIP *string) *CifsDomainCollectionGetParams {
	o.SetPreferredDcsServerIPQueryParameter(preferredDcsServerIP)
	return o
}

// SetPreferredDcsServerIPQueryParameter adds the preferredDcsServerIp to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetPreferredDcsServerIPQueryParameter(preferredDcsServerIP *string) {
	o.PreferredDcsServerIPQueryParameter = preferredDcsServerIP
}

// WithReturnRecordsQueryParameter adds the returnRecords to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *CifsDomainCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *CifsDomainCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSVMNameQueryParameter adds the svmName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *CifsDomainCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *CifsDomainCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithTrustRelationshipsHomeDomainQueryParameter adds the trustRelationshipsHomeDomain to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithTrustRelationshipsHomeDomainQueryParameter(trustRelationshipsHomeDomain *string) *CifsDomainCollectionGetParams {
	o.SetTrustRelationshipsHomeDomainQueryParameter(trustRelationshipsHomeDomain)
	return o
}

// SetTrustRelationshipsHomeDomainQueryParameter adds the trustRelationshipsHomeDomain to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetTrustRelationshipsHomeDomainQueryParameter(trustRelationshipsHomeDomain *string) {
	o.TrustRelationshipsHomeDomainQueryParameter = trustRelationshipsHomeDomain
}

// WithTrustRelationshipsNodeNameQueryParameter adds the trustRelationshipsNodeName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithTrustRelationshipsNodeNameQueryParameter(trustRelationshipsNodeName *string) *CifsDomainCollectionGetParams {
	o.SetTrustRelationshipsNodeNameQueryParameter(trustRelationshipsNodeName)
	return o
}

// SetTrustRelationshipsNodeNameQueryParameter adds the trustRelationshipsNodeName to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetTrustRelationshipsNodeNameQueryParameter(trustRelationshipsNodeName *string) {
	o.TrustRelationshipsNodeNameQueryParameter = trustRelationshipsNodeName
}

// WithTrustRelationshipsNodeUUIDQueryParameter adds the trustRelationshipsNodeUUID to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithTrustRelationshipsNodeUUIDQueryParameter(trustRelationshipsNodeUUID *string) *CifsDomainCollectionGetParams {
	o.SetTrustRelationshipsNodeUUIDQueryParameter(trustRelationshipsNodeUUID)
	return o
}

// SetTrustRelationshipsNodeUUIDQueryParameter adds the trustRelationshipsNodeUuid to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetTrustRelationshipsNodeUUIDQueryParameter(trustRelationshipsNodeUUID *string) {
	o.TrustRelationshipsNodeUUIDQueryParameter = trustRelationshipsNodeUUID
}

// WithTrustRelationshipsTrustedDomainsQueryParameter adds the trustRelationshipsTrustedDomains to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) WithTrustRelationshipsTrustedDomainsQueryParameter(trustRelationshipsTrustedDomains *string) *CifsDomainCollectionGetParams {
	o.SetTrustRelationshipsTrustedDomainsQueryParameter(trustRelationshipsTrustedDomains)
	return o
}

// SetTrustRelationshipsTrustedDomainsQueryParameter adds the trustRelationshipsTrustedDomains to the cifs domain collection get params
func (o *CifsDomainCollectionGetParams) SetTrustRelationshipsTrustedDomainsQueryParameter(trustRelationshipsTrustedDomains *string) {
	o.TrustRelationshipsTrustedDomainsQueryParameter = trustRelationshipsTrustedDomains
}

// WriteToRequest writes these params to a swagger request
func (o *CifsDomainCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DiscoveredServersDomainQueryParameter != nil {

		// query param discovered_servers.domain
		var qrDiscoveredServersDomain string

		if o.DiscoveredServersDomainQueryParameter != nil {
			qrDiscoveredServersDomain = *o.DiscoveredServersDomainQueryParameter
		}
		qDiscoveredServersDomain := qrDiscoveredServersDomain
		if qDiscoveredServersDomain != "" {

			if err := r.SetQueryParam("discovered_servers.domain", qDiscoveredServersDomain); err != nil {
				return err
			}
		}
	}

	if o.DiscoveredServersNodeNameQueryParameter != nil {

		// query param discovered_servers.node.name
		var qrDiscoveredServersNodeName string

		if o.DiscoveredServersNodeNameQueryParameter != nil {
			qrDiscoveredServersNodeName = *o.DiscoveredServersNodeNameQueryParameter
		}
		qDiscoveredServersNodeName := qrDiscoveredServersNodeName
		if qDiscoveredServersNodeName != "" {

			if err := r.SetQueryParam("discovered_servers.node.name", qDiscoveredServersNodeName); err != nil {
				return err
			}
		}
	}

	if o.DiscoveredServersNodeUUIDQueryParameter != nil {

		// query param discovered_servers.node.uuid
		var qrDiscoveredServersNodeUUID string

		if o.DiscoveredServersNodeUUIDQueryParameter != nil {
			qrDiscoveredServersNodeUUID = *o.DiscoveredServersNodeUUIDQueryParameter
		}
		qDiscoveredServersNodeUUID := qrDiscoveredServersNodeUUID
		if qDiscoveredServersNodeUUID != "" {

			if err := r.SetQueryParam("discovered_servers.node.uuid", qDiscoveredServersNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.DiscoveredServersPreferenceQueryParameter != nil {

		// query param discovered_servers.preference
		var qrDiscoveredServersPreference string

		if o.DiscoveredServersPreferenceQueryParameter != nil {
			qrDiscoveredServersPreference = *o.DiscoveredServersPreferenceQueryParameter
		}
		qDiscoveredServersPreference := qrDiscoveredServersPreference
		if qDiscoveredServersPreference != "" {

			if err := r.SetQueryParam("discovered_servers.preference", qDiscoveredServersPreference); err != nil {
				return err
			}
		}
	}

	if o.DiscoveredServersServerIPQueryParameter != nil {

		// query param discovered_servers.server_ip
		var qrDiscoveredServersServerIP string

		if o.DiscoveredServersServerIPQueryParameter != nil {
			qrDiscoveredServersServerIP = *o.DiscoveredServersServerIPQueryParameter
		}
		qDiscoveredServersServerIP := qrDiscoveredServersServerIP
		if qDiscoveredServersServerIP != "" {

			if err := r.SetQueryParam("discovered_servers.server_ip", qDiscoveredServersServerIP); err != nil {
				return err
			}
		}
	}

	if o.DiscoveredServersServerNameQueryParameter != nil {

		// query param discovered_servers.server_name
		var qrDiscoveredServersServerName string

		if o.DiscoveredServersServerNameQueryParameter != nil {
			qrDiscoveredServersServerName = *o.DiscoveredServersServerNameQueryParameter
		}
		qDiscoveredServersServerName := qrDiscoveredServersServerName
		if qDiscoveredServersServerName != "" {

			if err := r.SetQueryParam("discovered_servers.server_name", qDiscoveredServersServerName); err != nil {
				return err
			}
		}
	}

	if o.DiscoveredServersServerTypeQueryParameter != nil {

		// query param discovered_servers.server_type
		var qrDiscoveredServersServerType string

		if o.DiscoveredServersServerTypeQueryParameter != nil {
			qrDiscoveredServersServerType = *o.DiscoveredServersServerTypeQueryParameter
		}
		qDiscoveredServersServerType := qrDiscoveredServersServerType
		if qDiscoveredServersServerType != "" {

			if err := r.SetQueryParam("discovered_servers.server_type", qDiscoveredServersServerType); err != nil {
				return err
			}
		}
	}

	if o.DiscoveredServersStateQueryParameter != nil {

		// query param discovered_servers.state
		var qrDiscoveredServersState string

		if o.DiscoveredServersStateQueryParameter != nil {
			qrDiscoveredServersState = *o.DiscoveredServersStateQueryParameter
		}
		qDiscoveredServersState := qrDiscoveredServersState
		if qDiscoveredServersState != "" {

			if err := r.SetQueryParam("discovered_servers.state", qDiscoveredServersState); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameMappingTrustedDomainsQueryParameter != nil {

		// query param name_mapping.trusted_domains
		var qrNameMappingTrustedDomains string

		if o.NameMappingTrustedDomainsQueryParameter != nil {
			qrNameMappingTrustedDomains = *o.NameMappingTrustedDomainsQueryParameter
		}
		qNameMappingTrustedDomains := qrNameMappingTrustedDomains
		if qNameMappingTrustedDomains != "" {

			if err := r.SetQueryParam("name_mapping.trusted_domains", qNameMappingTrustedDomains); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PasswordScheduleScheduleDescriptionQueryParameter != nil {

		// query param password_schedule.schedule_description
		var qrPasswordScheduleScheduleDescription string

		if o.PasswordScheduleScheduleDescriptionQueryParameter != nil {
			qrPasswordScheduleScheduleDescription = *o.PasswordScheduleScheduleDescriptionQueryParameter
		}
		qPasswordScheduleScheduleDescription := qrPasswordScheduleScheduleDescription
		if qPasswordScheduleScheduleDescription != "" {

			if err := r.SetQueryParam("password_schedule.schedule_description", qPasswordScheduleScheduleDescription); err != nil {
				return err
			}
		}
	}

	if o.PasswordScheduleScheduleEnabledQueryParameter != nil {

		// query param password_schedule.schedule_enabled
		var qrPasswordScheduleScheduleEnabled bool

		if o.PasswordScheduleScheduleEnabledQueryParameter != nil {
			qrPasswordScheduleScheduleEnabled = *o.PasswordScheduleScheduleEnabledQueryParameter
		}
		qPasswordScheduleScheduleEnabled := swag.FormatBool(qrPasswordScheduleScheduleEnabled)
		if qPasswordScheduleScheduleEnabled != "" {

			if err := r.SetQueryParam("password_schedule.schedule_enabled", qPasswordScheduleScheduleEnabled); err != nil {
				return err
			}
		}
	}

	if o.PasswordScheduleScheduleLastChangedTimeQueryParameter != nil {

		// query param password_schedule.schedule_last_changed_time
		var qrPasswordScheduleScheduleLastChangedTime string

		if o.PasswordScheduleScheduleLastChangedTimeQueryParameter != nil {
			qrPasswordScheduleScheduleLastChangedTime = *o.PasswordScheduleScheduleLastChangedTimeQueryParameter
		}
		qPasswordScheduleScheduleLastChangedTime := qrPasswordScheduleScheduleLastChangedTime
		if qPasswordScheduleScheduleLastChangedTime != "" {

			if err := r.SetQueryParam("password_schedule.schedule_last_changed_time", qPasswordScheduleScheduleLastChangedTime); err != nil {
				return err
			}
		}
	}

	if o.PasswordScheduleScheduleRandomizedMinuteQueryParameter != nil {

		// query param password_schedule.schedule_randomized_minute
		var qrPasswordScheduleScheduleRandomizedMinute int64

		if o.PasswordScheduleScheduleRandomizedMinuteQueryParameter != nil {
			qrPasswordScheduleScheduleRandomizedMinute = *o.PasswordScheduleScheduleRandomizedMinuteQueryParameter
		}
		qPasswordScheduleScheduleRandomizedMinute := swag.FormatInt64(qrPasswordScheduleScheduleRandomizedMinute)
		if qPasswordScheduleScheduleRandomizedMinute != "" {

			if err := r.SetQueryParam("password_schedule.schedule_randomized_minute", qPasswordScheduleScheduleRandomizedMinute); err != nil {
				return err
			}
		}
	}

	if o.PasswordScheduleScheduleWarnMessageQueryParameter != nil {

		// query param password_schedule.schedule_warn_message
		var qrPasswordScheduleScheduleWarnMessage string

		if o.PasswordScheduleScheduleWarnMessageQueryParameter != nil {
			qrPasswordScheduleScheduleWarnMessage = *o.PasswordScheduleScheduleWarnMessageQueryParameter
		}
		qPasswordScheduleScheduleWarnMessage := qrPasswordScheduleScheduleWarnMessage
		if qPasswordScheduleScheduleWarnMessage != "" {

			if err := r.SetQueryParam("password_schedule.schedule_warn_message", qPasswordScheduleScheduleWarnMessage); err != nil {
				return err
			}
		}
	}

	if o.PasswordScheduleScheduleWeeklyIntervalQueryParameter != nil {

		// query param password_schedule.schedule_weekly_interval
		var qrPasswordScheduleScheduleWeeklyInterval int64

		if o.PasswordScheduleScheduleWeeklyIntervalQueryParameter != nil {
			qrPasswordScheduleScheduleWeeklyInterval = *o.PasswordScheduleScheduleWeeklyIntervalQueryParameter
		}
		qPasswordScheduleScheduleWeeklyInterval := swag.FormatInt64(qrPasswordScheduleScheduleWeeklyInterval)
		if qPasswordScheduleScheduleWeeklyInterval != "" {

			if err := r.SetQueryParam("password_schedule.schedule_weekly_interval", qPasswordScheduleScheduleWeeklyInterval); err != nil {
				return err
			}
		}
	}

	if o.PreferredDcsFqdnQueryParameter != nil {

		// query param preferred_dcs.fqdn
		var qrPreferredDcsFqdn string

		if o.PreferredDcsFqdnQueryParameter != nil {
			qrPreferredDcsFqdn = *o.PreferredDcsFqdnQueryParameter
		}
		qPreferredDcsFqdn := qrPreferredDcsFqdn
		if qPreferredDcsFqdn != "" {

			if err := r.SetQueryParam("preferred_dcs.fqdn", qPreferredDcsFqdn); err != nil {
				return err
			}
		}
	}

	if o.PreferredDcsServerIPQueryParameter != nil {

		// query param preferred_dcs.server_ip
		var qrPreferredDcsServerIP string

		if o.PreferredDcsServerIPQueryParameter != nil {
			qrPreferredDcsServerIP = *o.PreferredDcsServerIPQueryParameter
		}
		qPreferredDcsServerIP := qrPreferredDcsServerIP
		if qPreferredDcsServerIP != "" {

			if err := r.SetQueryParam("preferred_dcs.server_ip", qPreferredDcsServerIP); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.TrustRelationshipsHomeDomainQueryParameter != nil {

		// query param trust_relationships.home_domain
		var qrTrustRelationshipsHomeDomain string

		if o.TrustRelationshipsHomeDomainQueryParameter != nil {
			qrTrustRelationshipsHomeDomain = *o.TrustRelationshipsHomeDomainQueryParameter
		}
		qTrustRelationshipsHomeDomain := qrTrustRelationshipsHomeDomain
		if qTrustRelationshipsHomeDomain != "" {

			if err := r.SetQueryParam("trust_relationships.home_domain", qTrustRelationshipsHomeDomain); err != nil {
				return err
			}
		}
	}

	if o.TrustRelationshipsNodeNameQueryParameter != nil {

		// query param trust_relationships.node.name
		var qrTrustRelationshipsNodeName string

		if o.TrustRelationshipsNodeNameQueryParameter != nil {
			qrTrustRelationshipsNodeName = *o.TrustRelationshipsNodeNameQueryParameter
		}
		qTrustRelationshipsNodeName := qrTrustRelationshipsNodeName
		if qTrustRelationshipsNodeName != "" {

			if err := r.SetQueryParam("trust_relationships.node.name", qTrustRelationshipsNodeName); err != nil {
				return err
			}
		}
	}

	if o.TrustRelationshipsNodeUUIDQueryParameter != nil {

		// query param trust_relationships.node.uuid
		var qrTrustRelationshipsNodeUUID string

		if o.TrustRelationshipsNodeUUIDQueryParameter != nil {
			qrTrustRelationshipsNodeUUID = *o.TrustRelationshipsNodeUUIDQueryParameter
		}
		qTrustRelationshipsNodeUUID := qrTrustRelationshipsNodeUUID
		if qTrustRelationshipsNodeUUID != "" {

			if err := r.SetQueryParam("trust_relationships.node.uuid", qTrustRelationshipsNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.TrustRelationshipsTrustedDomainsQueryParameter != nil {

		// query param trust_relationships.trusted_domains
		var qrTrustRelationshipsTrustedDomains string

		if o.TrustRelationshipsTrustedDomainsQueryParameter != nil {
			qrTrustRelationshipsTrustedDomains = *o.TrustRelationshipsTrustedDomainsQueryParameter
		}
		qTrustRelationshipsTrustedDomains := qrTrustRelationshipsTrustedDomains
		if qTrustRelationshipsTrustedDomains != "" {

			if err := r.SetQueryParam("trust_relationships.trusted_domains", qTrustRelationshipsTrustedDomains); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamCifsDomainCollectionGet binds the parameter fields
func (o *CifsDomainCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamCifsDomainCollectionGet binds the parameter order_by
func (o *CifsDomainCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
