// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCifsServiceCollectionGetParams creates a new CifsServiceCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCifsServiceCollectionGetParams() *CifsServiceCollectionGetParams {
	return &CifsServiceCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCifsServiceCollectionGetParamsWithTimeout creates a new CifsServiceCollectionGetParams object
// with the ability to set a timeout on a request.
func NewCifsServiceCollectionGetParamsWithTimeout(timeout time.Duration) *CifsServiceCollectionGetParams {
	return &CifsServiceCollectionGetParams{
		timeout: timeout,
	}
}

// NewCifsServiceCollectionGetParamsWithContext creates a new CifsServiceCollectionGetParams object
// with the ability to set a context for a request.
func NewCifsServiceCollectionGetParamsWithContext(ctx context.Context) *CifsServiceCollectionGetParams {
	return &CifsServiceCollectionGetParams{
		Context: ctx,
	}
}

// NewCifsServiceCollectionGetParamsWithHTTPClient creates a new CifsServiceCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewCifsServiceCollectionGetParamsWithHTTPClient(client *http.Client) *CifsServiceCollectionGetParams {
	return &CifsServiceCollectionGetParams{
		HTTPClient: client,
	}
}

/* CifsServiceCollectionGetParams contains all the parameters to send to the API endpoint
   for the cifs service collection get operation.

   Typically these are written to a http.Request.
*/
type CifsServiceCollectionGetParams struct {

	/* AdDomainFqdn.

	   Filter by ad_domain.fqdn
	*/
	AdDomainFqdnQueryParameter *string

	/* AdDomainOrganizationalUnit.

	   Filter by ad_domain.organizational_unit
	*/
	AdDomainOrganizationalUnitQueryParameter *string

	/* Comment.

	   Filter by comment
	*/
	CommentQueryParameter *string

	/* DefaultUnixUser.

	   Filter by default_unix_user
	*/
	DefaultUnixUserQueryParameter *string

	/* Enabled.

	   Filter by enabled
	*/
	EnabledQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* MetricDuration.

	   Filter by metric.duration
	*/
	MetricDurationQueryParameter *string

	/* MetricIopsOther.

	   Filter by metric.iops.other
	*/
	MetricIopsOtherQueryParameter *int64

	/* MetricIopsRead.

	   Filter by metric.iops.read
	*/
	MetricIopsReadQueryParameter *int64

	/* MetricIopsTotal.

	   Filter by metric.iops.total
	*/
	MetricIopsTotalQueryParameter *int64

	/* MetricIopsWrite.

	   Filter by metric.iops.write
	*/
	MetricIopsWriteQueryParameter *int64

	/* MetricLatencyOther.

	   Filter by metric.latency.other
	*/
	MetricLatencyOtherQueryParameter *int64

	/* MetricLatencyRead.

	   Filter by metric.latency.read
	*/
	MetricLatencyReadQueryParameter *int64

	/* MetricLatencyTotal.

	   Filter by metric.latency.total
	*/
	MetricLatencyTotalQueryParameter *int64

	/* MetricLatencyWrite.

	   Filter by metric.latency.write
	*/
	MetricLatencyWriteQueryParameter *int64

	/* MetricStatus.

	   Filter by metric.status
	*/
	MetricStatusQueryParameter *string

	/* MetricThroughputRead.

	   Filter by metric.throughput.read
	*/
	MetricThroughputReadQueryParameter *int64

	/* MetricThroughputTotal.

	   Filter by metric.throughput.total
	*/
	MetricThroughputTotalQueryParameter *int64

	/* MetricThroughputWrite.

	   Filter by metric.throughput.write
	*/
	MetricThroughputWriteQueryParameter *int64

	/* MetricTimestamp.

	   Filter by metric.timestamp
	*/
	MetricTimestampQueryParameter *string

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* NetbiosAliases.

	   Filter by netbios.aliases
	*/
	NetbiosAliasesQueryParameter *string

	/* NetbiosEnabled.

	   Filter by netbios.enabled
	*/
	NetbiosEnabledQueryParameter *bool

	/* NetbiosWinsServers.

	   Filter by netbios.wins_servers
	*/
	NetbiosWinsServersQueryParameter *string

	/* OptionsAdminToRootMapping.

	   Filter by options.admin_to_root_mapping
	*/
	OptionsAdminToRootMappingQueryParameter *bool

	/* OptionsAdvancedSparseFile.

	   Filter by options.advanced_sparse_file
	*/
	OptionsAdvancedSparseFileQueryParameter *bool

	/* OptionsCopyOffload.

	   Filter by options.copy_offload
	*/
	OptionsCopyOffloadQueryParameter *bool

	/* OptionsFakeOpen.

	   Filter by options.fake_open
	*/
	OptionsFakeOpenQueryParameter *bool

	/* OptionsFsctlTrim.

	   Filter by options.fsctl_trim
	*/
	OptionsFsctlTrimQueryParameter *bool

	/* OptionsJunctionReparse.

	   Filter by options.junction_reparse
	*/
	OptionsJunctionReparseQueryParameter *bool

	/* OptionsLargeMtu.

	   Filter by options.large_mtu
	*/
	OptionsLargeMtuQueryParameter *bool

	/* OptionsMultichannel.

	   Filter by options.multichannel
	*/
	OptionsMultichannelQueryParameter *bool

	/* OptionsNullUserWindowsName.

	   Filter by options.null_user_windows_name
	*/
	OptionsNullUserWindowsNameQueryParameter *string

	/* OptionsPathComponentCache.

	   Filter by options.path_component_cache
	*/
	OptionsPathComponentCacheQueryParameter *bool

	/* OptionsReferral.

	   Filter by options.referral
	*/
	OptionsReferralQueryParameter *bool

	/* OptionsSmbCredits.

	   Filter by options.smb_credits
	*/
	OptionsSmbCreditsQueryParameter *int64

	/* OptionsWidelinkReparseVersions.

	   Filter by options.widelink_reparse_versions
	*/
	OptionsWidelinkReparseVersionsQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SecurityAesNetlogonEnabled.

	   Filter by security.aes_netlogon_enabled
	*/
	SecurityAesNetlogonEnabledQueryParameter *bool

	/* SecurityEncryptDcConnection.

	   Filter by security.encrypt_dc_connection
	*/
	SecurityEncryptDcConnectionQueryParameter *bool

	/* SecurityKdcEncryption.

	   Filter by security.kdc_encryption
	*/
	SecurityKdcEncryptionQueryParameter *bool

	/* SecurityLdapReferralEnabled.

	   Filter by security.ldap_referral_enabled
	*/
	SecurityLdapReferralEnabledQueryParameter *bool

	/* SecurityLmCompatibilityLevel.

	   Filter by security.lm_compatibility_level
	*/
	SecurityLmCompatibilityLevelQueryParameter *string

	/* SecurityRestrictAnonymous.

	   Filter by security.restrict_anonymous
	*/
	SecurityRestrictAnonymousQueryParameter *string

	/* SecuritySessionSecurity.

	   Filter by security.session_security
	*/
	SecuritySessionSecurityQueryParameter *string

	/* SecuritySmbEncryption.

	   Filter by security.smb_encryption
	*/
	SecuritySmbEncryptionQueryParameter *bool

	/* SecuritySmbSigning.

	   Filter by security.smb_signing
	*/
	SecuritySmbSigningQueryParameter *bool

	/* SecurityTryLdapChannelBinding.

	   Filter by security.try_ldap_channel_binding
	*/
	SecurityTryLdapChannelBindingQueryParameter *bool

	/* SecurityUseLdaps.

	   Filter by security.use_ldaps
	*/
	SecurityUseLdapsQueryParameter *bool

	/* SecurityUseStartTLS.

	   Filter by security.use_start_tls
	*/
	SecurityUseStartTLSQueryParameter *bool

	/* StatisticsIopsRawOther.

	   Filter by statistics.iops_raw.other
	*/
	StatisticsIopsRawOtherQueryParameter *int64

	/* StatisticsIopsRawRead.

	   Filter by statistics.iops_raw.read
	*/
	StatisticsIopsRawReadQueryParameter *int64

	/* StatisticsIopsRawTotal.

	   Filter by statistics.iops_raw.total
	*/
	StatisticsIopsRawTotalQueryParameter *int64

	/* StatisticsIopsRawWrite.

	   Filter by statistics.iops_raw.write
	*/
	StatisticsIopsRawWriteQueryParameter *int64

	/* StatisticsLatencyRawOther.

	   Filter by statistics.latency_raw.other
	*/
	StatisticsLatencyRawOtherQueryParameter *int64

	/* StatisticsLatencyRawRead.

	   Filter by statistics.latency_raw.read
	*/
	StatisticsLatencyRawReadQueryParameter *int64

	/* StatisticsLatencyRawTotal.

	   Filter by statistics.latency_raw.total
	*/
	StatisticsLatencyRawTotalQueryParameter *int64

	/* StatisticsLatencyRawWrite.

	   Filter by statistics.latency_raw.write
	*/
	StatisticsLatencyRawWriteQueryParameter *int64

	/* StatisticsStatus.

	   Filter by statistics.status
	*/
	StatisticsStatusQueryParameter *string

	/* StatisticsThroughputRawRead.

	   Filter by statistics.throughput_raw.read
	*/
	StatisticsThroughputRawReadQueryParameter *int64

	/* StatisticsThroughputRawTotal.

	   Filter by statistics.throughput_raw.total
	*/
	StatisticsThroughputRawTotalQueryParameter *int64

	/* StatisticsThroughputRawWrite.

	   Filter by statistics.throughput_raw.write
	*/
	StatisticsThroughputRawWriteQueryParameter *int64

	/* StatisticsTimestamp.

	   Filter by statistics.timestamp
	*/
	StatisticsTimestampQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cifs service collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CifsServiceCollectionGetParams) WithDefaults() *CifsServiceCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cifs service collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CifsServiceCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := CifsServiceCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithTimeout(timeout time.Duration) *CifsServiceCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithContext(ctx context.Context) *CifsServiceCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithHTTPClient(client *http.Client) *CifsServiceCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAdDomainFqdnQueryParameter adds the adDomainFqdn to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithAdDomainFqdnQueryParameter(adDomainFqdn *string) *CifsServiceCollectionGetParams {
	o.SetAdDomainFqdnQueryParameter(adDomainFqdn)
	return o
}

// SetAdDomainFqdnQueryParameter adds the adDomainFqdn to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetAdDomainFqdnQueryParameter(adDomainFqdn *string) {
	o.AdDomainFqdnQueryParameter = adDomainFqdn
}

// WithAdDomainOrganizationalUnitQueryParameter adds the adDomainOrganizationalUnit to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithAdDomainOrganizationalUnitQueryParameter(adDomainOrganizationalUnit *string) *CifsServiceCollectionGetParams {
	o.SetAdDomainOrganizationalUnitQueryParameter(adDomainOrganizationalUnit)
	return o
}

// SetAdDomainOrganizationalUnitQueryParameter adds the adDomainOrganizationalUnit to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetAdDomainOrganizationalUnitQueryParameter(adDomainOrganizationalUnit *string) {
	o.AdDomainOrganizationalUnitQueryParameter = adDomainOrganizationalUnit
}

// WithCommentQueryParameter adds the comment to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithCommentQueryParameter(comment *string) *CifsServiceCollectionGetParams {
	o.SetCommentQueryParameter(comment)
	return o
}

// SetCommentQueryParameter adds the comment to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetCommentQueryParameter(comment *string) {
	o.CommentQueryParameter = comment
}

// WithDefaultUnixUserQueryParameter adds the defaultUnixUser to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithDefaultUnixUserQueryParameter(defaultUnixUser *string) *CifsServiceCollectionGetParams {
	o.SetDefaultUnixUserQueryParameter(defaultUnixUser)
	return o
}

// SetDefaultUnixUserQueryParameter adds the defaultUnixUser to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetDefaultUnixUserQueryParameter(defaultUnixUser *string) {
	o.DefaultUnixUserQueryParameter = defaultUnixUser
}

// WithEnabledQueryParameter adds the enabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithEnabledQueryParameter(enabled *bool) *CifsServiceCollectionGetParams {
	o.SetEnabledQueryParameter(enabled)
	return o
}

// SetEnabledQueryParameter adds the enabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetEnabledQueryParameter(enabled *bool) {
	o.EnabledQueryParameter = enabled
}

// WithFieldsQueryParameter adds the fields to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithFieldsQueryParameter(fields []string) *CifsServiceCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithMaxRecordsQueryParameter adds the maxRecords to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *CifsServiceCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMetricDurationQueryParameter adds the metricDuration to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricDurationQueryParameter(metricDuration *string) *CifsServiceCollectionGetParams {
	o.SetMetricDurationQueryParameter(metricDuration)
	return o
}

// SetMetricDurationQueryParameter adds the metricDuration to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricDurationQueryParameter(metricDuration *string) {
	o.MetricDurationQueryParameter = metricDuration
}

// WithMetricIopsOtherQueryParameter adds the metricIopsOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricIopsOtherQueryParameter(metricIopsOther *int64) *CifsServiceCollectionGetParams {
	o.SetMetricIopsOtherQueryParameter(metricIopsOther)
	return o
}

// SetMetricIopsOtherQueryParameter adds the metricIopsOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricIopsOtherQueryParameter(metricIopsOther *int64) {
	o.MetricIopsOtherQueryParameter = metricIopsOther
}

// WithMetricIopsReadQueryParameter adds the metricIopsRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricIopsReadQueryParameter(metricIopsRead *int64) *CifsServiceCollectionGetParams {
	o.SetMetricIopsReadQueryParameter(metricIopsRead)
	return o
}

// SetMetricIopsReadQueryParameter adds the metricIopsRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricIopsReadQueryParameter(metricIopsRead *int64) {
	o.MetricIopsReadQueryParameter = metricIopsRead
}

// WithMetricIopsTotalQueryParameter adds the metricIopsTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricIopsTotalQueryParameter(metricIopsTotal *int64) *CifsServiceCollectionGetParams {
	o.SetMetricIopsTotalQueryParameter(metricIopsTotal)
	return o
}

// SetMetricIopsTotalQueryParameter adds the metricIopsTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricIopsTotalQueryParameter(metricIopsTotal *int64) {
	o.MetricIopsTotalQueryParameter = metricIopsTotal
}

// WithMetricIopsWriteQueryParameter adds the metricIopsWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricIopsWriteQueryParameter(metricIopsWrite *int64) *CifsServiceCollectionGetParams {
	o.SetMetricIopsWriteQueryParameter(metricIopsWrite)
	return o
}

// SetMetricIopsWriteQueryParameter adds the metricIopsWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricIopsWriteQueryParameter(metricIopsWrite *int64) {
	o.MetricIopsWriteQueryParameter = metricIopsWrite
}

// WithMetricLatencyOtherQueryParameter adds the metricLatencyOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricLatencyOtherQueryParameter(metricLatencyOther *int64) *CifsServiceCollectionGetParams {
	o.SetMetricLatencyOtherQueryParameter(metricLatencyOther)
	return o
}

// SetMetricLatencyOtherQueryParameter adds the metricLatencyOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricLatencyOtherQueryParameter(metricLatencyOther *int64) {
	o.MetricLatencyOtherQueryParameter = metricLatencyOther
}

// WithMetricLatencyReadQueryParameter adds the metricLatencyRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricLatencyReadQueryParameter(metricLatencyRead *int64) *CifsServiceCollectionGetParams {
	o.SetMetricLatencyReadQueryParameter(metricLatencyRead)
	return o
}

// SetMetricLatencyReadQueryParameter adds the metricLatencyRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricLatencyReadQueryParameter(metricLatencyRead *int64) {
	o.MetricLatencyReadQueryParameter = metricLatencyRead
}

// WithMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) *CifsServiceCollectionGetParams {
	o.SetMetricLatencyTotalQueryParameter(metricLatencyTotal)
	return o
}

// SetMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) {
	o.MetricLatencyTotalQueryParameter = metricLatencyTotal
}

// WithMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) *CifsServiceCollectionGetParams {
	o.SetMetricLatencyWriteQueryParameter(metricLatencyWrite)
	return o
}

// SetMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) {
	o.MetricLatencyWriteQueryParameter = metricLatencyWrite
}

// WithMetricStatusQueryParameter adds the metricStatus to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricStatusQueryParameter(metricStatus *string) *CifsServiceCollectionGetParams {
	o.SetMetricStatusQueryParameter(metricStatus)
	return o
}

// SetMetricStatusQueryParameter adds the metricStatus to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricStatusQueryParameter(metricStatus *string) {
	o.MetricStatusQueryParameter = metricStatus
}

// WithMetricThroughputReadQueryParameter adds the metricThroughputRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricThroughputReadQueryParameter(metricThroughputRead *int64) *CifsServiceCollectionGetParams {
	o.SetMetricThroughputReadQueryParameter(metricThroughputRead)
	return o
}

// SetMetricThroughputReadQueryParameter adds the metricThroughputRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricThroughputReadQueryParameter(metricThroughputRead *int64) {
	o.MetricThroughputReadQueryParameter = metricThroughputRead
}

// WithMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) *CifsServiceCollectionGetParams {
	o.SetMetricThroughputTotalQueryParameter(metricThroughputTotal)
	return o
}

// SetMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) {
	o.MetricThroughputTotalQueryParameter = metricThroughputTotal
}

// WithMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) *CifsServiceCollectionGetParams {
	o.SetMetricThroughputWriteQueryParameter(metricThroughputWrite)
	return o
}

// SetMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) {
	o.MetricThroughputWriteQueryParameter = metricThroughputWrite
}

// WithMetricTimestampQueryParameter adds the metricTimestamp to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithMetricTimestampQueryParameter(metricTimestamp *string) *CifsServiceCollectionGetParams {
	o.SetMetricTimestampQueryParameter(metricTimestamp)
	return o
}

// SetMetricTimestampQueryParameter adds the metricTimestamp to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetMetricTimestampQueryParameter(metricTimestamp *string) {
	o.MetricTimestampQueryParameter = metricTimestamp
}

// WithNameQueryParameter adds the name to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithNameQueryParameter(name *string) *CifsServiceCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithNetbiosAliasesQueryParameter adds the netbiosAliases to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithNetbiosAliasesQueryParameter(netbiosAliases *string) *CifsServiceCollectionGetParams {
	o.SetNetbiosAliasesQueryParameter(netbiosAliases)
	return o
}

// SetNetbiosAliasesQueryParameter adds the netbiosAliases to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetNetbiosAliasesQueryParameter(netbiosAliases *string) {
	o.NetbiosAliasesQueryParameter = netbiosAliases
}

// WithNetbiosEnabledQueryParameter adds the netbiosEnabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithNetbiosEnabledQueryParameter(netbiosEnabled *bool) *CifsServiceCollectionGetParams {
	o.SetNetbiosEnabledQueryParameter(netbiosEnabled)
	return o
}

// SetNetbiosEnabledQueryParameter adds the netbiosEnabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetNetbiosEnabledQueryParameter(netbiosEnabled *bool) {
	o.NetbiosEnabledQueryParameter = netbiosEnabled
}

// WithNetbiosWinsServersQueryParameter adds the netbiosWinsServers to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithNetbiosWinsServersQueryParameter(netbiosWinsServers *string) *CifsServiceCollectionGetParams {
	o.SetNetbiosWinsServersQueryParameter(netbiosWinsServers)
	return o
}

// SetNetbiosWinsServersQueryParameter adds the netbiosWinsServers to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetNetbiosWinsServersQueryParameter(netbiosWinsServers *string) {
	o.NetbiosWinsServersQueryParameter = netbiosWinsServers
}

// WithOptionsAdminToRootMappingQueryParameter adds the optionsAdminToRootMapping to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsAdminToRootMappingQueryParameter(optionsAdminToRootMapping *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsAdminToRootMappingQueryParameter(optionsAdminToRootMapping)
	return o
}

// SetOptionsAdminToRootMappingQueryParameter adds the optionsAdminToRootMapping to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsAdminToRootMappingQueryParameter(optionsAdminToRootMapping *bool) {
	o.OptionsAdminToRootMappingQueryParameter = optionsAdminToRootMapping
}

// WithOptionsAdvancedSparseFileQueryParameter adds the optionsAdvancedSparseFile to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsAdvancedSparseFileQueryParameter(optionsAdvancedSparseFile *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsAdvancedSparseFileQueryParameter(optionsAdvancedSparseFile)
	return o
}

// SetOptionsAdvancedSparseFileQueryParameter adds the optionsAdvancedSparseFile to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsAdvancedSparseFileQueryParameter(optionsAdvancedSparseFile *bool) {
	o.OptionsAdvancedSparseFileQueryParameter = optionsAdvancedSparseFile
}

// WithOptionsCopyOffloadQueryParameter adds the optionsCopyOffload to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsCopyOffloadQueryParameter(optionsCopyOffload *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsCopyOffloadQueryParameter(optionsCopyOffload)
	return o
}

// SetOptionsCopyOffloadQueryParameter adds the optionsCopyOffload to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsCopyOffloadQueryParameter(optionsCopyOffload *bool) {
	o.OptionsCopyOffloadQueryParameter = optionsCopyOffload
}

// WithOptionsFakeOpenQueryParameter adds the optionsFakeOpen to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsFakeOpenQueryParameter(optionsFakeOpen *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsFakeOpenQueryParameter(optionsFakeOpen)
	return o
}

// SetOptionsFakeOpenQueryParameter adds the optionsFakeOpen to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsFakeOpenQueryParameter(optionsFakeOpen *bool) {
	o.OptionsFakeOpenQueryParameter = optionsFakeOpen
}

// WithOptionsFsctlTrimQueryParameter adds the optionsFsctlTrim to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsFsctlTrimQueryParameter(optionsFsctlTrim *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsFsctlTrimQueryParameter(optionsFsctlTrim)
	return o
}

// SetOptionsFsctlTrimQueryParameter adds the optionsFsctlTrim to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsFsctlTrimQueryParameter(optionsFsctlTrim *bool) {
	o.OptionsFsctlTrimQueryParameter = optionsFsctlTrim
}

// WithOptionsJunctionReparseQueryParameter adds the optionsJunctionReparse to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsJunctionReparseQueryParameter(optionsJunctionReparse *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsJunctionReparseQueryParameter(optionsJunctionReparse)
	return o
}

// SetOptionsJunctionReparseQueryParameter adds the optionsJunctionReparse to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsJunctionReparseQueryParameter(optionsJunctionReparse *bool) {
	o.OptionsJunctionReparseQueryParameter = optionsJunctionReparse
}

// WithOptionsLargeMtuQueryParameter adds the optionsLargeMtu to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsLargeMtuQueryParameter(optionsLargeMtu *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsLargeMtuQueryParameter(optionsLargeMtu)
	return o
}

// SetOptionsLargeMtuQueryParameter adds the optionsLargeMtu to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsLargeMtuQueryParameter(optionsLargeMtu *bool) {
	o.OptionsLargeMtuQueryParameter = optionsLargeMtu
}

// WithOptionsMultichannelQueryParameter adds the optionsMultichannel to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsMultichannelQueryParameter(optionsMultichannel *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsMultichannelQueryParameter(optionsMultichannel)
	return o
}

// SetOptionsMultichannelQueryParameter adds the optionsMultichannel to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsMultichannelQueryParameter(optionsMultichannel *bool) {
	o.OptionsMultichannelQueryParameter = optionsMultichannel
}

// WithOptionsNullUserWindowsNameQueryParameter adds the optionsNullUserWindowsName to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsNullUserWindowsNameQueryParameter(optionsNullUserWindowsName *string) *CifsServiceCollectionGetParams {
	o.SetOptionsNullUserWindowsNameQueryParameter(optionsNullUserWindowsName)
	return o
}

// SetOptionsNullUserWindowsNameQueryParameter adds the optionsNullUserWindowsName to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsNullUserWindowsNameQueryParameter(optionsNullUserWindowsName *string) {
	o.OptionsNullUserWindowsNameQueryParameter = optionsNullUserWindowsName
}

// WithOptionsPathComponentCacheQueryParameter adds the optionsPathComponentCache to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsPathComponentCacheQueryParameter(optionsPathComponentCache *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsPathComponentCacheQueryParameter(optionsPathComponentCache)
	return o
}

// SetOptionsPathComponentCacheQueryParameter adds the optionsPathComponentCache to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsPathComponentCacheQueryParameter(optionsPathComponentCache *bool) {
	o.OptionsPathComponentCacheQueryParameter = optionsPathComponentCache
}

// WithOptionsReferralQueryParameter adds the optionsReferral to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsReferralQueryParameter(optionsReferral *bool) *CifsServiceCollectionGetParams {
	o.SetOptionsReferralQueryParameter(optionsReferral)
	return o
}

// SetOptionsReferralQueryParameter adds the optionsReferral to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsReferralQueryParameter(optionsReferral *bool) {
	o.OptionsReferralQueryParameter = optionsReferral
}

// WithOptionsSmbCreditsQueryParameter adds the optionsSmbCredits to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsSmbCreditsQueryParameter(optionsSmbCredits *int64) *CifsServiceCollectionGetParams {
	o.SetOptionsSmbCreditsQueryParameter(optionsSmbCredits)
	return o
}

// SetOptionsSmbCreditsQueryParameter adds the optionsSmbCredits to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsSmbCreditsQueryParameter(optionsSmbCredits *int64) {
	o.OptionsSmbCreditsQueryParameter = optionsSmbCredits
}

// WithOptionsWidelinkReparseVersionsQueryParameter adds the optionsWidelinkReparseVersions to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOptionsWidelinkReparseVersionsQueryParameter(optionsWidelinkReparseVersions *string) *CifsServiceCollectionGetParams {
	o.SetOptionsWidelinkReparseVersionsQueryParameter(optionsWidelinkReparseVersions)
	return o
}

// SetOptionsWidelinkReparseVersionsQueryParameter adds the optionsWidelinkReparseVersions to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOptionsWidelinkReparseVersionsQueryParameter(optionsWidelinkReparseVersions *string) {
	o.OptionsWidelinkReparseVersionsQueryParameter = optionsWidelinkReparseVersions
}

// WithOrderByQueryParameter adds the orderBy to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *CifsServiceCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithReturnRecordsQueryParameter adds the returnRecords to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *CifsServiceCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *CifsServiceCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSecurityAesNetlogonEnabledQueryParameter adds the securityAesNetlogonEnabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityAesNetlogonEnabledQueryParameter(securityAesNetlogonEnabled *bool) *CifsServiceCollectionGetParams {
	o.SetSecurityAesNetlogonEnabledQueryParameter(securityAesNetlogonEnabled)
	return o
}

// SetSecurityAesNetlogonEnabledQueryParameter adds the securityAesNetlogonEnabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityAesNetlogonEnabledQueryParameter(securityAesNetlogonEnabled *bool) {
	o.SecurityAesNetlogonEnabledQueryParameter = securityAesNetlogonEnabled
}

// WithSecurityEncryptDcConnectionQueryParameter adds the securityEncryptDcConnection to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityEncryptDcConnectionQueryParameter(securityEncryptDcConnection *bool) *CifsServiceCollectionGetParams {
	o.SetSecurityEncryptDcConnectionQueryParameter(securityEncryptDcConnection)
	return o
}

// SetSecurityEncryptDcConnectionQueryParameter adds the securityEncryptDcConnection to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityEncryptDcConnectionQueryParameter(securityEncryptDcConnection *bool) {
	o.SecurityEncryptDcConnectionQueryParameter = securityEncryptDcConnection
}

// WithSecurityKdcEncryptionQueryParameter adds the securityKdcEncryption to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityKdcEncryptionQueryParameter(securityKdcEncryption *bool) *CifsServiceCollectionGetParams {
	o.SetSecurityKdcEncryptionQueryParameter(securityKdcEncryption)
	return o
}

// SetSecurityKdcEncryptionQueryParameter adds the securityKdcEncryption to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityKdcEncryptionQueryParameter(securityKdcEncryption *bool) {
	o.SecurityKdcEncryptionQueryParameter = securityKdcEncryption
}

// WithSecurityLdapReferralEnabledQueryParameter adds the securityLdapReferralEnabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityLdapReferralEnabledQueryParameter(securityLdapReferralEnabled *bool) *CifsServiceCollectionGetParams {
	o.SetSecurityLdapReferralEnabledQueryParameter(securityLdapReferralEnabled)
	return o
}

// SetSecurityLdapReferralEnabledQueryParameter adds the securityLdapReferralEnabled to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityLdapReferralEnabledQueryParameter(securityLdapReferralEnabled *bool) {
	o.SecurityLdapReferralEnabledQueryParameter = securityLdapReferralEnabled
}

// WithSecurityLmCompatibilityLevelQueryParameter adds the securityLmCompatibilityLevel to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityLmCompatibilityLevelQueryParameter(securityLmCompatibilityLevel *string) *CifsServiceCollectionGetParams {
	o.SetSecurityLmCompatibilityLevelQueryParameter(securityLmCompatibilityLevel)
	return o
}

// SetSecurityLmCompatibilityLevelQueryParameter adds the securityLmCompatibilityLevel to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityLmCompatibilityLevelQueryParameter(securityLmCompatibilityLevel *string) {
	o.SecurityLmCompatibilityLevelQueryParameter = securityLmCompatibilityLevel
}

// WithSecurityRestrictAnonymousQueryParameter adds the securityRestrictAnonymous to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityRestrictAnonymousQueryParameter(securityRestrictAnonymous *string) *CifsServiceCollectionGetParams {
	o.SetSecurityRestrictAnonymousQueryParameter(securityRestrictAnonymous)
	return o
}

// SetSecurityRestrictAnonymousQueryParameter adds the securityRestrictAnonymous to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityRestrictAnonymousQueryParameter(securityRestrictAnonymous *string) {
	o.SecurityRestrictAnonymousQueryParameter = securityRestrictAnonymous
}

// WithSecuritySessionSecurityQueryParameter adds the securitySessionSecurity to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecuritySessionSecurityQueryParameter(securitySessionSecurity *string) *CifsServiceCollectionGetParams {
	o.SetSecuritySessionSecurityQueryParameter(securitySessionSecurity)
	return o
}

// SetSecuritySessionSecurityQueryParameter adds the securitySessionSecurity to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecuritySessionSecurityQueryParameter(securitySessionSecurity *string) {
	o.SecuritySessionSecurityQueryParameter = securitySessionSecurity
}

// WithSecuritySmbEncryptionQueryParameter adds the securitySmbEncryption to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecuritySmbEncryptionQueryParameter(securitySmbEncryption *bool) *CifsServiceCollectionGetParams {
	o.SetSecuritySmbEncryptionQueryParameter(securitySmbEncryption)
	return o
}

// SetSecuritySmbEncryptionQueryParameter adds the securitySmbEncryption to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecuritySmbEncryptionQueryParameter(securitySmbEncryption *bool) {
	o.SecuritySmbEncryptionQueryParameter = securitySmbEncryption
}

// WithSecuritySmbSigningQueryParameter adds the securitySmbSigning to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecuritySmbSigningQueryParameter(securitySmbSigning *bool) *CifsServiceCollectionGetParams {
	o.SetSecuritySmbSigningQueryParameter(securitySmbSigning)
	return o
}

// SetSecuritySmbSigningQueryParameter adds the securitySmbSigning to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecuritySmbSigningQueryParameter(securitySmbSigning *bool) {
	o.SecuritySmbSigningQueryParameter = securitySmbSigning
}

// WithSecurityTryLdapChannelBindingQueryParameter adds the securityTryLdapChannelBinding to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityTryLdapChannelBindingQueryParameter(securityTryLdapChannelBinding *bool) *CifsServiceCollectionGetParams {
	o.SetSecurityTryLdapChannelBindingQueryParameter(securityTryLdapChannelBinding)
	return o
}

// SetSecurityTryLdapChannelBindingQueryParameter adds the securityTryLdapChannelBinding to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityTryLdapChannelBindingQueryParameter(securityTryLdapChannelBinding *bool) {
	o.SecurityTryLdapChannelBindingQueryParameter = securityTryLdapChannelBinding
}

// WithSecurityUseLdapsQueryParameter adds the securityUseLdaps to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityUseLdapsQueryParameter(securityUseLdaps *bool) *CifsServiceCollectionGetParams {
	o.SetSecurityUseLdapsQueryParameter(securityUseLdaps)
	return o
}

// SetSecurityUseLdapsQueryParameter adds the securityUseLdaps to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityUseLdapsQueryParameter(securityUseLdaps *bool) {
	o.SecurityUseLdapsQueryParameter = securityUseLdaps
}

// WithSecurityUseStartTLSQueryParameter adds the securityUseStartTLS to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSecurityUseStartTLSQueryParameter(securityUseStartTLS *bool) *CifsServiceCollectionGetParams {
	o.SetSecurityUseStartTLSQueryParameter(securityUseStartTLS)
	return o
}

// SetSecurityUseStartTLSQueryParameter adds the securityUseStartTls to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSecurityUseStartTLSQueryParameter(securityUseStartTLS *bool) {
	o.SecurityUseStartTLSQueryParameter = securityUseStartTLS
}

// WithStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther)
	return o
}

// SetStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) {
	o.StatisticsIopsRawOtherQueryParameter = statisticsIopsRawOther
}

// WithStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead)
	return o
}

// SetStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) {
	o.StatisticsIopsRawReadQueryParameter = statisticsIopsRawRead
}

// WithStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal)
	return o
}

// SetStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) {
	o.StatisticsIopsRawTotalQueryParameter = statisticsIopsRawTotal
}

// WithStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite)
	return o
}

// SetStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) {
	o.StatisticsIopsRawWriteQueryParameter = statisticsIopsRawWrite
}

// WithStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther)
	return o
}

// SetStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) {
	o.StatisticsLatencyRawOtherQueryParameter = statisticsLatencyRawOther
}

// WithStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead)
	return o
}

// SetStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) {
	o.StatisticsLatencyRawReadQueryParameter = statisticsLatencyRawRead
}

// WithStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal)
	return o
}

// SetStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) {
	o.StatisticsLatencyRawTotalQueryParameter = statisticsLatencyRawTotal
}

// WithStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite)
	return o
}

// SetStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) {
	o.StatisticsLatencyRawWriteQueryParameter = statisticsLatencyRawWrite
}

// WithStatisticsStatusQueryParameter adds the statisticsStatus to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsStatusQueryParameter(statisticsStatus *string) *CifsServiceCollectionGetParams {
	o.SetStatisticsStatusQueryParameter(statisticsStatus)
	return o
}

// SetStatisticsStatusQueryParameter adds the statisticsStatus to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsStatusQueryParameter(statisticsStatus *string) {
	o.StatisticsStatusQueryParameter = statisticsStatus
}

// WithStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead)
	return o
}

// SetStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) {
	o.StatisticsThroughputRawReadQueryParameter = statisticsThroughputRawRead
}

// WithStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal)
	return o
}

// SetStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) {
	o.StatisticsThroughputRawTotalQueryParameter = statisticsThroughputRawTotal
}

// WithStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) *CifsServiceCollectionGetParams {
	o.SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite)
	return o
}

// SetStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) {
	o.StatisticsThroughputRawWriteQueryParameter = statisticsThroughputRawWrite
}

// WithStatisticsTimestampQueryParameter adds the statisticsTimestamp to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithStatisticsTimestampQueryParameter(statisticsTimestamp *string) *CifsServiceCollectionGetParams {
	o.SetStatisticsTimestampQueryParameter(statisticsTimestamp)
	return o
}

// SetStatisticsTimestampQueryParameter adds the statisticsTimestamp to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetStatisticsTimestampQueryParameter(statisticsTimestamp *string) {
	o.StatisticsTimestampQueryParameter = statisticsTimestamp
}

// WithSVMNameQueryParameter adds the svmName to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *CifsServiceCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *CifsServiceCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the cifs service collection get params
func (o *CifsServiceCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WriteToRequest writes these params to a swagger request
func (o *CifsServiceCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AdDomainFqdnQueryParameter != nil {

		// query param ad_domain.fqdn
		var qrAdDomainFqdn string

		if o.AdDomainFqdnQueryParameter != nil {
			qrAdDomainFqdn = *o.AdDomainFqdnQueryParameter
		}
		qAdDomainFqdn := qrAdDomainFqdn
		if qAdDomainFqdn != "" {

			if err := r.SetQueryParam("ad_domain.fqdn", qAdDomainFqdn); err != nil {
				return err
			}
		}
	}

	if o.AdDomainOrganizationalUnitQueryParameter != nil {

		// query param ad_domain.organizational_unit
		var qrAdDomainOrganizationalUnit string

		if o.AdDomainOrganizationalUnitQueryParameter != nil {
			qrAdDomainOrganizationalUnit = *o.AdDomainOrganizationalUnitQueryParameter
		}
		qAdDomainOrganizationalUnit := qrAdDomainOrganizationalUnit
		if qAdDomainOrganizationalUnit != "" {

			if err := r.SetQueryParam("ad_domain.organizational_unit", qAdDomainOrganizationalUnit); err != nil {
				return err
			}
		}
	}

	if o.CommentQueryParameter != nil {

		// query param comment
		var qrComment string

		if o.CommentQueryParameter != nil {
			qrComment = *o.CommentQueryParameter
		}
		qComment := qrComment
		if qComment != "" {

			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}
	}

	if o.DefaultUnixUserQueryParameter != nil {

		// query param default_unix_user
		var qrDefaultUnixUser string

		if o.DefaultUnixUserQueryParameter != nil {
			qrDefaultUnixUser = *o.DefaultUnixUserQueryParameter
		}
		qDefaultUnixUser := qrDefaultUnixUser
		if qDefaultUnixUser != "" {

			if err := r.SetQueryParam("default_unix_user", qDefaultUnixUser); err != nil {
				return err
			}
		}
	}

	if o.EnabledQueryParameter != nil {

		// query param enabled
		var qrEnabled bool

		if o.EnabledQueryParameter != nil {
			qrEnabled = *o.EnabledQueryParameter
		}
		qEnabled := swag.FormatBool(qrEnabled)
		if qEnabled != "" {

			if err := r.SetQueryParam("enabled", qEnabled); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricDurationQueryParameter != nil {

		// query param metric.duration
		var qrMetricDuration string

		if o.MetricDurationQueryParameter != nil {
			qrMetricDuration = *o.MetricDurationQueryParameter
		}
		qMetricDuration := qrMetricDuration
		if qMetricDuration != "" {

			if err := r.SetQueryParam("metric.duration", qMetricDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsOtherQueryParameter != nil {

		// query param metric.iops.other
		var qrMetricIopsOther int64

		if o.MetricIopsOtherQueryParameter != nil {
			qrMetricIopsOther = *o.MetricIopsOtherQueryParameter
		}
		qMetricIopsOther := swag.FormatInt64(qrMetricIopsOther)
		if qMetricIopsOther != "" {

			if err := r.SetQueryParam("metric.iops.other", qMetricIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsReadQueryParameter != nil {

		// query param metric.iops.read
		var qrMetricIopsRead int64

		if o.MetricIopsReadQueryParameter != nil {
			qrMetricIopsRead = *o.MetricIopsReadQueryParameter
		}
		qMetricIopsRead := swag.FormatInt64(qrMetricIopsRead)
		if qMetricIopsRead != "" {

			if err := r.SetQueryParam("metric.iops.read", qMetricIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsTotalQueryParameter != nil {

		// query param metric.iops.total
		var qrMetricIopsTotal int64

		if o.MetricIopsTotalQueryParameter != nil {
			qrMetricIopsTotal = *o.MetricIopsTotalQueryParameter
		}
		qMetricIopsTotal := swag.FormatInt64(qrMetricIopsTotal)
		if qMetricIopsTotal != "" {

			if err := r.SetQueryParam("metric.iops.total", qMetricIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsWriteQueryParameter != nil {

		// query param metric.iops.write
		var qrMetricIopsWrite int64

		if o.MetricIopsWriteQueryParameter != nil {
			qrMetricIopsWrite = *o.MetricIopsWriteQueryParameter
		}
		qMetricIopsWrite := swag.FormatInt64(qrMetricIopsWrite)
		if qMetricIopsWrite != "" {

			if err := r.SetQueryParam("metric.iops.write", qMetricIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyOtherQueryParameter != nil {

		// query param metric.latency.other
		var qrMetricLatencyOther int64

		if o.MetricLatencyOtherQueryParameter != nil {
			qrMetricLatencyOther = *o.MetricLatencyOtherQueryParameter
		}
		qMetricLatencyOther := swag.FormatInt64(qrMetricLatencyOther)
		if qMetricLatencyOther != "" {

			if err := r.SetQueryParam("metric.latency.other", qMetricLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyReadQueryParameter != nil {

		// query param metric.latency.read
		var qrMetricLatencyRead int64

		if o.MetricLatencyReadQueryParameter != nil {
			qrMetricLatencyRead = *o.MetricLatencyReadQueryParameter
		}
		qMetricLatencyRead := swag.FormatInt64(qrMetricLatencyRead)
		if qMetricLatencyRead != "" {

			if err := r.SetQueryParam("metric.latency.read", qMetricLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyTotalQueryParameter != nil {

		// query param metric.latency.total
		var qrMetricLatencyTotal int64

		if o.MetricLatencyTotalQueryParameter != nil {
			qrMetricLatencyTotal = *o.MetricLatencyTotalQueryParameter
		}
		qMetricLatencyTotal := swag.FormatInt64(qrMetricLatencyTotal)
		if qMetricLatencyTotal != "" {

			if err := r.SetQueryParam("metric.latency.total", qMetricLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyWriteQueryParameter != nil {

		// query param metric.latency.write
		var qrMetricLatencyWrite int64

		if o.MetricLatencyWriteQueryParameter != nil {
			qrMetricLatencyWrite = *o.MetricLatencyWriteQueryParameter
		}
		qMetricLatencyWrite := swag.FormatInt64(qrMetricLatencyWrite)
		if qMetricLatencyWrite != "" {

			if err := r.SetQueryParam("metric.latency.write", qMetricLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricStatusQueryParameter != nil {

		// query param metric.status
		var qrMetricStatus string

		if o.MetricStatusQueryParameter != nil {
			qrMetricStatus = *o.MetricStatusQueryParameter
		}
		qMetricStatus := qrMetricStatus
		if qMetricStatus != "" {

			if err := r.SetQueryParam("metric.status", qMetricStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputReadQueryParameter != nil {

		// query param metric.throughput.read
		var qrMetricThroughputRead int64

		if o.MetricThroughputReadQueryParameter != nil {
			qrMetricThroughputRead = *o.MetricThroughputReadQueryParameter
		}
		qMetricThroughputRead := swag.FormatInt64(qrMetricThroughputRead)
		if qMetricThroughputRead != "" {

			if err := r.SetQueryParam("metric.throughput.read", qMetricThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputTotalQueryParameter != nil {

		// query param metric.throughput.total
		var qrMetricThroughputTotal int64

		if o.MetricThroughputTotalQueryParameter != nil {
			qrMetricThroughputTotal = *o.MetricThroughputTotalQueryParameter
		}
		qMetricThroughputTotal := swag.FormatInt64(qrMetricThroughputTotal)
		if qMetricThroughputTotal != "" {

			if err := r.SetQueryParam("metric.throughput.total", qMetricThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputWriteQueryParameter != nil {

		// query param metric.throughput.write
		var qrMetricThroughputWrite int64

		if o.MetricThroughputWriteQueryParameter != nil {
			qrMetricThroughputWrite = *o.MetricThroughputWriteQueryParameter
		}
		qMetricThroughputWrite := swag.FormatInt64(qrMetricThroughputWrite)
		if qMetricThroughputWrite != "" {

			if err := r.SetQueryParam("metric.throughput.write", qMetricThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricTimestampQueryParameter != nil {

		// query param metric.timestamp
		var qrMetricTimestamp string

		if o.MetricTimestampQueryParameter != nil {
			qrMetricTimestamp = *o.MetricTimestampQueryParameter
		}
		qMetricTimestamp := qrMetricTimestamp
		if qMetricTimestamp != "" {

			if err := r.SetQueryParam("metric.timestamp", qMetricTimestamp); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.NetbiosAliasesQueryParameter != nil {

		// query param netbios.aliases
		var qrNetbiosAliases string

		if o.NetbiosAliasesQueryParameter != nil {
			qrNetbiosAliases = *o.NetbiosAliasesQueryParameter
		}
		qNetbiosAliases := qrNetbiosAliases
		if qNetbiosAliases != "" {

			if err := r.SetQueryParam("netbios.aliases", qNetbiosAliases); err != nil {
				return err
			}
		}
	}

	if o.NetbiosEnabledQueryParameter != nil {

		// query param netbios.enabled
		var qrNetbiosEnabled bool

		if o.NetbiosEnabledQueryParameter != nil {
			qrNetbiosEnabled = *o.NetbiosEnabledQueryParameter
		}
		qNetbiosEnabled := swag.FormatBool(qrNetbiosEnabled)
		if qNetbiosEnabled != "" {

			if err := r.SetQueryParam("netbios.enabled", qNetbiosEnabled); err != nil {
				return err
			}
		}
	}

	if o.NetbiosWinsServersQueryParameter != nil {

		// query param netbios.wins_servers
		var qrNetbiosWinsServers string

		if o.NetbiosWinsServersQueryParameter != nil {
			qrNetbiosWinsServers = *o.NetbiosWinsServersQueryParameter
		}
		qNetbiosWinsServers := qrNetbiosWinsServers
		if qNetbiosWinsServers != "" {

			if err := r.SetQueryParam("netbios.wins_servers", qNetbiosWinsServers); err != nil {
				return err
			}
		}
	}

	if o.OptionsAdminToRootMappingQueryParameter != nil {

		// query param options.admin_to_root_mapping
		var qrOptionsAdminToRootMapping bool

		if o.OptionsAdminToRootMappingQueryParameter != nil {
			qrOptionsAdminToRootMapping = *o.OptionsAdminToRootMappingQueryParameter
		}
		qOptionsAdminToRootMapping := swag.FormatBool(qrOptionsAdminToRootMapping)
		if qOptionsAdminToRootMapping != "" {

			if err := r.SetQueryParam("options.admin_to_root_mapping", qOptionsAdminToRootMapping); err != nil {
				return err
			}
		}
	}

	if o.OptionsAdvancedSparseFileQueryParameter != nil {

		// query param options.advanced_sparse_file
		var qrOptionsAdvancedSparseFile bool

		if o.OptionsAdvancedSparseFileQueryParameter != nil {
			qrOptionsAdvancedSparseFile = *o.OptionsAdvancedSparseFileQueryParameter
		}
		qOptionsAdvancedSparseFile := swag.FormatBool(qrOptionsAdvancedSparseFile)
		if qOptionsAdvancedSparseFile != "" {

			if err := r.SetQueryParam("options.advanced_sparse_file", qOptionsAdvancedSparseFile); err != nil {
				return err
			}
		}
	}

	if o.OptionsCopyOffloadQueryParameter != nil {

		// query param options.copy_offload
		var qrOptionsCopyOffload bool

		if o.OptionsCopyOffloadQueryParameter != nil {
			qrOptionsCopyOffload = *o.OptionsCopyOffloadQueryParameter
		}
		qOptionsCopyOffload := swag.FormatBool(qrOptionsCopyOffload)
		if qOptionsCopyOffload != "" {

			if err := r.SetQueryParam("options.copy_offload", qOptionsCopyOffload); err != nil {
				return err
			}
		}
	}

	if o.OptionsFakeOpenQueryParameter != nil {

		// query param options.fake_open
		var qrOptionsFakeOpen bool

		if o.OptionsFakeOpenQueryParameter != nil {
			qrOptionsFakeOpen = *o.OptionsFakeOpenQueryParameter
		}
		qOptionsFakeOpen := swag.FormatBool(qrOptionsFakeOpen)
		if qOptionsFakeOpen != "" {

			if err := r.SetQueryParam("options.fake_open", qOptionsFakeOpen); err != nil {
				return err
			}
		}
	}

	if o.OptionsFsctlTrimQueryParameter != nil {

		// query param options.fsctl_trim
		var qrOptionsFsctlTrim bool

		if o.OptionsFsctlTrimQueryParameter != nil {
			qrOptionsFsctlTrim = *o.OptionsFsctlTrimQueryParameter
		}
		qOptionsFsctlTrim := swag.FormatBool(qrOptionsFsctlTrim)
		if qOptionsFsctlTrim != "" {

			if err := r.SetQueryParam("options.fsctl_trim", qOptionsFsctlTrim); err != nil {
				return err
			}
		}
	}

	if o.OptionsJunctionReparseQueryParameter != nil {

		// query param options.junction_reparse
		var qrOptionsJunctionReparse bool

		if o.OptionsJunctionReparseQueryParameter != nil {
			qrOptionsJunctionReparse = *o.OptionsJunctionReparseQueryParameter
		}
		qOptionsJunctionReparse := swag.FormatBool(qrOptionsJunctionReparse)
		if qOptionsJunctionReparse != "" {

			if err := r.SetQueryParam("options.junction_reparse", qOptionsJunctionReparse); err != nil {
				return err
			}
		}
	}

	if o.OptionsLargeMtuQueryParameter != nil {

		// query param options.large_mtu
		var qrOptionsLargeMtu bool

		if o.OptionsLargeMtuQueryParameter != nil {
			qrOptionsLargeMtu = *o.OptionsLargeMtuQueryParameter
		}
		qOptionsLargeMtu := swag.FormatBool(qrOptionsLargeMtu)
		if qOptionsLargeMtu != "" {

			if err := r.SetQueryParam("options.large_mtu", qOptionsLargeMtu); err != nil {
				return err
			}
		}
	}

	if o.OptionsMultichannelQueryParameter != nil {

		// query param options.multichannel
		var qrOptionsMultichannel bool

		if o.OptionsMultichannelQueryParameter != nil {
			qrOptionsMultichannel = *o.OptionsMultichannelQueryParameter
		}
		qOptionsMultichannel := swag.FormatBool(qrOptionsMultichannel)
		if qOptionsMultichannel != "" {

			if err := r.SetQueryParam("options.multichannel", qOptionsMultichannel); err != nil {
				return err
			}
		}
	}

	if o.OptionsNullUserWindowsNameQueryParameter != nil {

		// query param options.null_user_windows_name
		var qrOptionsNullUserWindowsName string

		if o.OptionsNullUserWindowsNameQueryParameter != nil {
			qrOptionsNullUserWindowsName = *o.OptionsNullUserWindowsNameQueryParameter
		}
		qOptionsNullUserWindowsName := qrOptionsNullUserWindowsName
		if qOptionsNullUserWindowsName != "" {

			if err := r.SetQueryParam("options.null_user_windows_name", qOptionsNullUserWindowsName); err != nil {
				return err
			}
		}
	}

	if o.OptionsPathComponentCacheQueryParameter != nil {

		// query param options.path_component_cache
		var qrOptionsPathComponentCache bool

		if o.OptionsPathComponentCacheQueryParameter != nil {
			qrOptionsPathComponentCache = *o.OptionsPathComponentCacheQueryParameter
		}
		qOptionsPathComponentCache := swag.FormatBool(qrOptionsPathComponentCache)
		if qOptionsPathComponentCache != "" {

			if err := r.SetQueryParam("options.path_component_cache", qOptionsPathComponentCache); err != nil {
				return err
			}
		}
	}

	if o.OptionsReferralQueryParameter != nil {

		// query param options.referral
		var qrOptionsReferral bool

		if o.OptionsReferralQueryParameter != nil {
			qrOptionsReferral = *o.OptionsReferralQueryParameter
		}
		qOptionsReferral := swag.FormatBool(qrOptionsReferral)
		if qOptionsReferral != "" {

			if err := r.SetQueryParam("options.referral", qOptionsReferral); err != nil {
				return err
			}
		}
	}

	if o.OptionsSmbCreditsQueryParameter != nil {

		// query param options.smb_credits
		var qrOptionsSmbCredits int64

		if o.OptionsSmbCreditsQueryParameter != nil {
			qrOptionsSmbCredits = *o.OptionsSmbCreditsQueryParameter
		}
		qOptionsSmbCredits := swag.FormatInt64(qrOptionsSmbCredits)
		if qOptionsSmbCredits != "" {

			if err := r.SetQueryParam("options.smb_credits", qOptionsSmbCredits); err != nil {
				return err
			}
		}
	}

	if o.OptionsWidelinkReparseVersionsQueryParameter != nil {

		// query param options.widelink_reparse_versions
		var qrOptionsWidelinkReparseVersions string

		if o.OptionsWidelinkReparseVersionsQueryParameter != nil {
			qrOptionsWidelinkReparseVersions = *o.OptionsWidelinkReparseVersionsQueryParameter
		}
		qOptionsWidelinkReparseVersions := qrOptionsWidelinkReparseVersions
		if qOptionsWidelinkReparseVersions != "" {

			if err := r.SetQueryParam("options.widelink_reparse_versions", qOptionsWidelinkReparseVersions); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SecurityAesNetlogonEnabledQueryParameter != nil {

		// query param security.aes_netlogon_enabled
		var qrSecurityAesNetlogonEnabled bool

		if o.SecurityAesNetlogonEnabledQueryParameter != nil {
			qrSecurityAesNetlogonEnabled = *o.SecurityAesNetlogonEnabledQueryParameter
		}
		qSecurityAesNetlogonEnabled := swag.FormatBool(qrSecurityAesNetlogonEnabled)
		if qSecurityAesNetlogonEnabled != "" {

			if err := r.SetQueryParam("security.aes_netlogon_enabled", qSecurityAesNetlogonEnabled); err != nil {
				return err
			}
		}
	}

	if o.SecurityEncryptDcConnectionQueryParameter != nil {

		// query param security.encrypt_dc_connection
		var qrSecurityEncryptDcConnection bool

		if o.SecurityEncryptDcConnectionQueryParameter != nil {
			qrSecurityEncryptDcConnection = *o.SecurityEncryptDcConnectionQueryParameter
		}
		qSecurityEncryptDcConnection := swag.FormatBool(qrSecurityEncryptDcConnection)
		if qSecurityEncryptDcConnection != "" {

			if err := r.SetQueryParam("security.encrypt_dc_connection", qSecurityEncryptDcConnection); err != nil {
				return err
			}
		}
	}

	if o.SecurityKdcEncryptionQueryParameter != nil {

		// query param security.kdc_encryption
		var qrSecurityKdcEncryption bool

		if o.SecurityKdcEncryptionQueryParameter != nil {
			qrSecurityKdcEncryption = *o.SecurityKdcEncryptionQueryParameter
		}
		qSecurityKdcEncryption := swag.FormatBool(qrSecurityKdcEncryption)
		if qSecurityKdcEncryption != "" {

			if err := r.SetQueryParam("security.kdc_encryption", qSecurityKdcEncryption); err != nil {
				return err
			}
		}
	}

	if o.SecurityLdapReferralEnabledQueryParameter != nil {

		// query param security.ldap_referral_enabled
		var qrSecurityLdapReferralEnabled bool

		if o.SecurityLdapReferralEnabledQueryParameter != nil {
			qrSecurityLdapReferralEnabled = *o.SecurityLdapReferralEnabledQueryParameter
		}
		qSecurityLdapReferralEnabled := swag.FormatBool(qrSecurityLdapReferralEnabled)
		if qSecurityLdapReferralEnabled != "" {

			if err := r.SetQueryParam("security.ldap_referral_enabled", qSecurityLdapReferralEnabled); err != nil {
				return err
			}
		}
	}

	if o.SecurityLmCompatibilityLevelQueryParameter != nil {

		// query param security.lm_compatibility_level
		var qrSecurityLmCompatibilityLevel string

		if o.SecurityLmCompatibilityLevelQueryParameter != nil {
			qrSecurityLmCompatibilityLevel = *o.SecurityLmCompatibilityLevelQueryParameter
		}
		qSecurityLmCompatibilityLevel := qrSecurityLmCompatibilityLevel
		if qSecurityLmCompatibilityLevel != "" {

			if err := r.SetQueryParam("security.lm_compatibility_level", qSecurityLmCompatibilityLevel); err != nil {
				return err
			}
		}
	}

	if o.SecurityRestrictAnonymousQueryParameter != nil {

		// query param security.restrict_anonymous
		var qrSecurityRestrictAnonymous string

		if o.SecurityRestrictAnonymousQueryParameter != nil {
			qrSecurityRestrictAnonymous = *o.SecurityRestrictAnonymousQueryParameter
		}
		qSecurityRestrictAnonymous := qrSecurityRestrictAnonymous
		if qSecurityRestrictAnonymous != "" {

			if err := r.SetQueryParam("security.restrict_anonymous", qSecurityRestrictAnonymous); err != nil {
				return err
			}
		}
	}

	if o.SecuritySessionSecurityQueryParameter != nil {

		// query param security.session_security
		var qrSecuritySessionSecurity string

		if o.SecuritySessionSecurityQueryParameter != nil {
			qrSecuritySessionSecurity = *o.SecuritySessionSecurityQueryParameter
		}
		qSecuritySessionSecurity := qrSecuritySessionSecurity
		if qSecuritySessionSecurity != "" {

			if err := r.SetQueryParam("security.session_security", qSecuritySessionSecurity); err != nil {
				return err
			}
		}
	}

	if o.SecuritySmbEncryptionQueryParameter != nil {

		// query param security.smb_encryption
		var qrSecuritySmbEncryption bool

		if o.SecuritySmbEncryptionQueryParameter != nil {
			qrSecuritySmbEncryption = *o.SecuritySmbEncryptionQueryParameter
		}
		qSecuritySmbEncryption := swag.FormatBool(qrSecuritySmbEncryption)
		if qSecuritySmbEncryption != "" {

			if err := r.SetQueryParam("security.smb_encryption", qSecuritySmbEncryption); err != nil {
				return err
			}
		}
	}

	if o.SecuritySmbSigningQueryParameter != nil {

		// query param security.smb_signing
		var qrSecuritySmbSigning bool

		if o.SecuritySmbSigningQueryParameter != nil {
			qrSecuritySmbSigning = *o.SecuritySmbSigningQueryParameter
		}
		qSecuritySmbSigning := swag.FormatBool(qrSecuritySmbSigning)
		if qSecuritySmbSigning != "" {

			if err := r.SetQueryParam("security.smb_signing", qSecuritySmbSigning); err != nil {
				return err
			}
		}
	}

	if o.SecurityTryLdapChannelBindingQueryParameter != nil {

		// query param security.try_ldap_channel_binding
		var qrSecurityTryLdapChannelBinding bool

		if o.SecurityTryLdapChannelBindingQueryParameter != nil {
			qrSecurityTryLdapChannelBinding = *o.SecurityTryLdapChannelBindingQueryParameter
		}
		qSecurityTryLdapChannelBinding := swag.FormatBool(qrSecurityTryLdapChannelBinding)
		if qSecurityTryLdapChannelBinding != "" {

			if err := r.SetQueryParam("security.try_ldap_channel_binding", qSecurityTryLdapChannelBinding); err != nil {
				return err
			}
		}
	}

	if o.SecurityUseLdapsQueryParameter != nil {

		// query param security.use_ldaps
		var qrSecurityUseLdaps bool

		if o.SecurityUseLdapsQueryParameter != nil {
			qrSecurityUseLdaps = *o.SecurityUseLdapsQueryParameter
		}
		qSecurityUseLdaps := swag.FormatBool(qrSecurityUseLdaps)
		if qSecurityUseLdaps != "" {

			if err := r.SetQueryParam("security.use_ldaps", qSecurityUseLdaps); err != nil {
				return err
			}
		}
	}

	if o.SecurityUseStartTLSQueryParameter != nil {

		// query param security.use_start_tls
		var qrSecurityUseStartTLS bool

		if o.SecurityUseStartTLSQueryParameter != nil {
			qrSecurityUseStartTLS = *o.SecurityUseStartTLSQueryParameter
		}
		qSecurityUseStartTLS := swag.FormatBool(qrSecurityUseStartTLS)
		if qSecurityUseStartTLS != "" {

			if err := r.SetQueryParam("security.use_start_tls", qSecurityUseStartTLS); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawOtherQueryParameter != nil {

		// query param statistics.iops_raw.other
		var qrStatisticsIopsRawOther int64

		if o.StatisticsIopsRawOtherQueryParameter != nil {
			qrStatisticsIopsRawOther = *o.StatisticsIopsRawOtherQueryParameter
		}
		qStatisticsIopsRawOther := swag.FormatInt64(qrStatisticsIopsRawOther)
		if qStatisticsIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.iops_raw.other", qStatisticsIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawReadQueryParameter != nil {

		// query param statistics.iops_raw.read
		var qrStatisticsIopsRawRead int64

		if o.StatisticsIopsRawReadQueryParameter != nil {
			qrStatisticsIopsRawRead = *o.StatisticsIopsRawReadQueryParameter
		}
		qStatisticsIopsRawRead := swag.FormatInt64(qrStatisticsIopsRawRead)
		if qStatisticsIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.iops_raw.read", qStatisticsIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawTotalQueryParameter != nil {

		// query param statistics.iops_raw.total
		var qrStatisticsIopsRawTotal int64

		if o.StatisticsIopsRawTotalQueryParameter != nil {
			qrStatisticsIopsRawTotal = *o.StatisticsIopsRawTotalQueryParameter
		}
		qStatisticsIopsRawTotal := swag.FormatInt64(qrStatisticsIopsRawTotal)
		if qStatisticsIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.iops_raw.total", qStatisticsIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawWriteQueryParameter != nil {

		// query param statistics.iops_raw.write
		var qrStatisticsIopsRawWrite int64

		if o.StatisticsIopsRawWriteQueryParameter != nil {
			qrStatisticsIopsRawWrite = *o.StatisticsIopsRawWriteQueryParameter
		}
		qStatisticsIopsRawWrite := swag.FormatInt64(qrStatisticsIopsRawWrite)
		if qStatisticsIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.iops_raw.write", qStatisticsIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawOtherQueryParameter != nil {

		// query param statistics.latency_raw.other
		var qrStatisticsLatencyRawOther int64

		if o.StatisticsLatencyRawOtherQueryParameter != nil {
			qrStatisticsLatencyRawOther = *o.StatisticsLatencyRawOtherQueryParameter
		}
		qStatisticsLatencyRawOther := swag.FormatInt64(qrStatisticsLatencyRawOther)
		if qStatisticsLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.latency_raw.other", qStatisticsLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawReadQueryParameter != nil {

		// query param statistics.latency_raw.read
		var qrStatisticsLatencyRawRead int64

		if o.StatisticsLatencyRawReadQueryParameter != nil {
			qrStatisticsLatencyRawRead = *o.StatisticsLatencyRawReadQueryParameter
		}
		qStatisticsLatencyRawRead := swag.FormatInt64(qrStatisticsLatencyRawRead)
		if qStatisticsLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.latency_raw.read", qStatisticsLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawTotalQueryParameter != nil {

		// query param statistics.latency_raw.total
		var qrStatisticsLatencyRawTotal int64

		if o.StatisticsLatencyRawTotalQueryParameter != nil {
			qrStatisticsLatencyRawTotal = *o.StatisticsLatencyRawTotalQueryParameter
		}
		qStatisticsLatencyRawTotal := swag.FormatInt64(qrStatisticsLatencyRawTotal)
		if qStatisticsLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.latency_raw.total", qStatisticsLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawWriteQueryParameter != nil {

		// query param statistics.latency_raw.write
		var qrStatisticsLatencyRawWrite int64

		if o.StatisticsLatencyRawWriteQueryParameter != nil {
			qrStatisticsLatencyRawWrite = *o.StatisticsLatencyRawWriteQueryParameter
		}
		qStatisticsLatencyRawWrite := swag.FormatInt64(qrStatisticsLatencyRawWrite)
		if qStatisticsLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.latency_raw.write", qStatisticsLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsStatusQueryParameter != nil {

		// query param statistics.status
		var qrStatisticsStatus string

		if o.StatisticsStatusQueryParameter != nil {
			qrStatisticsStatus = *o.StatisticsStatusQueryParameter
		}
		qStatisticsStatus := qrStatisticsStatus
		if qStatisticsStatus != "" {

			if err := r.SetQueryParam("statistics.status", qStatisticsStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawReadQueryParameter != nil {

		// query param statistics.throughput_raw.read
		var qrStatisticsThroughputRawRead int64

		if o.StatisticsThroughputRawReadQueryParameter != nil {
			qrStatisticsThroughputRawRead = *o.StatisticsThroughputRawReadQueryParameter
		}
		qStatisticsThroughputRawRead := swag.FormatInt64(qrStatisticsThroughputRawRead)
		if qStatisticsThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.read", qStatisticsThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawTotalQueryParameter != nil {

		// query param statistics.throughput_raw.total
		var qrStatisticsThroughputRawTotal int64

		if o.StatisticsThroughputRawTotalQueryParameter != nil {
			qrStatisticsThroughputRawTotal = *o.StatisticsThroughputRawTotalQueryParameter
		}
		qStatisticsThroughputRawTotal := swag.FormatInt64(qrStatisticsThroughputRawTotal)
		if qStatisticsThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.total", qStatisticsThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawWriteQueryParameter != nil {

		// query param statistics.throughput_raw.write
		var qrStatisticsThroughputRawWrite int64

		if o.StatisticsThroughputRawWriteQueryParameter != nil {
			qrStatisticsThroughputRawWrite = *o.StatisticsThroughputRawWriteQueryParameter
		}
		qStatisticsThroughputRawWrite := swag.FormatInt64(qrStatisticsThroughputRawWrite)
		if qStatisticsThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.write", qStatisticsThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsTimestampQueryParameter != nil {

		// query param statistics.timestamp
		var qrStatisticsTimestamp string

		if o.StatisticsTimestampQueryParameter != nil {
			qrStatisticsTimestamp = *o.StatisticsTimestampQueryParameter
		}
		qStatisticsTimestamp := qrStatisticsTimestamp
		if qStatisticsTimestamp != "" {

			if err := r.SetQueryParam("statistics.timestamp", qStatisticsTimestamp); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamCifsServiceCollectionGet binds the parameter fields
func (o *CifsServiceCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamCifsServiceCollectionGet binds the parameter order_by
func (o *CifsServiceCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
