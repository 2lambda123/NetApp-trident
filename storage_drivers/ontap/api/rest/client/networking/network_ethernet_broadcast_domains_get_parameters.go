// Code generated by go-swagger; DO NOT EDIT.

package networking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewNetworkEthernetBroadcastDomainsGetParams creates a new NetworkEthernetBroadcastDomainsGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewNetworkEthernetBroadcastDomainsGetParams() *NetworkEthernetBroadcastDomainsGetParams {
	return &NetworkEthernetBroadcastDomainsGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewNetworkEthernetBroadcastDomainsGetParamsWithTimeout creates a new NetworkEthernetBroadcastDomainsGetParams object
// with the ability to set a timeout on a request.
func NewNetworkEthernetBroadcastDomainsGetParamsWithTimeout(timeout time.Duration) *NetworkEthernetBroadcastDomainsGetParams {
	return &NetworkEthernetBroadcastDomainsGetParams{
		timeout: timeout,
	}
}

// NewNetworkEthernetBroadcastDomainsGetParamsWithContext creates a new NetworkEthernetBroadcastDomainsGetParams object
// with the ability to set a context for a request.
func NewNetworkEthernetBroadcastDomainsGetParamsWithContext(ctx context.Context) *NetworkEthernetBroadcastDomainsGetParams {
	return &NetworkEthernetBroadcastDomainsGetParams{
		Context: ctx,
	}
}

// NewNetworkEthernetBroadcastDomainsGetParamsWithHTTPClient creates a new NetworkEthernetBroadcastDomainsGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewNetworkEthernetBroadcastDomainsGetParamsWithHTTPClient(client *http.Client) *NetworkEthernetBroadcastDomainsGetParams {
	return &NetworkEthernetBroadcastDomainsGetParams{
		HTTPClient: client,
	}
}

/* NetworkEthernetBroadcastDomainsGetParams contains all the parameters to send to the API endpoint
   for the network ethernet broadcast domains get operation.

   Typically these are written to a http.Request.
*/
type NetworkEthernetBroadcastDomainsGetParams struct {

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* IpspaceName.

	   Filter by ipspace.name
	*/
	IpspaceNameQueryParameter *string

	/* IpspaceUUID.

	   Filter by ipspace.uuid
	*/
	IpspaceUUIDQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Mtu.

	   Filter by mtu
	*/
	MtuQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* PortsName.

	   Filter by ports.name
	*/
	PortsNameQueryParameter *string

	/* PortsNodeName.

	   Filter by ports.node.name
	*/
	PortsNodeNameQueryParameter *string

	/* PortsUUID.

	   Filter by ports.uuid
	*/
	PortsUUIDQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the network ethernet broadcast domains get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NetworkEthernetBroadcastDomainsGetParams) WithDefaults() *NetworkEthernetBroadcastDomainsGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the network ethernet broadcast domains get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NetworkEthernetBroadcastDomainsGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := NetworkEthernetBroadcastDomainsGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithTimeout(timeout time.Duration) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithContext(ctx context.Context) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithHTTPClient(client *http.Client) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsQueryParameter adds the fields to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithFieldsQueryParameter(fields []string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithIpspaceNameQueryParameter adds the ipspaceName to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithIpspaceNameQueryParameter(ipspaceName *string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetIpspaceNameQueryParameter(ipspaceName)
	return o
}

// SetIpspaceNameQueryParameter adds the ipspaceName to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetIpspaceNameQueryParameter(ipspaceName *string) {
	o.IpspaceNameQueryParameter = ipspaceName
}

// WithIpspaceUUIDQueryParameter adds the ipspaceUUID to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithIpspaceUUIDQueryParameter(ipspaceUUID *string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetIpspaceUUIDQueryParameter(ipspaceUUID)
	return o
}

// SetIpspaceUUIDQueryParameter adds the ipspaceUuid to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetIpspaceUUIDQueryParameter(ipspaceUUID *string) {
	o.IpspaceUUIDQueryParameter = ipspaceUUID
}

// WithMaxRecordsQueryParameter adds the maxRecords to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMtuQueryParameter adds the mtu to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithMtuQueryParameter(mtu *int64) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetMtuQueryParameter(mtu)
	return o
}

// SetMtuQueryParameter adds the mtu to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetMtuQueryParameter(mtu *int64) {
	o.MtuQueryParameter = mtu
}

// WithNameQueryParameter adds the name to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithNameQueryParameter(name *string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithOrderByQueryParameter(orderBy []string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPortsNameQueryParameter adds the portsName to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithPortsNameQueryParameter(portsName *string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetPortsNameQueryParameter(portsName)
	return o
}

// SetPortsNameQueryParameter adds the portsName to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetPortsNameQueryParameter(portsName *string) {
	o.PortsNameQueryParameter = portsName
}

// WithPortsNodeNameQueryParameter adds the portsNodeName to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithPortsNodeNameQueryParameter(portsNodeName *string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetPortsNodeNameQueryParameter(portsNodeName)
	return o
}

// SetPortsNodeNameQueryParameter adds the portsNodeName to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetPortsNodeNameQueryParameter(portsNodeName *string) {
	o.PortsNodeNameQueryParameter = portsNodeName
}

// WithPortsUUIDQueryParameter adds the portsUUID to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithPortsUUIDQueryParameter(portsUUID *string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetPortsUUIDQueryParameter(portsUUID)
	return o
}

// SetPortsUUIDQueryParameter adds the portsUuid to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetPortsUUIDQueryParameter(portsUUID *string) {
	o.PortsUUIDQueryParameter = portsUUID
}

// WithReturnRecordsQueryParameter adds the returnRecords to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithUUIDQueryParameter adds the uuid to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) WithUUIDQueryParameter(uuid *string) *NetworkEthernetBroadcastDomainsGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the network ethernet broadcast domains get params
func (o *NetworkEthernetBroadcastDomainsGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *NetworkEthernetBroadcastDomainsGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.IpspaceNameQueryParameter != nil {

		// query param ipspace.name
		var qrIpspaceName string

		if o.IpspaceNameQueryParameter != nil {
			qrIpspaceName = *o.IpspaceNameQueryParameter
		}
		qIpspaceName := qrIpspaceName
		if qIpspaceName != "" {

			if err := r.SetQueryParam("ipspace.name", qIpspaceName); err != nil {
				return err
			}
		}
	}

	if o.IpspaceUUIDQueryParameter != nil {

		// query param ipspace.uuid
		var qrIpspaceUUID string

		if o.IpspaceUUIDQueryParameter != nil {
			qrIpspaceUUID = *o.IpspaceUUIDQueryParameter
		}
		qIpspaceUUID := qrIpspaceUUID
		if qIpspaceUUID != "" {

			if err := r.SetQueryParam("ipspace.uuid", qIpspaceUUID); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MtuQueryParameter != nil {

		// query param mtu
		var qrMtu int64

		if o.MtuQueryParameter != nil {
			qrMtu = *o.MtuQueryParameter
		}
		qMtu := swag.FormatInt64(qrMtu)
		if qMtu != "" {

			if err := r.SetQueryParam("mtu", qMtu); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PortsNameQueryParameter != nil {

		// query param ports.name
		var qrPortsName string

		if o.PortsNameQueryParameter != nil {
			qrPortsName = *o.PortsNameQueryParameter
		}
		qPortsName := qrPortsName
		if qPortsName != "" {

			if err := r.SetQueryParam("ports.name", qPortsName); err != nil {
				return err
			}
		}
	}

	if o.PortsNodeNameQueryParameter != nil {

		// query param ports.node.name
		var qrPortsNodeName string

		if o.PortsNodeNameQueryParameter != nil {
			qrPortsNodeName = *o.PortsNodeNameQueryParameter
		}
		qPortsNodeName := qrPortsNodeName
		if qPortsNodeName != "" {

			if err := r.SetQueryParam("ports.node.name", qPortsNodeName); err != nil {
				return err
			}
		}
	}

	if o.PortsUUIDQueryParameter != nil {

		// query param ports.uuid
		var qrPortsUUID string

		if o.PortsUUIDQueryParameter != nil {
			qrPortsUUID = *o.PortsUUIDQueryParameter
		}
		qPortsUUID := qrPortsUUID
		if qPortsUUID != "" {

			if err := r.SetQueryParam("ports.uuid", qPortsUUID); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamNetworkEthernetBroadcastDomainsGet binds the parameter fields
func (o *NetworkEthernetBroadcastDomainsGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamNetworkEthernetBroadcastDomainsGet binds the parameter order_by
func (o *NetworkEthernetBroadcastDomainsGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
