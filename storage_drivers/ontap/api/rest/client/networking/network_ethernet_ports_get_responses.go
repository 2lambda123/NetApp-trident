// Code generated by go-swagger; DO NOT EDIT.

package networking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/v21/storage_drivers/ontap/api/rest/models"
)

// NetworkEthernetPortsGetReader is a Reader for the NetworkEthernetPortsGet structure.
type NetworkEthernetPortsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkEthernetPortsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNetworkEthernetPortsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNetworkEthernetPortsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNetworkEthernetPortsGetOK creates a NetworkEthernetPortsGetOK with default headers values
func NewNetworkEthernetPortsGetOK() *NetworkEthernetPortsGetOK {
	return &NetworkEthernetPortsGetOK{}
}

/* NetworkEthernetPortsGetOK describes a response with status code 200, with default header values.

OK
*/
type NetworkEthernetPortsGetOK struct {
	Payload *models.PortResponse
}

func (o *NetworkEthernetPortsGetOK) Error() string {
	return fmt.Sprintf("[GET /network/ethernet/ports][%d] networkEthernetPortsGetOK  %+v", 200, o.Payload)
}
func (o *NetworkEthernetPortsGetOK) GetPayload() *models.PortResponse {
	return o.Payload
}

func (o *NetworkEthernetPortsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkEthernetPortsGetDefault creates a NetworkEthernetPortsGetDefault with default headers values
func NewNetworkEthernetPortsGetDefault(code int) *NetworkEthernetPortsGetDefault {
	return &NetworkEthernetPortsGetDefault{
		_statusCode: code,
	}
}

/* NetworkEthernetPortsGetDefault describes a response with status code -1, with default header values.

Error
*/
type NetworkEthernetPortsGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the network ethernet ports get default response
func (o *NetworkEthernetPortsGetDefault) Code() int {
	return o._statusCode
}

func (o *NetworkEthernetPortsGetDefault) Error() string {
	return fmt.Sprintf("[GET /network/ethernet/ports][%d] network_ethernet_ports_get default  %+v", o._statusCode, o.Payload)
}
func (o *NetworkEthernetPortsGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NetworkEthernetPortsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
