// Code generated by go-swagger; DO NOT EDIT.

package networking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// IPSubnetGetReader is a Reader for the IPSubnetGet structure.
type IPSubnetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IPSubnetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIPSubnetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewIPSubnetGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIPSubnetGetOK creates a IPSubnetGetOK with default headers values
func NewIPSubnetGetOK() *IPSubnetGetOK {
	return &IPSubnetGetOK{}
}

/* IPSubnetGetOK describes a response with status code 200, with default header values.

OK
*/
type IPSubnetGetOK struct {
	Payload *models.IPSubnet
}

func (o *IPSubnetGetOK) Error() string {
	return fmt.Sprintf("[GET /network/ip/subnets/{uuid}][%d] ipSubnetGetOK  %+v", 200, o.Payload)
}
func (o *IPSubnetGetOK) GetPayload() *models.IPSubnet {
	return o.Payload
}

func (o *IPSubnetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPSubnet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIPSubnetGetDefault creates a IPSubnetGetDefault with default headers values
func NewIPSubnetGetDefault(code int) *IPSubnetGetDefault {
	return &IPSubnetGetDefault{
		_statusCode: code,
	}
}

/* IPSubnetGetDefault describes a response with status code -1, with default header values.

Error
*/
type IPSubnetGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the ip subnet get default response
func (o *IPSubnetGetDefault) Code() int {
	return o._statusCode
}

func (o *IPSubnetGetDefault) Error() string {
	return fmt.Sprintf("[GET /network/ip/subnets/{uuid}][%d] ip_subnet_get default  %+v", o._statusCode, o.Payload)
}
func (o *IPSubnetGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *IPSubnetGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
