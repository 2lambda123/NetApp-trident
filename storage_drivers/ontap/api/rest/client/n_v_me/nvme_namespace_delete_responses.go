// Code generated by go-swagger; DO NOT EDIT.

package n_v_me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// NvmeNamespaceDeleteReader is a Reader for the NvmeNamespaceDelete structure.
type NvmeNamespaceDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NvmeNamespaceDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNvmeNamespaceDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNvmeNamespaceDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNvmeNamespaceDeleteOK creates a NvmeNamespaceDeleteOK with default headers values
func NewNvmeNamespaceDeleteOK() *NvmeNamespaceDeleteOK {
	return &NvmeNamespaceDeleteOK{}
}

/* NvmeNamespaceDeleteOK describes a response with status code 200, with default header values.

OK
*/
type NvmeNamespaceDeleteOK struct {
}

func (o *NvmeNamespaceDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /storage/namespaces/{uuid}][%d] nvmeNamespaceDeleteOK ", 200)
}

func (o *NvmeNamespaceDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNvmeNamespaceDeleteDefault creates a NvmeNamespaceDeleteDefault with default headers values
func NewNvmeNamespaceDeleteDefault(code int) *NvmeNamespaceDeleteDefault {
	return &NvmeNamespaceDeleteDefault{
		_statusCode: code,
	}
}

/* NvmeNamespaceDeleteDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 72090006 | The specified namespace was not found. |
| 72090007 | The specified namespace was not found. |
| 72090016 | The namespace's aggregate is offline. The aggregate must be online to modify or remove the namespace. |
| 72090017 | The namespace's volume is offline. The volume must be online to modify or remove the namespace. |

*/
type NvmeNamespaceDeleteDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the nvme namespace delete default response
func (o *NvmeNamespaceDeleteDefault) Code() int {
	return o._statusCode
}

func (o *NvmeNamespaceDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /storage/namespaces/{uuid}][%d] nvme_namespace_delete default  %+v", o._statusCode, o.Payload)
}
func (o *NvmeNamespaceDeleteDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NvmeNamespaceDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
