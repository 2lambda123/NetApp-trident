// Code generated by go-swagger; DO NOT EDIT.

package name_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLdapCollectionGetParams creates a new LdapCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLdapCollectionGetParams() *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLdapCollectionGetParamsWithTimeout creates a new LdapCollectionGetParams object
// with the ability to set a timeout on a request.
func NewLdapCollectionGetParamsWithTimeout(timeout time.Duration) *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		timeout: timeout,
	}
}

// NewLdapCollectionGetParamsWithContext creates a new LdapCollectionGetParams object
// with the ability to set a context for a request.
func NewLdapCollectionGetParamsWithContext(ctx context.Context) *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		Context: ctx,
	}
}

// NewLdapCollectionGetParamsWithHTTPClient creates a new LdapCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewLdapCollectionGetParamsWithHTTPClient(client *http.Client) *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		HTTPClient: client,
	}
}

/* LdapCollectionGetParams contains all the parameters to send to the API endpoint
   for the ldap collection get operation.

   Typically these are written to a http.Request.
*/
type LdapCollectionGetParams struct {

	/* AdDomain.

	   Filter by ad_domain
	*/
	AdDomainQueryParameter *string

	/* BaseDn.

	   Filter by base_dn
	*/
	BaseDnQueryParameter *string

	/* BaseScope.

	   Filter by base_scope
	*/
	BaseScopeQueryParameter *string

	/* BindDn.

	   Filter by bind_dn
	*/
	BindDnQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	Fields []string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecords *int64

	/* MinBindLevel.

	   Filter by min_bind_level
	*/
	MinBindLevelQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderBy []string

	/* Port.

	   Filter by port
	*/
	PortQueryParameter *int64

	/* PreferredAdServers.

	   Filter by preferred_ad_servers
	*/
	PreferredAdServersQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecords *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeout *int64

	/* Schema.

	   Filter by schema
	*/
	SchemaQueryParameter *string

	/* Servers.

	   Filter by servers
	*/
	ServersQueryParameter *string

	/* SessionSecurity.

	   Filter by session_security
	*/
	SessionSecurityQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UseStartTLS.

	   Filter by use_start_tls
	*/
	UseStartTLSQueryParameter *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the ldap collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LdapCollectionGetParams) WithDefaults() *LdapCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the ldap collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LdapCollectionGetParams) SetDefaults() {
	var (
		returnRecordsDefault = bool(true)

		returnTimeoutDefault = int64(15)
	)

	val := LdapCollectionGetParams{
		ReturnRecords: &returnRecordsDefault,
		ReturnTimeout: &returnTimeoutDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the ldap collection get params
func (o *LdapCollectionGetParams) WithTimeout(timeout time.Duration) *LdapCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ldap collection get params
func (o *LdapCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ldap collection get params
func (o *LdapCollectionGetParams) WithContext(ctx context.Context) *LdapCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ldap collection get params
func (o *LdapCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ldap collection get params
func (o *LdapCollectionGetParams) WithHTTPClient(client *http.Client) *LdapCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ldap collection get params
func (o *LdapCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAdDomainQueryParameter adds the adDomain to the ldap collection get params
func (o *LdapCollectionGetParams) WithAdDomainQueryParameter(adDomain *string) *LdapCollectionGetParams {
	o.SetAdDomainQueryParameter(adDomain)
	return o
}

// SetAdDomainQueryParameter adds the adDomain to the ldap collection get params
func (o *LdapCollectionGetParams) SetAdDomainQueryParameter(adDomain *string) {
	o.AdDomainQueryParameter = adDomain
}

// WithBaseDnQueryParameter adds the baseDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithBaseDnQueryParameter(baseDn *string) *LdapCollectionGetParams {
	o.SetBaseDnQueryParameter(baseDn)
	return o
}

// SetBaseDnQueryParameter adds the baseDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetBaseDnQueryParameter(baseDn *string) {
	o.BaseDnQueryParameter = baseDn
}

// WithBaseScopeQueryParameter adds the baseScope to the ldap collection get params
func (o *LdapCollectionGetParams) WithBaseScopeQueryParameter(baseScope *string) *LdapCollectionGetParams {
	o.SetBaseScopeQueryParameter(baseScope)
	return o
}

// SetBaseScopeQueryParameter adds the baseScope to the ldap collection get params
func (o *LdapCollectionGetParams) SetBaseScopeQueryParameter(baseScope *string) {
	o.BaseScopeQueryParameter = baseScope
}

// WithBindDnQueryParameter adds the bindDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithBindDnQueryParameter(bindDn *string) *LdapCollectionGetParams {
	o.SetBindDnQueryParameter(bindDn)
	return o
}

// SetBindDnQueryParameter adds the bindDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetBindDnQueryParameter(bindDn *string) {
	o.BindDnQueryParameter = bindDn
}

// WithFields adds the fields to the ldap collection get params
func (o *LdapCollectionGetParams) WithFields(fields []string) *LdapCollectionGetParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the ldap collection get params
func (o *LdapCollectionGetParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithMaxRecords adds the maxRecords to the ldap collection get params
func (o *LdapCollectionGetParams) WithMaxRecords(maxRecords *int64) *LdapCollectionGetParams {
	o.SetMaxRecords(maxRecords)
	return o
}

// SetMaxRecords adds the maxRecords to the ldap collection get params
func (o *LdapCollectionGetParams) SetMaxRecords(maxRecords *int64) {
	o.MaxRecords = maxRecords
}

// WithMinBindLevelQueryParameter adds the minBindLevel to the ldap collection get params
func (o *LdapCollectionGetParams) WithMinBindLevelQueryParameter(minBindLevel *string) *LdapCollectionGetParams {
	o.SetMinBindLevelQueryParameter(minBindLevel)
	return o
}

// SetMinBindLevelQueryParameter adds the minBindLevel to the ldap collection get params
func (o *LdapCollectionGetParams) SetMinBindLevelQueryParameter(minBindLevel *string) {
	o.MinBindLevelQueryParameter = minBindLevel
}

// WithOrderBy adds the orderBy to the ldap collection get params
func (o *LdapCollectionGetParams) WithOrderBy(orderBy []string) *LdapCollectionGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the ldap collection get params
func (o *LdapCollectionGetParams) SetOrderBy(orderBy []string) {
	o.OrderBy = orderBy
}

// WithPortQueryParameter adds the port to the ldap collection get params
func (o *LdapCollectionGetParams) WithPortQueryParameter(port *int64) *LdapCollectionGetParams {
	o.SetPortQueryParameter(port)
	return o
}

// SetPortQueryParameter adds the port to the ldap collection get params
func (o *LdapCollectionGetParams) SetPortQueryParameter(port *int64) {
	o.PortQueryParameter = port
}

// WithPreferredAdServersQueryParameter adds the preferredAdServers to the ldap collection get params
func (o *LdapCollectionGetParams) WithPreferredAdServersQueryParameter(preferredAdServers *string) *LdapCollectionGetParams {
	o.SetPreferredAdServersQueryParameter(preferredAdServers)
	return o
}

// SetPreferredAdServersQueryParameter adds the preferredAdServers to the ldap collection get params
func (o *LdapCollectionGetParams) SetPreferredAdServersQueryParameter(preferredAdServers *string) {
	o.PreferredAdServersQueryParameter = preferredAdServers
}

// WithReturnRecords adds the returnRecords to the ldap collection get params
func (o *LdapCollectionGetParams) WithReturnRecords(returnRecords *bool) *LdapCollectionGetParams {
	o.SetReturnRecords(returnRecords)
	return o
}

// SetReturnRecords adds the returnRecords to the ldap collection get params
func (o *LdapCollectionGetParams) SetReturnRecords(returnRecords *bool) {
	o.ReturnRecords = returnRecords
}

// WithReturnTimeout adds the returnTimeout to the ldap collection get params
func (o *LdapCollectionGetParams) WithReturnTimeout(returnTimeout *int64) *LdapCollectionGetParams {
	o.SetReturnTimeout(returnTimeout)
	return o
}

// SetReturnTimeout adds the returnTimeout to the ldap collection get params
func (o *LdapCollectionGetParams) SetReturnTimeout(returnTimeout *int64) {
	o.ReturnTimeout = returnTimeout
}

// WithSchemaQueryParameter adds the schema to the ldap collection get params
func (o *LdapCollectionGetParams) WithSchemaQueryParameter(schema *string) *LdapCollectionGetParams {
	o.SetSchemaQueryParameter(schema)
	return o
}

// SetSchemaQueryParameter adds the schema to the ldap collection get params
func (o *LdapCollectionGetParams) SetSchemaQueryParameter(schema *string) {
	o.SchemaQueryParameter = schema
}

// WithServersQueryParameter adds the servers to the ldap collection get params
func (o *LdapCollectionGetParams) WithServersQueryParameter(servers *string) *LdapCollectionGetParams {
	o.SetServersQueryParameter(servers)
	return o
}

// SetServersQueryParameter adds the servers to the ldap collection get params
func (o *LdapCollectionGetParams) SetServersQueryParameter(servers *string) {
	o.ServersQueryParameter = servers
}

// WithSessionSecurityQueryParameter adds the sessionSecurity to the ldap collection get params
func (o *LdapCollectionGetParams) WithSessionSecurityQueryParameter(sessionSecurity *string) *LdapCollectionGetParams {
	o.SetSessionSecurityQueryParameter(sessionSecurity)
	return o
}

// SetSessionSecurityQueryParameter adds the sessionSecurity to the ldap collection get params
func (o *LdapCollectionGetParams) SetSessionSecurityQueryParameter(sessionSecurity *string) {
	o.SessionSecurityQueryParameter = sessionSecurity
}

// WithSVMNameQueryParameter adds the svmName to the ldap collection get params
func (o *LdapCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *LdapCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the ldap collection get params
func (o *LdapCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the ldap collection get params
func (o *LdapCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *LdapCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the ldap collection get params
func (o *LdapCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUseStartTLSQueryParameter adds the useStartTLS to the ldap collection get params
func (o *LdapCollectionGetParams) WithUseStartTLSQueryParameter(useStartTLS *bool) *LdapCollectionGetParams {
	o.SetUseStartTLSQueryParameter(useStartTLS)
	return o
}

// SetUseStartTLSQueryParameter adds the useStartTls to the ldap collection get params
func (o *LdapCollectionGetParams) SetUseStartTLSQueryParameter(useStartTLS *bool) {
	o.UseStartTLSQueryParameter = useStartTLS
}

// WriteToRequest writes these params to a swagger request
func (o *LdapCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AdDomainQueryParameter != nil {

		// query param ad_domain
		var qrAdDomain string

		if o.AdDomainQueryParameter != nil {
			qrAdDomain = *o.AdDomainQueryParameter
		}
		qAdDomain := qrAdDomain
		if qAdDomain != "" {

			if err := r.SetQueryParam("ad_domain", qAdDomain); err != nil {
				return err
			}
		}
	}

	if o.BaseDnQueryParameter != nil {

		// query param base_dn
		var qrBaseDn string

		if o.BaseDnQueryParameter != nil {
			qrBaseDn = *o.BaseDnQueryParameter
		}
		qBaseDn := qrBaseDn
		if qBaseDn != "" {

			if err := r.SetQueryParam("base_dn", qBaseDn); err != nil {
				return err
			}
		}
	}

	if o.BaseScopeQueryParameter != nil {

		// query param base_scope
		var qrBaseScope string

		if o.BaseScopeQueryParameter != nil {
			qrBaseScope = *o.BaseScopeQueryParameter
		}
		qBaseScope := qrBaseScope
		if qBaseScope != "" {

			if err := r.SetQueryParam("base_scope", qBaseScope); err != nil {
				return err
			}
		}
	}

	if o.BindDnQueryParameter != nil {

		// query param bind_dn
		var qrBindDn string

		if o.BindDnQueryParameter != nil {
			qrBindDn = *o.BindDnQueryParameter
		}
		qBindDn := qrBindDn
		if qBindDn != "" {

			if err := r.SetQueryParam("bind_dn", qBindDn); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.MaxRecords != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecords != nil {
			qrMaxRecords = *o.MaxRecords
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MinBindLevelQueryParameter != nil {

		// query param min_bind_level
		var qrMinBindLevel string

		if o.MinBindLevelQueryParameter != nil {
			qrMinBindLevel = *o.MinBindLevelQueryParameter
		}
		qMinBindLevel := qrMinBindLevel
		if qMinBindLevel != "" {

			if err := r.SetQueryParam("min_bind_level", qMinBindLevel); err != nil {
				return err
			}
		}
	}

	if o.OrderBy != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PortQueryParameter != nil {

		// query param port
		var qrPort int64

		if o.PortQueryParameter != nil {
			qrPort = *o.PortQueryParameter
		}
		qPort := swag.FormatInt64(qrPort)
		if qPort != "" {

			if err := r.SetQueryParam("port", qPort); err != nil {
				return err
			}
		}
	}

	if o.PreferredAdServersQueryParameter != nil {

		// query param preferred_ad_servers
		var qrPreferredAdServers string

		if o.PreferredAdServersQueryParameter != nil {
			qrPreferredAdServers = *o.PreferredAdServersQueryParameter
		}
		qPreferredAdServers := qrPreferredAdServers
		if qPreferredAdServers != "" {

			if err := r.SetQueryParam("preferred_ad_servers", qPreferredAdServers); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecords != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecords != nil {
			qrReturnRecords = *o.ReturnRecords
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeout != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeout != nil {
			qrReturnTimeout = *o.ReturnTimeout
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SchemaQueryParameter != nil {

		// query param schema
		var qrSchema string

		if o.SchemaQueryParameter != nil {
			qrSchema = *o.SchemaQueryParameter
		}
		qSchema := qrSchema
		if qSchema != "" {

			if err := r.SetQueryParam("schema", qSchema); err != nil {
				return err
			}
		}
	}

	if o.ServersQueryParameter != nil {

		// query param servers
		var qrServers string

		if o.ServersQueryParameter != nil {
			qrServers = *o.ServersQueryParameter
		}
		qServers := qrServers
		if qServers != "" {

			if err := r.SetQueryParam("servers", qServers); err != nil {
				return err
			}
		}
	}

	if o.SessionSecurityQueryParameter != nil {

		// query param session_security
		var qrSessionSecurity string

		if o.SessionSecurityQueryParameter != nil {
			qrSessionSecurity = *o.SessionSecurityQueryParameter
		}
		qSessionSecurity := qrSessionSecurity
		if qSessionSecurity != "" {

			if err := r.SetQueryParam("session_security", qSessionSecurity); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UseStartTLSQueryParameter != nil {

		// query param use_start_tls
		var qrUseStartTLS bool

		if o.UseStartTLSQueryParameter != nil {
			qrUseStartTLS = *o.UseStartTLSQueryParameter
		}
		qUseStartTLS := swag.FormatBool(qrUseStartTLS)
		if qUseStartTLS != "" {

			if err := r.SetQueryParam("use_start_tls", qUseStartTLS); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamLdapCollectionGet binds the parameter fields
func (o *LdapCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamLdapCollectionGet binds the parameter order_by
func (o *LdapCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderBy

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
