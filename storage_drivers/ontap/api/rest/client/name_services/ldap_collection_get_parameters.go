// Code generated by go-swagger; DO NOT EDIT.

package name_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLdapCollectionGetParams creates a new LdapCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLdapCollectionGetParams() *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLdapCollectionGetParamsWithTimeout creates a new LdapCollectionGetParams object
// with the ability to set a timeout on a request.
func NewLdapCollectionGetParamsWithTimeout(timeout time.Duration) *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		timeout: timeout,
	}
}

// NewLdapCollectionGetParamsWithContext creates a new LdapCollectionGetParams object
// with the ability to set a context for a request.
func NewLdapCollectionGetParamsWithContext(ctx context.Context) *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		Context: ctx,
	}
}

// NewLdapCollectionGetParamsWithHTTPClient creates a new LdapCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewLdapCollectionGetParamsWithHTTPClient(client *http.Client) *LdapCollectionGetParams {
	return &LdapCollectionGetParams{
		HTTPClient: client,
	}
}

/* LdapCollectionGetParams contains all the parameters to send to the API endpoint
   for the ldap collection get operation.

   Typically these are written to a http.Request.
*/
type LdapCollectionGetParams struct {

	/* AdDomain.

	   Filter by ad_domain
	*/
	AdDomainQueryParameter *string

	/* BaseDn.

	   Filter by base_dn
	*/
	BaseDnQueryParameter *string

	/* BaseScope.

	   Filter by base_scope
	*/
	BaseScopeQueryParameter *string

	/* BindAsCifsServer.

	   Filter by bind_as_cifs_server
	*/
	BindAsCifsServerQueryParameter *bool

	/* BindDn.

	   Filter by bind_dn
	*/
	BindDnQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* GroupDn.

	   Filter by group_dn
	*/
	GroupDnQueryParameter *string

	/* GroupMembershipFilter.

	   Filter by group_membership_filter
	*/
	GroupMembershIPFilterQueryParameter *string

	/* GroupScope.

	   Filter by group_scope
	*/
	GroupScopeQueryParameter *string

	/* IsNetgroupByhostEnabled.

	   Filter by is_netgroup_byhost_enabled
	*/
	IsNetgroupByhostEnabledQueryParameter *bool

	/* IsOwner.

	   Filter by is_owner
	*/
	IsOwnerQueryParameter *bool

	/* LdapsEnabled.

	   Filter by ldaps_enabled
	*/
	LdapsEnabledQueryParameter *bool

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* MinBindLevel.

	   Filter by min_bind_level
	*/
	MinBindLevelQueryParameter *string

	/* NetgroupByhostDn.

	   Filter by netgroup_byhost_dn
	*/
	NetgroupByhostDnQueryParameter *string

	/* NetgroupByhostScope.

	   Filter by netgroup_byhost_scope
	*/
	NetgroupByhostScopeQueryParameter *string

	/* NetgroupDn.

	   Filter by netgroup_dn
	*/
	NetgroupDnQueryParameter *string

	/* NetgroupScope.

	   Filter by netgroup_scope
	*/
	NetgroupScopeQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* Port.

	   Filter by port
	*/
	PortQueryParameter *int64

	/* PreferredAdServers.

	   Filter by preferred_ad_servers
	*/
	PreferredAdServersQueryParameter *string

	/* QueryTimeout.

	   Filter by query_timeout
	*/
	QueryTimeoutQueryParameter *int64

	/* ReferralEnabled.

	   Filter by referral_enabled
	*/
	ReferralEnabledQueryParameter *bool

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* Schema.

	   Filter by schema
	*/
	SchemaQueryParameter *string

	/* Servers.

	   Filter by servers
	*/
	ServersQueryParameter *string

	/* SessionSecurity.

	   Filter by session_security
	*/
	SessionSecurityQueryParameter *string

	/* StatusCode.

	   Filter by status.code
	*/
	StatusCodeQueryParameter *int64

	/* StatusDnMessage.

	   Filter by status.dn_message
	*/
	StatusDnMessageQueryParameter *string

	/* StatusMessage.

	   Filter by status.message
	*/
	StatusMessageQueryParameter *string

	/* StatusState.

	   Filter by status.state
	*/
	StatusStateQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UseStartTLS.

	   Filter by use_start_tls
	*/
	UseStartTLSQueryParameter *bool

	/* UserDn.

	   Filter by user_dn
	*/
	UserDnQueryParameter *string

	/* UserScope.

	   Filter by user_scope
	*/
	UserScopeQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the ldap collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LdapCollectionGetParams) WithDefaults() *LdapCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the ldap collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LdapCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := LdapCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the ldap collection get params
func (o *LdapCollectionGetParams) WithTimeout(timeout time.Duration) *LdapCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ldap collection get params
func (o *LdapCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ldap collection get params
func (o *LdapCollectionGetParams) WithContext(ctx context.Context) *LdapCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ldap collection get params
func (o *LdapCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ldap collection get params
func (o *LdapCollectionGetParams) WithHTTPClient(client *http.Client) *LdapCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ldap collection get params
func (o *LdapCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAdDomainQueryParameter adds the adDomain to the ldap collection get params
func (o *LdapCollectionGetParams) WithAdDomainQueryParameter(adDomain *string) *LdapCollectionGetParams {
	o.SetAdDomainQueryParameter(adDomain)
	return o
}

// SetAdDomainQueryParameter adds the adDomain to the ldap collection get params
func (o *LdapCollectionGetParams) SetAdDomainQueryParameter(adDomain *string) {
	o.AdDomainQueryParameter = adDomain
}

// WithBaseDnQueryParameter adds the baseDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithBaseDnQueryParameter(baseDn *string) *LdapCollectionGetParams {
	o.SetBaseDnQueryParameter(baseDn)
	return o
}

// SetBaseDnQueryParameter adds the baseDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetBaseDnQueryParameter(baseDn *string) {
	o.BaseDnQueryParameter = baseDn
}

// WithBaseScopeQueryParameter adds the baseScope to the ldap collection get params
func (o *LdapCollectionGetParams) WithBaseScopeQueryParameter(baseScope *string) *LdapCollectionGetParams {
	o.SetBaseScopeQueryParameter(baseScope)
	return o
}

// SetBaseScopeQueryParameter adds the baseScope to the ldap collection get params
func (o *LdapCollectionGetParams) SetBaseScopeQueryParameter(baseScope *string) {
	o.BaseScopeQueryParameter = baseScope
}

// WithBindAsCifsServerQueryParameter adds the bindAsCifsServer to the ldap collection get params
func (o *LdapCollectionGetParams) WithBindAsCifsServerQueryParameter(bindAsCifsServer *bool) *LdapCollectionGetParams {
	o.SetBindAsCifsServerQueryParameter(bindAsCifsServer)
	return o
}

// SetBindAsCifsServerQueryParameter adds the bindAsCifsServer to the ldap collection get params
func (o *LdapCollectionGetParams) SetBindAsCifsServerQueryParameter(bindAsCifsServer *bool) {
	o.BindAsCifsServerQueryParameter = bindAsCifsServer
}

// WithBindDnQueryParameter adds the bindDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithBindDnQueryParameter(bindDn *string) *LdapCollectionGetParams {
	o.SetBindDnQueryParameter(bindDn)
	return o
}

// SetBindDnQueryParameter adds the bindDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetBindDnQueryParameter(bindDn *string) {
	o.BindDnQueryParameter = bindDn
}

// WithFieldsQueryParameter adds the fields to the ldap collection get params
func (o *LdapCollectionGetParams) WithFieldsQueryParameter(fields []string) *LdapCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the ldap collection get params
func (o *LdapCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithGroupDnQueryParameter adds the groupDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithGroupDnQueryParameter(groupDn *string) *LdapCollectionGetParams {
	o.SetGroupDnQueryParameter(groupDn)
	return o
}

// SetGroupDnQueryParameter adds the groupDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetGroupDnQueryParameter(groupDn *string) {
	o.GroupDnQueryParameter = groupDn
}

// WithGroupMembershIPFilterQueryParameter adds the groupMembershipFilter to the ldap collection get params
func (o *LdapCollectionGetParams) WithGroupMembershIPFilterQueryParameter(groupMembershipFilter *string) *LdapCollectionGetParams {
	o.SetGroupMembershIPFilterQueryParameter(groupMembershipFilter)
	return o
}

// SetGroupMembershIPFilterQueryParameter adds the groupMembershipFilter to the ldap collection get params
func (o *LdapCollectionGetParams) SetGroupMembershIPFilterQueryParameter(groupMembershipFilter *string) {
	o.GroupMembershIPFilterQueryParameter = groupMembershipFilter
}

// WithGroupScopeQueryParameter adds the groupScope to the ldap collection get params
func (o *LdapCollectionGetParams) WithGroupScopeQueryParameter(groupScope *string) *LdapCollectionGetParams {
	o.SetGroupScopeQueryParameter(groupScope)
	return o
}

// SetGroupScopeQueryParameter adds the groupScope to the ldap collection get params
func (o *LdapCollectionGetParams) SetGroupScopeQueryParameter(groupScope *string) {
	o.GroupScopeQueryParameter = groupScope
}

// WithIsNetgroupByhostEnabledQueryParameter adds the isNetgroupByhostEnabled to the ldap collection get params
func (o *LdapCollectionGetParams) WithIsNetgroupByhostEnabledQueryParameter(isNetgroupByhostEnabled *bool) *LdapCollectionGetParams {
	o.SetIsNetgroupByhostEnabledQueryParameter(isNetgroupByhostEnabled)
	return o
}

// SetIsNetgroupByhostEnabledQueryParameter adds the isNetgroupByhostEnabled to the ldap collection get params
func (o *LdapCollectionGetParams) SetIsNetgroupByhostEnabledQueryParameter(isNetgroupByhostEnabled *bool) {
	o.IsNetgroupByhostEnabledQueryParameter = isNetgroupByhostEnabled
}

// WithIsOwnerQueryParameter adds the isOwner to the ldap collection get params
func (o *LdapCollectionGetParams) WithIsOwnerQueryParameter(isOwner *bool) *LdapCollectionGetParams {
	o.SetIsOwnerQueryParameter(isOwner)
	return o
}

// SetIsOwnerQueryParameter adds the isOwner to the ldap collection get params
func (o *LdapCollectionGetParams) SetIsOwnerQueryParameter(isOwner *bool) {
	o.IsOwnerQueryParameter = isOwner
}

// WithLdapsEnabledQueryParameter adds the ldapsEnabled to the ldap collection get params
func (o *LdapCollectionGetParams) WithLdapsEnabledQueryParameter(ldapsEnabled *bool) *LdapCollectionGetParams {
	o.SetLdapsEnabledQueryParameter(ldapsEnabled)
	return o
}

// SetLdapsEnabledQueryParameter adds the ldapsEnabled to the ldap collection get params
func (o *LdapCollectionGetParams) SetLdapsEnabledQueryParameter(ldapsEnabled *bool) {
	o.LdapsEnabledQueryParameter = ldapsEnabled
}

// WithMaxRecordsQueryParameter adds the maxRecords to the ldap collection get params
func (o *LdapCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *LdapCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the ldap collection get params
func (o *LdapCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMinBindLevelQueryParameter adds the minBindLevel to the ldap collection get params
func (o *LdapCollectionGetParams) WithMinBindLevelQueryParameter(minBindLevel *string) *LdapCollectionGetParams {
	o.SetMinBindLevelQueryParameter(minBindLevel)
	return o
}

// SetMinBindLevelQueryParameter adds the minBindLevel to the ldap collection get params
func (o *LdapCollectionGetParams) SetMinBindLevelQueryParameter(minBindLevel *string) {
	o.MinBindLevelQueryParameter = minBindLevel
}

// WithNetgroupByhostDnQueryParameter adds the netgroupByhostDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithNetgroupByhostDnQueryParameter(netgroupByhostDn *string) *LdapCollectionGetParams {
	o.SetNetgroupByhostDnQueryParameter(netgroupByhostDn)
	return o
}

// SetNetgroupByhostDnQueryParameter adds the netgroupByhostDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetNetgroupByhostDnQueryParameter(netgroupByhostDn *string) {
	o.NetgroupByhostDnQueryParameter = netgroupByhostDn
}

// WithNetgroupByhostScopeQueryParameter adds the netgroupByhostScope to the ldap collection get params
func (o *LdapCollectionGetParams) WithNetgroupByhostScopeQueryParameter(netgroupByhostScope *string) *LdapCollectionGetParams {
	o.SetNetgroupByhostScopeQueryParameter(netgroupByhostScope)
	return o
}

// SetNetgroupByhostScopeQueryParameter adds the netgroupByhostScope to the ldap collection get params
func (o *LdapCollectionGetParams) SetNetgroupByhostScopeQueryParameter(netgroupByhostScope *string) {
	o.NetgroupByhostScopeQueryParameter = netgroupByhostScope
}

// WithNetgroupDnQueryParameter adds the netgroupDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithNetgroupDnQueryParameter(netgroupDn *string) *LdapCollectionGetParams {
	o.SetNetgroupDnQueryParameter(netgroupDn)
	return o
}

// SetNetgroupDnQueryParameter adds the netgroupDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetNetgroupDnQueryParameter(netgroupDn *string) {
	o.NetgroupDnQueryParameter = netgroupDn
}

// WithNetgroupScopeQueryParameter adds the netgroupScope to the ldap collection get params
func (o *LdapCollectionGetParams) WithNetgroupScopeQueryParameter(netgroupScope *string) *LdapCollectionGetParams {
	o.SetNetgroupScopeQueryParameter(netgroupScope)
	return o
}

// SetNetgroupScopeQueryParameter adds the netgroupScope to the ldap collection get params
func (o *LdapCollectionGetParams) SetNetgroupScopeQueryParameter(netgroupScope *string) {
	o.NetgroupScopeQueryParameter = netgroupScope
}

// WithOrderByQueryParameter adds the orderBy to the ldap collection get params
func (o *LdapCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *LdapCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the ldap collection get params
func (o *LdapCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPortQueryParameter adds the port to the ldap collection get params
func (o *LdapCollectionGetParams) WithPortQueryParameter(port *int64) *LdapCollectionGetParams {
	o.SetPortQueryParameter(port)
	return o
}

// SetPortQueryParameter adds the port to the ldap collection get params
func (o *LdapCollectionGetParams) SetPortQueryParameter(port *int64) {
	o.PortQueryParameter = port
}

// WithPreferredAdServersQueryParameter adds the preferredAdServers to the ldap collection get params
func (o *LdapCollectionGetParams) WithPreferredAdServersQueryParameter(preferredAdServers *string) *LdapCollectionGetParams {
	o.SetPreferredAdServersQueryParameter(preferredAdServers)
	return o
}

// SetPreferredAdServersQueryParameter adds the preferredAdServers to the ldap collection get params
func (o *LdapCollectionGetParams) SetPreferredAdServersQueryParameter(preferredAdServers *string) {
	o.PreferredAdServersQueryParameter = preferredAdServers
}

// WithQueryTimeoutQueryParameter adds the queryTimeout to the ldap collection get params
func (o *LdapCollectionGetParams) WithQueryTimeoutQueryParameter(queryTimeout *int64) *LdapCollectionGetParams {
	o.SetQueryTimeoutQueryParameter(queryTimeout)
	return o
}

// SetQueryTimeoutQueryParameter adds the queryTimeout to the ldap collection get params
func (o *LdapCollectionGetParams) SetQueryTimeoutQueryParameter(queryTimeout *int64) {
	o.QueryTimeoutQueryParameter = queryTimeout
}

// WithReferralEnabledQueryParameter adds the referralEnabled to the ldap collection get params
func (o *LdapCollectionGetParams) WithReferralEnabledQueryParameter(referralEnabled *bool) *LdapCollectionGetParams {
	o.SetReferralEnabledQueryParameter(referralEnabled)
	return o
}

// SetReferralEnabledQueryParameter adds the referralEnabled to the ldap collection get params
func (o *LdapCollectionGetParams) SetReferralEnabledQueryParameter(referralEnabled *bool) {
	o.ReferralEnabledQueryParameter = referralEnabled
}

// WithReturnRecordsQueryParameter adds the returnRecords to the ldap collection get params
func (o *LdapCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *LdapCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the ldap collection get params
func (o *LdapCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the ldap collection get params
func (o *LdapCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *LdapCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the ldap collection get params
func (o *LdapCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSchemaQueryParameter adds the schema to the ldap collection get params
func (o *LdapCollectionGetParams) WithSchemaQueryParameter(schema *string) *LdapCollectionGetParams {
	o.SetSchemaQueryParameter(schema)
	return o
}

// SetSchemaQueryParameter adds the schema to the ldap collection get params
func (o *LdapCollectionGetParams) SetSchemaQueryParameter(schema *string) {
	o.SchemaQueryParameter = schema
}

// WithServersQueryParameter adds the servers to the ldap collection get params
func (o *LdapCollectionGetParams) WithServersQueryParameter(servers *string) *LdapCollectionGetParams {
	o.SetServersQueryParameter(servers)
	return o
}

// SetServersQueryParameter adds the servers to the ldap collection get params
func (o *LdapCollectionGetParams) SetServersQueryParameter(servers *string) {
	o.ServersQueryParameter = servers
}

// WithSessionSecurityQueryParameter adds the sessionSecurity to the ldap collection get params
func (o *LdapCollectionGetParams) WithSessionSecurityQueryParameter(sessionSecurity *string) *LdapCollectionGetParams {
	o.SetSessionSecurityQueryParameter(sessionSecurity)
	return o
}

// SetSessionSecurityQueryParameter adds the sessionSecurity to the ldap collection get params
func (o *LdapCollectionGetParams) SetSessionSecurityQueryParameter(sessionSecurity *string) {
	o.SessionSecurityQueryParameter = sessionSecurity
}

// WithStatusCodeQueryParameter adds the statusCode to the ldap collection get params
func (o *LdapCollectionGetParams) WithStatusCodeQueryParameter(statusCode *int64) *LdapCollectionGetParams {
	o.SetStatusCodeQueryParameter(statusCode)
	return o
}

// SetStatusCodeQueryParameter adds the statusCode to the ldap collection get params
func (o *LdapCollectionGetParams) SetStatusCodeQueryParameter(statusCode *int64) {
	o.StatusCodeQueryParameter = statusCode
}

// WithStatusDnMessageQueryParameter adds the statusDnMessage to the ldap collection get params
func (o *LdapCollectionGetParams) WithStatusDnMessageQueryParameter(statusDnMessage *string) *LdapCollectionGetParams {
	o.SetStatusDnMessageQueryParameter(statusDnMessage)
	return o
}

// SetStatusDnMessageQueryParameter adds the statusDnMessage to the ldap collection get params
func (o *LdapCollectionGetParams) SetStatusDnMessageQueryParameter(statusDnMessage *string) {
	o.StatusDnMessageQueryParameter = statusDnMessage
}

// WithStatusMessageQueryParameter adds the statusMessage to the ldap collection get params
func (o *LdapCollectionGetParams) WithStatusMessageQueryParameter(statusMessage *string) *LdapCollectionGetParams {
	o.SetStatusMessageQueryParameter(statusMessage)
	return o
}

// SetStatusMessageQueryParameter adds the statusMessage to the ldap collection get params
func (o *LdapCollectionGetParams) SetStatusMessageQueryParameter(statusMessage *string) {
	o.StatusMessageQueryParameter = statusMessage
}

// WithStatusStateQueryParameter adds the statusState to the ldap collection get params
func (o *LdapCollectionGetParams) WithStatusStateQueryParameter(statusState *string) *LdapCollectionGetParams {
	o.SetStatusStateQueryParameter(statusState)
	return o
}

// SetStatusStateQueryParameter adds the statusState to the ldap collection get params
func (o *LdapCollectionGetParams) SetStatusStateQueryParameter(statusState *string) {
	o.StatusStateQueryParameter = statusState
}

// WithSVMNameQueryParameter adds the svmName to the ldap collection get params
func (o *LdapCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *LdapCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the ldap collection get params
func (o *LdapCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the ldap collection get params
func (o *LdapCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *LdapCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the ldap collection get params
func (o *LdapCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUseStartTLSQueryParameter adds the useStartTLS to the ldap collection get params
func (o *LdapCollectionGetParams) WithUseStartTLSQueryParameter(useStartTLS *bool) *LdapCollectionGetParams {
	o.SetUseStartTLSQueryParameter(useStartTLS)
	return o
}

// SetUseStartTLSQueryParameter adds the useStartTls to the ldap collection get params
func (o *LdapCollectionGetParams) SetUseStartTLSQueryParameter(useStartTLS *bool) {
	o.UseStartTLSQueryParameter = useStartTLS
}

// WithUserDnQueryParameter adds the userDn to the ldap collection get params
func (o *LdapCollectionGetParams) WithUserDnQueryParameter(userDn *string) *LdapCollectionGetParams {
	o.SetUserDnQueryParameter(userDn)
	return o
}

// SetUserDnQueryParameter adds the userDn to the ldap collection get params
func (o *LdapCollectionGetParams) SetUserDnQueryParameter(userDn *string) {
	o.UserDnQueryParameter = userDn
}

// WithUserScopeQueryParameter adds the userScope to the ldap collection get params
func (o *LdapCollectionGetParams) WithUserScopeQueryParameter(userScope *string) *LdapCollectionGetParams {
	o.SetUserScopeQueryParameter(userScope)
	return o
}

// SetUserScopeQueryParameter adds the userScope to the ldap collection get params
func (o *LdapCollectionGetParams) SetUserScopeQueryParameter(userScope *string) {
	o.UserScopeQueryParameter = userScope
}

// WriteToRequest writes these params to a swagger request
func (o *LdapCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AdDomainQueryParameter != nil {

		// query param ad_domain
		var qrAdDomain string

		if o.AdDomainQueryParameter != nil {
			qrAdDomain = *o.AdDomainQueryParameter
		}
		qAdDomain := qrAdDomain
		if qAdDomain != "" {

			if err := r.SetQueryParam("ad_domain", qAdDomain); err != nil {
				return err
			}
		}
	}

	if o.BaseDnQueryParameter != nil {

		// query param base_dn
		var qrBaseDn string

		if o.BaseDnQueryParameter != nil {
			qrBaseDn = *o.BaseDnQueryParameter
		}
		qBaseDn := qrBaseDn
		if qBaseDn != "" {

			if err := r.SetQueryParam("base_dn", qBaseDn); err != nil {
				return err
			}
		}
	}

	if o.BaseScopeQueryParameter != nil {

		// query param base_scope
		var qrBaseScope string

		if o.BaseScopeQueryParameter != nil {
			qrBaseScope = *o.BaseScopeQueryParameter
		}
		qBaseScope := qrBaseScope
		if qBaseScope != "" {

			if err := r.SetQueryParam("base_scope", qBaseScope); err != nil {
				return err
			}
		}
	}

	if o.BindAsCifsServerQueryParameter != nil {

		// query param bind_as_cifs_server
		var qrBindAsCifsServer bool

		if o.BindAsCifsServerQueryParameter != nil {
			qrBindAsCifsServer = *o.BindAsCifsServerQueryParameter
		}
		qBindAsCifsServer := swag.FormatBool(qrBindAsCifsServer)
		if qBindAsCifsServer != "" {

			if err := r.SetQueryParam("bind_as_cifs_server", qBindAsCifsServer); err != nil {
				return err
			}
		}
	}

	if o.BindDnQueryParameter != nil {

		// query param bind_dn
		var qrBindDn string

		if o.BindDnQueryParameter != nil {
			qrBindDn = *o.BindDnQueryParameter
		}
		qBindDn := qrBindDn
		if qBindDn != "" {

			if err := r.SetQueryParam("bind_dn", qBindDn); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.GroupDnQueryParameter != nil {

		// query param group_dn
		var qrGroupDn string

		if o.GroupDnQueryParameter != nil {
			qrGroupDn = *o.GroupDnQueryParameter
		}
		qGroupDn := qrGroupDn
		if qGroupDn != "" {

			if err := r.SetQueryParam("group_dn", qGroupDn); err != nil {
				return err
			}
		}
	}

	if o.GroupMembershIPFilterQueryParameter != nil {

		// query param group_membership_filter
		var qrGroupMembershipFilter string

		if o.GroupMembershIPFilterQueryParameter != nil {
			qrGroupMembershipFilter = *o.GroupMembershIPFilterQueryParameter
		}
		qGroupMembershipFilter := qrGroupMembershipFilter
		if qGroupMembershipFilter != "" {

			if err := r.SetQueryParam("group_membership_filter", qGroupMembershipFilter); err != nil {
				return err
			}
		}
	}

	if o.GroupScopeQueryParameter != nil {

		// query param group_scope
		var qrGroupScope string

		if o.GroupScopeQueryParameter != nil {
			qrGroupScope = *o.GroupScopeQueryParameter
		}
		qGroupScope := qrGroupScope
		if qGroupScope != "" {

			if err := r.SetQueryParam("group_scope", qGroupScope); err != nil {
				return err
			}
		}
	}

	if o.IsNetgroupByhostEnabledQueryParameter != nil {

		// query param is_netgroup_byhost_enabled
		var qrIsNetgroupByhostEnabled bool

		if o.IsNetgroupByhostEnabledQueryParameter != nil {
			qrIsNetgroupByhostEnabled = *o.IsNetgroupByhostEnabledQueryParameter
		}
		qIsNetgroupByhostEnabled := swag.FormatBool(qrIsNetgroupByhostEnabled)
		if qIsNetgroupByhostEnabled != "" {

			if err := r.SetQueryParam("is_netgroup_byhost_enabled", qIsNetgroupByhostEnabled); err != nil {
				return err
			}
		}
	}

	if o.IsOwnerQueryParameter != nil {

		// query param is_owner
		var qrIsOwner bool

		if o.IsOwnerQueryParameter != nil {
			qrIsOwner = *o.IsOwnerQueryParameter
		}
		qIsOwner := swag.FormatBool(qrIsOwner)
		if qIsOwner != "" {

			if err := r.SetQueryParam("is_owner", qIsOwner); err != nil {
				return err
			}
		}
	}

	if o.LdapsEnabledQueryParameter != nil {

		// query param ldaps_enabled
		var qrLdapsEnabled bool

		if o.LdapsEnabledQueryParameter != nil {
			qrLdapsEnabled = *o.LdapsEnabledQueryParameter
		}
		qLdapsEnabled := swag.FormatBool(qrLdapsEnabled)
		if qLdapsEnabled != "" {

			if err := r.SetQueryParam("ldaps_enabled", qLdapsEnabled); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MinBindLevelQueryParameter != nil {

		// query param min_bind_level
		var qrMinBindLevel string

		if o.MinBindLevelQueryParameter != nil {
			qrMinBindLevel = *o.MinBindLevelQueryParameter
		}
		qMinBindLevel := qrMinBindLevel
		if qMinBindLevel != "" {

			if err := r.SetQueryParam("min_bind_level", qMinBindLevel); err != nil {
				return err
			}
		}
	}

	if o.NetgroupByhostDnQueryParameter != nil {

		// query param netgroup_byhost_dn
		var qrNetgroupByhostDn string

		if o.NetgroupByhostDnQueryParameter != nil {
			qrNetgroupByhostDn = *o.NetgroupByhostDnQueryParameter
		}
		qNetgroupByhostDn := qrNetgroupByhostDn
		if qNetgroupByhostDn != "" {

			if err := r.SetQueryParam("netgroup_byhost_dn", qNetgroupByhostDn); err != nil {
				return err
			}
		}
	}

	if o.NetgroupByhostScopeQueryParameter != nil {

		// query param netgroup_byhost_scope
		var qrNetgroupByhostScope string

		if o.NetgroupByhostScopeQueryParameter != nil {
			qrNetgroupByhostScope = *o.NetgroupByhostScopeQueryParameter
		}
		qNetgroupByhostScope := qrNetgroupByhostScope
		if qNetgroupByhostScope != "" {

			if err := r.SetQueryParam("netgroup_byhost_scope", qNetgroupByhostScope); err != nil {
				return err
			}
		}
	}

	if o.NetgroupDnQueryParameter != nil {

		// query param netgroup_dn
		var qrNetgroupDn string

		if o.NetgroupDnQueryParameter != nil {
			qrNetgroupDn = *o.NetgroupDnQueryParameter
		}
		qNetgroupDn := qrNetgroupDn
		if qNetgroupDn != "" {

			if err := r.SetQueryParam("netgroup_dn", qNetgroupDn); err != nil {
				return err
			}
		}
	}

	if o.NetgroupScopeQueryParameter != nil {

		// query param netgroup_scope
		var qrNetgroupScope string

		if o.NetgroupScopeQueryParameter != nil {
			qrNetgroupScope = *o.NetgroupScopeQueryParameter
		}
		qNetgroupScope := qrNetgroupScope
		if qNetgroupScope != "" {

			if err := r.SetQueryParam("netgroup_scope", qNetgroupScope); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PortQueryParameter != nil {

		// query param port
		var qrPort int64

		if o.PortQueryParameter != nil {
			qrPort = *o.PortQueryParameter
		}
		qPort := swag.FormatInt64(qrPort)
		if qPort != "" {

			if err := r.SetQueryParam("port", qPort); err != nil {
				return err
			}
		}
	}

	if o.PreferredAdServersQueryParameter != nil {

		// query param preferred_ad_servers
		var qrPreferredAdServers string

		if o.PreferredAdServersQueryParameter != nil {
			qrPreferredAdServers = *o.PreferredAdServersQueryParameter
		}
		qPreferredAdServers := qrPreferredAdServers
		if qPreferredAdServers != "" {

			if err := r.SetQueryParam("preferred_ad_servers", qPreferredAdServers); err != nil {
				return err
			}
		}
	}

	if o.QueryTimeoutQueryParameter != nil {

		// query param query_timeout
		var qrQueryTimeout int64

		if o.QueryTimeoutQueryParameter != nil {
			qrQueryTimeout = *o.QueryTimeoutQueryParameter
		}
		qQueryTimeout := swag.FormatInt64(qrQueryTimeout)
		if qQueryTimeout != "" {

			if err := r.SetQueryParam("query_timeout", qQueryTimeout); err != nil {
				return err
			}
		}
	}

	if o.ReferralEnabledQueryParameter != nil {

		// query param referral_enabled
		var qrReferralEnabled bool

		if o.ReferralEnabledQueryParameter != nil {
			qrReferralEnabled = *o.ReferralEnabledQueryParameter
		}
		qReferralEnabled := swag.FormatBool(qrReferralEnabled)
		if qReferralEnabled != "" {

			if err := r.SetQueryParam("referral_enabled", qReferralEnabled); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SchemaQueryParameter != nil {

		// query param schema
		var qrSchema string

		if o.SchemaQueryParameter != nil {
			qrSchema = *o.SchemaQueryParameter
		}
		qSchema := qrSchema
		if qSchema != "" {

			if err := r.SetQueryParam("schema", qSchema); err != nil {
				return err
			}
		}
	}

	if o.ServersQueryParameter != nil {

		// query param servers
		var qrServers string

		if o.ServersQueryParameter != nil {
			qrServers = *o.ServersQueryParameter
		}
		qServers := qrServers
		if qServers != "" {

			if err := r.SetQueryParam("servers", qServers); err != nil {
				return err
			}
		}
	}

	if o.SessionSecurityQueryParameter != nil {

		// query param session_security
		var qrSessionSecurity string

		if o.SessionSecurityQueryParameter != nil {
			qrSessionSecurity = *o.SessionSecurityQueryParameter
		}
		qSessionSecurity := qrSessionSecurity
		if qSessionSecurity != "" {

			if err := r.SetQueryParam("session_security", qSessionSecurity); err != nil {
				return err
			}
		}
	}

	if o.StatusCodeQueryParameter != nil {

		// query param status.code
		var qrStatusCode int64

		if o.StatusCodeQueryParameter != nil {
			qrStatusCode = *o.StatusCodeQueryParameter
		}
		qStatusCode := swag.FormatInt64(qrStatusCode)
		if qStatusCode != "" {

			if err := r.SetQueryParam("status.code", qStatusCode); err != nil {
				return err
			}
		}
	}

	if o.StatusDnMessageQueryParameter != nil {

		// query param status.dn_message
		var qrStatusDnMessage string

		if o.StatusDnMessageQueryParameter != nil {
			qrStatusDnMessage = *o.StatusDnMessageQueryParameter
		}
		qStatusDnMessage := qrStatusDnMessage
		if qStatusDnMessage != "" {

			if err := r.SetQueryParam("status.dn_message", qStatusDnMessage); err != nil {
				return err
			}
		}
	}

	if o.StatusMessageQueryParameter != nil {

		// query param status.message
		var qrStatusMessage string

		if o.StatusMessageQueryParameter != nil {
			qrStatusMessage = *o.StatusMessageQueryParameter
		}
		qStatusMessage := qrStatusMessage
		if qStatusMessage != "" {

			if err := r.SetQueryParam("status.message", qStatusMessage); err != nil {
				return err
			}
		}
	}

	if o.StatusStateQueryParameter != nil {

		// query param status.state
		var qrStatusState string

		if o.StatusStateQueryParameter != nil {
			qrStatusState = *o.StatusStateQueryParameter
		}
		qStatusState := qrStatusState
		if qStatusState != "" {

			if err := r.SetQueryParam("status.state", qStatusState); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UseStartTLSQueryParameter != nil {

		// query param use_start_tls
		var qrUseStartTLS bool

		if o.UseStartTLSQueryParameter != nil {
			qrUseStartTLS = *o.UseStartTLSQueryParameter
		}
		qUseStartTLS := swag.FormatBool(qrUseStartTLS)
		if qUseStartTLS != "" {

			if err := r.SetQueryParam("use_start_tls", qUseStartTLS); err != nil {
				return err
			}
		}
	}

	if o.UserDnQueryParameter != nil {

		// query param user_dn
		var qrUserDn string

		if o.UserDnQueryParameter != nil {
			qrUserDn = *o.UserDnQueryParameter
		}
		qUserDn := qrUserDn
		if qUserDn != "" {

			if err := r.SetQueryParam("user_dn", qUserDn); err != nil {
				return err
			}
		}
	}

	if o.UserScopeQueryParameter != nil {

		// query param user_scope
		var qrUserScope string

		if o.UserScopeQueryParameter != nil {
			qrUserScope = *o.UserScopeQueryParameter
		}
		qUserScope := qrUserScope
		if qUserScope != "" {

			if err := r.SetQueryParam("user_scope", qUserScope); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamLdapCollectionGet binds the parameter fields
func (o *LdapCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamLdapCollectionGet binds the parameter order_by
func (o *LdapCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
