// Code generated by go-swagger; DO NOT EDIT.

package svm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// TopMetricsSvmClientCollectionGetReader is a Reader for the TopMetricsSvmClientCollectionGet structure.
type TopMetricsSvmClientCollectionGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TopMetricsSvmClientCollectionGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTopMetricsSvmClientCollectionGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewTopMetricsSvmClientCollectionGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTopMetricsSvmClientCollectionGetOK creates a TopMetricsSvmClientCollectionGetOK with default headers values
func NewTopMetricsSvmClientCollectionGetOK() *TopMetricsSvmClientCollectionGetOK {
	return &TopMetricsSvmClientCollectionGetOK{}
}

/* TopMetricsSvmClientCollectionGetOK describes a response with status code 200, with default header values.

OK
*/
type TopMetricsSvmClientCollectionGetOK struct {
	Payload *models.TopMetricsSvmClientResponse
}

func (o *TopMetricsSvmClientCollectionGetOK) Error() string {
	return fmt.Sprintf("[GET /svm/svms/{svm.uuid}/top-metrics/clients][%d] topMetricsSvmClientCollectionGetOK  %+v", 200, o.Payload)
}
func (o *TopMetricsSvmClientCollectionGetOK) GetPayload() *models.TopMetricsSvmClientResponse {
	return o.Payload
}

func (o *TopMetricsSvmClientCollectionGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TopMetricsSvmClientResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTopMetricsSvmClientCollectionGetDefault creates a TopMetricsSvmClientCollectionGetDefault with default headers values
func NewTopMetricsSvmClientCollectionGetDefault(code int) *TopMetricsSvmClientCollectionGetDefault {
	return &TopMetricsSvmClientCollectionGetDefault{
		_statusCode: code,
	}
}

/* TopMetricsSvmClientCollectionGetDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 124519405 | The activity tracking report for SVM svm.name returned zero records. Check whether the volumes belonging to the SVM have read/write traffic. Refer to the REST API documentation for more information on why there might be no records. |
| 124519406 | Failed to get the activity tracking report for SVM svm.name. Reason:<Reason for failure>. |
| 124519407 | SVM wildcard queries are not supported for activity tracking reports. |
| 124519408 | Activity tracking is not supported on SVM svm.name, because it is configured as a destination for SVM DR. |
| 124519409 | Activity tracking is not supported on SVM svm.name, because it is configured as a destination of a MetroCluster SVM relationship and the SVM admin state is stopped. |

*/
type TopMetricsSvmClientCollectionGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the top metrics svm client collection get default response
func (o *TopMetricsSvmClientCollectionGetDefault) Code() int {
	return o._statusCode
}

func (o *TopMetricsSvmClientCollectionGetDefault) Error() string {
	return fmt.Sprintf("[GET /svm/svms/{svm.uuid}/top-metrics/clients][%d] top_metrics_svm_client_collection_get default  %+v", o._statusCode, o.Payload)
}
func (o *TopMetricsSvmClientCollectionGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *TopMetricsSvmClientCollectionGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
