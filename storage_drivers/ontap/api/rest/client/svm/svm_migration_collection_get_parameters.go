// Code generated by go-swagger; DO NOT EDIT.

package svm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSvmMigrationCollectionGetParams creates a new SvmMigrationCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSvmMigrationCollectionGetParams() *SvmMigrationCollectionGetParams {
	return &SvmMigrationCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSvmMigrationCollectionGetParamsWithTimeout creates a new SvmMigrationCollectionGetParams object
// with the ability to set a timeout on a request.
func NewSvmMigrationCollectionGetParamsWithTimeout(timeout time.Duration) *SvmMigrationCollectionGetParams {
	return &SvmMigrationCollectionGetParams{
		timeout: timeout,
	}
}

// NewSvmMigrationCollectionGetParamsWithContext creates a new SvmMigrationCollectionGetParams object
// with the ability to set a context for a request.
func NewSvmMigrationCollectionGetParamsWithContext(ctx context.Context) *SvmMigrationCollectionGetParams {
	return &SvmMigrationCollectionGetParams{
		Context: ctx,
	}
}

// NewSvmMigrationCollectionGetParamsWithHTTPClient creates a new SvmMigrationCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewSvmMigrationCollectionGetParamsWithHTTPClient(client *http.Client) *SvmMigrationCollectionGetParams {
	return &SvmMigrationCollectionGetParams{
		HTTPClient: client,
	}
}

/* SvmMigrationCollectionGetParams contains all the parameters to send to the API endpoint
   for the svm migration collection get operation.

   Typically these are written to a http.Request.
*/
type SvmMigrationCollectionGetParams struct {

	/* AutoCutover.

	   Filter by auto_cutover
	*/
	AutoCutoverQueryParameter *bool

	/* AutoSourceCleanup.

	   Filter by auto_source_cleanup
	*/
	AutoSourceCleanupQueryParameter *bool

	/* CurrentOperation.

	   Filter by current_operation
	*/
	CurrentOperationQueryParameter *string

	/* DestinationIpspaceName.

	   Filter by destination.ipspace.name
	*/
	DestinationIPspaceNameQueryParameter *string

	/* DestinationIpspaceUUID.

	   Filter by destination.ipspace.uuid
	*/
	DestinationIPspaceUUIDQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* LastFailedState.

	   Filter by last_failed_state
	*/
	LastFailedStateQueryParameter *string

	/* LastOperation.

	   Filter by last_operation
	*/
	LastOperationQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* MessagesCode.

	   Filter by messages.code
	*/
	MessagesCodeQueryParameter *int64

	/* MessagesMessage.

	   Filter by messages.message
	*/
	MessagesMessageQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* PointOfNoReturn.

	   Filter by point_of_no_return
	*/
	PointOfNoReturnQueryParameter *bool

	/* RestartCount.

	   Filter by restart_count
	*/
	RestartCountQueryParameter *int64

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SourceClusterName.

	   Filter by source.cluster.name
	*/
	SourceClusterNameQueryParameter *string

	/* SourceClusterUUID.

	   Filter by source.cluster.uuid
	*/
	SourceClusterUUIDQueryParameter *string

	/* SourceSvmName.

	   Filter by source.svm.name
	*/
	SourceSVMNameQueryParameter *string

	/* SourceSvmUUID.

	   Filter by source.svm.uuid
	*/
	SourceSVMUUIDQueryParameter *string

	/* State.

	   Filter by state
	*/
	StateQueryParameter *string

	/* TimeMetricsCutoverCompleteTime.

	   Filter by time_metrics.cutover_complete_time
	*/
	TimeMetricsCutoverCompleteTimeQueryParameter *string

	/* TimeMetricsCutoverStartTime.

	   Filter by time_metrics.cutover_start_time
	*/
	TimeMetricsCutoverStartTimeQueryParameter *string

	/* TimeMetricsCutoverTriggerTime.

	   Filter by time_metrics.cutover_trigger_time
	*/
	TimeMetricsCutoverTriggerTimeQueryParameter *string

	/* TimeMetricsEndTime.

	   Filter by time_metrics.end_time
	*/
	TimeMetricsEndTimeQueryParameter *string

	/* TimeMetricsLastPauseTime.

	   Filter by time_metrics.last_pause_time
	*/
	TimeMetricsLastPauseTimeQueryParameter *string

	/* TimeMetricsLastResumeTime.

	   Filter by time_metrics.last_resume_time
	*/
	TimeMetricsLastResumeTimeQueryParameter *string

	/* TimeMetricsStartTime.

	   Filter by time_metrics.start_time
	*/
	TimeMetricsStartTimeQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the svm migration collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SvmMigrationCollectionGetParams) WithDefaults() *SvmMigrationCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the svm migration collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SvmMigrationCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := SvmMigrationCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeout(timeout time.Duration) *SvmMigrationCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithContext(ctx context.Context) *SvmMigrationCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithHTTPClient(client *http.Client) *SvmMigrationCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAutoCutoverQueryParameter adds the autoCutover to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithAutoCutoverQueryParameter(autoCutover *bool) *SvmMigrationCollectionGetParams {
	o.SetAutoCutoverQueryParameter(autoCutover)
	return o
}

// SetAutoCutoverQueryParameter adds the autoCutover to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetAutoCutoverQueryParameter(autoCutover *bool) {
	o.AutoCutoverQueryParameter = autoCutover
}

// WithAutoSourceCleanupQueryParameter adds the autoSourceCleanup to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithAutoSourceCleanupQueryParameter(autoSourceCleanup *bool) *SvmMigrationCollectionGetParams {
	o.SetAutoSourceCleanupQueryParameter(autoSourceCleanup)
	return o
}

// SetAutoSourceCleanupQueryParameter adds the autoSourceCleanup to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetAutoSourceCleanupQueryParameter(autoSourceCleanup *bool) {
	o.AutoSourceCleanupQueryParameter = autoSourceCleanup
}

// WithCurrentOperationQueryParameter adds the currentOperation to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithCurrentOperationQueryParameter(currentOperation *string) *SvmMigrationCollectionGetParams {
	o.SetCurrentOperationQueryParameter(currentOperation)
	return o
}

// SetCurrentOperationQueryParameter adds the currentOperation to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetCurrentOperationQueryParameter(currentOperation *string) {
	o.CurrentOperationQueryParameter = currentOperation
}

// WithDestinationIPspaceNameQueryParameter adds the destinationIpspaceName to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithDestinationIPspaceNameQueryParameter(destinationIpspaceName *string) *SvmMigrationCollectionGetParams {
	o.SetDestinationIPspaceNameQueryParameter(destinationIpspaceName)
	return o
}

// SetDestinationIPspaceNameQueryParameter adds the destinationIpspaceName to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetDestinationIPspaceNameQueryParameter(destinationIpspaceName *string) {
	o.DestinationIPspaceNameQueryParameter = destinationIpspaceName
}

// WithDestinationIPspaceUUIDQueryParameter adds the destinationIpspaceUUID to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithDestinationIPspaceUUIDQueryParameter(destinationIpspaceUUID *string) *SvmMigrationCollectionGetParams {
	o.SetDestinationIPspaceUUIDQueryParameter(destinationIpspaceUUID)
	return o
}

// SetDestinationIPspaceUUIDQueryParameter adds the destinationIpspaceUuid to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetDestinationIPspaceUUIDQueryParameter(destinationIpspaceUUID *string) {
	o.DestinationIPspaceUUIDQueryParameter = destinationIpspaceUUID
}

// WithFieldsQueryParameter adds the fields to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithFieldsQueryParameter(fields []string) *SvmMigrationCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithLastFailedStateQueryParameter adds the lastFailedState to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithLastFailedStateQueryParameter(lastFailedState *string) *SvmMigrationCollectionGetParams {
	o.SetLastFailedStateQueryParameter(lastFailedState)
	return o
}

// SetLastFailedStateQueryParameter adds the lastFailedState to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetLastFailedStateQueryParameter(lastFailedState *string) {
	o.LastFailedStateQueryParameter = lastFailedState
}

// WithLastOperationQueryParameter adds the lastOperation to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithLastOperationQueryParameter(lastOperation *string) *SvmMigrationCollectionGetParams {
	o.SetLastOperationQueryParameter(lastOperation)
	return o
}

// SetLastOperationQueryParameter adds the lastOperation to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetLastOperationQueryParameter(lastOperation *string) {
	o.LastOperationQueryParameter = lastOperation
}

// WithMaxRecordsQueryParameter adds the maxRecords to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *SvmMigrationCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMessagesCodeQueryParameter adds the messagesCode to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithMessagesCodeQueryParameter(messagesCode *int64) *SvmMigrationCollectionGetParams {
	o.SetMessagesCodeQueryParameter(messagesCode)
	return o
}

// SetMessagesCodeQueryParameter adds the messagesCode to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetMessagesCodeQueryParameter(messagesCode *int64) {
	o.MessagesCodeQueryParameter = messagesCode
}

// WithMessagesMessageQueryParameter adds the messagesMessage to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithMessagesMessageQueryParameter(messagesMessage *string) *SvmMigrationCollectionGetParams {
	o.SetMessagesMessageQueryParameter(messagesMessage)
	return o
}

// SetMessagesMessageQueryParameter adds the messagesMessage to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetMessagesMessageQueryParameter(messagesMessage *string) {
	o.MessagesMessageQueryParameter = messagesMessage
}

// WithOrderByQueryParameter adds the orderBy to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *SvmMigrationCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPointOfNoReturnQueryParameter adds the pointOfNoReturn to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithPointOfNoReturnQueryParameter(pointOfNoReturn *bool) *SvmMigrationCollectionGetParams {
	o.SetPointOfNoReturnQueryParameter(pointOfNoReturn)
	return o
}

// SetPointOfNoReturnQueryParameter adds the pointOfNoReturn to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetPointOfNoReturnQueryParameter(pointOfNoReturn *bool) {
	o.PointOfNoReturnQueryParameter = pointOfNoReturn
}

// WithRestartCountQueryParameter adds the restartCount to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithRestartCountQueryParameter(restartCount *int64) *SvmMigrationCollectionGetParams {
	o.SetRestartCountQueryParameter(restartCount)
	return o
}

// SetRestartCountQueryParameter adds the restartCount to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetRestartCountQueryParameter(restartCount *int64) {
	o.RestartCountQueryParameter = restartCount
}

// WithReturnRecordsQueryParameter adds the returnRecords to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *SvmMigrationCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *SvmMigrationCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSourceClusterNameQueryParameter adds the sourceClusterName to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithSourceClusterNameQueryParameter(sourceClusterName *string) *SvmMigrationCollectionGetParams {
	o.SetSourceClusterNameQueryParameter(sourceClusterName)
	return o
}

// SetSourceClusterNameQueryParameter adds the sourceClusterName to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetSourceClusterNameQueryParameter(sourceClusterName *string) {
	o.SourceClusterNameQueryParameter = sourceClusterName
}

// WithSourceClusterUUIDQueryParameter adds the sourceClusterUUID to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithSourceClusterUUIDQueryParameter(sourceClusterUUID *string) *SvmMigrationCollectionGetParams {
	o.SetSourceClusterUUIDQueryParameter(sourceClusterUUID)
	return o
}

// SetSourceClusterUUIDQueryParameter adds the sourceClusterUuid to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetSourceClusterUUIDQueryParameter(sourceClusterUUID *string) {
	o.SourceClusterUUIDQueryParameter = sourceClusterUUID
}

// WithSourceSVMNameQueryParameter adds the sourceSvmName to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithSourceSVMNameQueryParameter(sourceSvmName *string) *SvmMigrationCollectionGetParams {
	o.SetSourceSVMNameQueryParameter(sourceSvmName)
	return o
}

// SetSourceSVMNameQueryParameter adds the sourceSvmName to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetSourceSVMNameQueryParameter(sourceSvmName *string) {
	o.SourceSVMNameQueryParameter = sourceSvmName
}

// WithSourceSVMUUIDQueryParameter adds the sourceSvmUUID to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithSourceSVMUUIDQueryParameter(sourceSvmUUID *string) *SvmMigrationCollectionGetParams {
	o.SetSourceSVMUUIDQueryParameter(sourceSvmUUID)
	return o
}

// SetSourceSVMUUIDQueryParameter adds the sourceSvmUuid to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetSourceSVMUUIDQueryParameter(sourceSvmUUID *string) {
	o.SourceSVMUUIDQueryParameter = sourceSvmUUID
}

// WithStateQueryParameter adds the state to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithStateQueryParameter(state *string) *SvmMigrationCollectionGetParams {
	o.SetStateQueryParameter(state)
	return o
}

// SetStateQueryParameter adds the state to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetStateQueryParameter(state *string) {
	o.StateQueryParameter = state
}

// WithTimeMetricsCutoverCompleteTimeQueryParameter adds the timeMetricsCutoverCompleteTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeMetricsCutoverCompleteTimeQueryParameter(timeMetricsCutoverCompleteTime *string) *SvmMigrationCollectionGetParams {
	o.SetTimeMetricsCutoverCompleteTimeQueryParameter(timeMetricsCutoverCompleteTime)
	return o
}

// SetTimeMetricsCutoverCompleteTimeQueryParameter adds the timeMetricsCutoverCompleteTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeMetricsCutoverCompleteTimeQueryParameter(timeMetricsCutoverCompleteTime *string) {
	o.TimeMetricsCutoverCompleteTimeQueryParameter = timeMetricsCutoverCompleteTime
}

// WithTimeMetricsCutoverStartTimeQueryParameter adds the timeMetricsCutoverStartTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeMetricsCutoverStartTimeQueryParameter(timeMetricsCutoverStartTime *string) *SvmMigrationCollectionGetParams {
	o.SetTimeMetricsCutoverStartTimeQueryParameter(timeMetricsCutoverStartTime)
	return o
}

// SetTimeMetricsCutoverStartTimeQueryParameter adds the timeMetricsCutoverStartTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeMetricsCutoverStartTimeQueryParameter(timeMetricsCutoverStartTime *string) {
	o.TimeMetricsCutoverStartTimeQueryParameter = timeMetricsCutoverStartTime
}

// WithTimeMetricsCutoverTriggerTimeQueryParameter adds the timeMetricsCutoverTriggerTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeMetricsCutoverTriggerTimeQueryParameter(timeMetricsCutoverTriggerTime *string) *SvmMigrationCollectionGetParams {
	o.SetTimeMetricsCutoverTriggerTimeQueryParameter(timeMetricsCutoverTriggerTime)
	return o
}

// SetTimeMetricsCutoverTriggerTimeQueryParameter adds the timeMetricsCutoverTriggerTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeMetricsCutoverTriggerTimeQueryParameter(timeMetricsCutoverTriggerTime *string) {
	o.TimeMetricsCutoverTriggerTimeQueryParameter = timeMetricsCutoverTriggerTime
}

// WithTimeMetricsEndTimeQueryParameter adds the timeMetricsEndTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeMetricsEndTimeQueryParameter(timeMetricsEndTime *string) *SvmMigrationCollectionGetParams {
	o.SetTimeMetricsEndTimeQueryParameter(timeMetricsEndTime)
	return o
}

// SetTimeMetricsEndTimeQueryParameter adds the timeMetricsEndTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeMetricsEndTimeQueryParameter(timeMetricsEndTime *string) {
	o.TimeMetricsEndTimeQueryParameter = timeMetricsEndTime
}

// WithTimeMetricsLastPauseTimeQueryParameter adds the timeMetricsLastPauseTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeMetricsLastPauseTimeQueryParameter(timeMetricsLastPauseTime *string) *SvmMigrationCollectionGetParams {
	o.SetTimeMetricsLastPauseTimeQueryParameter(timeMetricsLastPauseTime)
	return o
}

// SetTimeMetricsLastPauseTimeQueryParameter adds the timeMetricsLastPauseTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeMetricsLastPauseTimeQueryParameter(timeMetricsLastPauseTime *string) {
	o.TimeMetricsLastPauseTimeQueryParameter = timeMetricsLastPauseTime
}

// WithTimeMetricsLastResumeTimeQueryParameter adds the timeMetricsLastResumeTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeMetricsLastResumeTimeQueryParameter(timeMetricsLastResumeTime *string) *SvmMigrationCollectionGetParams {
	o.SetTimeMetricsLastResumeTimeQueryParameter(timeMetricsLastResumeTime)
	return o
}

// SetTimeMetricsLastResumeTimeQueryParameter adds the timeMetricsLastResumeTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeMetricsLastResumeTimeQueryParameter(timeMetricsLastResumeTime *string) {
	o.TimeMetricsLastResumeTimeQueryParameter = timeMetricsLastResumeTime
}

// WithTimeMetricsStartTimeQueryParameter adds the timeMetricsStartTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithTimeMetricsStartTimeQueryParameter(timeMetricsStartTime *string) *SvmMigrationCollectionGetParams {
	o.SetTimeMetricsStartTimeQueryParameter(timeMetricsStartTime)
	return o
}

// SetTimeMetricsStartTimeQueryParameter adds the timeMetricsStartTime to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetTimeMetricsStartTimeQueryParameter(timeMetricsStartTime *string) {
	o.TimeMetricsStartTimeQueryParameter = timeMetricsStartTime
}

// WithUUIDQueryParameter adds the uuid to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) WithUUIDQueryParameter(uuid *string) *SvmMigrationCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the svm migration collection get params
func (o *SvmMigrationCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *SvmMigrationCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AutoCutoverQueryParameter != nil {

		// query param auto_cutover
		var qrAutoCutover bool

		if o.AutoCutoverQueryParameter != nil {
			qrAutoCutover = *o.AutoCutoverQueryParameter
		}
		qAutoCutover := swag.FormatBool(qrAutoCutover)
		if qAutoCutover != "" {

			if err := r.SetQueryParam("auto_cutover", qAutoCutover); err != nil {
				return err
			}
		}
	}

	if o.AutoSourceCleanupQueryParameter != nil {

		// query param auto_source_cleanup
		var qrAutoSourceCleanup bool

		if o.AutoSourceCleanupQueryParameter != nil {
			qrAutoSourceCleanup = *o.AutoSourceCleanupQueryParameter
		}
		qAutoSourceCleanup := swag.FormatBool(qrAutoSourceCleanup)
		if qAutoSourceCleanup != "" {

			if err := r.SetQueryParam("auto_source_cleanup", qAutoSourceCleanup); err != nil {
				return err
			}
		}
	}

	if o.CurrentOperationQueryParameter != nil {

		// query param current_operation
		var qrCurrentOperation string

		if o.CurrentOperationQueryParameter != nil {
			qrCurrentOperation = *o.CurrentOperationQueryParameter
		}
		qCurrentOperation := qrCurrentOperation
		if qCurrentOperation != "" {

			if err := r.SetQueryParam("current_operation", qCurrentOperation); err != nil {
				return err
			}
		}
	}

	if o.DestinationIPspaceNameQueryParameter != nil {

		// query param destination.ipspace.name
		var qrDestinationIpspaceName string

		if o.DestinationIPspaceNameQueryParameter != nil {
			qrDestinationIpspaceName = *o.DestinationIPspaceNameQueryParameter
		}
		qDestinationIpspaceName := qrDestinationIpspaceName
		if qDestinationIpspaceName != "" {

			if err := r.SetQueryParam("destination.ipspace.name", qDestinationIpspaceName); err != nil {
				return err
			}
		}
	}

	if o.DestinationIPspaceUUIDQueryParameter != nil {

		// query param destination.ipspace.uuid
		var qrDestinationIpspaceUUID string

		if o.DestinationIPspaceUUIDQueryParameter != nil {
			qrDestinationIpspaceUUID = *o.DestinationIPspaceUUIDQueryParameter
		}
		qDestinationIpspaceUUID := qrDestinationIpspaceUUID
		if qDestinationIpspaceUUID != "" {

			if err := r.SetQueryParam("destination.ipspace.uuid", qDestinationIpspaceUUID); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.LastFailedStateQueryParameter != nil {

		// query param last_failed_state
		var qrLastFailedState string

		if o.LastFailedStateQueryParameter != nil {
			qrLastFailedState = *o.LastFailedStateQueryParameter
		}
		qLastFailedState := qrLastFailedState
		if qLastFailedState != "" {

			if err := r.SetQueryParam("last_failed_state", qLastFailedState); err != nil {
				return err
			}
		}
	}

	if o.LastOperationQueryParameter != nil {

		// query param last_operation
		var qrLastOperation string

		if o.LastOperationQueryParameter != nil {
			qrLastOperation = *o.LastOperationQueryParameter
		}
		qLastOperation := qrLastOperation
		if qLastOperation != "" {

			if err := r.SetQueryParam("last_operation", qLastOperation); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MessagesCodeQueryParameter != nil {

		// query param messages.code
		var qrMessagesCode int64

		if o.MessagesCodeQueryParameter != nil {
			qrMessagesCode = *o.MessagesCodeQueryParameter
		}
		qMessagesCode := swag.FormatInt64(qrMessagesCode)
		if qMessagesCode != "" {

			if err := r.SetQueryParam("messages.code", qMessagesCode); err != nil {
				return err
			}
		}
	}

	if o.MessagesMessageQueryParameter != nil {

		// query param messages.message
		var qrMessagesMessage string

		if o.MessagesMessageQueryParameter != nil {
			qrMessagesMessage = *o.MessagesMessageQueryParameter
		}
		qMessagesMessage := qrMessagesMessage
		if qMessagesMessage != "" {

			if err := r.SetQueryParam("messages.message", qMessagesMessage); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PointOfNoReturnQueryParameter != nil {

		// query param point_of_no_return
		var qrPointOfNoReturn bool

		if o.PointOfNoReturnQueryParameter != nil {
			qrPointOfNoReturn = *o.PointOfNoReturnQueryParameter
		}
		qPointOfNoReturn := swag.FormatBool(qrPointOfNoReturn)
		if qPointOfNoReturn != "" {

			if err := r.SetQueryParam("point_of_no_return", qPointOfNoReturn); err != nil {
				return err
			}
		}
	}

	if o.RestartCountQueryParameter != nil {

		// query param restart_count
		var qrRestartCount int64

		if o.RestartCountQueryParameter != nil {
			qrRestartCount = *o.RestartCountQueryParameter
		}
		qRestartCount := swag.FormatInt64(qrRestartCount)
		if qRestartCount != "" {

			if err := r.SetQueryParam("restart_count", qRestartCount); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SourceClusterNameQueryParameter != nil {

		// query param source.cluster.name
		var qrSourceClusterName string

		if o.SourceClusterNameQueryParameter != nil {
			qrSourceClusterName = *o.SourceClusterNameQueryParameter
		}
		qSourceClusterName := qrSourceClusterName
		if qSourceClusterName != "" {

			if err := r.SetQueryParam("source.cluster.name", qSourceClusterName); err != nil {
				return err
			}
		}
	}

	if o.SourceClusterUUIDQueryParameter != nil {

		// query param source.cluster.uuid
		var qrSourceClusterUUID string

		if o.SourceClusterUUIDQueryParameter != nil {
			qrSourceClusterUUID = *o.SourceClusterUUIDQueryParameter
		}
		qSourceClusterUUID := qrSourceClusterUUID
		if qSourceClusterUUID != "" {

			if err := r.SetQueryParam("source.cluster.uuid", qSourceClusterUUID); err != nil {
				return err
			}
		}
	}

	if o.SourceSVMNameQueryParameter != nil {

		// query param source.svm.name
		var qrSourceSvmName string

		if o.SourceSVMNameQueryParameter != nil {
			qrSourceSvmName = *o.SourceSVMNameQueryParameter
		}
		qSourceSvmName := qrSourceSvmName
		if qSourceSvmName != "" {

			if err := r.SetQueryParam("source.svm.name", qSourceSvmName); err != nil {
				return err
			}
		}
	}

	if o.SourceSVMUUIDQueryParameter != nil {

		// query param source.svm.uuid
		var qrSourceSvmUUID string

		if o.SourceSVMUUIDQueryParameter != nil {
			qrSourceSvmUUID = *o.SourceSVMUUIDQueryParameter
		}
		qSourceSvmUUID := qrSourceSvmUUID
		if qSourceSvmUUID != "" {

			if err := r.SetQueryParam("source.svm.uuid", qSourceSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.StateQueryParameter != nil {

		// query param state
		var qrState string

		if o.StateQueryParameter != nil {
			qrState = *o.StateQueryParameter
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.TimeMetricsCutoverCompleteTimeQueryParameter != nil {

		// query param time_metrics.cutover_complete_time
		var qrTimeMetricsCutoverCompleteTime string

		if o.TimeMetricsCutoverCompleteTimeQueryParameter != nil {
			qrTimeMetricsCutoverCompleteTime = *o.TimeMetricsCutoverCompleteTimeQueryParameter
		}
		qTimeMetricsCutoverCompleteTime := qrTimeMetricsCutoverCompleteTime
		if qTimeMetricsCutoverCompleteTime != "" {

			if err := r.SetQueryParam("time_metrics.cutover_complete_time", qTimeMetricsCutoverCompleteTime); err != nil {
				return err
			}
		}
	}

	if o.TimeMetricsCutoverStartTimeQueryParameter != nil {

		// query param time_metrics.cutover_start_time
		var qrTimeMetricsCutoverStartTime string

		if o.TimeMetricsCutoverStartTimeQueryParameter != nil {
			qrTimeMetricsCutoverStartTime = *o.TimeMetricsCutoverStartTimeQueryParameter
		}
		qTimeMetricsCutoverStartTime := qrTimeMetricsCutoverStartTime
		if qTimeMetricsCutoverStartTime != "" {

			if err := r.SetQueryParam("time_metrics.cutover_start_time", qTimeMetricsCutoverStartTime); err != nil {
				return err
			}
		}
	}

	if o.TimeMetricsCutoverTriggerTimeQueryParameter != nil {

		// query param time_metrics.cutover_trigger_time
		var qrTimeMetricsCutoverTriggerTime string

		if o.TimeMetricsCutoverTriggerTimeQueryParameter != nil {
			qrTimeMetricsCutoverTriggerTime = *o.TimeMetricsCutoverTriggerTimeQueryParameter
		}
		qTimeMetricsCutoverTriggerTime := qrTimeMetricsCutoverTriggerTime
		if qTimeMetricsCutoverTriggerTime != "" {

			if err := r.SetQueryParam("time_metrics.cutover_trigger_time", qTimeMetricsCutoverTriggerTime); err != nil {
				return err
			}
		}
	}

	if o.TimeMetricsEndTimeQueryParameter != nil {

		// query param time_metrics.end_time
		var qrTimeMetricsEndTime string

		if o.TimeMetricsEndTimeQueryParameter != nil {
			qrTimeMetricsEndTime = *o.TimeMetricsEndTimeQueryParameter
		}
		qTimeMetricsEndTime := qrTimeMetricsEndTime
		if qTimeMetricsEndTime != "" {

			if err := r.SetQueryParam("time_metrics.end_time", qTimeMetricsEndTime); err != nil {
				return err
			}
		}
	}

	if o.TimeMetricsLastPauseTimeQueryParameter != nil {

		// query param time_metrics.last_pause_time
		var qrTimeMetricsLastPauseTime string

		if o.TimeMetricsLastPauseTimeQueryParameter != nil {
			qrTimeMetricsLastPauseTime = *o.TimeMetricsLastPauseTimeQueryParameter
		}
		qTimeMetricsLastPauseTime := qrTimeMetricsLastPauseTime
		if qTimeMetricsLastPauseTime != "" {

			if err := r.SetQueryParam("time_metrics.last_pause_time", qTimeMetricsLastPauseTime); err != nil {
				return err
			}
		}
	}

	if o.TimeMetricsLastResumeTimeQueryParameter != nil {

		// query param time_metrics.last_resume_time
		var qrTimeMetricsLastResumeTime string

		if o.TimeMetricsLastResumeTimeQueryParameter != nil {
			qrTimeMetricsLastResumeTime = *o.TimeMetricsLastResumeTimeQueryParameter
		}
		qTimeMetricsLastResumeTime := qrTimeMetricsLastResumeTime
		if qTimeMetricsLastResumeTime != "" {

			if err := r.SetQueryParam("time_metrics.last_resume_time", qTimeMetricsLastResumeTime); err != nil {
				return err
			}
		}
	}

	if o.TimeMetricsStartTimeQueryParameter != nil {

		// query param time_metrics.start_time
		var qrTimeMetricsStartTime string

		if o.TimeMetricsStartTimeQueryParameter != nil {
			qrTimeMetricsStartTime = *o.TimeMetricsStartTimeQueryParameter
		}
		qTimeMetricsStartTime := qrTimeMetricsStartTime
		if qTimeMetricsStartTime != "" {

			if err := r.SetQueryParam("time_metrics.start_time", qTimeMetricsStartTime); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSvmMigrationCollectionGet binds the parameter fields
func (o *SvmMigrationCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamSvmMigrationCollectionGet binds the parameter order_by
func (o *SvmMigrationCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
