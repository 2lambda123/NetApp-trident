// Code generated by go-swagger; DO NOT EDIT.

package svm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// SvmPeerPermissionInstanceGetReader is a Reader for the SvmPeerPermissionInstanceGet structure.
type SvmPeerPermissionInstanceGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SvmPeerPermissionInstanceGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSvmPeerPermissionInstanceGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSvmPeerPermissionInstanceGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSvmPeerPermissionInstanceGetOK creates a SvmPeerPermissionInstanceGetOK with default headers values
func NewSvmPeerPermissionInstanceGetOK() *SvmPeerPermissionInstanceGetOK {
	return &SvmPeerPermissionInstanceGetOK{}
}

/* SvmPeerPermissionInstanceGetOK describes a response with status code 200, with default header values.

OK
*/
type SvmPeerPermissionInstanceGetOK struct {
	Payload *models.SvmPeerPermission
}

func (o *SvmPeerPermissionInstanceGetOK) Error() string {
	return fmt.Sprintf("[GET /svm/peer-permissions/{cluster_peer.uuid}/{svm.uuid}][%d] svmPeerPermissionInstanceGetOK  %+v", 200, o.Payload)
}
func (o *SvmPeerPermissionInstanceGetOK) GetPayload() *models.SvmPeerPermission {
	return o.Payload
}

func (o *SvmPeerPermissionInstanceGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SvmPeerPermission)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSvmPeerPermissionInstanceGetDefault creates a SvmPeerPermissionInstanceGetDefault with default headers values
func NewSvmPeerPermissionInstanceGetDefault(code int) *SvmPeerPermissionInstanceGetDefault {
	return &SvmPeerPermissionInstanceGetDefault{
		_statusCode: code,
	}
}

/* SvmPeerPermissionInstanceGetDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
<br/>
```
| Error codes | Description |
| ----------- | ----------- |
| 26345574    | Failed to find the SVM or volume name with UUID. |
```
<br/>

*/
type SvmPeerPermissionInstanceGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the svm peer permission instance get default response
func (o *SvmPeerPermissionInstanceGetDefault) Code() int {
	return o._statusCode
}

func (o *SvmPeerPermissionInstanceGetDefault) Error() string {
	return fmt.Sprintf("[GET /svm/peer-permissions/{cluster_peer.uuid}/{svm.uuid}][%d] svm_peer_permission_instance_get default  %+v", o._statusCode, o.Payload)
}
func (o *SvmPeerPermissionInstanceGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SvmPeerPermissionInstanceGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
