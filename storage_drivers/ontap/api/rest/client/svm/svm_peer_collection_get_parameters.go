// Code generated by go-swagger; DO NOT EDIT.

package svm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSvmPeerCollectionGetParams creates a new SvmPeerCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSvmPeerCollectionGetParams() *SvmPeerCollectionGetParams {
	return &SvmPeerCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSvmPeerCollectionGetParamsWithTimeout creates a new SvmPeerCollectionGetParams object
// with the ability to set a timeout on a request.
func NewSvmPeerCollectionGetParamsWithTimeout(timeout time.Duration) *SvmPeerCollectionGetParams {
	return &SvmPeerCollectionGetParams{
		timeout: timeout,
	}
}

// NewSvmPeerCollectionGetParamsWithContext creates a new SvmPeerCollectionGetParams object
// with the ability to set a context for a request.
func NewSvmPeerCollectionGetParamsWithContext(ctx context.Context) *SvmPeerCollectionGetParams {
	return &SvmPeerCollectionGetParams{
		Context: ctx,
	}
}

// NewSvmPeerCollectionGetParamsWithHTTPClient creates a new SvmPeerCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewSvmPeerCollectionGetParamsWithHTTPClient(client *http.Client) *SvmPeerCollectionGetParams {
	return &SvmPeerCollectionGetParams{
		HTTPClient: client,
	}
}

/*
SvmPeerCollectionGetParams contains all the parameters to send to the API endpoint

	for the svm peer collection get operation.

	Typically these are written to a http.Request.
*/
type SvmPeerCollectionGetParams struct {

	/* Applications.

	   Filter by applications
	*/
	ApplicationsQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* PeerClusterName.

	   Filter by peer.cluster.name
	*/
	PeerClusterNameQueryParameter *string

	/* PeerClusterUUID.

	   Filter by peer.cluster.uuid
	*/
	PeerClusterUUIDQueryParameter *string

	/* PeerSvmName.

	   Filter by peer.svm.name
	*/
	PeerSVMNameQueryParameter *string

	/* PeerSvmUUID.

	   Filter by peer.svm.uuid
	*/
	PeerSVMUUIDQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* State.

	   Filter by state
	*/
	StateQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the svm peer collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SvmPeerCollectionGetParams) WithDefaults() *SvmPeerCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the svm peer collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SvmPeerCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := SvmPeerCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithTimeout(timeout time.Duration) *SvmPeerCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithContext(ctx context.Context) *SvmPeerCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithHTTPClient(client *http.Client) *SvmPeerCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationsQueryParameter adds the applications to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithApplicationsQueryParameter(applications *string) *SvmPeerCollectionGetParams {
	o.SetApplicationsQueryParameter(applications)
	return o
}

// SetApplicationsQueryParameter adds the applications to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetApplicationsQueryParameter(applications *string) {
	o.ApplicationsQueryParameter = applications
}

// WithFieldsQueryParameter adds the fields to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithFieldsQueryParameter(fields []string) *SvmPeerCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithMaxRecordsQueryParameter adds the maxRecords to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *SvmPeerCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithNameQueryParameter(name *string) *SvmPeerCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *SvmPeerCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPeerClusterNameQueryParameter adds the peerClusterName to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithPeerClusterNameQueryParameter(peerClusterName *string) *SvmPeerCollectionGetParams {
	o.SetPeerClusterNameQueryParameter(peerClusterName)
	return o
}

// SetPeerClusterNameQueryParameter adds the peerClusterName to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetPeerClusterNameQueryParameter(peerClusterName *string) {
	o.PeerClusterNameQueryParameter = peerClusterName
}

// WithPeerClusterUUIDQueryParameter adds the peerClusterUUID to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithPeerClusterUUIDQueryParameter(peerClusterUUID *string) *SvmPeerCollectionGetParams {
	o.SetPeerClusterUUIDQueryParameter(peerClusterUUID)
	return o
}

// SetPeerClusterUUIDQueryParameter adds the peerClusterUuid to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetPeerClusterUUIDQueryParameter(peerClusterUUID *string) {
	o.PeerClusterUUIDQueryParameter = peerClusterUUID
}

// WithPeerSVMNameQueryParameter adds the peerSvmName to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithPeerSVMNameQueryParameter(peerSvmName *string) *SvmPeerCollectionGetParams {
	o.SetPeerSVMNameQueryParameter(peerSvmName)
	return o
}

// SetPeerSVMNameQueryParameter adds the peerSvmName to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetPeerSVMNameQueryParameter(peerSvmName *string) {
	o.PeerSVMNameQueryParameter = peerSvmName
}

// WithPeerSVMUUIDQueryParameter adds the peerSvmUUID to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithPeerSVMUUIDQueryParameter(peerSvmUUID *string) *SvmPeerCollectionGetParams {
	o.SetPeerSVMUUIDQueryParameter(peerSvmUUID)
	return o
}

// SetPeerSVMUUIDQueryParameter adds the peerSvmUuid to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetPeerSVMUUIDQueryParameter(peerSvmUUID *string) {
	o.PeerSVMUUIDQueryParameter = peerSvmUUID
}

// WithReturnRecordsQueryParameter adds the returnRecords to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *SvmPeerCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *SvmPeerCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithStateQueryParameter adds the state to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithStateQueryParameter(state *string) *SvmPeerCollectionGetParams {
	o.SetStateQueryParameter(state)
	return o
}

// SetStateQueryParameter adds the state to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetStateQueryParameter(state *string) {
	o.StateQueryParameter = state
}

// WithSVMNameQueryParameter adds the svmName to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *SvmPeerCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *SvmPeerCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUUIDQueryParameter adds the uuid to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) WithUUIDQueryParameter(uuid *string) *SvmPeerCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the svm peer collection get params
func (o *SvmPeerCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *SvmPeerCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ApplicationsQueryParameter != nil {

		// query param applications
		var qrApplications string

		if o.ApplicationsQueryParameter != nil {
			qrApplications = *o.ApplicationsQueryParameter
		}
		qApplications := qrApplications
		if qApplications != "" {

			if err := r.SetQueryParam("applications", qApplications); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PeerClusterNameQueryParameter != nil {

		// query param peer.cluster.name
		var qrPeerClusterName string

		if o.PeerClusterNameQueryParameter != nil {
			qrPeerClusterName = *o.PeerClusterNameQueryParameter
		}
		qPeerClusterName := qrPeerClusterName
		if qPeerClusterName != "" {

			if err := r.SetQueryParam("peer.cluster.name", qPeerClusterName); err != nil {
				return err
			}
		}
	}

	if o.PeerClusterUUIDQueryParameter != nil {

		// query param peer.cluster.uuid
		var qrPeerClusterUUID string

		if o.PeerClusterUUIDQueryParameter != nil {
			qrPeerClusterUUID = *o.PeerClusterUUIDQueryParameter
		}
		qPeerClusterUUID := qrPeerClusterUUID
		if qPeerClusterUUID != "" {

			if err := r.SetQueryParam("peer.cluster.uuid", qPeerClusterUUID); err != nil {
				return err
			}
		}
	}

	if o.PeerSVMNameQueryParameter != nil {

		// query param peer.svm.name
		var qrPeerSvmName string

		if o.PeerSVMNameQueryParameter != nil {
			qrPeerSvmName = *o.PeerSVMNameQueryParameter
		}
		qPeerSvmName := qrPeerSvmName
		if qPeerSvmName != "" {

			if err := r.SetQueryParam("peer.svm.name", qPeerSvmName); err != nil {
				return err
			}
		}
	}

	if o.PeerSVMUUIDQueryParameter != nil {

		// query param peer.svm.uuid
		var qrPeerSvmUUID string

		if o.PeerSVMUUIDQueryParameter != nil {
			qrPeerSvmUUID = *o.PeerSVMUUIDQueryParameter
		}
		qPeerSvmUUID := qrPeerSvmUUID
		if qPeerSvmUUID != "" {

			if err := r.SetQueryParam("peer.svm.uuid", qPeerSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.StateQueryParameter != nil {

		// query param state
		var qrState string

		if o.StateQueryParameter != nil {
			qrState = *o.StateQueryParameter
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSvmPeerCollectionGet binds the parameter fields
func (o *SvmPeerCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamSvmPeerCollectionGet binds the parameter order_by
func (o *SvmPeerCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
