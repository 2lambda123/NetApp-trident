// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// SecurityKeyManagerKeyServersCreateReader is a Reader for the SecurityKeyManagerKeyServersCreate structure.
type SecurityKeyManagerKeyServersCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityKeyManagerKeyServersCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSecurityKeyManagerKeyServersCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSecurityKeyManagerKeyServersCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSecurityKeyManagerKeyServersCreateCreated creates a SecurityKeyManagerKeyServersCreateCreated with default headers values
func NewSecurityKeyManagerKeyServersCreateCreated() *SecurityKeyManagerKeyServersCreateCreated {
	return &SecurityKeyManagerKeyServersCreateCreated{}
}

/* SecurityKeyManagerKeyServersCreateCreated describes a response with status code 201, with default header values.

Created
*/
type SecurityKeyManagerKeyServersCreateCreated struct {
	Payload *models.KeyServerResponse
}

func (o *SecurityKeyManagerKeyServersCreateCreated) Error() string {
	return fmt.Sprintf("[POST /security/key-managers/{uuid}/key-servers][%d] securityKeyManagerKeyServersCreateCreated  %+v", 201, o.Payload)
}
func (o *SecurityKeyManagerKeyServersCreateCreated) GetPayload() *models.KeyServerResponse {
	return o.Payload
}

func (o *SecurityKeyManagerKeyServersCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyServerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityKeyManagerKeyServersCreateDefault creates a SecurityKeyManagerKeyServersCreateDefault with default headers values
func NewSecurityKeyManagerKeyServersCreateDefault(code int) *SecurityKeyManagerKeyServersCreateDefault {
	return &SecurityKeyManagerKeyServersCreateDefault{
		_statusCode: code,
	}
}

/* SecurityKeyManagerKeyServersCreateDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 65536038 | A maximum of 4 active key servers are allowed. |
| 65536821 | The certificate is not installed. |
| 65536822 | Multitenant key management is not supported in the current cluster version. |
| 65536824 | Multitenant key management is not supported in MetroCluster configurations. |
| 65536828 | External key management is not enabled for the SVM. |
| 65536834 | Failed to get existing key-server details for the SVM. |
| 65536852 | Failed to query supported KMIP protocol versions. |
| 65536870 | Key management servers are already configured. |
| 65536871 | Duplicate key management servers exist. |
| 65536921 | The following issues were found. Unable to execute command on KMIP server. |
| 66060338 | Unable to establish secure connection to KMIP server due to incorrect server_ca certificates. |
| 66060339 | Unable to establish secure connection to KMIP server due to incorrect client certificates. |
| 66060340 | Unable to establish secure connection to KMIP server due to Cryptsoft error. |
| 66060341 | Unable to establish secure connection to KMIP server due to network configuration issues. |

*/
type SecurityKeyManagerKeyServersCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the security key manager key servers create default response
func (o *SecurityKeyManagerKeyServersCreateDefault) Code() int {
	return o._statusCode
}

func (o *SecurityKeyManagerKeyServersCreateDefault) Error() string {
	return fmt.Sprintf("[POST /security/key-managers/{uuid}/key-servers][%d] security_key_manager_key_servers_create default  %+v", o._statusCode, o.Payload)
}
func (o *SecurityKeyManagerKeyServersCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SecurityKeyManagerKeyServersCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
