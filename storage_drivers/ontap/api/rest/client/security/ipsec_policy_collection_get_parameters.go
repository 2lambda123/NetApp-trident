// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIpsecPolicyCollectionGetParams creates a new IpsecPolicyCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewIpsecPolicyCollectionGetParams() *IpsecPolicyCollectionGetParams {
	return &IpsecPolicyCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewIpsecPolicyCollectionGetParamsWithTimeout creates a new IpsecPolicyCollectionGetParams object
// with the ability to set a timeout on a request.
func NewIpsecPolicyCollectionGetParamsWithTimeout(timeout time.Duration) *IpsecPolicyCollectionGetParams {
	return &IpsecPolicyCollectionGetParams{
		timeout: timeout,
	}
}

// NewIpsecPolicyCollectionGetParamsWithContext creates a new IpsecPolicyCollectionGetParams object
// with the ability to set a context for a request.
func NewIpsecPolicyCollectionGetParamsWithContext(ctx context.Context) *IpsecPolicyCollectionGetParams {
	return &IpsecPolicyCollectionGetParams{
		Context: ctx,
	}
}

// NewIpsecPolicyCollectionGetParamsWithHTTPClient creates a new IpsecPolicyCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewIpsecPolicyCollectionGetParamsWithHTTPClient(client *http.Client) *IpsecPolicyCollectionGetParams {
	return &IpsecPolicyCollectionGetParams{
		HTTPClient: client,
	}
}

/* IpsecPolicyCollectionGetParams contains all the parameters to send to the API endpoint
   for the ipsec policy collection get operation.

   Typically these are written to a http.Request.
*/
type IpsecPolicyCollectionGetParams struct {

	/* Enabled.

	   Filter by enabled
	*/
	EnabledQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* IpspaceName.

	   Filter by ipspace.name
	*/
	IpspaceNameQueryParameter *string

	/* IpspaceUUID.

	   Filter by ipspace.uuid
	*/
	IpspaceUUIDQueryParameter *string

	/* LocalEndpointAddress.

	   Filter by local_endpoint.address
	*/
	LocalEndpointAddressQueryParameter *string

	/* LocalEndpointFamily.

	   Filter by local_endpoint.family
	*/
	LocalEndpointFamilyQueryParameter *string

	/* LocalEndpointNetmask.

	   Filter by local_endpoint.netmask
	*/
	LocalEndpointNetmaskQueryParameter *string

	/* LocalEndpointPort.

	   Filter by local_endpoint.port
	*/
	LocalEndpointPortQueryParameter *string

	/* LocalIdentity.

	   Filter by local_identity
	*/
	LocalIDentityQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* Protocol.

	   Filter by protocol
	*/
	ProtocolQueryParameter *string

	/* RemoteEndpointAddress.

	   Filter by remote_endpoint.address
	*/
	RemoteEndpointAddressQueryParameter *string

	/* RemoteEndpointFamily.

	   Filter by remote_endpoint.family
	*/
	RemoteEndpointFamilyQueryParameter *string

	/* RemoteEndpointNetmask.

	   Filter by remote_endpoint.netmask
	*/
	RemoteEndpointNetmaskQueryParameter *string

	/* RemoteEndpointPort.

	   Filter by remote_endpoint.port
	*/
	RemoteEndpointPortQueryParameter *string

	/* RemoteIdentity.

	   Filter by remote_identity
	*/
	RemoteIDentityQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* Scope.

	   Filter by scope
	*/
	ScopeQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the ipsec policy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpsecPolicyCollectionGetParams) WithDefaults() *IpsecPolicyCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the ipsec policy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpsecPolicyCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := IpsecPolicyCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithTimeout(timeout time.Duration) *IpsecPolicyCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithContext(ctx context.Context) *IpsecPolicyCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithHTTPClient(client *http.Client) *IpsecPolicyCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnabledQueryParameter adds the enabled to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithEnabledQueryParameter(enabled *bool) *IpsecPolicyCollectionGetParams {
	o.SetEnabledQueryParameter(enabled)
	return o
}

// SetEnabledQueryParameter adds the enabled to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetEnabledQueryParameter(enabled *bool) {
	o.EnabledQueryParameter = enabled
}

// WithFieldsQueryParameter adds the fields to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithFieldsQueryParameter(fields []string) *IpsecPolicyCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithIpspaceNameQueryParameter adds the ipspaceName to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithIpspaceNameQueryParameter(ipspaceName *string) *IpsecPolicyCollectionGetParams {
	o.SetIpspaceNameQueryParameter(ipspaceName)
	return o
}

// SetIpspaceNameQueryParameter adds the ipspaceName to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetIpspaceNameQueryParameter(ipspaceName *string) {
	o.IpspaceNameQueryParameter = ipspaceName
}

// WithIpspaceUUIDQueryParameter adds the ipspaceUUID to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithIpspaceUUIDQueryParameter(ipspaceUUID *string) *IpsecPolicyCollectionGetParams {
	o.SetIpspaceUUIDQueryParameter(ipspaceUUID)
	return o
}

// SetIpspaceUUIDQueryParameter adds the ipspaceUuid to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetIpspaceUUIDQueryParameter(ipspaceUUID *string) {
	o.IpspaceUUIDQueryParameter = ipspaceUUID
}

// WithLocalEndpointAddressQueryParameter adds the localEndpointAddress to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithLocalEndpointAddressQueryParameter(localEndpointAddress *string) *IpsecPolicyCollectionGetParams {
	o.SetLocalEndpointAddressQueryParameter(localEndpointAddress)
	return o
}

// SetLocalEndpointAddressQueryParameter adds the localEndpointAddress to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetLocalEndpointAddressQueryParameter(localEndpointAddress *string) {
	o.LocalEndpointAddressQueryParameter = localEndpointAddress
}

// WithLocalEndpointFamilyQueryParameter adds the localEndpointFamily to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithLocalEndpointFamilyQueryParameter(localEndpointFamily *string) *IpsecPolicyCollectionGetParams {
	o.SetLocalEndpointFamilyQueryParameter(localEndpointFamily)
	return o
}

// SetLocalEndpointFamilyQueryParameter adds the localEndpointFamily to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetLocalEndpointFamilyQueryParameter(localEndpointFamily *string) {
	o.LocalEndpointFamilyQueryParameter = localEndpointFamily
}

// WithLocalEndpointNetmaskQueryParameter adds the localEndpointNetmask to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithLocalEndpointNetmaskQueryParameter(localEndpointNetmask *string) *IpsecPolicyCollectionGetParams {
	o.SetLocalEndpointNetmaskQueryParameter(localEndpointNetmask)
	return o
}

// SetLocalEndpointNetmaskQueryParameter adds the localEndpointNetmask to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetLocalEndpointNetmaskQueryParameter(localEndpointNetmask *string) {
	o.LocalEndpointNetmaskQueryParameter = localEndpointNetmask
}

// WithLocalEndpointPortQueryParameter adds the localEndpointPort to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithLocalEndpointPortQueryParameter(localEndpointPort *string) *IpsecPolicyCollectionGetParams {
	o.SetLocalEndpointPortQueryParameter(localEndpointPort)
	return o
}

// SetLocalEndpointPortQueryParameter adds the localEndpointPort to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetLocalEndpointPortQueryParameter(localEndpointPort *string) {
	o.LocalEndpointPortQueryParameter = localEndpointPort
}

// WithLocalIDentityQueryParameter adds the localIdentity to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithLocalIDentityQueryParameter(localIdentity *string) *IpsecPolicyCollectionGetParams {
	o.SetLocalIDentityQueryParameter(localIdentity)
	return o
}

// SetLocalIDentityQueryParameter adds the localIdentity to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetLocalIDentityQueryParameter(localIdentity *string) {
	o.LocalIDentityQueryParameter = localIdentity
}

// WithMaxRecordsQueryParameter adds the maxRecords to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *IpsecPolicyCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithNameQueryParameter(name *string) *IpsecPolicyCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *IpsecPolicyCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithProtocolQueryParameter adds the protocol to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithProtocolQueryParameter(protocol *string) *IpsecPolicyCollectionGetParams {
	o.SetProtocolQueryParameter(protocol)
	return o
}

// SetProtocolQueryParameter adds the protocol to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetProtocolQueryParameter(protocol *string) {
	o.ProtocolQueryParameter = protocol
}

// WithRemoteEndpointAddressQueryParameter adds the remoteEndpointAddress to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithRemoteEndpointAddressQueryParameter(remoteEndpointAddress *string) *IpsecPolicyCollectionGetParams {
	o.SetRemoteEndpointAddressQueryParameter(remoteEndpointAddress)
	return o
}

// SetRemoteEndpointAddressQueryParameter adds the remoteEndpointAddress to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetRemoteEndpointAddressQueryParameter(remoteEndpointAddress *string) {
	o.RemoteEndpointAddressQueryParameter = remoteEndpointAddress
}

// WithRemoteEndpointFamilyQueryParameter adds the remoteEndpointFamily to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithRemoteEndpointFamilyQueryParameter(remoteEndpointFamily *string) *IpsecPolicyCollectionGetParams {
	o.SetRemoteEndpointFamilyQueryParameter(remoteEndpointFamily)
	return o
}

// SetRemoteEndpointFamilyQueryParameter adds the remoteEndpointFamily to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetRemoteEndpointFamilyQueryParameter(remoteEndpointFamily *string) {
	o.RemoteEndpointFamilyQueryParameter = remoteEndpointFamily
}

// WithRemoteEndpointNetmaskQueryParameter adds the remoteEndpointNetmask to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithRemoteEndpointNetmaskQueryParameter(remoteEndpointNetmask *string) *IpsecPolicyCollectionGetParams {
	o.SetRemoteEndpointNetmaskQueryParameter(remoteEndpointNetmask)
	return o
}

// SetRemoteEndpointNetmaskQueryParameter adds the remoteEndpointNetmask to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetRemoteEndpointNetmaskQueryParameter(remoteEndpointNetmask *string) {
	o.RemoteEndpointNetmaskQueryParameter = remoteEndpointNetmask
}

// WithRemoteEndpointPortQueryParameter adds the remoteEndpointPort to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithRemoteEndpointPortQueryParameter(remoteEndpointPort *string) *IpsecPolicyCollectionGetParams {
	o.SetRemoteEndpointPortQueryParameter(remoteEndpointPort)
	return o
}

// SetRemoteEndpointPortQueryParameter adds the remoteEndpointPort to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetRemoteEndpointPortQueryParameter(remoteEndpointPort *string) {
	o.RemoteEndpointPortQueryParameter = remoteEndpointPort
}

// WithRemoteIDentityQueryParameter adds the remoteIdentity to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithRemoteIDentityQueryParameter(remoteIdentity *string) *IpsecPolicyCollectionGetParams {
	o.SetRemoteIDentityQueryParameter(remoteIdentity)
	return o
}

// SetRemoteIDentityQueryParameter adds the remoteIdentity to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetRemoteIDentityQueryParameter(remoteIdentity *string) {
	o.RemoteIDentityQueryParameter = remoteIdentity
}

// WithReturnRecordsQueryParameter adds the returnRecords to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *IpsecPolicyCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *IpsecPolicyCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithScopeQueryParameter adds the scope to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithScopeQueryParameter(scope *string) *IpsecPolicyCollectionGetParams {
	o.SetScopeQueryParameter(scope)
	return o
}

// SetScopeQueryParameter adds the scope to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetScopeQueryParameter(scope *string) {
	o.ScopeQueryParameter = scope
}

// WithSVMNameQueryParameter adds the svmName to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *IpsecPolicyCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *IpsecPolicyCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUUIDQueryParameter adds the uuid to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) WithUUIDQueryParameter(uuid *string) *IpsecPolicyCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the ipsec policy collection get params
func (o *IpsecPolicyCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *IpsecPolicyCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EnabledQueryParameter != nil {

		// query param enabled
		var qrEnabled bool

		if o.EnabledQueryParameter != nil {
			qrEnabled = *o.EnabledQueryParameter
		}
		qEnabled := swag.FormatBool(qrEnabled)
		if qEnabled != "" {

			if err := r.SetQueryParam("enabled", qEnabled); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.IpspaceNameQueryParameter != nil {

		// query param ipspace.name
		var qrIpspaceName string

		if o.IpspaceNameQueryParameter != nil {
			qrIpspaceName = *o.IpspaceNameQueryParameter
		}
		qIpspaceName := qrIpspaceName
		if qIpspaceName != "" {

			if err := r.SetQueryParam("ipspace.name", qIpspaceName); err != nil {
				return err
			}
		}
	}

	if o.IpspaceUUIDQueryParameter != nil {

		// query param ipspace.uuid
		var qrIpspaceUUID string

		if o.IpspaceUUIDQueryParameter != nil {
			qrIpspaceUUID = *o.IpspaceUUIDQueryParameter
		}
		qIpspaceUUID := qrIpspaceUUID
		if qIpspaceUUID != "" {

			if err := r.SetQueryParam("ipspace.uuid", qIpspaceUUID); err != nil {
				return err
			}
		}
	}

	if o.LocalEndpointAddressQueryParameter != nil {

		// query param local_endpoint.address
		var qrLocalEndpointAddress string

		if o.LocalEndpointAddressQueryParameter != nil {
			qrLocalEndpointAddress = *o.LocalEndpointAddressQueryParameter
		}
		qLocalEndpointAddress := qrLocalEndpointAddress
		if qLocalEndpointAddress != "" {

			if err := r.SetQueryParam("local_endpoint.address", qLocalEndpointAddress); err != nil {
				return err
			}
		}
	}

	if o.LocalEndpointFamilyQueryParameter != nil {

		// query param local_endpoint.family
		var qrLocalEndpointFamily string

		if o.LocalEndpointFamilyQueryParameter != nil {
			qrLocalEndpointFamily = *o.LocalEndpointFamilyQueryParameter
		}
		qLocalEndpointFamily := qrLocalEndpointFamily
		if qLocalEndpointFamily != "" {

			if err := r.SetQueryParam("local_endpoint.family", qLocalEndpointFamily); err != nil {
				return err
			}
		}
	}

	if o.LocalEndpointNetmaskQueryParameter != nil {

		// query param local_endpoint.netmask
		var qrLocalEndpointNetmask string

		if o.LocalEndpointNetmaskQueryParameter != nil {
			qrLocalEndpointNetmask = *o.LocalEndpointNetmaskQueryParameter
		}
		qLocalEndpointNetmask := qrLocalEndpointNetmask
		if qLocalEndpointNetmask != "" {

			if err := r.SetQueryParam("local_endpoint.netmask", qLocalEndpointNetmask); err != nil {
				return err
			}
		}
	}

	if o.LocalEndpointPortQueryParameter != nil {

		// query param local_endpoint.port
		var qrLocalEndpointPort string

		if o.LocalEndpointPortQueryParameter != nil {
			qrLocalEndpointPort = *o.LocalEndpointPortQueryParameter
		}
		qLocalEndpointPort := qrLocalEndpointPort
		if qLocalEndpointPort != "" {

			if err := r.SetQueryParam("local_endpoint.port", qLocalEndpointPort); err != nil {
				return err
			}
		}
	}

	if o.LocalIDentityQueryParameter != nil {

		// query param local_identity
		var qrLocalIdentity string

		if o.LocalIDentityQueryParameter != nil {
			qrLocalIdentity = *o.LocalIDentityQueryParameter
		}
		qLocalIdentity := qrLocalIdentity
		if qLocalIdentity != "" {

			if err := r.SetQueryParam("local_identity", qLocalIdentity); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ProtocolQueryParameter != nil {

		// query param protocol
		var qrProtocol string

		if o.ProtocolQueryParameter != nil {
			qrProtocol = *o.ProtocolQueryParameter
		}
		qProtocol := qrProtocol
		if qProtocol != "" {

			if err := r.SetQueryParam("protocol", qProtocol); err != nil {
				return err
			}
		}
	}

	if o.RemoteEndpointAddressQueryParameter != nil {

		// query param remote_endpoint.address
		var qrRemoteEndpointAddress string

		if o.RemoteEndpointAddressQueryParameter != nil {
			qrRemoteEndpointAddress = *o.RemoteEndpointAddressQueryParameter
		}
		qRemoteEndpointAddress := qrRemoteEndpointAddress
		if qRemoteEndpointAddress != "" {

			if err := r.SetQueryParam("remote_endpoint.address", qRemoteEndpointAddress); err != nil {
				return err
			}
		}
	}

	if o.RemoteEndpointFamilyQueryParameter != nil {

		// query param remote_endpoint.family
		var qrRemoteEndpointFamily string

		if o.RemoteEndpointFamilyQueryParameter != nil {
			qrRemoteEndpointFamily = *o.RemoteEndpointFamilyQueryParameter
		}
		qRemoteEndpointFamily := qrRemoteEndpointFamily
		if qRemoteEndpointFamily != "" {

			if err := r.SetQueryParam("remote_endpoint.family", qRemoteEndpointFamily); err != nil {
				return err
			}
		}
	}

	if o.RemoteEndpointNetmaskQueryParameter != nil {

		// query param remote_endpoint.netmask
		var qrRemoteEndpointNetmask string

		if o.RemoteEndpointNetmaskQueryParameter != nil {
			qrRemoteEndpointNetmask = *o.RemoteEndpointNetmaskQueryParameter
		}
		qRemoteEndpointNetmask := qrRemoteEndpointNetmask
		if qRemoteEndpointNetmask != "" {

			if err := r.SetQueryParam("remote_endpoint.netmask", qRemoteEndpointNetmask); err != nil {
				return err
			}
		}
	}

	if o.RemoteEndpointPortQueryParameter != nil {

		// query param remote_endpoint.port
		var qrRemoteEndpointPort string

		if o.RemoteEndpointPortQueryParameter != nil {
			qrRemoteEndpointPort = *o.RemoteEndpointPortQueryParameter
		}
		qRemoteEndpointPort := qrRemoteEndpointPort
		if qRemoteEndpointPort != "" {

			if err := r.SetQueryParam("remote_endpoint.port", qRemoteEndpointPort); err != nil {
				return err
			}
		}
	}

	if o.RemoteIDentityQueryParameter != nil {

		// query param remote_identity
		var qrRemoteIdentity string

		if o.RemoteIDentityQueryParameter != nil {
			qrRemoteIdentity = *o.RemoteIDentityQueryParameter
		}
		qRemoteIdentity := qrRemoteIdentity
		if qRemoteIdentity != "" {

			if err := r.SetQueryParam("remote_identity", qRemoteIdentity); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.ScopeQueryParameter != nil {

		// query param scope
		var qrScope string

		if o.ScopeQueryParameter != nil {
			qrScope = *o.ScopeQueryParameter
		}
		qScope := qrScope
		if qScope != "" {

			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamIpsecPolicyCollectionGet binds the parameter fields
func (o *IpsecPolicyCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamIpsecPolicyCollectionGet binds the parameter order_by
func (o *IpsecPolicyCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
