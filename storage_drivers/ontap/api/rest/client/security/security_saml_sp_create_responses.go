// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// SecuritySamlSpCreateReader is a Reader for the SecuritySamlSpCreate structure.
type SecuritySamlSpCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecuritySamlSpCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewSecuritySamlSpCreateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSecuritySamlSpCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSecuritySamlSpCreateAccepted creates a SecuritySamlSpCreateAccepted with default headers values
func NewSecuritySamlSpCreateAccepted() *SecuritySamlSpCreateAccepted {
	return &SecuritySamlSpCreateAccepted{}
}

/* SecuritySamlSpCreateAccepted describes a response with status code 202, with default header values.

Accepted
*/
type SecuritySamlSpCreateAccepted struct {
	Payload *models.JobLinkResponse
}

func (o *SecuritySamlSpCreateAccepted) Error() string {
	return fmt.Sprintf("[POST /security/authentication/cluster/saml-sp][%d] securitySamlSpCreateAccepted  %+v", 202, o.Payload)
}
func (o *SecuritySamlSpCreateAccepted) GetPayload() *models.JobLinkResponse {
	return o.Payload
}

func (o *SecuritySamlSpCreateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobLinkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecuritySamlSpCreateDefault creates a SecuritySamlSpCreateDefault with default headers values
func NewSecuritySamlSpCreateDefault(code int) *SecuritySamlSpCreateDefault {
	return &SecuritySamlSpCreateDefault{
		_statusCode: code,
	}
}

/* SecuritySamlSpCreateDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 12320789 | Failed to download data file from specified URI. |
| 12320794 | The host parameter provided must be the cluster management interface's IP address.  If the cluster management interface is not available, the node management interface's IP address must be used. |
| 12320795 | A valid cluster or node management interface IP address must be provided. |
| 12320805 | The certificate information provided does not match any installed certificates. |
| 12320806 | The certificate information entered does not match any installed certificates. |
| 12320814 | An invalid IDP URI has been entered. |
| 12320815 | An IDP URI must be an HTTPS or FTPS URI. |

*/
type SecuritySamlSpCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the security saml sp create default response
func (o *SecuritySamlSpCreateDefault) Code() int {
	return o._statusCode
}

func (o *SecuritySamlSpCreateDefault) Error() string {
	return fmt.Sprintf("[POST /security/authentication/cluster/saml-sp][%d] security_saml_sp_create default  %+v", o._statusCode, o.Payload)
}
func (o *SecuritySamlSpCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SecuritySamlSpCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
