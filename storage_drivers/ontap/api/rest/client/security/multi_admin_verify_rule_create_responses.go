// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// MultiAdminVerifyRuleCreateReader is a Reader for the MultiAdminVerifyRuleCreate structure.
type MultiAdminVerifyRuleCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MultiAdminVerifyRuleCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewMultiAdminVerifyRuleCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewMultiAdminVerifyRuleCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMultiAdminVerifyRuleCreateCreated creates a MultiAdminVerifyRuleCreateCreated with default headers values
func NewMultiAdminVerifyRuleCreateCreated() *MultiAdminVerifyRuleCreateCreated {
	return &MultiAdminVerifyRuleCreateCreated{}
}

/* MultiAdminVerifyRuleCreateCreated describes a response with status code 201, with default header values.

Created
*/
type MultiAdminVerifyRuleCreateCreated struct {
	Payload *models.MultiAdminVerifyRuleResponse
}

func (o *MultiAdminVerifyRuleCreateCreated) Error() string {
	return fmt.Sprintf("[POST /security/multi-admin-verify/rules][%d] multiAdminVerifyRuleCreateCreated  %+v", 201, o.Payload)
}
func (o *MultiAdminVerifyRuleCreateCreated) GetPayload() *models.MultiAdminVerifyRuleResponse {
	return o.Payload
}

func (o *MultiAdminVerifyRuleCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MultiAdminVerifyRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiAdminVerifyRuleCreateDefault creates a MultiAdminVerifyRuleCreateDefault with default headers values
func NewMultiAdminVerifyRuleCreateDefault(code int) *MultiAdminVerifyRuleCreateDefault {
	return &MultiAdminVerifyRuleCreateDefault{
		_statusCode: code,
	}
}

/* MultiAdminVerifyRuleCreateDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 262148 | The specified command is not recognized. |
| 262308 | The specified command is not supported by this feature. |
| 262309 | The feature must be enabled first. |
| 262311 | Value must be greater than zero. |
| 262312 | Number of required approvers must be less than the total number of unique approvers in the approval-groups. |
| 262313 | Number of unique approvers in the approval-groups must be greater than the number of required approvers. |
| 262314 | Some approval-groups were not found. |
| 262316 | Value must be in the range one second to two weeks. |
| 262326 | Failed to parse query. |
| 262335 | The query string must be contained in either the "operation" or "query" parameters but not in both. |

*/
type MultiAdminVerifyRuleCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the multi admin verify rule create default response
func (o *MultiAdminVerifyRuleCreateDefault) Code() int {
	return o._statusCode
}

func (o *MultiAdminVerifyRuleCreateDefault) Error() string {
	return fmt.Sprintf("[POST /security/multi-admin-verify/rules][%d] multi_admin_verify_rule_create default  %+v", o._statusCode, o.Payload)
}
func (o *MultiAdminVerifyRuleCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *MultiAdminVerifyRuleCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
