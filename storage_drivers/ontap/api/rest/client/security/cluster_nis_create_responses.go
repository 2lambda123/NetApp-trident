// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/v21/storage_drivers/ontap/api/rest/models"
)

// ClusterNisCreateReader is a Reader for the ClusterNisCreate structure.
type ClusterNisCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClusterNisCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewClusterNisCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewClusterNisCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewClusterNisCreateCreated creates a ClusterNisCreateCreated with default headers values
func NewClusterNisCreateCreated() *ClusterNisCreateCreated {
	return &ClusterNisCreateCreated{}
}

/* ClusterNisCreateCreated describes a response with status code 201, with default header values.

Created
*/
type ClusterNisCreateCreated struct {
	Payload *models.ClusterNisServiceResponse
}

func (o *ClusterNisCreateCreated) Error() string {
	return fmt.Sprintf("[POST /security/authentication/cluster/nis][%d] clusterNisCreateCreated  %+v", 201, o.Payload)
}
func (o *ClusterNisCreateCreated) GetPayload() *models.ClusterNisServiceResponse {
	return o.Payload
}

func (o *ClusterNisCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterNisServiceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterNisCreateDefault creates a ClusterNisCreateDefault with default headers values
func NewClusterNisCreateDefault(code int) *ClusterNisCreateDefault {
	return &ClusterNisCreateDefault{
		_statusCode: code,
	}
}

/* ClusterNisCreateDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 1966253    | IPv6 is not enabled in the cluster. |
| 3276964    | The NIS domain name or NIS server domain is too long. The maximum supported for domain name is 64 characters and the maximum supported for NIS server domain is 255 characters. |
| 3276933    | A maximum of 10 NIS servers can be configured per SVM. |
| 23724109   | DNS resolution failed for one or more specified servers.  |
| 23724112   | DNS resolution failed due to an internal error. Contact technical support if this issue persists.  |
| 23724132   | DNS resolution failed for all the specified servers.  |
| 23724130   | Cannot use an IPv6 name server address because there are no IPv6 interfaces. |

*/
type ClusterNisCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the cluster nis create default response
func (o *ClusterNisCreateDefault) Code() int {
	return o._statusCode
}

func (o *ClusterNisCreateDefault) Error() string {
	return fmt.Sprintf("[POST /security/authentication/cluster/nis][%d] cluster_nis_create default  %+v", o._statusCode, o.Payload)
}
func (o *ClusterNisCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ClusterNisCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
