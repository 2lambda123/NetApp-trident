// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSecurityAssociationCollectionGetParams creates a new SecurityAssociationCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSecurityAssociationCollectionGetParams() *SecurityAssociationCollectionGetParams {
	return &SecurityAssociationCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSecurityAssociationCollectionGetParamsWithTimeout creates a new SecurityAssociationCollectionGetParams object
// with the ability to set a timeout on a request.
func NewSecurityAssociationCollectionGetParamsWithTimeout(timeout time.Duration) *SecurityAssociationCollectionGetParams {
	return &SecurityAssociationCollectionGetParams{
		timeout: timeout,
	}
}

// NewSecurityAssociationCollectionGetParamsWithContext creates a new SecurityAssociationCollectionGetParams object
// with the ability to set a context for a request.
func NewSecurityAssociationCollectionGetParamsWithContext(ctx context.Context) *SecurityAssociationCollectionGetParams {
	return &SecurityAssociationCollectionGetParams{
		Context: ctx,
	}
}

// NewSecurityAssociationCollectionGetParamsWithHTTPClient creates a new SecurityAssociationCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewSecurityAssociationCollectionGetParamsWithHTTPClient(client *http.Client) *SecurityAssociationCollectionGetParams {
	return &SecurityAssociationCollectionGetParams{
		HTTPClient: client,
	}
}

/*
SecurityAssociationCollectionGetParams contains all the parameters to send to the API endpoint

	for the security association collection get operation.

	Typically these are written to a http.Request.
*/
type SecurityAssociationCollectionGetParams struct {

	/* CipherSuite.

	   Filter by cipher_suite
	*/
	CipherSuiteQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* IkeAuthentication.

	   Filter by ike.authentication
	*/
	IkeAuthenticationQueryParameter *string

	/* IkeInitiatorSecurityParameterIndex.

	   Filter by ike.initiator_security_parameter_index
	*/
	IkeInitiatorSecurityParameterIndexQueryParameter *string

	/* IkeIsInitiator.

	   Filter by ike.is_initiator
	*/
	IkeIsInitiatorQueryParameter *bool

	/* IkeResponderSecurityParameterIndex.

	   Filter by ike.responder_security_parameter_index
	*/
	IkeResponderSecurityParameterIndexQueryParameter *string

	/* IkeState.

	   Filter by ike.state
	*/
	IkeStateQueryParameter *string

	/* IkeVersion.

	   Filter by ike.version
	*/
	IkeVersionQueryParameter *int64

	/* IpsecAction.

	   Filter by ipsec.action
	*/
	IpsecActionQueryParameter *string

	/* IpsecInboundBytes.

	   Filter by ipsec.inbound.bytes
	*/
	IpsecInboundBytesQueryParameter *int64

	/* IpsecInboundPackets.

	   Filter by ipsec.inbound.packets
	*/
	IpsecInboundPacketsQueryParameter *int64

	/* IpsecInboundSecurityParameterIndex.

	   Filter by ipsec.inbound.security_parameter_index
	*/
	IpsecInboundSecurityParameterIndexQueryParameter *string

	/* IpsecOutboundBytes.

	   Filter by ipsec.outbound.bytes
	*/
	IpsecOutboundBytesQueryParameter *int64

	/* IpsecOutboundPackets.

	   Filter by ipsec.outbound.packets
	*/
	IpsecOutboundPacketsQueryParameter *int64

	/* IpsecOutboundSecurityParameterIndex.

	   Filter by ipsec.outbound.security_parameter_index
	*/
	IpsecOutboundSecurityParameterIndexQueryParameter *string

	/* IpsecState.

	   Filter by ipsec.state
	*/
	IpsecStateQueryParameter *string

	/* Lifetime.

	   Filter by lifetime
	*/
	LifetimeQueryParameter *int64

	/* LocalAddress.

	   Filter by local_address
	*/
	LocalAddressQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* NodeName.

	   Filter by node.name
	*/
	NodeNameQueryParameter *string

	/* NodeUUID.

	   Filter by node.uuid
	*/
	NodeUUIDQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* PolicyName.

	   Filter by policy_name
	*/
	PolicyNameQueryParameter *string

	/* RemoteAddress.

	   Filter by remote_address
	*/
	RemoteAddressQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* Scope.

	   Filter by scope
	*/
	ScopeQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* Type.

	   Filter by type
	*/
	TypeQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the security association collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SecurityAssociationCollectionGetParams) WithDefaults() *SecurityAssociationCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the security association collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SecurityAssociationCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := SecurityAssociationCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithTimeout(timeout time.Duration) *SecurityAssociationCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithContext(ctx context.Context) *SecurityAssociationCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithHTTPClient(client *http.Client) *SecurityAssociationCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCipherSuiteQueryParameter adds the cipherSuite to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithCipherSuiteQueryParameter(cipherSuite *string) *SecurityAssociationCollectionGetParams {
	o.SetCipherSuiteQueryParameter(cipherSuite)
	return o
}

// SetCipherSuiteQueryParameter adds the cipherSuite to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetCipherSuiteQueryParameter(cipherSuite *string) {
	o.CipherSuiteQueryParameter = cipherSuite
}

// WithFieldsQueryParameter adds the fields to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithFieldsQueryParameter(fields []string) *SecurityAssociationCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithIkeAuthenticationQueryParameter adds the ikeAuthentication to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIkeAuthenticationQueryParameter(ikeAuthentication *string) *SecurityAssociationCollectionGetParams {
	o.SetIkeAuthenticationQueryParameter(ikeAuthentication)
	return o
}

// SetIkeAuthenticationQueryParameter adds the ikeAuthentication to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIkeAuthenticationQueryParameter(ikeAuthentication *string) {
	o.IkeAuthenticationQueryParameter = ikeAuthentication
}

// WithIkeInitiatorSecurityParameterIndexQueryParameter adds the ikeInitiatorSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIkeInitiatorSecurityParameterIndexQueryParameter(ikeInitiatorSecurityParameterIndex *string) *SecurityAssociationCollectionGetParams {
	o.SetIkeInitiatorSecurityParameterIndexQueryParameter(ikeInitiatorSecurityParameterIndex)
	return o
}

// SetIkeInitiatorSecurityParameterIndexQueryParameter adds the ikeInitiatorSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIkeInitiatorSecurityParameterIndexQueryParameter(ikeInitiatorSecurityParameterIndex *string) {
	o.IkeInitiatorSecurityParameterIndexQueryParameter = ikeInitiatorSecurityParameterIndex
}

// WithIkeIsInitiatorQueryParameter adds the ikeIsInitiator to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIkeIsInitiatorQueryParameter(ikeIsInitiator *bool) *SecurityAssociationCollectionGetParams {
	o.SetIkeIsInitiatorQueryParameter(ikeIsInitiator)
	return o
}

// SetIkeIsInitiatorQueryParameter adds the ikeIsInitiator to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIkeIsInitiatorQueryParameter(ikeIsInitiator *bool) {
	o.IkeIsInitiatorQueryParameter = ikeIsInitiator
}

// WithIkeResponderSecurityParameterIndexQueryParameter adds the ikeResponderSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIkeResponderSecurityParameterIndexQueryParameter(ikeResponderSecurityParameterIndex *string) *SecurityAssociationCollectionGetParams {
	o.SetIkeResponderSecurityParameterIndexQueryParameter(ikeResponderSecurityParameterIndex)
	return o
}

// SetIkeResponderSecurityParameterIndexQueryParameter adds the ikeResponderSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIkeResponderSecurityParameterIndexQueryParameter(ikeResponderSecurityParameterIndex *string) {
	o.IkeResponderSecurityParameterIndexQueryParameter = ikeResponderSecurityParameterIndex
}

// WithIkeStateQueryParameter adds the ikeState to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIkeStateQueryParameter(ikeState *string) *SecurityAssociationCollectionGetParams {
	o.SetIkeStateQueryParameter(ikeState)
	return o
}

// SetIkeStateQueryParameter adds the ikeState to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIkeStateQueryParameter(ikeState *string) {
	o.IkeStateQueryParameter = ikeState
}

// WithIkeVersionQueryParameter adds the ikeVersion to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIkeVersionQueryParameter(ikeVersion *int64) *SecurityAssociationCollectionGetParams {
	o.SetIkeVersionQueryParameter(ikeVersion)
	return o
}

// SetIkeVersionQueryParameter adds the ikeVersion to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIkeVersionQueryParameter(ikeVersion *int64) {
	o.IkeVersionQueryParameter = ikeVersion
}

// WithIpsecActionQueryParameter adds the ipsecAction to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecActionQueryParameter(ipsecAction *string) *SecurityAssociationCollectionGetParams {
	o.SetIpsecActionQueryParameter(ipsecAction)
	return o
}

// SetIpsecActionQueryParameter adds the ipsecAction to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecActionQueryParameter(ipsecAction *string) {
	o.IpsecActionQueryParameter = ipsecAction
}

// WithIpsecInboundBytesQueryParameter adds the ipsecInboundBytes to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecInboundBytesQueryParameter(ipsecInboundBytes *int64) *SecurityAssociationCollectionGetParams {
	o.SetIpsecInboundBytesQueryParameter(ipsecInboundBytes)
	return o
}

// SetIpsecInboundBytesQueryParameter adds the ipsecInboundBytes to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecInboundBytesQueryParameter(ipsecInboundBytes *int64) {
	o.IpsecInboundBytesQueryParameter = ipsecInboundBytes
}

// WithIpsecInboundPacketsQueryParameter adds the ipsecInboundPackets to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecInboundPacketsQueryParameter(ipsecInboundPackets *int64) *SecurityAssociationCollectionGetParams {
	o.SetIpsecInboundPacketsQueryParameter(ipsecInboundPackets)
	return o
}

// SetIpsecInboundPacketsQueryParameter adds the ipsecInboundPackets to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecInboundPacketsQueryParameter(ipsecInboundPackets *int64) {
	o.IpsecInboundPacketsQueryParameter = ipsecInboundPackets
}

// WithIpsecInboundSecurityParameterIndexQueryParameter adds the ipsecInboundSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecInboundSecurityParameterIndexQueryParameter(ipsecInboundSecurityParameterIndex *string) *SecurityAssociationCollectionGetParams {
	o.SetIpsecInboundSecurityParameterIndexQueryParameter(ipsecInboundSecurityParameterIndex)
	return o
}

// SetIpsecInboundSecurityParameterIndexQueryParameter adds the ipsecInboundSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecInboundSecurityParameterIndexQueryParameter(ipsecInboundSecurityParameterIndex *string) {
	o.IpsecInboundSecurityParameterIndexQueryParameter = ipsecInboundSecurityParameterIndex
}

// WithIpsecOutboundBytesQueryParameter adds the ipsecOutboundBytes to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecOutboundBytesQueryParameter(ipsecOutboundBytes *int64) *SecurityAssociationCollectionGetParams {
	o.SetIpsecOutboundBytesQueryParameter(ipsecOutboundBytes)
	return o
}

// SetIpsecOutboundBytesQueryParameter adds the ipsecOutboundBytes to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecOutboundBytesQueryParameter(ipsecOutboundBytes *int64) {
	o.IpsecOutboundBytesQueryParameter = ipsecOutboundBytes
}

// WithIpsecOutboundPacketsQueryParameter adds the ipsecOutboundPackets to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecOutboundPacketsQueryParameter(ipsecOutboundPackets *int64) *SecurityAssociationCollectionGetParams {
	o.SetIpsecOutboundPacketsQueryParameter(ipsecOutboundPackets)
	return o
}

// SetIpsecOutboundPacketsQueryParameter adds the ipsecOutboundPackets to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecOutboundPacketsQueryParameter(ipsecOutboundPackets *int64) {
	o.IpsecOutboundPacketsQueryParameter = ipsecOutboundPackets
}

// WithIpsecOutboundSecurityParameterIndexQueryParameter adds the ipsecOutboundSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecOutboundSecurityParameterIndexQueryParameter(ipsecOutboundSecurityParameterIndex *string) *SecurityAssociationCollectionGetParams {
	o.SetIpsecOutboundSecurityParameterIndexQueryParameter(ipsecOutboundSecurityParameterIndex)
	return o
}

// SetIpsecOutboundSecurityParameterIndexQueryParameter adds the ipsecOutboundSecurityParameterIndex to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecOutboundSecurityParameterIndexQueryParameter(ipsecOutboundSecurityParameterIndex *string) {
	o.IpsecOutboundSecurityParameterIndexQueryParameter = ipsecOutboundSecurityParameterIndex
}

// WithIpsecStateQueryParameter adds the ipsecState to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithIpsecStateQueryParameter(ipsecState *string) *SecurityAssociationCollectionGetParams {
	o.SetIpsecStateQueryParameter(ipsecState)
	return o
}

// SetIpsecStateQueryParameter adds the ipsecState to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetIpsecStateQueryParameter(ipsecState *string) {
	o.IpsecStateQueryParameter = ipsecState
}

// WithLifetimeQueryParameter adds the lifetime to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithLifetimeQueryParameter(lifetime *int64) *SecurityAssociationCollectionGetParams {
	o.SetLifetimeQueryParameter(lifetime)
	return o
}

// SetLifetimeQueryParameter adds the lifetime to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetLifetimeQueryParameter(lifetime *int64) {
	o.LifetimeQueryParameter = lifetime
}

// WithLocalAddressQueryParameter adds the localAddress to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithLocalAddressQueryParameter(localAddress *string) *SecurityAssociationCollectionGetParams {
	o.SetLocalAddressQueryParameter(localAddress)
	return o
}

// SetLocalAddressQueryParameter adds the localAddress to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetLocalAddressQueryParameter(localAddress *string) {
	o.LocalAddressQueryParameter = localAddress
}

// WithMaxRecordsQueryParameter adds the maxRecords to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *SecurityAssociationCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNodeNameQueryParameter adds the nodeName to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithNodeNameQueryParameter(nodeName *string) *SecurityAssociationCollectionGetParams {
	o.SetNodeNameQueryParameter(nodeName)
	return o
}

// SetNodeNameQueryParameter adds the nodeName to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetNodeNameQueryParameter(nodeName *string) {
	o.NodeNameQueryParameter = nodeName
}

// WithNodeUUIDQueryParameter adds the nodeUUID to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithNodeUUIDQueryParameter(nodeUUID *string) *SecurityAssociationCollectionGetParams {
	o.SetNodeUUIDQueryParameter(nodeUUID)
	return o
}

// SetNodeUUIDQueryParameter adds the nodeUuid to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetNodeUUIDQueryParameter(nodeUUID *string) {
	o.NodeUUIDQueryParameter = nodeUUID
}

// WithOrderByQueryParameter adds the orderBy to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *SecurityAssociationCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPolicyNameQueryParameter adds the policyName to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithPolicyNameQueryParameter(policyName *string) *SecurityAssociationCollectionGetParams {
	o.SetPolicyNameQueryParameter(policyName)
	return o
}

// SetPolicyNameQueryParameter adds the policyName to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetPolicyNameQueryParameter(policyName *string) {
	o.PolicyNameQueryParameter = policyName
}

// WithRemoteAddressQueryParameter adds the remoteAddress to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithRemoteAddressQueryParameter(remoteAddress *string) *SecurityAssociationCollectionGetParams {
	o.SetRemoteAddressQueryParameter(remoteAddress)
	return o
}

// SetRemoteAddressQueryParameter adds the remoteAddress to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetRemoteAddressQueryParameter(remoteAddress *string) {
	o.RemoteAddressQueryParameter = remoteAddress
}

// WithReturnRecordsQueryParameter adds the returnRecords to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *SecurityAssociationCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *SecurityAssociationCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithScopeQueryParameter adds the scope to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithScopeQueryParameter(scope *string) *SecurityAssociationCollectionGetParams {
	o.SetScopeQueryParameter(scope)
	return o
}

// SetScopeQueryParameter adds the scope to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetScopeQueryParameter(scope *string) {
	o.ScopeQueryParameter = scope
}

// WithSVMNameQueryParameter adds the svmName to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *SecurityAssociationCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *SecurityAssociationCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithTypeQueryParameter adds the typeVar to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithTypeQueryParameter(typeVar *string) *SecurityAssociationCollectionGetParams {
	o.SetTypeQueryParameter(typeVar)
	return o
}

// SetTypeQueryParameter adds the type to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetTypeQueryParameter(typeVar *string) {
	o.TypeQueryParameter = typeVar
}

// WithUUIDQueryParameter adds the uuid to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) WithUUIDQueryParameter(uuid *string) *SecurityAssociationCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the security association collection get params
func (o *SecurityAssociationCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *SecurityAssociationCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CipherSuiteQueryParameter != nil {

		// query param cipher_suite
		var qrCipherSuite string

		if o.CipherSuiteQueryParameter != nil {
			qrCipherSuite = *o.CipherSuiteQueryParameter
		}
		qCipherSuite := qrCipherSuite
		if qCipherSuite != "" {

			if err := r.SetQueryParam("cipher_suite", qCipherSuite); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.IkeAuthenticationQueryParameter != nil {

		// query param ike.authentication
		var qrIkeAuthentication string

		if o.IkeAuthenticationQueryParameter != nil {
			qrIkeAuthentication = *o.IkeAuthenticationQueryParameter
		}
		qIkeAuthentication := qrIkeAuthentication
		if qIkeAuthentication != "" {

			if err := r.SetQueryParam("ike.authentication", qIkeAuthentication); err != nil {
				return err
			}
		}
	}

	if o.IkeInitiatorSecurityParameterIndexQueryParameter != nil {

		// query param ike.initiator_security_parameter_index
		var qrIkeInitiatorSecurityParameterIndex string

		if o.IkeInitiatorSecurityParameterIndexQueryParameter != nil {
			qrIkeInitiatorSecurityParameterIndex = *o.IkeInitiatorSecurityParameterIndexQueryParameter
		}
		qIkeInitiatorSecurityParameterIndex := qrIkeInitiatorSecurityParameterIndex
		if qIkeInitiatorSecurityParameterIndex != "" {

			if err := r.SetQueryParam("ike.initiator_security_parameter_index", qIkeInitiatorSecurityParameterIndex); err != nil {
				return err
			}
		}
	}

	if o.IkeIsInitiatorQueryParameter != nil {

		// query param ike.is_initiator
		var qrIkeIsInitiator bool

		if o.IkeIsInitiatorQueryParameter != nil {
			qrIkeIsInitiator = *o.IkeIsInitiatorQueryParameter
		}
		qIkeIsInitiator := swag.FormatBool(qrIkeIsInitiator)
		if qIkeIsInitiator != "" {

			if err := r.SetQueryParam("ike.is_initiator", qIkeIsInitiator); err != nil {
				return err
			}
		}
	}

	if o.IkeResponderSecurityParameterIndexQueryParameter != nil {

		// query param ike.responder_security_parameter_index
		var qrIkeResponderSecurityParameterIndex string

		if o.IkeResponderSecurityParameterIndexQueryParameter != nil {
			qrIkeResponderSecurityParameterIndex = *o.IkeResponderSecurityParameterIndexQueryParameter
		}
		qIkeResponderSecurityParameterIndex := qrIkeResponderSecurityParameterIndex
		if qIkeResponderSecurityParameterIndex != "" {

			if err := r.SetQueryParam("ike.responder_security_parameter_index", qIkeResponderSecurityParameterIndex); err != nil {
				return err
			}
		}
	}

	if o.IkeStateQueryParameter != nil {

		// query param ike.state
		var qrIkeState string

		if o.IkeStateQueryParameter != nil {
			qrIkeState = *o.IkeStateQueryParameter
		}
		qIkeState := qrIkeState
		if qIkeState != "" {

			if err := r.SetQueryParam("ike.state", qIkeState); err != nil {
				return err
			}
		}
	}

	if o.IkeVersionQueryParameter != nil {

		// query param ike.version
		var qrIkeVersion int64

		if o.IkeVersionQueryParameter != nil {
			qrIkeVersion = *o.IkeVersionQueryParameter
		}
		qIkeVersion := swag.FormatInt64(qrIkeVersion)
		if qIkeVersion != "" {

			if err := r.SetQueryParam("ike.version", qIkeVersion); err != nil {
				return err
			}
		}
	}

	if o.IpsecActionQueryParameter != nil {

		// query param ipsec.action
		var qrIpsecAction string

		if o.IpsecActionQueryParameter != nil {
			qrIpsecAction = *o.IpsecActionQueryParameter
		}
		qIpsecAction := qrIpsecAction
		if qIpsecAction != "" {

			if err := r.SetQueryParam("ipsec.action", qIpsecAction); err != nil {
				return err
			}
		}
	}

	if o.IpsecInboundBytesQueryParameter != nil {

		// query param ipsec.inbound.bytes
		var qrIpsecInboundBytes int64

		if o.IpsecInboundBytesQueryParameter != nil {
			qrIpsecInboundBytes = *o.IpsecInboundBytesQueryParameter
		}
		qIpsecInboundBytes := swag.FormatInt64(qrIpsecInboundBytes)
		if qIpsecInboundBytes != "" {

			if err := r.SetQueryParam("ipsec.inbound.bytes", qIpsecInboundBytes); err != nil {
				return err
			}
		}
	}

	if o.IpsecInboundPacketsQueryParameter != nil {

		// query param ipsec.inbound.packets
		var qrIpsecInboundPackets int64

		if o.IpsecInboundPacketsQueryParameter != nil {
			qrIpsecInboundPackets = *o.IpsecInboundPacketsQueryParameter
		}
		qIpsecInboundPackets := swag.FormatInt64(qrIpsecInboundPackets)
		if qIpsecInboundPackets != "" {

			if err := r.SetQueryParam("ipsec.inbound.packets", qIpsecInboundPackets); err != nil {
				return err
			}
		}
	}

	if o.IpsecInboundSecurityParameterIndexQueryParameter != nil {

		// query param ipsec.inbound.security_parameter_index
		var qrIpsecInboundSecurityParameterIndex string

		if o.IpsecInboundSecurityParameterIndexQueryParameter != nil {
			qrIpsecInboundSecurityParameterIndex = *o.IpsecInboundSecurityParameterIndexQueryParameter
		}
		qIpsecInboundSecurityParameterIndex := qrIpsecInboundSecurityParameterIndex
		if qIpsecInboundSecurityParameterIndex != "" {

			if err := r.SetQueryParam("ipsec.inbound.security_parameter_index", qIpsecInboundSecurityParameterIndex); err != nil {
				return err
			}
		}
	}

	if o.IpsecOutboundBytesQueryParameter != nil {

		// query param ipsec.outbound.bytes
		var qrIpsecOutboundBytes int64

		if o.IpsecOutboundBytesQueryParameter != nil {
			qrIpsecOutboundBytes = *o.IpsecOutboundBytesQueryParameter
		}
		qIpsecOutboundBytes := swag.FormatInt64(qrIpsecOutboundBytes)
		if qIpsecOutboundBytes != "" {

			if err := r.SetQueryParam("ipsec.outbound.bytes", qIpsecOutboundBytes); err != nil {
				return err
			}
		}
	}

	if o.IpsecOutboundPacketsQueryParameter != nil {

		// query param ipsec.outbound.packets
		var qrIpsecOutboundPackets int64

		if o.IpsecOutboundPacketsQueryParameter != nil {
			qrIpsecOutboundPackets = *o.IpsecOutboundPacketsQueryParameter
		}
		qIpsecOutboundPackets := swag.FormatInt64(qrIpsecOutboundPackets)
		if qIpsecOutboundPackets != "" {

			if err := r.SetQueryParam("ipsec.outbound.packets", qIpsecOutboundPackets); err != nil {
				return err
			}
		}
	}

	if o.IpsecOutboundSecurityParameterIndexQueryParameter != nil {

		// query param ipsec.outbound.security_parameter_index
		var qrIpsecOutboundSecurityParameterIndex string

		if o.IpsecOutboundSecurityParameterIndexQueryParameter != nil {
			qrIpsecOutboundSecurityParameterIndex = *o.IpsecOutboundSecurityParameterIndexQueryParameter
		}
		qIpsecOutboundSecurityParameterIndex := qrIpsecOutboundSecurityParameterIndex
		if qIpsecOutboundSecurityParameterIndex != "" {

			if err := r.SetQueryParam("ipsec.outbound.security_parameter_index", qIpsecOutboundSecurityParameterIndex); err != nil {
				return err
			}
		}
	}

	if o.IpsecStateQueryParameter != nil {

		// query param ipsec.state
		var qrIpsecState string

		if o.IpsecStateQueryParameter != nil {
			qrIpsecState = *o.IpsecStateQueryParameter
		}
		qIpsecState := qrIpsecState
		if qIpsecState != "" {

			if err := r.SetQueryParam("ipsec.state", qIpsecState); err != nil {
				return err
			}
		}
	}

	if o.LifetimeQueryParameter != nil {

		// query param lifetime
		var qrLifetime int64

		if o.LifetimeQueryParameter != nil {
			qrLifetime = *o.LifetimeQueryParameter
		}
		qLifetime := swag.FormatInt64(qrLifetime)
		if qLifetime != "" {

			if err := r.SetQueryParam("lifetime", qLifetime); err != nil {
				return err
			}
		}
	}

	if o.LocalAddressQueryParameter != nil {

		// query param local_address
		var qrLocalAddress string

		if o.LocalAddressQueryParameter != nil {
			qrLocalAddress = *o.LocalAddressQueryParameter
		}
		qLocalAddress := qrLocalAddress
		if qLocalAddress != "" {

			if err := r.SetQueryParam("local_address", qLocalAddress); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NodeNameQueryParameter != nil {

		// query param node.name
		var qrNodeName string

		if o.NodeNameQueryParameter != nil {
			qrNodeName = *o.NodeNameQueryParameter
		}
		qNodeName := qrNodeName
		if qNodeName != "" {

			if err := r.SetQueryParam("node.name", qNodeName); err != nil {
				return err
			}
		}
	}

	if o.NodeUUIDQueryParameter != nil {

		// query param node.uuid
		var qrNodeUUID string

		if o.NodeUUIDQueryParameter != nil {
			qrNodeUUID = *o.NodeUUIDQueryParameter
		}
		qNodeUUID := qrNodeUUID
		if qNodeUUID != "" {

			if err := r.SetQueryParam("node.uuid", qNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PolicyNameQueryParameter != nil {

		// query param policy_name
		var qrPolicyName string

		if o.PolicyNameQueryParameter != nil {
			qrPolicyName = *o.PolicyNameQueryParameter
		}
		qPolicyName := qrPolicyName
		if qPolicyName != "" {

			if err := r.SetQueryParam("policy_name", qPolicyName); err != nil {
				return err
			}
		}
	}

	if o.RemoteAddressQueryParameter != nil {

		// query param remote_address
		var qrRemoteAddress string

		if o.RemoteAddressQueryParameter != nil {
			qrRemoteAddress = *o.RemoteAddressQueryParameter
		}
		qRemoteAddress := qrRemoteAddress
		if qRemoteAddress != "" {

			if err := r.SetQueryParam("remote_address", qRemoteAddress); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.ScopeQueryParameter != nil {

		// query param scope
		var qrScope string

		if o.ScopeQueryParameter != nil {
			qrScope = *o.ScopeQueryParameter
		}
		qScope := qrScope
		if qScope != "" {

			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.TypeQueryParameter != nil {

		// query param type
		var qrType string

		if o.TypeQueryParameter != nil {
			qrType = *o.TypeQueryParameter
		}
		qType := qrType
		if qType != "" {

			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSecurityAssociationCollectionGet binds the parameter fields
func (o *SecurityAssociationCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamSecurityAssociationCollectionGet binds the parameter order_by
func (o *SecurityAssociationCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
