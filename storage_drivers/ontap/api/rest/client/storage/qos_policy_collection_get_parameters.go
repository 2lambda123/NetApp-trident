// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewQosPolicyCollectionGetParams creates a new QosPolicyCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewQosPolicyCollectionGetParams() *QosPolicyCollectionGetParams {
	return &QosPolicyCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewQosPolicyCollectionGetParamsWithTimeout creates a new QosPolicyCollectionGetParams object
// with the ability to set a timeout on a request.
func NewQosPolicyCollectionGetParamsWithTimeout(timeout time.Duration) *QosPolicyCollectionGetParams {
	return &QosPolicyCollectionGetParams{
		timeout: timeout,
	}
}

// NewQosPolicyCollectionGetParamsWithContext creates a new QosPolicyCollectionGetParams object
// with the ability to set a context for a request.
func NewQosPolicyCollectionGetParamsWithContext(ctx context.Context) *QosPolicyCollectionGetParams {
	return &QosPolicyCollectionGetParams{
		Context: ctx,
	}
}

// NewQosPolicyCollectionGetParamsWithHTTPClient creates a new QosPolicyCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewQosPolicyCollectionGetParamsWithHTTPClient(client *http.Client) *QosPolicyCollectionGetParams {
	return &QosPolicyCollectionGetParams{
		HTTPClient: client,
	}
}

/* QosPolicyCollectionGetParams contains all the parameters to send to the API endpoint
   for the qos policy collection get operation.

   Typically these are written to a http.Request.
*/
type QosPolicyCollectionGetParams struct {

	/* AdaptiveAbsoluteMinIops.

	   Filter by adaptive.absolute_min_iops
	*/
	AdaptiveAbsoluteMinIopsQueryParameter *int64

	/* AdaptiveExpectedIops.

	   Filter by adaptive.expected_iops
	*/
	AdaptiveExpectedIopsQueryParameter *int64

	/* AdaptivePeakIops.

	   Filter by adaptive.peak_iops
	*/
	AdaptivePeakIopsQueryParameter *int64

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* FixedCapacityShared.

	   Filter by fixed.capacity_shared
	*/
	FixedCapacitySharedQueryParameter *bool

	/* FixedMaxThroughputIops.

	   Filter by fixed.max_throughput_iops
	*/
	FixedMaxThroughputIopsQueryParameter *int64

	/* FixedMaxThroughputMbps.

	   Filter by fixed.max_throughput_mbps
	*/
	FixedMaxThroughputMbpsQueryParameter *int64

	/* FixedMinThroughputIops.

	   Filter by fixed.min_throughput_iops
	*/
	FixedMinThroughputIopsQueryParameter *int64

	/* FixedMinThroughputMbps.

	   Filter by fixed.min_throughput_mbps
	*/
	FixedMinThroughputMbpsQueryParameter *int64

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* ObjectCount.

	   Filter by object_count
	*/
	ObjectCountQueryParameter *int64

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the qos policy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QosPolicyCollectionGetParams) WithDefaults() *QosPolicyCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the qos policy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QosPolicyCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := QosPolicyCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithTimeout(timeout time.Duration) *QosPolicyCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithContext(ctx context.Context) *QosPolicyCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithHTTPClient(client *http.Client) *QosPolicyCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAdaptiveAbsoluteMinIopsQueryParameter adds the adaptiveAbsoluteMinIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithAdaptiveAbsoluteMinIopsQueryParameter(adaptiveAbsoluteMinIops *int64) *QosPolicyCollectionGetParams {
	o.SetAdaptiveAbsoluteMinIopsQueryParameter(adaptiveAbsoluteMinIops)
	return o
}

// SetAdaptiveAbsoluteMinIopsQueryParameter adds the adaptiveAbsoluteMinIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetAdaptiveAbsoluteMinIopsQueryParameter(adaptiveAbsoluteMinIops *int64) {
	o.AdaptiveAbsoluteMinIopsQueryParameter = adaptiveAbsoluteMinIops
}

// WithAdaptiveExpectedIopsQueryParameter adds the adaptiveExpectedIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithAdaptiveExpectedIopsQueryParameter(adaptiveExpectedIops *int64) *QosPolicyCollectionGetParams {
	o.SetAdaptiveExpectedIopsQueryParameter(adaptiveExpectedIops)
	return o
}

// SetAdaptiveExpectedIopsQueryParameter adds the adaptiveExpectedIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetAdaptiveExpectedIopsQueryParameter(adaptiveExpectedIops *int64) {
	o.AdaptiveExpectedIopsQueryParameter = adaptiveExpectedIops
}

// WithAdaptivePeakIopsQueryParameter adds the adaptivePeakIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithAdaptivePeakIopsQueryParameter(adaptivePeakIops *int64) *QosPolicyCollectionGetParams {
	o.SetAdaptivePeakIopsQueryParameter(adaptivePeakIops)
	return o
}

// SetAdaptivePeakIopsQueryParameter adds the adaptivePeakIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetAdaptivePeakIopsQueryParameter(adaptivePeakIops *int64) {
	o.AdaptivePeakIopsQueryParameter = adaptivePeakIops
}

// WithFieldsQueryParameter adds the fields to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithFieldsQueryParameter(fields []string) *QosPolicyCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithFixedCapacitySharedQueryParameter adds the fixedCapacityShared to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithFixedCapacitySharedQueryParameter(fixedCapacityShared *bool) *QosPolicyCollectionGetParams {
	o.SetFixedCapacitySharedQueryParameter(fixedCapacityShared)
	return o
}

// SetFixedCapacitySharedQueryParameter adds the fixedCapacityShared to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetFixedCapacitySharedQueryParameter(fixedCapacityShared *bool) {
	o.FixedCapacitySharedQueryParameter = fixedCapacityShared
}

// WithFixedMaxThroughputIopsQueryParameter adds the fixedMaxThroughputIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithFixedMaxThroughputIopsQueryParameter(fixedMaxThroughputIops *int64) *QosPolicyCollectionGetParams {
	o.SetFixedMaxThroughputIopsQueryParameter(fixedMaxThroughputIops)
	return o
}

// SetFixedMaxThroughputIopsQueryParameter adds the fixedMaxThroughputIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetFixedMaxThroughputIopsQueryParameter(fixedMaxThroughputIops *int64) {
	o.FixedMaxThroughputIopsQueryParameter = fixedMaxThroughputIops
}

// WithFixedMaxThroughputMbpsQueryParameter adds the fixedMaxThroughputMbps to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithFixedMaxThroughputMbpsQueryParameter(fixedMaxThroughputMbps *int64) *QosPolicyCollectionGetParams {
	o.SetFixedMaxThroughputMbpsQueryParameter(fixedMaxThroughputMbps)
	return o
}

// SetFixedMaxThroughputMbpsQueryParameter adds the fixedMaxThroughputMbps to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetFixedMaxThroughputMbpsQueryParameter(fixedMaxThroughputMbps *int64) {
	o.FixedMaxThroughputMbpsQueryParameter = fixedMaxThroughputMbps
}

// WithFixedMinThroughputIopsQueryParameter adds the fixedMinThroughputIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithFixedMinThroughputIopsQueryParameter(fixedMinThroughputIops *int64) *QosPolicyCollectionGetParams {
	o.SetFixedMinThroughputIopsQueryParameter(fixedMinThroughputIops)
	return o
}

// SetFixedMinThroughputIopsQueryParameter adds the fixedMinThroughputIops to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetFixedMinThroughputIopsQueryParameter(fixedMinThroughputIops *int64) {
	o.FixedMinThroughputIopsQueryParameter = fixedMinThroughputIops
}

// WithFixedMinThroughputMbpsQueryParameter adds the fixedMinThroughputMbps to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithFixedMinThroughputMbpsQueryParameter(fixedMinThroughputMbps *int64) *QosPolicyCollectionGetParams {
	o.SetFixedMinThroughputMbpsQueryParameter(fixedMinThroughputMbps)
	return o
}

// SetFixedMinThroughputMbpsQueryParameter adds the fixedMinThroughputMbps to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetFixedMinThroughputMbpsQueryParameter(fixedMinThroughputMbps *int64) {
	o.FixedMinThroughputMbpsQueryParameter = fixedMinThroughputMbps
}

// WithMaxRecordsQueryParameter adds the maxRecords to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *QosPolicyCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithNameQueryParameter(name *string) *QosPolicyCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithObjectCountQueryParameter adds the objectCount to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithObjectCountQueryParameter(objectCount *int64) *QosPolicyCollectionGetParams {
	o.SetObjectCountQueryParameter(objectCount)
	return o
}

// SetObjectCountQueryParameter adds the objectCount to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetObjectCountQueryParameter(objectCount *int64) {
	o.ObjectCountQueryParameter = objectCount
}

// WithOrderByQueryParameter adds the orderBy to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *QosPolicyCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithReturnRecordsQueryParameter adds the returnRecords to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *QosPolicyCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *QosPolicyCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSVMNameQueryParameter adds the svmName to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *QosPolicyCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *QosPolicyCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUUIDQueryParameter adds the uuid to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) WithUUIDQueryParameter(uuid *string) *QosPolicyCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the qos policy collection get params
func (o *QosPolicyCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *QosPolicyCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AdaptiveAbsoluteMinIopsQueryParameter != nil {

		// query param adaptive.absolute_min_iops
		var qrAdaptiveAbsoluteMinIops int64

		if o.AdaptiveAbsoluteMinIopsQueryParameter != nil {
			qrAdaptiveAbsoluteMinIops = *o.AdaptiveAbsoluteMinIopsQueryParameter
		}
		qAdaptiveAbsoluteMinIops := swag.FormatInt64(qrAdaptiveAbsoluteMinIops)
		if qAdaptiveAbsoluteMinIops != "" {

			if err := r.SetQueryParam("adaptive.absolute_min_iops", qAdaptiveAbsoluteMinIops); err != nil {
				return err
			}
		}
	}

	if o.AdaptiveExpectedIopsQueryParameter != nil {

		// query param adaptive.expected_iops
		var qrAdaptiveExpectedIops int64

		if o.AdaptiveExpectedIopsQueryParameter != nil {
			qrAdaptiveExpectedIops = *o.AdaptiveExpectedIopsQueryParameter
		}
		qAdaptiveExpectedIops := swag.FormatInt64(qrAdaptiveExpectedIops)
		if qAdaptiveExpectedIops != "" {

			if err := r.SetQueryParam("adaptive.expected_iops", qAdaptiveExpectedIops); err != nil {
				return err
			}
		}
	}

	if o.AdaptivePeakIopsQueryParameter != nil {

		// query param adaptive.peak_iops
		var qrAdaptivePeakIops int64

		if o.AdaptivePeakIopsQueryParameter != nil {
			qrAdaptivePeakIops = *o.AdaptivePeakIopsQueryParameter
		}
		qAdaptivePeakIops := swag.FormatInt64(qrAdaptivePeakIops)
		if qAdaptivePeakIops != "" {

			if err := r.SetQueryParam("adaptive.peak_iops", qAdaptivePeakIops); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.FixedCapacitySharedQueryParameter != nil {

		// query param fixed.capacity_shared
		var qrFixedCapacityShared bool

		if o.FixedCapacitySharedQueryParameter != nil {
			qrFixedCapacityShared = *o.FixedCapacitySharedQueryParameter
		}
		qFixedCapacityShared := swag.FormatBool(qrFixedCapacityShared)
		if qFixedCapacityShared != "" {

			if err := r.SetQueryParam("fixed.capacity_shared", qFixedCapacityShared); err != nil {
				return err
			}
		}
	}

	if o.FixedMaxThroughputIopsQueryParameter != nil {

		// query param fixed.max_throughput_iops
		var qrFixedMaxThroughputIops int64

		if o.FixedMaxThroughputIopsQueryParameter != nil {
			qrFixedMaxThroughputIops = *o.FixedMaxThroughputIopsQueryParameter
		}
		qFixedMaxThroughputIops := swag.FormatInt64(qrFixedMaxThroughputIops)
		if qFixedMaxThroughputIops != "" {

			if err := r.SetQueryParam("fixed.max_throughput_iops", qFixedMaxThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.FixedMaxThroughputMbpsQueryParameter != nil {

		// query param fixed.max_throughput_mbps
		var qrFixedMaxThroughputMbps int64

		if o.FixedMaxThroughputMbpsQueryParameter != nil {
			qrFixedMaxThroughputMbps = *o.FixedMaxThroughputMbpsQueryParameter
		}
		qFixedMaxThroughputMbps := swag.FormatInt64(qrFixedMaxThroughputMbps)
		if qFixedMaxThroughputMbps != "" {

			if err := r.SetQueryParam("fixed.max_throughput_mbps", qFixedMaxThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.FixedMinThroughputIopsQueryParameter != nil {

		// query param fixed.min_throughput_iops
		var qrFixedMinThroughputIops int64

		if o.FixedMinThroughputIopsQueryParameter != nil {
			qrFixedMinThroughputIops = *o.FixedMinThroughputIopsQueryParameter
		}
		qFixedMinThroughputIops := swag.FormatInt64(qrFixedMinThroughputIops)
		if qFixedMinThroughputIops != "" {

			if err := r.SetQueryParam("fixed.min_throughput_iops", qFixedMinThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.FixedMinThroughputMbpsQueryParameter != nil {

		// query param fixed.min_throughput_mbps
		var qrFixedMinThroughputMbps int64

		if o.FixedMinThroughputMbpsQueryParameter != nil {
			qrFixedMinThroughputMbps = *o.FixedMinThroughputMbpsQueryParameter
		}
		qFixedMinThroughputMbps := swag.FormatInt64(qrFixedMinThroughputMbps)
		if qFixedMinThroughputMbps != "" {

			if err := r.SetQueryParam("fixed.min_throughput_mbps", qFixedMinThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.ObjectCountQueryParameter != nil {

		// query param object_count
		var qrObjectCount int64

		if o.ObjectCountQueryParameter != nil {
			qrObjectCount = *o.ObjectCountQueryParameter
		}
		qObjectCount := swag.FormatInt64(qrObjectCount)
		if qObjectCount != "" {

			if err := r.SetQueryParam("object_count", qObjectCount); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamQosPolicyCollectionGet binds the parameter fields
func (o *QosPolicyCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamQosPolicyCollectionGet binds the parameter order_by
func (o *QosPolicyCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
