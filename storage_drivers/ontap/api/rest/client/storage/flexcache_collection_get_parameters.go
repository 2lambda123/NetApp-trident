// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewFlexcacheCollectionGetParams creates a new FlexcacheCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFlexcacheCollectionGetParams() *FlexcacheCollectionGetParams {
	return &FlexcacheCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFlexcacheCollectionGetParamsWithTimeout creates a new FlexcacheCollectionGetParams object
// with the ability to set a timeout on a request.
func NewFlexcacheCollectionGetParamsWithTimeout(timeout time.Duration) *FlexcacheCollectionGetParams {
	return &FlexcacheCollectionGetParams{
		timeout: timeout,
	}
}

// NewFlexcacheCollectionGetParamsWithContext creates a new FlexcacheCollectionGetParams object
// with the ability to set a context for a request.
func NewFlexcacheCollectionGetParamsWithContext(ctx context.Context) *FlexcacheCollectionGetParams {
	return &FlexcacheCollectionGetParams{
		Context: ctx,
	}
}

// NewFlexcacheCollectionGetParamsWithHTTPClient creates a new FlexcacheCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewFlexcacheCollectionGetParamsWithHTTPClient(client *http.Client) *FlexcacheCollectionGetParams {
	return &FlexcacheCollectionGetParams{
		HTTPClient: client,
	}
}

/*
FlexcacheCollectionGetParams contains all the parameters to send to the API endpoint

	for the flexcache collection get operation.

	Typically these are written to a http.Request.
*/
type FlexcacheCollectionGetParams struct {

	/* AggregatesName.

	   Filter by aggregates.name
	*/
	AggregatesNameQueryParameter *string

	/* AggregatesUUID.

	   Filter by aggregates.uuid
	*/
	AggregatesUUIDQueryParameter *string

	/* ConstituentsPerAggregate.

	   Filter by constituents_per_aggregate
	*/
	ConstituentsPerAggregateQueryParameter *int64

	/* DrCache.

	   Filter by dr_cache
	*/
	DrCacheQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* GlobalFileLockingEnabled.

	   Filter by global_file_locking_enabled
	*/
	GlobalFileLockingEnabledQueryParameter *bool

	/* GuaranteeType.

	   Filter by guarantee.type
	*/
	GuaranteeTypeQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* OriginsClusterName.

	   Filter by origins.cluster.name
	*/
	OriginsClusterNameQueryParameter *string

	/* OriginsClusterUUID.

	   Filter by origins.cluster.uuid
	*/
	OriginsClusterUUIDQueryParameter *string

	/* OriginsCreateTime.

	   Filter by origins.create_time
	*/
	OriginsCreateTimeQueryParameter *string

	/* OriginsIPAddress.

	   Filter by origins.ip_address
	*/
	OriginsIPAddressQueryParameter *string

	/* OriginsSize.

	   Filter by origins.size
	*/
	OriginsSizeQueryParameter *int64

	/* OriginsState.

	   Filter by origins.state
	*/
	OriginsStateQueryParameter *string

	/* OriginsSvmName.

	   Filter by origins.svm.name
	*/
	OriginsSVMNameQueryParameter *string

	/* OriginsSvmUUID.

	   Filter by origins.svm.uuid
	*/
	OriginsSVMUUIDQueryParameter *string

	/* OriginsVolumeName.

	   Filter by origins.volume.name
	*/
	OriginsVolumeNameQueryParameter *string

	/* OriginsVolumeUUID.

	   Filter by origins.volume.uuid
	*/
	OriginsVolumeUUIDQueryParameter *string

	/* Path.

	   Filter by path
	*/
	PathQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* Size.

	   Filter by size
	*/
	SizeQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UseTieredAggregate.

	   Filter by use_tiered_aggregate
	*/
	UseTieredAggregateQueryParameter *bool

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the flexcache collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FlexcacheCollectionGetParams) WithDefaults() *FlexcacheCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the flexcache collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FlexcacheCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := FlexcacheCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithTimeout(timeout time.Duration) *FlexcacheCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithContext(ctx context.Context) *FlexcacheCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithHTTPClient(client *http.Client) *FlexcacheCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAggregatesNameQueryParameter adds the aggregatesName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithAggregatesNameQueryParameter(aggregatesName *string) *FlexcacheCollectionGetParams {
	o.SetAggregatesNameQueryParameter(aggregatesName)
	return o
}

// SetAggregatesNameQueryParameter adds the aggregatesName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetAggregatesNameQueryParameter(aggregatesName *string) {
	o.AggregatesNameQueryParameter = aggregatesName
}

// WithAggregatesUUIDQueryParameter adds the aggregatesUUID to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithAggregatesUUIDQueryParameter(aggregatesUUID *string) *FlexcacheCollectionGetParams {
	o.SetAggregatesUUIDQueryParameter(aggregatesUUID)
	return o
}

// SetAggregatesUUIDQueryParameter adds the aggregatesUuid to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetAggregatesUUIDQueryParameter(aggregatesUUID *string) {
	o.AggregatesUUIDQueryParameter = aggregatesUUID
}

// WithConstituentsPerAggregateQueryParameter adds the constituentsPerAggregate to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithConstituentsPerAggregateQueryParameter(constituentsPerAggregate *int64) *FlexcacheCollectionGetParams {
	o.SetConstituentsPerAggregateQueryParameter(constituentsPerAggregate)
	return o
}

// SetConstituentsPerAggregateQueryParameter adds the constituentsPerAggregate to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetConstituentsPerAggregateQueryParameter(constituentsPerAggregate *int64) {
	o.ConstituentsPerAggregateQueryParameter = constituentsPerAggregate
}

// WithDrCacheQueryParameter adds the drCache to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithDrCacheQueryParameter(drCache *bool) *FlexcacheCollectionGetParams {
	o.SetDrCacheQueryParameter(drCache)
	return o
}

// SetDrCacheQueryParameter adds the drCache to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetDrCacheQueryParameter(drCache *bool) {
	o.DrCacheQueryParameter = drCache
}

// WithFieldsQueryParameter adds the fields to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithFieldsQueryParameter(fields []string) *FlexcacheCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithGlobalFileLockingEnabledQueryParameter adds the globalFileLockingEnabled to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithGlobalFileLockingEnabledQueryParameter(globalFileLockingEnabled *bool) *FlexcacheCollectionGetParams {
	o.SetGlobalFileLockingEnabledQueryParameter(globalFileLockingEnabled)
	return o
}

// SetGlobalFileLockingEnabledQueryParameter adds the globalFileLockingEnabled to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetGlobalFileLockingEnabledQueryParameter(globalFileLockingEnabled *bool) {
	o.GlobalFileLockingEnabledQueryParameter = globalFileLockingEnabled
}

// WithGuaranteeTypeQueryParameter adds the guaranteeType to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithGuaranteeTypeQueryParameter(guaranteeType *string) *FlexcacheCollectionGetParams {
	o.SetGuaranteeTypeQueryParameter(guaranteeType)
	return o
}

// SetGuaranteeTypeQueryParameter adds the guaranteeType to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetGuaranteeTypeQueryParameter(guaranteeType *string) {
	o.GuaranteeTypeQueryParameter = guaranteeType
}

// WithMaxRecordsQueryParameter adds the maxRecords to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *FlexcacheCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithNameQueryParameter(name *string) *FlexcacheCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *FlexcacheCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithOriginsClusterNameQueryParameter adds the originsClusterName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsClusterNameQueryParameter(originsClusterName *string) *FlexcacheCollectionGetParams {
	o.SetOriginsClusterNameQueryParameter(originsClusterName)
	return o
}

// SetOriginsClusterNameQueryParameter adds the originsClusterName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsClusterNameQueryParameter(originsClusterName *string) {
	o.OriginsClusterNameQueryParameter = originsClusterName
}

// WithOriginsClusterUUIDQueryParameter adds the originsClusterUUID to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsClusterUUIDQueryParameter(originsClusterUUID *string) *FlexcacheCollectionGetParams {
	o.SetOriginsClusterUUIDQueryParameter(originsClusterUUID)
	return o
}

// SetOriginsClusterUUIDQueryParameter adds the originsClusterUuid to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsClusterUUIDQueryParameter(originsClusterUUID *string) {
	o.OriginsClusterUUIDQueryParameter = originsClusterUUID
}

// WithOriginsCreateTimeQueryParameter adds the originsCreateTime to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsCreateTimeQueryParameter(originsCreateTime *string) *FlexcacheCollectionGetParams {
	o.SetOriginsCreateTimeQueryParameter(originsCreateTime)
	return o
}

// SetOriginsCreateTimeQueryParameter adds the originsCreateTime to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsCreateTimeQueryParameter(originsCreateTime *string) {
	o.OriginsCreateTimeQueryParameter = originsCreateTime
}

// WithOriginsIPAddressQueryParameter adds the originsIPAddress to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsIPAddressQueryParameter(originsIPAddress *string) *FlexcacheCollectionGetParams {
	o.SetOriginsIPAddressQueryParameter(originsIPAddress)
	return o
}

// SetOriginsIPAddressQueryParameter adds the originsIpAddress to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsIPAddressQueryParameter(originsIPAddress *string) {
	o.OriginsIPAddressQueryParameter = originsIPAddress
}

// WithOriginsSizeQueryParameter adds the originsSize to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsSizeQueryParameter(originsSize *int64) *FlexcacheCollectionGetParams {
	o.SetOriginsSizeQueryParameter(originsSize)
	return o
}

// SetOriginsSizeQueryParameter adds the originsSize to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsSizeQueryParameter(originsSize *int64) {
	o.OriginsSizeQueryParameter = originsSize
}

// WithOriginsStateQueryParameter adds the originsState to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsStateQueryParameter(originsState *string) *FlexcacheCollectionGetParams {
	o.SetOriginsStateQueryParameter(originsState)
	return o
}

// SetOriginsStateQueryParameter adds the originsState to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsStateQueryParameter(originsState *string) {
	o.OriginsStateQueryParameter = originsState
}

// WithOriginsSVMNameQueryParameter adds the originsSvmName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsSVMNameQueryParameter(originsSvmName *string) *FlexcacheCollectionGetParams {
	o.SetOriginsSVMNameQueryParameter(originsSvmName)
	return o
}

// SetOriginsSVMNameQueryParameter adds the originsSvmName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsSVMNameQueryParameter(originsSvmName *string) {
	o.OriginsSVMNameQueryParameter = originsSvmName
}

// WithOriginsSVMUUIDQueryParameter adds the originsSvmUUID to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsSVMUUIDQueryParameter(originsSvmUUID *string) *FlexcacheCollectionGetParams {
	o.SetOriginsSVMUUIDQueryParameter(originsSvmUUID)
	return o
}

// SetOriginsSVMUUIDQueryParameter adds the originsSvmUuid to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsSVMUUIDQueryParameter(originsSvmUUID *string) {
	o.OriginsSVMUUIDQueryParameter = originsSvmUUID
}

// WithOriginsVolumeNameQueryParameter adds the originsVolumeName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsVolumeNameQueryParameter(originsVolumeName *string) *FlexcacheCollectionGetParams {
	o.SetOriginsVolumeNameQueryParameter(originsVolumeName)
	return o
}

// SetOriginsVolumeNameQueryParameter adds the originsVolumeName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsVolumeNameQueryParameter(originsVolumeName *string) {
	o.OriginsVolumeNameQueryParameter = originsVolumeName
}

// WithOriginsVolumeUUIDQueryParameter adds the originsVolumeUUID to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithOriginsVolumeUUIDQueryParameter(originsVolumeUUID *string) *FlexcacheCollectionGetParams {
	o.SetOriginsVolumeUUIDQueryParameter(originsVolumeUUID)
	return o
}

// SetOriginsVolumeUUIDQueryParameter adds the originsVolumeUuid to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetOriginsVolumeUUIDQueryParameter(originsVolumeUUID *string) {
	o.OriginsVolumeUUIDQueryParameter = originsVolumeUUID
}

// WithPathQueryParameter adds the path to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithPathQueryParameter(path *string) *FlexcacheCollectionGetParams {
	o.SetPathQueryParameter(path)
	return o
}

// SetPathQueryParameter adds the path to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetPathQueryParameter(path *string) {
	o.PathQueryParameter = path
}

// WithReturnRecordsQueryParameter adds the returnRecords to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *FlexcacheCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *FlexcacheCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSizeQueryParameter adds the size to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithSizeQueryParameter(size *int64) *FlexcacheCollectionGetParams {
	o.SetSizeQueryParameter(size)
	return o
}

// SetSizeQueryParameter adds the size to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetSizeQueryParameter(size *int64) {
	o.SizeQueryParameter = size
}

// WithSVMNameQueryParameter adds the svmName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *FlexcacheCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *FlexcacheCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUseTieredAggregateQueryParameter adds the useTieredAggregate to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithUseTieredAggregateQueryParameter(useTieredAggregate *bool) *FlexcacheCollectionGetParams {
	o.SetUseTieredAggregateQueryParameter(useTieredAggregate)
	return o
}

// SetUseTieredAggregateQueryParameter adds the useTieredAggregate to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetUseTieredAggregateQueryParameter(useTieredAggregate *bool) {
	o.UseTieredAggregateQueryParameter = useTieredAggregate
}

// WithUUIDQueryParameter adds the uuid to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) WithUUIDQueryParameter(uuid *string) *FlexcacheCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the flexcache collection get params
func (o *FlexcacheCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *FlexcacheCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AggregatesNameQueryParameter != nil {

		// query param aggregates.name
		var qrAggregatesName string

		if o.AggregatesNameQueryParameter != nil {
			qrAggregatesName = *o.AggregatesNameQueryParameter
		}
		qAggregatesName := qrAggregatesName
		if qAggregatesName != "" {

			if err := r.SetQueryParam("aggregates.name", qAggregatesName); err != nil {
				return err
			}
		}
	}

	if o.AggregatesUUIDQueryParameter != nil {

		// query param aggregates.uuid
		var qrAggregatesUUID string

		if o.AggregatesUUIDQueryParameter != nil {
			qrAggregatesUUID = *o.AggregatesUUIDQueryParameter
		}
		qAggregatesUUID := qrAggregatesUUID
		if qAggregatesUUID != "" {

			if err := r.SetQueryParam("aggregates.uuid", qAggregatesUUID); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsPerAggregateQueryParameter != nil {

		// query param constituents_per_aggregate
		var qrConstituentsPerAggregate int64

		if o.ConstituentsPerAggregateQueryParameter != nil {
			qrConstituentsPerAggregate = *o.ConstituentsPerAggregateQueryParameter
		}
		qConstituentsPerAggregate := swag.FormatInt64(qrConstituentsPerAggregate)
		if qConstituentsPerAggregate != "" {

			if err := r.SetQueryParam("constituents_per_aggregate", qConstituentsPerAggregate); err != nil {
				return err
			}
		}
	}

	if o.DrCacheQueryParameter != nil {

		// query param dr_cache
		var qrDrCache bool

		if o.DrCacheQueryParameter != nil {
			qrDrCache = *o.DrCacheQueryParameter
		}
		qDrCache := swag.FormatBool(qrDrCache)
		if qDrCache != "" {

			if err := r.SetQueryParam("dr_cache", qDrCache); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.GlobalFileLockingEnabledQueryParameter != nil {

		// query param global_file_locking_enabled
		var qrGlobalFileLockingEnabled bool

		if o.GlobalFileLockingEnabledQueryParameter != nil {
			qrGlobalFileLockingEnabled = *o.GlobalFileLockingEnabledQueryParameter
		}
		qGlobalFileLockingEnabled := swag.FormatBool(qrGlobalFileLockingEnabled)
		if qGlobalFileLockingEnabled != "" {

			if err := r.SetQueryParam("global_file_locking_enabled", qGlobalFileLockingEnabled); err != nil {
				return err
			}
		}
	}

	if o.GuaranteeTypeQueryParameter != nil {

		// query param guarantee.type
		var qrGuaranteeType string

		if o.GuaranteeTypeQueryParameter != nil {
			qrGuaranteeType = *o.GuaranteeTypeQueryParameter
		}
		qGuaranteeType := qrGuaranteeType
		if qGuaranteeType != "" {

			if err := r.SetQueryParam("guarantee.type", qGuaranteeType); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.OriginsClusterNameQueryParameter != nil {

		// query param origins.cluster.name
		var qrOriginsClusterName string

		if o.OriginsClusterNameQueryParameter != nil {
			qrOriginsClusterName = *o.OriginsClusterNameQueryParameter
		}
		qOriginsClusterName := qrOriginsClusterName
		if qOriginsClusterName != "" {

			if err := r.SetQueryParam("origins.cluster.name", qOriginsClusterName); err != nil {
				return err
			}
		}
	}

	if o.OriginsClusterUUIDQueryParameter != nil {

		// query param origins.cluster.uuid
		var qrOriginsClusterUUID string

		if o.OriginsClusterUUIDQueryParameter != nil {
			qrOriginsClusterUUID = *o.OriginsClusterUUIDQueryParameter
		}
		qOriginsClusterUUID := qrOriginsClusterUUID
		if qOriginsClusterUUID != "" {

			if err := r.SetQueryParam("origins.cluster.uuid", qOriginsClusterUUID); err != nil {
				return err
			}
		}
	}

	if o.OriginsCreateTimeQueryParameter != nil {

		// query param origins.create_time
		var qrOriginsCreateTime string

		if o.OriginsCreateTimeQueryParameter != nil {
			qrOriginsCreateTime = *o.OriginsCreateTimeQueryParameter
		}
		qOriginsCreateTime := qrOriginsCreateTime
		if qOriginsCreateTime != "" {

			if err := r.SetQueryParam("origins.create_time", qOriginsCreateTime); err != nil {
				return err
			}
		}
	}

	if o.OriginsIPAddressQueryParameter != nil {

		// query param origins.ip_address
		var qrOriginsIPAddress string

		if o.OriginsIPAddressQueryParameter != nil {
			qrOriginsIPAddress = *o.OriginsIPAddressQueryParameter
		}
		qOriginsIPAddress := qrOriginsIPAddress
		if qOriginsIPAddress != "" {

			if err := r.SetQueryParam("origins.ip_address", qOriginsIPAddress); err != nil {
				return err
			}
		}
	}

	if o.OriginsSizeQueryParameter != nil {

		// query param origins.size
		var qrOriginsSize int64

		if o.OriginsSizeQueryParameter != nil {
			qrOriginsSize = *o.OriginsSizeQueryParameter
		}
		qOriginsSize := swag.FormatInt64(qrOriginsSize)
		if qOriginsSize != "" {

			if err := r.SetQueryParam("origins.size", qOriginsSize); err != nil {
				return err
			}
		}
	}

	if o.OriginsStateQueryParameter != nil {

		// query param origins.state
		var qrOriginsState string

		if o.OriginsStateQueryParameter != nil {
			qrOriginsState = *o.OriginsStateQueryParameter
		}
		qOriginsState := qrOriginsState
		if qOriginsState != "" {

			if err := r.SetQueryParam("origins.state", qOriginsState); err != nil {
				return err
			}
		}
	}

	if o.OriginsSVMNameQueryParameter != nil {

		// query param origins.svm.name
		var qrOriginsSvmName string

		if o.OriginsSVMNameQueryParameter != nil {
			qrOriginsSvmName = *o.OriginsSVMNameQueryParameter
		}
		qOriginsSvmName := qrOriginsSvmName
		if qOriginsSvmName != "" {

			if err := r.SetQueryParam("origins.svm.name", qOriginsSvmName); err != nil {
				return err
			}
		}
	}

	if o.OriginsSVMUUIDQueryParameter != nil {

		// query param origins.svm.uuid
		var qrOriginsSvmUUID string

		if o.OriginsSVMUUIDQueryParameter != nil {
			qrOriginsSvmUUID = *o.OriginsSVMUUIDQueryParameter
		}
		qOriginsSvmUUID := qrOriginsSvmUUID
		if qOriginsSvmUUID != "" {

			if err := r.SetQueryParam("origins.svm.uuid", qOriginsSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.OriginsVolumeNameQueryParameter != nil {

		// query param origins.volume.name
		var qrOriginsVolumeName string

		if o.OriginsVolumeNameQueryParameter != nil {
			qrOriginsVolumeName = *o.OriginsVolumeNameQueryParameter
		}
		qOriginsVolumeName := qrOriginsVolumeName
		if qOriginsVolumeName != "" {

			if err := r.SetQueryParam("origins.volume.name", qOriginsVolumeName); err != nil {
				return err
			}
		}
	}

	if o.OriginsVolumeUUIDQueryParameter != nil {

		// query param origins.volume.uuid
		var qrOriginsVolumeUUID string

		if o.OriginsVolumeUUIDQueryParameter != nil {
			qrOriginsVolumeUUID = *o.OriginsVolumeUUIDQueryParameter
		}
		qOriginsVolumeUUID := qrOriginsVolumeUUID
		if qOriginsVolumeUUID != "" {

			if err := r.SetQueryParam("origins.volume.uuid", qOriginsVolumeUUID); err != nil {
				return err
			}
		}
	}

	if o.PathQueryParameter != nil {

		// query param path
		var qrPath string

		if o.PathQueryParameter != nil {
			qrPath = *o.PathQueryParameter
		}
		qPath := qrPath
		if qPath != "" {

			if err := r.SetQueryParam("path", qPath); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SizeQueryParameter != nil {

		// query param size
		var qrSize int64

		if o.SizeQueryParameter != nil {
			qrSize = *o.SizeQueryParameter
		}
		qSize := swag.FormatInt64(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UseTieredAggregateQueryParameter != nil {

		// query param use_tiered_aggregate
		var qrUseTieredAggregate bool

		if o.UseTieredAggregateQueryParameter != nil {
			qrUseTieredAggregate = *o.UseTieredAggregateQueryParameter
		}
		qUseTieredAggregate := swag.FormatBool(qrUseTieredAggregate)
		if qUseTieredAggregate != "" {

			if err := r.SetQueryParam("use_tiered_aggregate", qUseTieredAggregate); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamFlexcacheCollectionGet binds the parameter fields
func (o *FlexcacheCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamFlexcacheCollectionGet binds the parameter order_by
func (o *FlexcacheCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
