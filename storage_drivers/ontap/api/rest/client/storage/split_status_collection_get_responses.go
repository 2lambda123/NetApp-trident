// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// SplitStatusCollectionGetReader is a Reader for the SplitStatusCollectionGet structure.
type SplitStatusCollectionGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SplitStatusCollectionGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSplitStatusCollectionGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSplitStatusCollectionGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSplitStatusCollectionGetOK creates a SplitStatusCollectionGetOK with default headers values
func NewSplitStatusCollectionGetOK() *SplitStatusCollectionGetOK {
	return &SplitStatusCollectionGetOK{}
}

/* SplitStatusCollectionGetOK describes a response with status code 200, with default header values.

OK
*/
type SplitStatusCollectionGetOK struct {
	Payload *models.SplitStatusResponse
}

func (o *SplitStatusCollectionGetOK) Error() string {
	return fmt.Sprintf("[GET /storage/file/clone/split-status][%d] splitStatusCollectionGetOK  %+v", 200, o.Payload)
}
func (o *SplitStatusCollectionGetOK) GetPayload() *models.SplitStatusResponse {
	return o.Payload
}

func (o *SplitStatusCollectionGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SplitStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSplitStatusCollectionGetDefault creates a SplitStatusCollectionGetDefault with default headers values
func NewSplitStatusCollectionGetDefault(code int) *SplitStatusCollectionGetDefault {
	return &SplitStatusCollectionGetDefault{
		_statusCode: code,
	}
}

/* SplitStatusCollectionGetDefault describes a response with status code -1, with default header values.

Error
*/
type SplitStatusCollectionGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the split status collection get default response
func (o *SplitStatusCollectionGetDefault) Code() int {
	return o._statusCode
}

func (o *SplitStatusCollectionGetDefault) Error() string {
	return fmt.Sprintf("[GET /storage/file/clone/split-status][%d] split_status_collection_get default  %+v", o._statusCode, o.Payload)
}
func (o *SplitStatusCollectionGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SplitStatusCollectionGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
