// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// FileMoveCreateReader is a Reader for the FileMoveCreate structure.
type FileMoveCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FileMoveCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewFileMoveCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFileMoveCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFileMoveCreateCreated creates a FileMoveCreateCreated with default headers values
func NewFileMoveCreateCreated() *FileMoveCreateCreated {
	return &FileMoveCreateCreated{}
}

/*
FileMoveCreateCreated describes a response with status code 201, with default header values.

Created
*/
type FileMoveCreateCreated struct {
}

// IsSuccess returns true when this file move create created response has a 2xx status code
func (o *FileMoveCreateCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this file move create created response has a 3xx status code
func (o *FileMoveCreateCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this file move create created response has a 4xx status code
func (o *FileMoveCreateCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this file move create created response has a 5xx status code
func (o *FileMoveCreateCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this file move create created response a status code equal to that given
func (o *FileMoveCreateCreated) IsCode(code int) bool {
	return code == 201
}

func (o *FileMoveCreateCreated) Error() string {
	return fmt.Sprintf("[POST /storage/file/moves][%d] fileMoveCreateCreated ", 201)
}

func (o *FileMoveCreateCreated) String() string {
	return fmt.Sprintf("[POST /storage/file/moves][%d] fileMoveCreateCreated ", 201)
}

func (o *FileMoveCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFileMoveCreateDefault creates a FileMoveCreateDefault with default headers values
func NewFileMoveCreateDefault(code int) *FileMoveCreateDefault {
	return &FileMoveCreateDefault{
		_statusCode: code,
	}
}

/*
	FileMoveCreateDefault describes a response with status code -1, with default header values.

	ONTAP Error Response Codes

| Error Code | Description |
| ---------- | ----------- |
| 7012352 | File locations are inconsistent. All files must be on the same volume. |
| 7012353 | Exceeded the file operations supported number of files. |
| 7012354 | Unable to pair the number of source files to destination files. |
| 7012357 | Cannot start a file operation until all cluster nodes support the file operations capability. |
| 7012358 | The specified source path is invalid. |
| 7012359 | The specified destination path is invalid. |
| 7012360 | The SVMs are not in an intracluster peering relationship. |
| 7012361 | The SVMs peering relationship does not include application \"file-move\". |
| 7012362 | The SVMs are not yet in a peered state. |
| 7012363 | Cannot move files. All file operations must be managed by the destination SVM's administrator. |
| 7012365 | Copying a file between clusters is not supported. |
| 7012367 | A reference path may only be specified if multiple source paths are specified. |
| 7012368 | The reference path must have a matching source path. |
| 7012371 | The reference cutover time exceeds the maximum allowable time. |
| 7012374 | Source volume and destination volume have different home clusters. |
| 7012376 | Operation not allowed on a volume that is part of a SnapMirror Synchronous relationship. |
| 7012377 | Cannot start a file move operation on the volume because an active volume conversion is in progress. |
| 144179206 | Source file does not exist. |
| 144179207 | Volume capacity balancing requires an effective cluster version of 9.10.1 or later. |
| 144180200 | Destination constituent not a member of FlexGroup volume. |
| 144180201 | Destination constituent not properly configured. |
| 144180206 | File movement with automatic destination constituent selection only supported on FlexGroup volumes with more than one constituent. |
| 196608143 | Cannot start the operation. The volume is undergoing a secure purge operation. |
*/
type FileMoveCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the file move create default response
func (o *FileMoveCreateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this file move create default response has a 2xx status code
func (o *FileMoveCreateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this file move create default response has a 3xx status code
func (o *FileMoveCreateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this file move create default response has a 4xx status code
func (o *FileMoveCreateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this file move create default response has a 5xx status code
func (o *FileMoveCreateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this file move create default response a status code equal to that given
func (o *FileMoveCreateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *FileMoveCreateDefault) Error() string {
	return fmt.Sprintf("[POST /storage/file/moves][%d] file_move_create default  %+v", o._statusCode, o.Payload)
}

func (o *FileMoveCreateDefault) String() string {
	return fmt.Sprintf("[POST /storage/file/moves][%d] file_move_create default  %+v", o._statusCode, o.Payload)
}

func (o *FileMoveCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *FileMoveCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
