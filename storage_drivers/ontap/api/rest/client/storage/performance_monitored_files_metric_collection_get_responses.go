// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// PerformanceMonitoredFilesMetricCollectionGetReader is a Reader for the PerformanceMonitoredFilesMetricCollectionGet structure.
type PerformanceMonitoredFilesMetricCollectionGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PerformanceMonitoredFilesMetricCollectionGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPerformanceMonitoredFilesMetricCollectionGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPerformanceMonitoredFilesMetricCollectionGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPerformanceMonitoredFilesMetricCollectionGetOK creates a PerformanceMonitoredFilesMetricCollectionGetOK with default headers values
func NewPerformanceMonitoredFilesMetricCollectionGetOK() *PerformanceMonitoredFilesMetricCollectionGetOK {
	return &PerformanceMonitoredFilesMetricCollectionGetOK{}
}

/* PerformanceMonitoredFilesMetricCollectionGetOK describes a response with status code 200, with default header values.

OK
*/
type PerformanceMonitoredFilesMetricCollectionGetOK struct {
	Payload *models.PerformanceMonitoredFilesMetricResponse
}

func (o *PerformanceMonitoredFilesMetricCollectionGetOK) Error() string {
	return fmt.Sprintf("[GET /storage/monitored-files/{monitored_file.uuid}/metrics][%d] performanceMonitoredFilesMetricCollectionGetOK  %+v", 200, o.Payload)
}
func (o *PerformanceMonitoredFilesMetricCollectionGetOK) GetPayload() *models.PerformanceMonitoredFilesMetricResponse {
	return o.Payload
}

func (o *PerformanceMonitoredFilesMetricCollectionGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PerformanceMonitoredFilesMetricResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformanceMonitoredFilesMetricCollectionGetDefault creates a PerformanceMonitoredFilesMetricCollectionGetDefault with default headers values
func NewPerformanceMonitoredFilesMetricCollectionGetDefault(code int) *PerformanceMonitoredFilesMetricCollectionGetDefault {
	return &PerformanceMonitoredFilesMetricCollectionGetDefault{
		_statusCode: code,
	}
}

/* PerformanceMonitoredFilesMetricCollectionGetDefault describes a response with status code -1, with default header values.

Error
*/
type PerformanceMonitoredFilesMetricCollectionGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the performance monitored files metric collection get default response
func (o *PerformanceMonitoredFilesMetricCollectionGetDefault) Code() int {
	return o._statusCode
}

func (o *PerformanceMonitoredFilesMetricCollectionGetDefault) Error() string {
	return fmt.Sprintf("[GET /storage/monitored-files/{monitored_file.uuid}/metrics][%d] performance_monitored_files_metric_collection_get default  %+v", o._statusCode, o.Payload)
}
func (o *PerformanceMonitoredFilesMetricCollectionGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PerformanceMonitoredFilesMetricCollectionGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
