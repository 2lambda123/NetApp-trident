// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAggregateCollectionGetParams creates a new AggregateCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAggregateCollectionGetParams() *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAggregateCollectionGetParamsWithTimeout creates a new AggregateCollectionGetParams object
// with the ability to set a timeout on a request.
func NewAggregateCollectionGetParamsWithTimeout(timeout time.Duration) *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		timeout: timeout,
	}
}

// NewAggregateCollectionGetParamsWithContext creates a new AggregateCollectionGetParams object
// with the ability to set a context for a request.
func NewAggregateCollectionGetParamsWithContext(ctx context.Context) *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		Context: ctx,
	}
}

// NewAggregateCollectionGetParamsWithHTTPClient creates a new AggregateCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewAggregateCollectionGetParamsWithHTTPClient(client *http.Client) *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		HTTPClient: client,
	}
}

/* AggregateCollectionGetParams contains all the parameters to send to the API endpoint
   for the aggregate collection get operation.

   Typically these are written to a http.Request.
*/
type AggregateCollectionGetParams struct {

	/* BlockStorageHybridCacheDiskCount.

	   Filter by block_storage.hybrid_cache.disk_count
	*/
	BlockStorageHybrIDCacheDiskCountQueryParameter *int64

	/* BlockStorageHybridCacheEnabled.

	   Filter by block_storage.hybrid_cache.enabled
	*/
	BlockStorageHybrIDCacheEnabledQueryParameter *bool

	/* BlockStorageHybridCacheRaidType.

	   Filter by block_storage.hybrid_cache.raid_type
	*/
	BlockStorageHybrIDCacheRaIDTypeQueryParameter *string

	/* BlockStorageHybridCacheSize.

	   Filter by block_storage.hybrid_cache.size
	*/
	BlockStorageHybrIDCacheSizeQueryParameter *int64

	/* BlockStorageHybridCacheUsed.

	   Filter by block_storage.hybrid_cache.used
	*/
	BlockStorageHybrIDCacheUsedQueryParameter *int64

	/* BlockStorageMirrorEnabled.

	   Filter by block_storage.mirror.enabled
	*/
	BlockStorageMirrorEnabledQueryParameter *bool

	/* BlockStorageMirrorState.

	   Filter by block_storage.mirror.state
	*/
	BlockStorageMirrorStateQueryParameter *string

	/* BlockStoragePlexesName.

	   Filter by block_storage.plexes.name
	*/
	BlockStoragePlexesNameQueryParameter *string

	/* BlockStoragePrimaryChecksumStyle.

	   Filter by block_storage.primary.checksum_style
	*/
	BlockStoragePrimaryChecksumStyleQueryParameter *string

	/* BlockStoragePrimaryDiskClass.

	   Filter by block_storage.primary.disk_class
	*/
	BlockStoragePrimaryDiskClassQueryParameter *string

	/* BlockStoragePrimaryDiskCount.

	   Filter by block_storage.primary.disk_count
	*/
	BlockStoragePrimaryDiskCountQueryParameter *int64

	/* BlockStoragePrimaryDiskType.

	   Filter by block_storage.primary.disk_type
	*/
	BlockStoragePrimaryDiskTypeQueryParameter *string

	/* BlockStoragePrimaryRaidSize.

	   Filter by block_storage.primary.raid_size
	*/
	BlockStoragePrimaryRaIDSizeQueryParameter *int64

	/* BlockStoragePrimaryRaidType.

	   Filter by block_storage.primary.raid_type
	*/
	BlockStoragePrimaryRaIDTypeQueryParameter *string

	/* CreateTime.

	   Filter by create_time
	*/
	CreateTimeQueryParameter *string

	/* DataEncryptionDriveProtectionEnabled.

	   Filter by data_encryption.drive_protection_enabled
	*/
	DataEncryptionDriveProtectionEnabledQueryParameter *bool

	/* DataEncryptionSoftwareEncryptionEnabled.

	   Filter by data_encryption.software_encryption_enabled
	*/
	DataEncryptionSoftwareEncryptionEnabledQueryParameter *bool

	/* DrHomeNodeName.

	   Filter by dr_home_node.name
	*/
	DrHomeNodeNameQueryParameter *string

	/* DrHomeNodeUUID.

	   Filter by dr_home_node.uuid
	*/
	DrHomeNodeUUIDQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	Fields []string

	/* HomeNodeName.

	   Filter by home_node.name
	*/
	HomeNodeNameQueryParameter *string

	/* HomeNodeUUID.

	   Filter by home_node.uuid
	*/
	HomeNodeUUIDQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecords *int64

	/* MetricDuration.

	   Filter by metric.duration
	*/
	MetricDurationQueryParameter *string

	/* MetricIopsOther.

	   Filter by metric.iops.other
	*/
	MetricIopsOtherQueryParameter *int64

	/* MetricIopsRead.

	   Filter by metric.iops.read
	*/
	MetricIopsReadQueryParameter *int64

	/* MetricIopsTotal.

	   Filter by metric.iops.total
	*/
	MetricIopsTotalQueryParameter *int64

	/* MetricIopsWrite.

	   Filter by metric.iops.write
	*/
	MetricIopsWriteQueryParameter *int64

	/* MetricLatencyOther.

	   Filter by metric.latency.other
	*/
	MetricLatencyOtherQueryParameter *int64

	/* MetricLatencyRead.

	   Filter by metric.latency.read
	*/
	MetricLatencyReadQueryParameter *int64

	/* MetricLatencyTotal.

	   Filter by metric.latency.total
	*/
	MetricLatencyTotalQueryParameter *int64

	/* MetricLatencyWrite.

	   Filter by metric.latency.write
	*/
	MetricLatencyWriteQueryParameter *int64

	/* MetricStatus.

	   Filter by metric.status
	*/
	MetricStatusQueryParameter *string

	/* MetricThroughputOther.

	   Filter by metric.throughput.other
	*/
	MetricThroughputOtherQueryParameter *int64

	/* MetricThroughputRead.

	   Filter by metric.throughput.read
	*/
	MetricThroughputReadQueryParameter *int64

	/* MetricThroughputTotal.

	   Filter by metric.throughput.total
	*/
	MetricThroughputTotalQueryParameter *int64

	/* MetricThroughputWrite.

	   Filter by metric.throughput.write
	*/
	MetricThroughputWriteQueryParameter *int64

	/* MetricTimestamp.

	   Filter by metric.timestamp
	*/
	MetricTimestampQueryParameter *string

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* NodeName.

	   Filter by node.name
	*/
	NodeNameQueryParameter *string

	/* NodeUUID.

	   Filter by node.uuid
	*/
	NodeUUIDQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderBy []string

	/* Recommend.

	   If set to 'true', it queries the system for the recommended optimal layout for creating new aggregates. The default setting is 'false'.
	*/
	RecommendQueryParameter *bool

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecords *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeout *int64

	/* ShowSpares.

	   If set to 'true', the spares object is returned instead of records to show the spare groups in the cluster. The default setting is 'false'.
	*/
	ShowSparesQueryParameter *bool

	/* SnaplockType.

	   Filter by snaplock_type
	*/
	SnaplockTypeQueryParameter *string

	/* SpaceBlockStorageAvailable.

	   Filter by space.block_storage.available
	*/
	SpaceBlockStorageAvailableQueryParameter *int64

	/* SpaceBlockStorageFullThresholdPercent.

	   Filter by space.block_storage.full_threshold_percent
	*/
	SpaceBlockStorageFullThresholdPercentQueryParameter *int64

	/* SpaceBlockStorageInactiveUserData.

	   Filter by space.block_storage.inactive_user_data
	*/
	SpaceBlockStorageInactiveUserDataQueryParameter *int64

	/* SpaceBlockStorageSize.

	   Filter by space.block_storage.size
	*/
	SpaceBlockStorageSizeQueryParameter *int64

	/* SpaceBlockStorageUsed.

	   Filter by space.block_storage.used
	*/
	SpaceBlockStorageUsedQueryParameter *int64

	/* SpaceCloudStorageUsed.

	   Filter by space.cloud_storage.used
	*/
	SpaceCloudStorageUsedQueryParameter *int64

	/* SpaceEfficiencyLogicalUsed.

	   Filter by space.efficiency.logical_used
	*/
	SpaceEfficiencyLogicalUsedQueryParameter *int64

	/* SpaceEfficiencyRatio.

	   Filter by space.efficiency.ratio
	*/
	SpaceEfficiencyRatioQueryParameter *float64

	/* SpaceEfficiencySavings.

	   Filter by space.efficiency.savings
	*/
	SpaceEfficiencySavingsQueryParameter *int64

	/* SpaceEfficiencyWithoutSnapshotsLogicalUsed.

	   Filter by space.efficiency_without_snapshots.logical_used
	*/
	SpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter *int64

	/* SpaceEfficiencyWithoutSnapshotsRatio.

	   Filter by space.efficiency_without_snapshots.ratio
	*/
	SpaceEfficiencyWithoutSnapshotsRatioQueryParameter *float64

	/* SpaceEfficiencyWithoutSnapshotsSavings.

	   Filter by space.efficiency_without_snapshots.savings
	*/
	SpaceEfficiencyWithoutSnapshotsSavingsQueryParameter *int64

	/* SpaceFootprint.

	   Filter by space.footprint
	*/
	SpaceFootprintQueryParameter *int64

	/* State.

	   Filter by state
	*/
	StateQueryParameter *string

	/* StatisticsIopsRawOther.

	   Filter by statistics.iops_raw.other
	*/
	StatisticsIopsRawOtherQueryParameter *int64

	/* StatisticsIopsRawRead.

	   Filter by statistics.iops_raw.read
	*/
	StatisticsIopsRawReadQueryParameter *int64

	/* StatisticsIopsRawTotal.

	   Filter by statistics.iops_raw.total
	*/
	StatisticsIopsRawTotalQueryParameter *int64

	/* StatisticsIopsRawWrite.

	   Filter by statistics.iops_raw.write
	*/
	StatisticsIopsRawWriteQueryParameter *int64

	/* StatisticsLatencyRawOther.

	   Filter by statistics.latency_raw.other
	*/
	StatisticsLatencyRawOtherQueryParameter *int64

	/* StatisticsLatencyRawRead.

	   Filter by statistics.latency_raw.read
	*/
	StatisticsLatencyRawReadQueryParameter *int64

	/* StatisticsLatencyRawTotal.

	   Filter by statistics.latency_raw.total
	*/
	StatisticsLatencyRawTotalQueryParameter *int64

	/* StatisticsLatencyRawWrite.

	   Filter by statistics.latency_raw.write
	*/
	StatisticsLatencyRawWriteQueryParameter *int64

	/* StatisticsStatus.

	   Filter by statistics.status
	*/
	StatisticsStatusQueryParameter *string

	/* StatisticsThroughputRawOther.

	   Filter by statistics.throughput_raw.other
	*/
	StatisticsThroughputRawOtherQueryParameter *int64

	/* StatisticsThroughputRawRead.

	   Filter by statistics.throughput_raw.read
	*/
	StatisticsThroughputRawReadQueryParameter *int64

	/* StatisticsThroughputRawTotal.

	   Filter by statistics.throughput_raw.total
	*/
	StatisticsThroughputRawTotalQueryParameter *int64

	/* StatisticsThroughputRawWrite.

	   Filter by statistics.throughput_raw.write
	*/
	StatisticsThroughputRawWriteQueryParameter *int64

	/* StatisticsTimestamp.

	   Filter by statistics.timestamp
	*/
	StatisticsTimestampQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the aggregate collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AggregateCollectionGetParams) WithDefaults() *AggregateCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the aggregate collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AggregateCollectionGetParams) SetDefaults() {
	var (
		returnRecordsDefault = bool(true)

		returnTimeoutDefault = int64(15)
	)

	val := AggregateCollectionGetParams{
		ReturnRecords: &returnRecordsDefault,
		ReturnTimeout: &returnTimeoutDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithTimeout(timeout time.Duration) *AggregateCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithContext(ctx context.Context) *AggregateCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithHTTPClient(client *http.Client) *AggregateCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBlockStorageHybrIDCacheDiskCountQueryParameter adds the blockStorageHybridCacheDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybrIDCacheDiskCountQueryParameter(blockStorageHybridCacheDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybrIDCacheDiskCountQueryParameter(blockStorageHybridCacheDiskCount)
	return o
}

// SetBlockStorageHybrIDCacheDiskCountQueryParameter adds the blockStorageHybridCacheDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybrIDCacheDiskCountQueryParameter(blockStorageHybridCacheDiskCount *int64) {
	o.BlockStorageHybrIDCacheDiskCountQueryParameter = blockStorageHybridCacheDiskCount
}

// WithBlockStorageHybrIDCacheEnabledQueryParameter adds the blockStorageHybridCacheEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybrIDCacheEnabledQueryParameter(blockStorageHybridCacheEnabled *bool) *AggregateCollectionGetParams {
	o.SetBlockStorageHybrIDCacheEnabledQueryParameter(blockStorageHybridCacheEnabled)
	return o
}

// SetBlockStorageHybrIDCacheEnabledQueryParameter adds the blockStorageHybridCacheEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybrIDCacheEnabledQueryParameter(blockStorageHybridCacheEnabled *bool) {
	o.BlockStorageHybrIDCacheEnabledQueryParameter = blockStorageHybridCacheEnabled
}

// WithBlockStorageHybrIDCacheRaIDTypeQueryParameter adds the blockStorageHybridCacheRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybrIDCacheRaIDTypeQueryParameter(blockStorageHybridCacheRaidType *string) *AggregateCollectionGetParams {
	o.SetBlockStorageHybrIDCacheRaIDTypeQueryParameter(blockStorageHybridCacheRaidType)
	return o
}

// SetBlockStorageHybrIDCacheRaIDTypeQueryParameter adds the blockStorageHybridCacheRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybrIDCacheRaIDTypeQueryParameter(blockStorageHybridCacheRaidType *string) {
	o.BlockStorageHybrIDCacheRaIDTypeQueryParameter = blockStorageHybridCacheRaidType
}

// WithBlockStorageHybrIDCacheSizeQueryParameter adds the blockStorageHybridCacheSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybrIDCacheSizeQueryParameter(blockStorageHybridCacheSize *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybrIDCacheSizeQueryParameter(blockStorageHybridCacheSize)
	return o
}

// SetBlockStorageHybrIDCacheSizeQueryParameter adds the blockStorageHybridCacheSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybrIDCacheSizeQueryParameter(blockStorageHybridCacheSize *int64) {
	o.BlockStorageHybrIDCacheSizeQueryParameter = blockStorageHybridCacheSize
}

// WithBlockStorageHybrIDCacheUsedQueryParameter adds the blockStorageHybridCacheUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybrIDCacheUsedQueryParameter(blockStorageHybridCacheUsed *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybrIDCacheUsedQueryParameter(blockStorageHybridCacheUsed)
	return o
}

// SetBlockStorageHybrIDCacheUsedQueryParameter adds the blockStorageHybridCacheUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybrIDCacheUsedQueryParameter(blockStorageHybridCacheUsed *int64) {
	o.BlockStorageHybrIDCacheUsedQueryParameter = blockStorageHybridCacheUsed
}

// WithBlockStorageMirrorEnabledQueryParameter adds the blockStorageMirrorEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageMirrorEnabledQueryParameter(blockStorageMirrorEnabled *bool) *AggregateCollectionGetParams {
	o.SetBlockStorageMirrorEnabledQueryParameter(blockStorageMirrorEnabled)
	return o
}

// SetBlockStorageMirrorEnabledQueryParameter adds the blockStorageMirrorEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageMirrorEnabledQueryParameter(blockStorageMirrorEnabled *bool) {
	o.BlockStorageMirrorEnabledQueryParameter = blockStorageMirrorEnabled
}

// WithBlockStorageMirrorStateQueryParameter adds the blockStorageMirrorState to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageMirrorStateQueryParameter(blockStorageMirrorState *string) *AggregateCollectionGetParams {
	o.SetBlockStorageMirrorStateQueryParameter(blockStorageMirrorState)
	return o
}

// SetBlockStorageMirrorStateQueryParameter adds the blockStorageMirrorState to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageMirrorStateQueryParameter(blockStorageMirrorState *string) {
	o.BlockStorageMirrorStateQueryParameter = blockStorageMirrorState
}

// WithBlockStoragePlexesNameQueryParameter adds the blockStoragePlexesName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePlexesNameQueryParameter(blockStoragePlexesName *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePlexesNameQueryParameter(blockStoragePlexesName)
	return o
}

// SetBlockStoragePlexesNameQueryParameter adds the blockStoragePlexesName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePlexesNameQueryParameter(blockStoragePlexesName *string) {
	o.BlockStoragePlexesNameQueryParameter = blockStoragePlexesName
}

// WithBlockStoragePrimaryChecksumStyleQueryParameter adds the blockStoragePrimaryChecksumStyle to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryChecksumStyleQueryParameter(blockStoragePrimaryChecksumStyle *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryChecksumStyleQueryParameter(blockStoragePrimaryChecksumStyle)
	return o
}

// SetBlockStoragePrimaryChecksumStyleQueryParameter adds the blockStoragePrimaryChecksumStyle to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryChecksumStyleQueryParameter(blockStoragePrimaryChecksumStyle *string) {
	o.BlockStoragePrimaryChecksumStyleQueryParameter = blockStoragePrimaryChecksumStyle
}

// WithBlockStoragePrimaryDiskClassQueryParameter adds the blockStoragePrimaryDiskClass to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryDiskClassQueryParameter(blockStoragePrimaryDiskClass *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryDiskClassQueryParameter(blockStoragePrimaryDiskClass)
	return o
}

// SetBlockStoragePrimaryDiskClassQueryParameter adds the blockStoragePrimaryDiskClass to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryDiskClassQueryParameter(blockStoragePrimaryDiskClass *string) {
	o.BlockStoragePrimaryDiskClassQueryParameter = blockStoragePrimaryDiskClass
}

// WithBlockStoragePrimaryDiskCountQueryParameter adds the blockStoragePrimaryDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryDiskCountQueryParameter(blockStoragePrimaryDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryDiskCountQueryParameter(blockStoragePrimaryDiskCount)
	return o
}

// SetBlockStoragePrimaryDiskCountQueryParameter adds the blockStoragePrimaryDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryDiskCountQueryParameter(blockStoragePrimaryDiskCount *int64) {
	o.BlockStoragePrimaryDiskCountQueryParameter = blockStoragePrimaryDiskCount
}

// WithBlockStoragePrimaryDiskTypeQueryParameter adds the blockStoragePrimaryDiskType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryDiskTypeQueryParameter(blockStoragePrimaryDiskType *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryDiskTypeQueryParameter(blockStoragePrimaryDiskType)
	return o
}

// SetBlockStoragePrimaryDiskTypeQueryParameter adds the blockStoragePrimaryDiskType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryDiskTypeQueryParameter(blockStoragePrimaryDiskType *string) {
	o.BlockStoragePrimaryDiskTypeQueryParameter = blockStoragePrimaryDiskType
}

// WithBlockStoragePrimaryRaIDSizeQueryParameter adds the blockStoragePrimaryRaidSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryRaIDSizeQueryParameter(blockStoragePrimaryRaidSize *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryRaIDSizeQueryParameter(blockStoragePrimaryRaidSize)
	return o
}

// SetBlockStoragePrimaryRaIDSizeQueryParameter adds the blockStoragePrimaryRaidSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryRaIDSizeQueryParameter(blockStoragePrimaryRaidSize *int64) {
	o.BlockStoragePrimaryRaIDSizeQueryParameter = blockStoragePrimaryRaidSize
}

// WithBlockStoragePrimaryRaIDTypeQueryParameter adds the blockStoragePrimaryRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryRaIDTypeQueryParameter(blockStoragePrimaryRaidType *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryRaIDTypeQueryParameter(blockStoragePrimaryRaidType)
	return o
}

// SetBlockStoragePrimaryRaIDTypeQueryParameter adds the blockStoragePrimaryRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryRaIDTypeQueryParameter(blockStoragePrimaryRaidType *string) {
	o.BlockStoragePrimaryRaIDTypeQueryParameter = blockStoragePrimaryRaidType
}

// WithCreateTimeQueryParameter adds the createTime to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithCreateTimeQueryParameter(createTime *string) *AggregateCollectionGetParams {
	o.SetCreateTimeQueryParameter(createTime)
	return o
}

// SetCreateTimeQueryParameter adds the createTime to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetCreateTimeQueryParameter(createTime *string) {
	o.CreateTimeQueryParameter = createTime
}

// WithDataEncryptionDriveProtectionEnabledQueryParameter adds the dataEncryptionDriveProtectionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDataEncryptionDriveProtectionEnabledQueryParameter(dataEncryptionDriveProtectionEnabled *bool) *AggregateCollectionGetParams {
	o.SetDataEncryptionDriveProtectionEnabledQueryParameter(dataEncryptionDriveProtectionEnabled)
	return o
}

// SetDataEncryptionDriveProtectionEnabledQueryParameter adds the dataEncryptionDriveProtectionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDataEncryptionDriveProtectionEnabledQueryParameter(dataEncryptionDriveProtectionEnabled *bool) {
	o.DataEncryptionDriveProtectionEnabledQueryParameter = dataEncryptionDriveProtectionEnabled
}

// WithDataEncryptionSoftwareEncryptionEnabledQueryParameter adds the dataEncryptionSoftwareEncryptionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDataEncryptionSoftwareEncryptionEnabledQueryParameter(dataEncryptionSoftwareEncryptionEnabled *bool) *AggregateCollectionGetParams {
	o.SetDataEncryptionSoftwareEncryptionEnabledQueryParameter(dataEncryptionSoftwareEncryptionEnabled)
	return o
}

// SetDataEncryptionSoftwareEncryptionEnabledQueryParameter adds the dataEncryptionSoftwareEncryptionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDataEncryptionSoftwareEncryptionEnabledQueryParameter(dataEncryptionSoftwareEncryptionEnabled *bool) {
	o.DataEncryptionSoftwareEncryptionEnabledQueryParameter = dataEncryptionSoftwareEncryptionEnabled
}

// WithDrHomeNodeNameQueryParameter adds the drHomeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDrHomeNodeNameQueryParameter(drHomeNodeName *string) *AggregateCollectionGetParams {
	o.SetDrHomeNodeNameQueryParameter(drHomeNodeName)
	return o
}

// SetDrHomeNodeNameQueryParameter adds the drHomeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDrHomeNodeNameQueryParameter(drHomeNodeName *string) {
	o.DrHomeNodeNameQueryParameter = drHomeNodeName
}

// WithDrHomeNodeUUIDQueryParameter adds the drHomeNodeUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDrHomeNodeUUIDQueryParameter(drHomeNodeUUID *string) *AggregateCollectionGetParams {
	o.SetDrHomeNodeUUIDQueryParameter(drHomeNodeUUID)
	return o
}

// SetDrHomeNodeUUIDQueryParameter adds the drHomeNodeUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDrHomeNodeUUIDQueryParameter(drHomeNodeUUID *string) {
	o.DrHomeNodeUUIDQueryParameter = drHomeNodeUUID
}

// WithFields adds the fields to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithFields(fields []string) *AggregateCollectionGetParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithHomeNodeNameQueryParameter adds the homeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithHomeNodeNameQueryParameter(homeNodeName *string) *AggregateCollectionGetParams {
	o.SetHomeNodeNameQueryParameter(homeNodeName)
	return o
}

// SetHomeNodeNameQueryParameter adds the homeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetHomeNodeNameQueryParameter(homeNodeName *string) {
	o.HomeNodeNameQueryParameter = homeNodeName
}

// WithHomeNodeUUIDQueryParameter adds the homeNodeUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithHomeNodeUUIDQueryParameter(homeNodeUUID *string) *AggregateCollectionGetParams {
	o.SetHomeNodeUUIDQueryParameter(homeNodeUUID)
	return o
}

// SetHomeNodeUUIDQueryParameter adds the homeNodeUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetHomeNodeUUIDQueryParameter(homeNodeUUID *string) {
	o.HomeNodeUUIDQueryParameter = homeNodeUUID
}

// WithMaxRecords adds the maxRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMaxRecords(maxRecords *int64) *AggregateCollectionGetParams {
	o.SetMaxRecords(maxRecords)
	return o
}

// SetMaxRecords adds the maxRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMaxRecords(maxRecords *int64) {
	o.MaxRecords = maxRecords
}

// WithMetricDurationQueryParameter adds the metricDuration to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricDurationQueryParameter(metricDuration *string) *AggregateCollectionGetParams {
	o.SetMetricDurationQueryParameter(metricDuration)
	return o
}

// SetMetricDurationQueryParameter adds the metricDuration to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricDurationQueryParameter(metricDuration *string) {
	o.MetricDurationQueryParameter = metricDuration
}

// WithMetricIopsOtherQueryParameter adds the metricIopsOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsOtherQueryParameter(metricIopsOther *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsOtherQueryParameter(metricIopsOther)
	return o
}

// SetMetricIopsOtherQueryParameter adds the metricIopsOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsOtherQueryParameter(metricIopsOther *int64) {
	o.MetricIopsOtherQueryParameter = metricIopsOther
}

// WithMetricIopsReadQueryParameter adds the metricIopsRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsReadQueryParameter(metricIopsRead *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsReadQueryParameter(metricIopsRead)
	return o
}

// SetMetricIopsReadQueryParameter adds the metricIopsRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsReadQueryParameter(metricIopsRead *int64) {
	o.MetricIopsReadQueryParameter = metricIopsRead
}

// WithMetricIopsTotalQueryParameter adds the metricIopsTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsTotalQueryParameter(metricIopsTotal *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsTotalQueryParameter(metricIopsTotal)
	return o
}

// SetMetricIopsTotalQueryParameter adds the metricIopsTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsTotalQueryParameter(metricIopsTotal *int64) {
	o.MetricIopsTotalQueryParameter = metricIopsTotal
}

// WithMetricIopsWriteQueryParameter adds the metricIopsWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsWriteQueryParameter(metricIopsWrite *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsWriteQueryParameter(metricIopsWrite)
	return o
}

// SetMetricIopsWriteQueryParameter adds the metricIopsWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsWriteQueryParameter(metricIopsWrite *int64) {
	o.MetricIopsWriteQueryParameter = metricIopsWrite
}

// WithMetricLatencyOtherQueryParameter adds the metricLatencyOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyOtherQueryParameter(metricLatencyOther *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyOtherQueryParameter(metricLatencyOther)
	return o
}

// SetMetricLatencyOtherQueryParameter adds the metricLatencyOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyOtherQueryParameter(metricLatencyOther *int64) {
	o.MetricLatencyOtherQueryParameter = metricLatencyOther
}

// WithMetricLatencyReadQueryParameter adds the metricLatencyRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyReadQueryParameter(metricLatencyRead *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyReadQueryParameter(metricLatencyRead)
	return o
}

// SetMetricLatencyReadQueryParameter adds the metricLatencyRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyReadQueryParameter(metricLatencyRead *int64) {
	o.MetricLatencyReadQueryParameter = metricLatencyRead
}

// WithMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyTotalQueryParameter(metricLatencyTotal)
	return o
}

// SetMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) {
	o.MetricLatencyTotalQueryParameter = metricLatencyTotal
}

// WithMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyWriteQueryParameter(metricLatencyWrite)
	return o
}

// SetMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) {
	o.MetricLatencyWriteQueryParameter = metricLatencyWrite
}

// WithMetricStatusQueryParameter adds the metricStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricStatusQueryParameter(metricStatus *string) *AggregateCollectionGetParams {
	o.SetMetricStatusQueryParameter(metricStatus)
	return o
}

// SetMetricStatusQueryParameter adds the metricStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricStatusQueryParameter(metricStatus *string) {
	o.MetricStatusQueryParameter = metricStatus
}

// WithMetricThroughputOtherQueryParameter adds the metricThroughputOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputOtherQueryParameter(metricThroughputOther *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputOtherQueryParameter(metricThroughputOther)
	return o
}

// SetMetricThroughputOtherQueryParameter adds the metricThroughputOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputOtherQueryParameter(metricThroughputOther *int64) {
	o.MetricThroughputOtherQueryParameter = metricThroughputOther
}

// WithMetricThroughputReadQueryParameter adds the metricThroughputRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputReadQueryParameter(metricThroughputRead *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputReadQueryParameter(metricThroughputRead)
	return o
}

// SetMetricThroughputReadQueryParameter adds the metricThroughputRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputReadQueryParameter(metricThroughputRead *int64) {
	o.MetricThroughputReadQueryParameter = metricThroughputRead
}

// WithMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputTotalQueryParameter(metricThroughputTotal)
	return o
}

// SetMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) {
	o.MetricThroughputTotalQueryParameter = metricThroughputTotal
}

// WithMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputWriteQueryParameter(metricThroughputWrite)
	return o
}

// SetMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) {
	o.MetricThroughputWriteQueryParameter = metricThroughputWrite
}

// WithMetricTimestampQueryParameter adds the metricTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricTimestampQueryParameter(metricTimestamp *string) *AggregateCollectionGetParams {
	o.SetMetricTimestampQueryParameter(metricTimestamp)
	return o
}

// SetMetricTimestampQueryParameter adds the metricTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricTimestampQueryParameter(metricTimestamp *string) {
	o.MetricTimestampQueryParameter = metricTimestamp
}

// WithNameQueryParameter adds the name to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithNameQueryParameter(name *string) *AggregateCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithNodeNameQueryParameter adds the nodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithNodeNameQueryParameter(nodeName *string) *AggregateCollectionGetParams {
	o.SetNodeNameQueryParameter(nodeName)
	return o
}

// SetNodeNameQueryParameter adds the nodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetNodeNameQueryParameter(nodeName *string) {
	o.NodeNameQueryParameter = nodeName
}

// WithNodeUUIDQueryParameter adds the nodeUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithNodeUUIDQueryParameter(nodeUUID *string) *AggregateCollectionGetParams {
	o.SetNodeUUIDQueryParameter(nodeUUID)
	return o
}

// SetNodeUUIDQueryParameter adds the nodeUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetNodeUUIDQueryParameter(nodeUUID *string) {
	o.NodeUUIDQueryParameter = nodeUUID
}

// WithOrderBy adds the orderBy to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithOrderBy(orderBy []string) *AggregateCollectionGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetOrderBy(orderBy []string) {
	o.OrderBy = orderBy
}

// WithRecommendQueryParameter adds the recommend to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithRecommendQueryParameter(recommend *bool) *AggregateCollectionGetParams {
	o.SetRecommendQueryParameter(recommend)
	return o
}

// SetRecommendQueryParameter adds the recommend to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetRecommendQueryParameter(recommend *bool) {
	o.RecommendQueryParameter = recommend
}

// WithReturnRecords adds the returnRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithReturnRecords(returnRecords *bool) *AggregateCollectionGetParams {
	o.SetReturnRecords(returnRecords)
	return o
}

// SetReturnRecords adds the returnRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetReturnRecords(returnRecords *bool) {
	o.ReturnRecords = returnRecords
}

// WithReturnTimeout adds the returnTimeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithReturnTimeout(returnTimeout *int64) *AggregateCollectionGetParams {
	o.SetReturnTimeout(returnTimeout)
	return o
}

// SetReturnTimeout adds the returnTimeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetReturnTimeout(returnTimeout *int64) {
	o.ReturnTimeout = returnTimeout
}

// WithShowSparesQueryParameter adds the showSpares to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithShowSparesQueryParameter(showSpares *bool) *AggregateCollectionGetParams {
	o.SetShowSparesQueryParameter(showSpares)
	return o
}

// SetShowSparesQueryParameter adds the showSpares to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetShowSparesQueryParameter(showSpares *bool) {
	o.ShowSparesQueryParameter = showSpares
}

// WithSnaplockTypeQueryParameter adds the snaplockType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSnaplockTypeQueryParameter(snaplockType *string) *AggregateCollectionGetParams {
	o.SetSnaplockTypeQueryParameter(snaplockType)
	return o
}

// SetSnaplockTypeQueryParameter adds the snaplockType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSnaplockTypeQueryParameter(snaplockType *string) {
	o.SnaplockTypeQueryParameter = snaplockType
}

// WithSpaceBlockStorageAvailableQueryParameter adds the spaceBlockStorageAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageAvailableQueryParameter(spaceBlockStorageAvailable *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageAvailableQueryParameter(spaceBlockStorageAvailable)
	return o
}

// SetSpaceBlockStorageAvailableQueryParameter adds the spaceBlockStorageAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageAvailableQueryParameter(spaceBlockStorageAvailable *int64) {
	o.SpaceBlockStorageAvailableQueryParameter = spaceBlockStorageAvailable
}

// WithSpaceBlockStorageFullThresholdPercentQueryParameter adds the spaceBlockStorageFullThresholdPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageFullThresholdPercentQueryParameter(spaceBlockStorageFullThresholdPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageFullThresholdPercentQueryParameter(spaceBlockStorageFullThresholdPercent)
	return o
}

// SetSpaceBlockStorageFullThresholdPercentQueryParameter adds the spaceBlockStorageFullThresholdPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageFullThresholdPercentQueryParameter(spaceBlockStorageFullThresholdPercent *int64) {
	o.SpaceBlockStorageFullThresholdPercentQueryParameter = spaceBlockStorageFullThresholdPercent
}

// WithSpaceBlockStorageInactiveUserDataQueryParameter adds the spaceBlockStorageInactiveUserData to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageInactiveUserDataQueryParameter(spaceBlockStorageInactiveUserData *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageInactiveUserDataQueryParameter(spaceBlockStorageInactiveUserData)
	return o
}

// SetSpaceBlockStorageInactiveUserDataQueryParameter adds the spaceBlockStorageInactiveUserData to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageInactiveUserDataQueryParameter(spaceBlockStorageInactiveUserData *int64) {
	o.SpaceBlockStorageInactiveUserDataQueryParameter = spaceBlockStorageInactiveUserData
}

// WithSpaceBlockStorageSizeQueryParameter adds the spaceBlockStorageSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageSizeQueryParameter(spaceBlockStorageSize *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageSizeQueryParameter(spaceBlockStorageSize)
	return o
}

// SetSpaceBlockStorageSizeQueryParameter adds the spaceBlockStorageSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageSizeQueryParameter(spaceBlockStorageSize *int64) {
	o.SpaceBlockStorageSizeQueryParameter = spaceBlockStorageSize
}

// WithSpaceBlockStorageUsedQueryParameter adds the spaceBlockStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageUsedQueryParameter(spaceBlockStorageUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageUsedQueryParameter(spaceBlockStorageUsed)
	return o
}

// SetSpaceBlockStorageUsedQueryParameter adds the spaceBlockStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageUsedQueryParameter(spaceBlockStorageUsed *int64) {
	o.SpaceBlockStorageUsedQueryParameter = spaceBlockStorageUsed
}

// WithSpaceCloudStorageUsedQueryParameter adds the spaceCloudStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceCloudStorageUsedQueryParameter(spaceCloudStorageUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceCloudStorageUsedQueryParameter(spaceCloudStorageUsed)
	return o
}

// SetSpaceCloudStorageUsedQueryParameter adds the spaceCloudStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceCloudStorageUsedQueryParameter(spaceCloudStorageUsed *int64) {
	o.SpaceCloudStorageUsedQueryParameter = spaceCloudStorageUsed
}

// WithSpaceEfficiencyLogicalUsedQueryParameter adds the spaceEfficiencyLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyLogicalUsedQueryParameter(spaceEfficiencyLogicalUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyLogicalUsedQueryParameter(spaceEfficiencyLogicalUsed)
	return o
}

// SetSpaceEfficiencyLogicalUsedQueryParameter adds the spaceEfficiencyLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyLogicalUsedQueryParameter(spaceEfficiencyLogicalUsed *int64) {
	o.SpaceEfficiencyLogicalUsedQueryParameter = spaceEfficiencyLogicalUsed
}

// WithSpaceEfficiencyRatioQueryParameter adds the spaceEfficiencyRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyRatioQueryParameter(spaceEfficiencyRatio *float64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyRatioQueryParameter(spaceEfficiencyRatio)
	return o
}

// SetSpaceEfficiencyRatioQueryParameter adds the spaceEfficiencyRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyRatioQueryParameter(spaceEfficiencyRatio *float64) {
	o.SpaceEfficiencyRatioQueryParameter = spaceEfficiencyRatio
}

// WithSpaceEfficiencySavingsQueryParameter adds the spaceEfficiencySavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencySavingsQueryParameter(spaceEfficiencySavings *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencySavingsQueryParameter(spaceEfficiencySavings)
	return o
}

// SetSpaceEfficiencySavingsQueryParameter adds the spaceEfficiencySavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencySavingsQueryParameter(spaceEfficiencySavings *int64) {
	o.SpaceEfficiencySavingsQueryParameter = spaceEfficiencySavings
}

// WithSpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter adds the spaceEfficiencyWithoutSnapshotsLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter(spaceEfficiencyWithoutSnapshotsLogicalUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter(spaceEfficiencyWithoutSnapshotsLogicalUsed)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter adds the spaceEfficiencyWithoutSnapshotsLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter(spaceEfficiencyWithoutSnapshotsLogicalUsed *int64) {
	o.SpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter = spaceEfficiencyWithoutSnapshotsLogicalUsed
}

// WithSpaceEfficiencyWithoutSnapshotsRatioQueryParameter adds the spaceEfficiencyWithoutSnapshotsRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsRatioQueryParameter(spaceEfficiencyWithoutSnapshotsRatio *float64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsRatioQueryParameter(spaceEfficiencyWithoutSnapshotsRatio)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsRatioQueryParameter adds the spaceEfficiencyWithoutSnapshotsRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsRatioQueryParameter(spaceEfficiencyWithoutSnapshotsRatio *float64) {
	o.SpaceEfficiencyWithoutSnapshotsRatioQueryParameter = spaceEfficiencyWithoutSnapshotsRatio
}

// WithSpaceEfficiencyWithoutSnapshotsSavingsQueryParameter adds the spaceEfficiencyWithoutSnapshotsSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsSavingsQueryParameter(spaceEfficiencyWithoutSnapshotsSavings *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsSavingsQueryParameter(spaceEfficiencyWithoutSnapshotsSavings)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsSavingsQueryParameter adds the spaceEfficiencyWithoutSnapshotsSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsSavingsQueryParameter(spaceEfficiencyWithoutSnapshotsSavings *int64) {
	o.SpaceEfficiencyWithoutSnapshotsSavingsQueryParameter = spaceEfficiencyWithoutSnapshotsSavings
}

// WithSpaceFootprintQueryParameter adds the spaceFootprint to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceFootprintQueryParameter(spaceFootprint *int64) *AggregateCollectionGetParams {
	o.SetSpaceFootprintQueryParameter(spaceFootprint)
	return o
}

// SetSpaceFootprintQueryParameter adds the spaceFootprint to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceFootprintQueryParameter(spaceFootprint *int64) {
	o.SpaceFootprintQueryParameter = spaceFootprint
}

// WithStateQueryParameter adds the state to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStateQueryParameter(state *string) *AggregateCollectionGetParams {
	o.SetStateQueryParameter(state)
	return o
}

// SetStateQueryParameter adds the state to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStateQueryParameter(state *string) {
	o.StateQueryParameter = state
}

// WithStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther)
	return o
}

// SetStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) {
	o.StatisticsIopsRawOtherQueryParameter = statisticsIopsRawOther
}

// WithStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead)
	return o
}

// SetStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) {
	o.StatisticsIopsRawReadQueryParameter = statisticsIopsRawRead
}

// WithStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal)
	return o
}

// SetStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) {
	o.StatisticsIopsRawTotalQueryParameter = statisticsIopsRawTotal
}

// WithStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite)
	return o
}

// SetStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) {
	o.StatisticsIopsRawWriteQueryParameter = statisticsIopsRawWrite
}

// WithStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther)
	return o
}

// SetStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) {
	o.StatisticsLatencyRawOtherQueryParameter = statisticsLatencyRawOther
}

// WithStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead)
	return o
}

// SetStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) {
	o.StatisticsLatencyRawReadQueryParameter = statisticsLatencyRawRead
}

// WithStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal)
	return o
}

// SetStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) {
	o.StatisticsLatencyRawTotalQueryParameter = statisticsLatencyRawTotal
}

// WithStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite)
	return o
}

// SetStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) {
	o.StatisticsLatencyRawWriteQueryParameter = statisticsLatencyRawWrite
}

// WithStatisticsStatusQueryParameter adds the statisticsStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsStatusQueryParameter(statisticsStatus *string) *AggregateCollectionGetParams {
	o.SetStatisticsStatusQueryParameter(statisticsStatus)
	return o
}

// SetStatisticsStatusQueryParameter adds the statisticsStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsStatusQueryParameter(statisticsStatus *string) {
	o.StatisticsStatusQueryParameter = statisticsStatus
}

// WithStatisticsThroughputRawOtherQueryParameter adds the statisticsThroughputRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther)
	return o
}

// SetStatisticsThroughputRawOtherQueryParameter adds the statisticsThroughputRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther *int64) {
	o.StatisticsThroughputRawOtherQueryParameter = statisticsThroughputRawOther
}

// WithStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead)
	return o
}

// SetStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) {
	o.StatisticsThroughputRawReadQueryParameter = statisticsThroughputRawRead
}

// WithStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal)
	return o
}

// SetStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) {
	o.StatisticsThroughputRawTotalQueryParameter = statisticsThroughputRawTotal
}

// WithStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite)
	return o
}

// SetStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) {
	o.StatisticsThroughputRawWriteQueryParameter = statisticsThroughputRawWrite
}

// WithStatisticsTimestampQueryParameter adds the statisticsTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsTimestampQueryParameter(statisticsTimestamp *string) *AggregateCollectionGetParams {
	o.SetStatisticsTimestampQueryParameter(statisticsTimestamp)
	return o
}

// SetStatisticsTimestampQueryParameter adds the statisticsTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsTimestampQueryParameter(statisticsTimestamp *string) {
	o.StatisticsTimestampQueryParameter = statisticsTimestamp
}

// WithUUIDQueryParameter adds the uuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithUUIDQueryParameter(uuid *string) *AggregateCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *AggregateCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BlockStorageHybrIDCacheDiskCountQueryParameter != nil {

		// query param block_storage.hybrid_cache.disk_count
		var qrBlockStorageHybridCacheDiskCount int64

		if o.BlockStorageHybrIDCacheDiskCountQueryParameter != nil {
			qrBlockStorageHybridCacheDiskCount = *o.BlockStorageHybrIDCacheDiskCountQueryParameter
		}
		qBlockStorageHybridCacheDiskCount := swag.FormatInt64(qrBlockStorageHybridCacheDiskCount)
		if qBlockStorageHybridCacheDiskCount != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.disk_count", qBlockStorageHybridCacheDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybrIDCacheEnabledQueryParameter != nil {

		// query param block_storage.hybrid_cache.enabled
		var qrBlockStorageHybridCacheEnabled bool

		if o.BlockStorageHybrIDCacheEnabledQueryParameter != nil {
			qrBlockStorageHybridCacheEnabled = *o.BlockStorageHybrIDCacheEnabledQueryParameter
		}
		qBlockStorageHybridCacheEnabled := swag.FormatBool(qrBlockStorageHybridCacheEnabled)
		if qBlockStorageHybridCacheEnabled != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.enabled", qBlockStorageHybridCacheEnabled); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybrIDCacheRaIDTypeQueryParameter != nil {

		// query param block_storage.hybrid_cache.raid_type
		var qrBlockStorageHybridCacheRaidType string

		if o.BlockStorageHybrIDCacheRaIDTypeQueryParameter != nil {
			qrBlockStorageHybridCacheRaidType = *o.BlockStorageHybrIDCacheRaIDTypeQueryParameter
		}
		qBlockStorageHybridCacheRaidType := qrBlockStorageHybridCacheRaidType
		if qBlockStorageHybridCacheRaidType != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.raid_type", qBlockStorageHybridCacheRaidType); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybrIDCacheSizeQueryParameter != nil {

		// query param block_storage.hybrid_cache.size
		var qrBlockStorageHybridCacheSize int64

		if o.BlockStorageHybrIDCacheSizeQueryParameter != nil {
			qrBlockStorageHybridCacheSize = *o.BlockStorageHybrIDCacheSizeQueryParameter
		}
		qBlockStorageHybridCacheSize := swag.FormatInt64(qrBlockStorageHybridCacheSize)
		if qBlockStorageHybridCacheSize != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.size", qBlockStorageHybridCacheSize); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybrIDCacheUsedQueryParameter != nil {

		// query param block_storage.hybrid_cache.used
		var qrBlockStorageHybridCacheUsed int64

		if o.BlockStorageHybrIDCacheUsedQueryParameter != nil {
			qrBlockStorageHybridCacheUsed = *o.BlockStorageHybrIDCacheUsedQueryParameter
		}
		qBlockStorageHybridCacheUsed := swag.FormatInt64(qrBlockStorageHybridCacheUsed)
		if qBlockStorageHybridCacheUsed != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.used", qBlockStorageHybridCacheUsed); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageMirrorEnabledQueryParameter != nil {

		// query param block_storage.mirror.enabled
		var qrBlockStorageMirrorEnabled bool

		if o.BlockStorageMirrorEnabledQueryParameter != nil {
			qrBlockStorageMirrorEnabled = *o.BlockStorageMirrorEnabledQueryParameter
		}
		qBlockStorageMirrorEnabled := swag.FormatBool(qrBlockStorageMirrorEnabled)
		if qBlockStorageMirrorEnabled != "" {

			if err := r.SetQueryParam("block_storage.mirror.enabled", qBlockStorageMirrorEnabled); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageMirrorStateQueryParameter != nil {

		// query param block_storage.mirror.state
		var qrBlockStorageMirrorState string

		if o.BlockStorageMirrorStateQueryParameter != nil {
			qrBlockStorageMirrorState = *o.BlockStorageMirrorStateQueryParameter
		}
		qBlockStorageMirrorState := qrBlockStorageMirrorState
		if qBlockStorageMirrorState != "" {

			if err := r.SetQueryParam("block_storage.mirror.state", qBlockStorageMirrorState); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePlexesNameQueryParameter != nil {

		// query param block_storage.plexes.name
		var qrBlockStoragePlexesName string

		if o.BlockStoragePlexesNameQueryParameter != nil {
			qrBlockStoragePlexesName = *o.BlockStoragePlexesNameQueryParameter
		}
		qBlockStoragePlexesName := qrBlockStoragePlexesName
		if qBlockStoragePlexesName != "" {

			if err := r.SetQueryParam("block_storage.plexes.name", qBlockStoragePlexesName); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryChecksumStyleQueryParameter != nil {

		// query param block_storage.primary.checksum_style
		var qrBlockStoragePrimaryChecksumStyle string

		if o.BlockStoragePrimaryChecksumStyleQueryParameter != nil {
			qrBlockStoragePrimaryChecksumStyle = *o.BlockStoragePrimaryChecksumStyleQueryParameter
		}
		qBlockStoragePrimaryChecksumStyle := qrBlockStoragePrimaryChecksumStyle
		if qBlockStoragePrimaryChecksumStyle != "" {

			if err := r.SetQueryParam("block_storage.primary.checksum_style", qBlockStoragePrimaryChecksumStyle); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryDiskClassQueryParameter != nil {

		// query param block_storage.primary.disk_class
		var qrBlockStoragePrimaryDiskClass string

		if o.BlockStoragePrimaryDiskClassQueryParameter != nil {
			qrBlockStoragePrimaryDiskClass = *o.BlockStoragePrimaryDiskClassQueryParameter
		}
		qBlockStoragePrimaryDiskClass := qrBlockStoragePrimaryDiskClass
		if qBlockStoragePrimaryDiskClass != "" {

			if err := r.SetQueryParam("block_storage.primary.disk_class", qBlockStoragePrimaryDiskClass); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryDiskCountQueryParameter != nil {

		// query param block_storage.primary.disk_count
		var qrBlockStoragePrimaryDiskCount int64

		if o.BlockStoragePrimaryDiskCountQueryParameter != nil {
			qrBlockStoragePrimaryDiskCount = *o.BlockStoragePrimaryDiskCountQueryParameter
		}
		qBlockStoragePrimaryDiskCount := swag.FormatInt64(qrBlockStoragePrimaryDiskCount)
		if qBlockStoragePrimaryDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.disk_count", qBlockStoragePrimaryDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryDiskTypeQueryParameter != nil {

		// query param block_storage.primary.disk_type
		var qrBlockStoragePrimaryDiskType string

		if o.BlockStoragePrimaryDiskTypeQueryParameter != nil {
			qrBlockStoragePrimaryDiskType = *o.BlockStoragePrimaryDiskTypeQueryParameter
		}
		qBlockStoragePrimaryDiskType := qrBlockStoragePrimaryDiskType
		if qBlockStoragePrimaryDiskType != "" {

			if err := r.SetQueryParam("block_storage.primary.disk_type", qBlockStoragePrimaryDiskType); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryRaIDSizeQueryParameter != nil {

		// query param block_storage.primary.raid_size
		var qrBlockStoragePrimaryRaidSize int64

		if o.BlockStoragePrimaryRaIDSizeQueryParameter != nil {
			qrBlockStoragePrimaryRaidSize = *o.BlockStoragePrimaryRaIDSizeQueryParameter
		}
		qBlockStoragePrimaryRaidSize := swag.FormatInt64(qrBlockStoragePrimaryRaidSize)
		if qBlockStoragePrimaryRaidSize != "" {

			if err := r.SetQueryParam("block_storage.primary.raid_size", qBlockStoragePrimaryRaidSize); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryRaIDTypeQueryParameter != nil {

		// query param block_storage.primary.raid_type
		var qrBlockStoragePrimaryRaidType string

		if o.BlockStoragePrimaryRaIDTypeQueryParameter != nil {
			qrBlockStoragePrimaryRaidType = *o.BlockStoragePrimaryRaIDTypeQueryParameter
		}
		qBlockStoragePrimaryRaidType := qrBlockStoragePrimaryRaidType
		if qBlockStoragePrimaryRaidType != "" {

			if err := r.SetQueryParam("block_storage.primary.raid_type", qBlockStoragePrimaryRaidType); err != nil {
				return err
			}
		}
	}

	if o.CreateTimeQueryParameter != nil {

		// query param create_time
		var qrCreateTime string

		if o.CreateTimeQueryParameter != nil {
			qrCreateTime = *o.CreateTimeQueryParameter
		}
		qCreateTime := qrCreateTime
		if qCreateTime != "" {

			if err := r.SetQueryParam("create_time", qCreateTime); err != nil {
				return err
			}
		}
	}

	if o.DataEncryptionDriveProtectionEnabledQueryParameter != nil {

		// query param data_encryption.drive_protection_enabled
		var qrDataEncryptionDriveProtectionEnabled bool

		if o.DataEncryptionDriveProtectionEnabledQueryParameter != nil {
			qrDataEncryptionDriveProtectionEnabled = *o.DataEncryptionDriveProtectionEnabledQueryParameter
		}
		qDataEncryptionDriveProtectionEnabled := swag.FormatBool(qrDataEncryptionDriveProtectionEnabled)
		if qDataEncryptionDriveProtectionEnabled != "" {

			if err := r.SetQueryParam("data_encryption.drive_protection_enabled", qDataEncryptionDriveProtectionEnabled); err != nil {
				return err
			}
		}
	}

	if o.DataEncryptionSoftwareEncryptionEnabledQueryParameter != nil {

		// query param data_encryption.software_encryption_enabled
		var qrDataEncryptionSoftwareEncryptionEnabled bool

		if o.DataEncryptionSoftwareEncryptionEnabledQueryParameter != nil {
			qrDataEncryptionSoftwareEncryptionEnabled = *o.DataEncryptionSoftwareEncryptionEnabledQueryParameter
		}
		qDataEncryptionSoftwareEncryptionEnabled := swag.FormatBool(qrDataEncryptionSoftwareEncryptionEnabled)
		if qDataEncryptionSoftwareEncryptionEnabled != "" {

			if err := r.SetQueryParam("data_encryption.software_encryption_enabled", qDataEncryptionSoftwareEncryptionEnabled); err != nil {
				return err
			}
		}
	}

	if o.DrHomeNodeNameQueryParameter != nil {

		// query param dr_home_node.name
		var qrDrHomeNodeName string

		if o.DrHomeNodeNameQueryParameter != nil {
			qrDrHomeNodeName = *o.DrHomeNodeNameQueryParameter
		}
		qDrHomeNodeName := qrDrHomeNodeName
		if qDrHomeNodeName != "" {

			if err := r.SetQueryParam("dr_home_node.name", qDrHomeNodeName); err != nil {
				return err
			}
		}
	}

	if o.DrHomeNodeUUIDQueryParameter != nil {

		// query param dr_home_node.uuid
		var qrDrHomeNodeUUID string

		if o.DrHomeNodeUUIDQueryParameter != nil {
			qrDrHomeNodeUUID = *o.DrHomeNodeUUIDQueryParameter
		}
		qDrHomeNodeUUID := qrDrHomeNodeUUID
		if qDrHomeNodeUUID != "" {

			if err := r.SetQueryParam("dr_home_node.uuid", qDrHomeNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.HomeNodeNameQueryParameter != nil {

		// query param home_node.name
		var qrHomeNodeName string

		if o.HomeNodeNameQueryParameter != nil {
			qrHomeNodeName = *o.HomeNodeNameQueryParameter
		}
		qHomeNodeName := qrHomeNodeName
		if qHomeNodeName != "" {

			if err := r.SetQueryParam("home_node.name", qHomeNodeName); err != nil {
				return err
			}
		}
	}

	if o.HomeNodeUUIDQueryParameter != nil {

		// query param home_node.uuid
		var qrHomeNodeUUID string

		if o.HomeNodeUUIDQueryParameter != nil {
			qrHomeNodeUUID = *o.HomeNodeUUIDQueryParameter
		}
		qHomeNodeUUID := qrHomeNodeUUID
		if qHomeNodeUUID != "" {

			if err := r.SetQueryParam("home_node.uuid", qHomeNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.MaxRecords != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecords != nil {
			qrMaxRecords = *o.MaxRecords
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricDurationQueryParameter != nil {

		// query param metric.duration
		var qrMetricDuration string

		if o.MetricDurationQueryParameter != nil {
			qrMetricDuration = *o.MetricDurationQueryParameter
		}
		qMetricDuration := qrMetricDuration
		if qMetricDuration != "" {

			if err := r.SetQueryParam("metric.duration", qMetricDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsOtherQueryParameter != nil {

		// query param metric.iops.other
		var qrMetricIopsOther int64

		if o.MetricIopsOtherQueryParameter != nil {
			qrMetricIopsOther = *o.MetricIopsOtherQueryParameter
		}
		qMetricIopsOther := swag.FormatInt64(qrMetricIopsOther)
		if qMetricIopsOther != "" {

			if err := r.SetQueryParam("metric.iops.other", qMetricIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsReadQueryParameter != nil {

		// query param metric.iops.read
		var qrMetricIopsRead int64

		if o.MetricIopsReadQueryParameter != nil {
			qrMetricIopsRead = *o.MetricIopsReadQueryParameter
		}
		qMetricIopsRead := swag.FormatInt64(qrMetricIopsRead)
		if qMetricIopsRead != "" {

			if err := r.SetQueryParam("metric.iops.read", qMetricIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsTotalQueryParameter != nil {

		// query param metric.iops.total
		var qrMetricIopsTotal int64

		if o.MetricIopsTotalQueryParameter != nil {
			qrMetricIopsTotal = *o.MetricIopsTotalQueryParameter
		}
		qMetricIopsTotal := swag.FormatInt64(qrMetricIopsTotal)
		if qMetricIopsTotal != "" {

			if err := r.SetQueryParam("metric.iops.total", qMetricIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsWriteQueryParameter != nil {

		// query param metric.iops.write
		var qrMetricIopsWrite int64

		if o.MetricIopsWriteQueryParameter != nil {
			qrMetricIopsWrite = *o.MetricIopsWriteQueryParameter
		}
		qMetricIopsWrite := swag.FormatInt64(qrMetricIopsWrite)
		if qMetricIopsWrite != "" {

			if err := r.SetQueryParam("metric.iops.write", qMetricIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyOtherQueryParameter != nil {

		// query param metric.latency.other
		var qrMetricLatencyOther int64

		if o.MetricLatencyOtherQueryParameter != nil {
			qrMetricLatencyOther = *o.MetricLatencyOtherQueryParameter
		}
		qMetricLatencyOther := swag.FormatInt64(qrMetricLatencyOther)
		if qMetricLatencyOther != "" {

			if err := r.SetQueryParam("metric.latency.other", qMetricLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyReadQueryParameter != nil {

		// query param metric.latency.read
		var qrMetricLatencyRead int64

		if o.MetricLatencyReadQueryParameter != nil {
			qrMetricLatencyRead = *o.MetricLatencyReadQueryParameter
		}
		qMetricLatencyRead := swag.FormatInt64(qrMetricLatencyRead)
		if qMetricLatencyRead != "" {

			if err := r.SetQueryParam("metric.latency.read", qMetricLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyTotalQueryParameter != nil {

		// query param metric.latency.total
		var qrMetricLatencyTotal int64

		if o.MetricLatencyTotalQueryParameter != nil {
			qrMetricLatencyTotal = *o.MetricLatencyTotalQueryParameter
		}
		qMetricLatencyTotal := swag.FormatInt64(qrMetricLatencyTotal)
		if qMetricLatencyTotal != "" {

			if err := r.SetQueryParam("metric.latency.total", qMetricLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyWriteQueryParameter != nil {

		// query param metric.latency.write
		var qrMetricLatencyWrite int64

		if o.MetricLatencyWriteQueryParameter != nil {
			qrMetricLatencyWrite = *o.MetricLatencyWriteQueryParameter
		}
		qMetricLatencyWrite := swag.FormatInt64(qrMetricLatencyWrite)
		if qMetricLatencyWrite != "" {

			if err := r.SetQueryParam("metric.latency.write", qMetricLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricStatusQueryParameter != nil {

		// query param metric.status
		var qrMetricStatus string

		if o.MetricStatusQueryParameter != nil {
			qrMetricStatus = *o.MetricStatusQueryParameter
		}
		qMetricStatus := qrMetricStatus
		if qMetricStatus != "" {

			if err := r.SetQueryParam("metric.status", qMetricStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputOtherQueryParameter != nil {

		// query param metric.throughput.other
		var qrMetricThroughputOther int64

		if o.MetricThroughputOtherQueryParameter != nil {
			qrMetricThroughputOther = *o.MetricThroughputOtherQueryParameter
		}
		qMetricThroughputOther := swag.FormatInt64(qrMetricThroughputOther)
		if qMetricThroughputOther != "" {

			if err := r.SetQueryParam("metric.throughput.other", qMetricThroughputOther); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputReadQueryParameter != nil {

		// query param metric.throughput.read
		var qrMetricThroughputRead int64

		if o.MetricThroughputReadQueryParameter != nil {
			qrMetricThroughputRead = *o.MetricThroughputReadQueryParameter
		}
		qMetricThroughputRead := swag.FormatInt64(qrMetricThroughputRead)
		if qMetricThroughputRead != "" {

			if err := r.SetQueryParam("metric.throughput.read", qMetricThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputTotalQueryParameter != nil {

		// query param metric.throughput.total
		var qrMetricThroughputTotal int64

		if o.MetricThroughputTotalQueryParameter != nil {
			qrMetricThroughputTotal = *o.MetricThroughputTotalQueryParameter
		}
		qMetricThroughputTotal := swag.FormatInt64(qrMetricThroughputTotal)
		if qMetricThroughputTotal != "" {

			if err := r.SetQueryParam("metric.throughput.total", qMetricThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputWriteQueryParameter != nil {

		// query param metric.throughput.write
		var qrMetricThroughputWrite int64

		if o.MetricThroughputWriteQueryParameter != nil {
			qrMetricThroughputWrite = *o.MetricThroughputWriteQueryParameter
		}
		qMetricThroughputWrite := swag.FormatInt64(qrMetricThroughputWrite)
		if qMetricThroughputWrite != "" {

			if err := r.SetQueryParam("metric.throughput.write", qMetricThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricTimestampQueryParameter != nil {

		// query param metric.timestamp
		var qrMetricTimestamp string

		if o.MetricTimestampQueryParameter != nil {
			qrMetricTimestamp = *o.MetricTimestampQueryParameter
		}
		qMetricTimestamp := qrMetricTimestamp
		if qMetricTimestamp != "" {

			if err := r.SetQueryParam("metric.timestamp", qMetricTimestamp); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.NodeNameQueryParameter != nil {

		// query param node.name
		var qrNodeName string

		if o.NodeNameQueryParameter != nil {
			qrNodeName = *o.NodeNameQueryParameter
		}
		qNodeName := qrNodeName
		if qNodeName != "" {

			if err := r.SetQueryParam("node.name", qNodeName); err != nil {
				return err
			}
		}
	}

	if o.NodeUUIDQueryParameter != nil {

		// query param node.uuid
		var qrNodeUUID string

		if o.NodeUUIDQueryParameter != nil {
			qrNodeUUID = *o.NodeUUIDQueryParameter
		}
		qNodeUUID := qrNodeUUID
		if qNodeUUID != "" {

			if err := r.SetQueryParam("node.uuid", qNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.OrderBy != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.RecommendQueryParameter != nil {

		// query param recommend
		var qrRecommend bool

		if o.RecommendQueryParameter != nil {
			qrRecommend = *o.RecommendQueryParameter
		}
		qRecommend := swag.FormatBool(qrRecommend)
		if qRecommend != "" {

			if err := r.SetQueryParam("recommend", qRecommend); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecords != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecords != nil {
			qrReturnRecords = *o.ReturnRecords
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeout != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeout != nil {
			qrReturnTimeout = *o.ReturnTimeout
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.ShowSparesQueryParameter != nil {

		// query param show_spares
		var qrShowSpares bool

		if o.ShowSparesQueryParameter != nil {
			qrShowSpares = *o.ShowSparesQueryParameter
		}
		qShowSpares := swag.FormatBool(qrShowSpares)
		if qShowSpares != "" {

			if err := r.SetQueryParam("show_spares", qShowSpares); err != nil {
				return err
			}
		}
	}

	if o.SnaplockTypeQueryParameter != nil {

		// query param snaplock_type
		var qrSnaplockType string

		if o.SnaplockTypeQueryParameter != nil {
			qrSnaplockType = *o.SnaplockTypeQueryParameter
		}
		qSnaplockType := qrSnaplockType
		if qSnaplockType != "" {

			if err := r.SetQueryParam("snaplock_type", qSnaplockType); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageAvailableQueryParameter != nil {

		// query param space.block_storage.available
		var qrSpaceBlockStorageAvailable int64

		if o.SpaceBlockStorageAvailableQueryParameter != nil {
			qrSpaceBlockStorageAvailable = *o.SpaceBlockStorageAvailableQueryParameter
		}
		qSpaceBlockStorageAvailable := swag.FormatInt64(qrSpaceBlockStorageAvailable)
		if qSpaceBlockStorageAvailable != "" {

			if err := r.SetQueryParam("space.block_storage.available", qSpaceBlockStorageAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageFullThresholdPercentQueryParameter != nil {

		// query param space.block_storage.full_threshold_percent
		var qrSpaceBlockStorageFullThresholdPercent int64

		if o.SpaceBlockStorageFullThresholdPercentQueryParameter != nil {
			qrSpaceBlockStorageFullThresholdPercent = *o.SpaceBlockStorageFullThresholdPercentQueryParameter
		}
		qSpaceBlockStorageFullThresholdPercent := swag.FormatInt64(qrSpaceBlockStorageFullThresholdPercent)
		if qSpaceBlockStorageFullThresholdPercent != "" {

			if err := r.SetQueryParam("space.block_storage.full_threshold_percent", qSpaceBlockStorageFullThresholdPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageInactiveUserDataQueryParameter != nil {

		// query param space.block_storage.inactive_user_data
		var qrSpaceBlockStorageInactiveUserData int64

		if o.SpaceBlockStorageInactiveUserDataQueryParameter != nil {
			qrSpaceBlockStorageInactiveUserData = *o.SpaceBlockStorageInactiveUserDataQueryParameter
		}
		qSpaceBlockStorageInactiveUserData := swag.FormatInt64(qrSpaceBlockStorageInactiveUserData)
		if qSpaceBlockStorageInactiveUserData != "" {

			if err := r.SetQueryParam("space.block_storage.inactive_user_data", qSpaceBlockStorageInactiveUserData); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageSizeQueryParameter != nil {

		// query param space.block_storage.size
		var qrSpaceBlockStorageSize int64

		if o.SpaceBlockStorageSizeQueryParameter != nil {
			qrSpaceBlockStorageSize = *o.SpaceBlockStorageSizeQueryParameter
		}
		qSpaceBlockStorageSize := swag.FormatInt64(qrSpaceBlockStorageSize)
		if qSpaceBlockStorageSize != "" {

			if err := r.SetQueryParam("space.block_storage.size", qSpaceBlockStorageSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageUsedQueryParameter != nil {

		// query param space.block_storage.used
		var qrSpaceBlockStorageUsed int64

		if o.SpaceBlockStorageUsedQueryParameter != nil {
			qrSpaceBlockStorageUsed = *o.SpaceBlockStorageUsedQueryParameter
		}
		qSpaceBlockStorageUsed := swag.FormatInt64(qrSpaceBlockStorageUsed)
		if qSpaceBlockStorageUsed != "" {

			if err := r.SetQueryParam("space.block_storage.used", qSpaceBlockStorageUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceCloudStorageUsedQueryParameter != nil {

		// query param space.cloud_storage.used
		var qrSpaceCloudStorageUsed int64

		if o.SpaceCloudStorageUsedQueryParameter != nil {
			qrSpaceCloudStorageUsed = *o.SpaceCloudStorageUsedQueryParameter
		}
		qSpaceCloudStorageUsed := swag.FormatInt64(qrSpaceCloudStorageUsed)
		if qSpaceCloudStorageUsed != "" {

			if err := r.SetQueryParam("space.cloud_storage.used", qSpaceCloudStorageUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyLogicalUsedQueryParameter != nil {

		// query param space.efficiency.logical_used
		var qrSpaceEfficiencyLogicalUsed int64

		if o.SpaceEfficiencyLogicalUsedQueryParameter != nil {
			qrSpaceEfficiencyLogicalUsed = *o.SpaceEfficiencyLogicalUsedQueryParameter
		}
		qSpaceEfficiencyLogicalUsed := swag.FormatInt64(qrSpaceEfficiencyLogicalUsed)
		if qSpaceEfficiencyLogicalUsed != "" {

			if err := r.SetQueryParam("space.efficiency.logical_used", qSpaceEfficiencyLogicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyRatioQueryParameter != nil {

		// query param space.efficiency.ratio
		var qrSpaceEfficiencyRatio float64

		if o.SpaceEfficiencyRatioQueryParameter != nil {
			qrSpaceEfficiencyRatio = *o.SpaceEfficiencyRatioQueryParameter
		}
		qSpaceEfficiencyRatio := swag.FormatFloat64(qrSpaceEfficiencyRatio)
		if qSpaceEfficiencyRatio != "" {

			if err := r.SetQueryParam("space.efficiency.ratio", qSpaceEfficiencyRatio); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencySavingsQueryParameter != nil {

		// query param space.efficiency.savings
		var qrSpaceEfficiencySavings int64

		if o.SpaceEfficiencySavingsQueryParameter != nil {
			qrSpaceEfficiencySavings = *o.SpaceEfficiencySavingsQueryParameter
		}
		qSpaceEfficiencySavings := swag.FormatInt64(qrSpaceEfficiencySavings)
		if qSpaceEfficiencySavings != "" {

			if err := r.SetQueryParam("space.efficiency.savings", qSpaceEfficiencySavings); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter != nil {

		// query param space.efficiency_without_snapshots.logical_used
		var qrSpaceEfficiencyWithoutSnapshotsLogicalUsed int64

		if o.SpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter != nil {
			qrSpaceEfficiencyWithoutSnapshotsLogicalUsed = *o.SpaceEfficiencyWithoutSnapshotsLogicalUsedQueryParameter
		}
		qSpaceEfficiencyWithoutSnapshotsLogicalUsed := swag.FormatInt64(qrSpaceEfficiencyWithoutSnapshotsLogicalUsed)
		if qSpaceEfficiencyWithoutSnapshotsLogicalUsed != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots.logical_used", qSpaceEfficiencyWithoutSnapshotsLogicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsRatioQueryParameter != nil {

		// query param space.efficiency_without_snapshots.ratio
		var qrSpaceEfficiencyWithoutSnapshotsRatio float64

		if o.SpaceEfficiencyWithoutSnapshotsRatioQueryParameter != nil {
			qrSpaceEfficiencyWithoutSnapshotsRatio = *o.SpaceEfficiencyWithoutSnapshotsRatioQueryParameter
		}
		qSpaceEfficiencyWithoutSnapshotsRatio := swag.FormatFloat64(qrSpaceEfficiencyWithoutSnapshotsRatio)
		if qSpaceEfficiencyWithoutSnapshotsRatio != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots.ratio", qSpaceEfficiencyWithoutSnapshotsRatio); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsSavingsQueryParameter != nil {

		// query param space.efficiency_without_snapshots.savings
		var qrSpaceEfficiencyWithoutSnapshotsSavings int64

		if o.SpaceEfficiencyWithoutSnapshotsSavingsQueryParameter != nil {
			qrSpaceEfficiencyWithoutSnapshotsSavings = *o.SpaceEfficiencyWithoutSnapshotsSavingsQueryParameter
		}
		qSpaceEfficiencyWithoutSnapshotsSavings := swag.FormatInt64(qrSpaceEfficiencyWithoutSnapshotsSavings)
		if qSpaceEfficiencyWithoutSnapshotsSavings != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots.savings", qSpaceEfficiencyWithoutSnapshotsSavings); err != nil {
				return err
			}
		}
	}

	if o.SpaceFootprintQueryParameter != nil {

		// query param space.footprint
		var qrSpaceFootprint int64

		if o.SpaceFootprintQueryParameter != nil {
			qrSpaceFootprint = *o.SpaceFootprintQueryParameter
		}
		qSpaceFootprint := swag.FormatInt64(qrSpaceFootprint)
		if qSpaceFootprint != "" {

			if err := r.SetQueryParam("space.footprint", qSpaceFootprint); err != nil {
				return err
			}
		}
	}

	if o.StateQueryParameter != nil {

		// query param state
		var qrState string

		if o.StateQueryParameter != nil {
			qrState = *o.StateQueryParameter
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawOtherQueryParameter != nil {

		// query param statistics.iops_raw.other
		var qrStatisticsIopsRawOther int64

		if o.StatisticsIopsRawOtherQueryParameter != nil {
			qrStatisticsIopsRawOther = *o.StatisticsIopsRawOtherQueryParameter
		}
		qStatisticsIopsRawOther := swag.FormatInt64(qrStatisticsIopsRawOther)
		if qStatisticsIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.iops_raw.other", qStatisticsIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawReadQueryParameter != nil {

		// query param statistics.iops_raw.read
		var qrStatisticsIopsRawRead int64

		if o.StatisticsIopsRawReadQueryParameter != nil {
			qrStatisticsIopsRawRead = *o.StatisticsIopsRawReadQueryParameter
		}
		qStatisticsIopsRawRead := swag.FormatInt64(qrStatisticsIopsRawRead)
		if qStatisticsIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.iops_raw.read", qStatisticsIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawTotalQueryParameter != nil {

		// query param statistics.iops_raw.total
		var qrStatisticsIopsRawTotal int64

		if o.StatisticsIopsRawTotalQueryParameter != nil {
			qrStatisticsIopsRawTotal = *o.StatisticsIopsRawTotalQueryParameter
		}
		qStatisticsIopsRawTotal := swag.FormatInt64(qrStatisticsIopsRawTotal)
		if qStatisticsIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.iops_raw.total", qStatisticsIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawWriteQueryParameter != nil {

		// query param statistics.iops_raw.write
		var qrStatisticsIopsRawWrite int64

		if o.StatisticsIopsRawWriteQueryParameter != nil {
			qrStatisticsIopsRawWrite = *o.StatisticsIopsRawWriteQueryParameter
		}
		qStatisticsIopsRawWrite := swag.FormatInt64(qrStatisticsIopsRawWrite)
		if qStatisticsIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.iops_raw.write", qStatisticsIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawOtherQueryParameter != nil {

		// query param statistics.latency_raw.other
		var qrStatisticsLatencyRawOther int64

		if o.StatisticsLatencyRawOtherQueryParameter != nil {
			qrStatisticsLatencyRawOther = *o.StatisticsLatencyRawOtherQueryParameter
		}
		qStatisticsLatencyRawOther := swag.FormatInt64(qrStatisticsLatencyRawOther)
		if qStatisticsLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.latency_raw.other", qStatisticsLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawReadQueryParameter != nil {

		// query param statistics.latency_raw.read
		var qrStatisticsLatencyRawRead int64

		if o.StatisticsLatencyRawReadQueryParameter != nil {
			qrStatisticsLatencyRawRead = *o.StatisticsLatencyRawReadQueryParameter
		}
		qStatisticsLatencyRawRead := swag.FormatInt64(qrStatisticsLatencyRawRead)
		if qStatisticsLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.latency_raw.read", qStatisticsLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawTotalQueryParameter != nil {

		// query param statistics.latency_raw.total
		var qrStatisticsLatencyRawTotal int64

		if o.StatisticsLatencyRawTotalQueryParameter != nil {
			qrStatisticsLatencyRawTotal = *o.StatisticsLatencyRawTotalQueryParameter
		}
		qStatisticsLatencyRawTotal := swag.FormatInt64(qrStatisticsLatencyRawTotal)
		if qStatisticsLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.latency_raw.total", qStatisticsLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawWriteQueryParameter != nil {

		// query param statistics.latency_raw.write
		var qrStatisticsLatencyRawWrite int64

		if o.StatisticsLatencyRawWriteQueryParameter != nil {
			qrStatisticsLatencyRawWrite = *o.StatisticsLatencyRawWriteQueryParameter
		}
		qStatisticsLatencyRawWrite := swag.FormatInt64(qrStatisticsLatencyRawWrite)
		if qStatisticsLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.latency_raw.write", qStatisticsLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsStatusQueryParameter != nil {

		// query param statistics.status
		var qrStatisticsStatus string

		if o.StatisticsStatusQueryParameter != nil {
			qrStatisticsStatus = *o.StatisticsStatusQueryParameter
		}
		qStatisticsStatus := qrStatisticsStatus
		if qStatisticsStatus != "" {

			if err := r.SetQueryParam("statistics.status", qStatisticsStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawOtherQueryParameter != nil {

		// query param statistics.throughput_raw.other
		var qrStatisticsThroughputRawOther int64

		if o.StatisticsThroughputRawOtherQueryParameter != nil {
			qrStatisticsThroughputRawOther = *o.StatisticsThroughputRawOtherQueryParameter
		}
		qStatisticsThroughputRawOther := swag.FormatInt64(qrStatisticsThroughputRawOther)
		if qStatisticsThroughputRawOther != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.other", qStatisticsThroughputRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawReadQueryParameter != nil {

		// query param statistics.throughput_raw.read
		var qrStatisticsThroughputRawRead int64

		if o.StatisticsThroughputRawReadQueryParameter != nil {
			qrStatisticsThroughputRawRead = *o.StatisticsThroughputRawReadQueryParameter
		}
		qStatisticsThroughputRawRead := swag.FormatInt64(qrStatisticsThroughputRawRead)
		if qStatisticsThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.read", qStatisticsThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawTotalQueryParameter != nil {

		// query param statistics.throughput_raw.total
		var qrStatisticsThroughputRawTotal int64

		if o.StatisticsThroughputRawTotalQueryParameter != nil {
			qrStatisticsThroughputRawTotal = *o.StatisticsThroughputRawTotalQueryParameter
		}
		qStatisticsThroughputRawTotal := swag.FormatInt64(qrStatisticsThroughputRawTotal)
		if qStatisticsThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.total", qStatisticsThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawWriteQueryParameter != nil {

		// query param statistics.throughput_raw.write
		var qrStatisticsThroughputRawWrite int64

		if o.StatisticsThroughputRawWriteQueryParameter != nil {
			qrStatisticsThroughputRawWrite = *o.StatisticsThroughputRawWriteQueryParameter
		}
		qStatisticsThroughputRawWrite := swag.FormatInt64(qrStatisticsThroughputRawWrite)
		if qStatisticsThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.write", qStatisticsThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsTimestampQueryParameter != nil {

		// query param statistics.timestamp
		var qrStatisticsTimestamp string

		if o.StatisticsTimestampQueryParameter != nil {
			qrStatisticsTimestamp = *o.StatisticsTimestampQueryParameter
		}
		qStatisticsTimestamp := qrStatisticsTimestamp
		if qStatisticsTimestamp != "" {

			if err := r.SetQueryParam("statistics.timestamp", qStatisticsTimestamp); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamAggregateCollectionGet binds the parameter fields
func (o *AggregateCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamAggregateCollectionGet binds the parameter order_by
func (o *AggregateCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderBy

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
