// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewVolumeCollectionGetParams creates a new VolumeCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewVolumeCollectionGetParams() *VolumeCollectionGetParams {
	return &VolumeCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewVolumeCollectionGetParamsWithTimeout creates a new VolumeCollectionGetParams object
// with the ability to set a timeout on a request.
func NewVolumeCollectionGetParamsWithTimeout(timeout time.Duration) *VolumeCollectionGetParams {
	return &VolumeCollectionGetParams{
		timeout: timeout,
	}
}

// NewVolumeCollectionGetParamsWithContext creates a new VolumeCollectionGetParams object
// with the ability to set a context for a request.
func NewVolumeCollectionGetParamsWithContext(ctx context.Context) *VolumeCollectionGetParams {
	return &VolumeCollectionGetParams{
		Context: ctx,
	}
}

// NewVolumeCollectionGetParamsWithHTTPClient creates a new VolumeCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewVolumeCollectionGetParamsWithHTTPClient(client *http.Client) *VolumeCollectionGetParams {
	return &VolumeCollectionGetParams{
		HTTPClient: client,
	}
}

/* VolumeCollectionGetParams contains all the parameters to send to the API endpoint
   for the volume collection get operation.

   Typically these are written to a http.Request.
*/
type VolumeCollectionGetParams struct {

	/* AccessTimeEnabled.

	   Filter by access_time_enabled
	*/
	AccessTimeEnabledQueryParameter *bool

	/* ActivityTrackingState.

	   Filter by activity_tracking.state
	*/
	ActivityTrackingStateQueryParameter *string

	/* ActivityTrackingSupported.

	   Filter by activity_tracking.supported
	*/
	ActivityTrackingSupportedQueryParameter *bool

	/* ActivityTrackingUnsupportedReasonCode.

	   Filter by activity_tracking.unsupported_reason.code
	*/
	ActivityTrackingUnsupportedReasonCodeQueryParameter *string

	/* ActivityTrackingUnsupportedReasonMessage.

	   Filter by activity_tracking.unsupported_reason.message
	*/
	ActivityTrackingUnsupportedReasonMessageQueryParameter *string

	/* AggregatesName.

	   Filter by aggregates.name
	*/
	AggregatesNameQueryParameter *string

	/* AggregatesUUID.

	   Filter by aggregates.uuid
	*/
	AggregatesUUIDQueryParameter *string

	/* AnalyticsScanProgress.

	   Filter by analytics.scan_progress
	*/
	AnalyticsScanProgressQueryParameter *int64

	/* AnalyticsState.

	   Filter by analytics.state
	*/
	AnalyticsStateQueryParameter *string

	/* AnalyticsSupported.

	   Filter by analytics.supported
	*/
	AnalyticsSupportedQueryParameter *bool

	/* AnalyticsUnsupportedReasonCode.

	   Filter by analytics.unsupported_reason.code
	*/
	AnalyticsUnsupportedReasonCodeQueryParameter *string

	/* AnalyticsUnsupportedReasonMessage.

	   Filter by analytics.unsupported_reason.message
	*/
	AnalyticsUnsupportedReasonMessageQueryParameter *string

	/* AntiRansomwareAttackProbability.

	   Filter by anti_ransomware.attack_probability
	*/
	AntiRansomwareAttackProbabilityQueryParameter *string

	/* AntiRansomwareAttackReportsTime.

	   Filter by anti_ransomware.attack_reports.time
	*/
	AntiRansomwareAttackReportsTimeQueryParameter *string

	/* AntiRansomwareDryRunStartTime.

	   Filter by anti_ransomware.dry_run_start_time
	*/
	AntiRansomwareDryRunStartTimeQueryParameter *string

	/* AntiRansomwareSpaceSnapshotCount.

	   Filter by anti_ransomware.space.snapshot_count
	*/
	AntiRansomwareSpaceSnapshotCountQueryParameter *int64

	/* AntiRansomwareSpaceUsed.

	   Filter by anti_ransomware.space.used
	*/
	AntiRansomwareSpaceUsedQueryParameter *int64

	/* AntiRansomwareSpaceUsedByLogs.

	   Filter by anti_ransomware.space.used_by_logs
	*/
	AntiRansomwareSpaceUsedByLogsQueryParameter *int64

	/* AntiRansomwareSpaceUsedBySnapshots.

	   Filter by anti_ransomware.space.used_by_snapshots
	*/
	AntiRansomwareSpaceUsedBySnapshotsQueryParameter *int64

	/* AntiRansomwareState.

	   Filter by anti_ransomware.state
	*/
	AntiRansomwareStateQueryParameter *string

	/* AntiRansomwareSurgeAsNormal.

	   Filter by anti_ransomware.surge_as_normal
	*/
	AntiRansomwareSurgeAsNormalQueryParameter *bool

	/* AntiRansomwareSuspectFilesCount.

	   Filter by anti_ransomware.suspect_files.count
	*/
	AntiRansomwareSuspectFilesCountQueryParameter *int64

	/* AntiRansomwareSuspectFilesEntropy.

	   Filter by anti_ransomware.suspect_files.entropy
	*/
	AntiRansomwareSuspectFilesEntropyQueryParameter *string

	/* AntiRansomwareSuspectFilesFormat.

	   Filter by anti_ransomware.suspect_files.format
	*/
	AntiRansomwareSuspectFilesFormatQueryParameter *string

	/* ApplicationName.

	   Filter by application.name
	*/
	ApplicationNameQueryParameter *string

	/* ApplicationUUID.

	   Filter by application.uuid
	*/
	ApplicationUUIDQueryParameter *string

	/* AsynchronousDirectoryDeleteEnabled.

	   Filter by asynchronous_directory_delete.enabled
	*/
	AsynchronousDirectoryDeleteEnabledQueryParameter *bool

	/* AsynchronousDirectoryDeleteTrashBin.

	   Filter by asynchronous_directory_delete.trash_bin
	*/
	AsynchronousDirectoryDeleteTrashBinQueryParameter *string

	/* AutosizeGrowThreshold.

	   Filter by autosize.grow_threshold
	*/
	AutosizeGrowThresholdQueryParameter *int64

	/* AutosizeMaximum.

	   Filter by autosize.maximum
	*/
	AutosizeMaximumQueryParameter *int64

	/* AutosizeMinimum.

	   Filter by autosize.minimum
	*/
	AutosizeMinimumQueryParameter *int64

	/* AutosizeMode.

	   Filter by autosize.mode
	*/
	AutosizeModeQueryParameter *string

	/* AutosizeShrinkThreshold.

	   Filter by autosize.shrink_threshold
	*/
	AutosizeShrinkThresholdQueryParameter *int64

	/* CloneIsFlexclone.

	   Filter by clone.is_flexclone
	*/
	CloneIsFlexcloneQueryParameter *bool

	/* CloneParentSnapshotName.

	   Filter by clone.parent_snapshot.name
	*/
	CloneParentSnapshotNameQueryParameter *string

	/* CloneParentSnapshotUUID.

	   Filter by clone.parent_snapshot.uuid
	*/
	CloneParentSnapshotUUIDQueryParameter *string

	/* CloneParentSvmName.

	   Filter by clone.parent_svm.name
	*/
	CloneParentSVMNameQueryParameter *string

	/* CloneParentSvmUUID.

	   Filter by clone.parent_svm.uuid
	*/
	CloneParentSVMUUIDQueryParameter *string

	/* CloneParentVolumeName.

	   Filter by clone.parent_volume.name
	*/
	CloneParentVolumeNameQueryParameter *string

	/* CloneParentVolumeUUID.

	   Filter by clone.parent_volume.uuid
	*/
	CloneParentVolumeUUIDQueryParameter *string

	/* CloneSplitCompletePercent.

	   Filter by clone.split_complete_percent
	*/
	CloneSplitCompletePercentQueryParameter *int64

	/* CloneSplitEstimate.

	   Filter by clone.split_estimate
	*/
	CloneSplitEstimateQueryParameter *int64

	/* CloneSplitInitiated.

	   Filter by clone.split_initiated
	*/
	CloneSplitInitiatedQueryParameter *bool

	/* CloudRetrievalPolicy.

	   Filter by cloud_retrieval_policy
	*/
	CloudRetrievalPolicyQueryParameter *string

	/* Comment.

	   Filter by comment
	*/
	CommentQueryParameter *string

	/* ConsistencyGroupName.

	   Filter by consistency_group.name
	*/
	ConsistencyGroupNameQueryParameter *string

	/* ConsistencyGroupUUID.

	   Filter by consistency_group.uuid
	*/
	ConsistencyGroupUUIDQueryParameter *string

	/* ConstituentsAggregatesName.

	   Filter by constituents.aggregates.name
	*/
	ConstituentsAggregatesNameQueryParameter *string

	/* ConstituentsAggregatesUUID.

	   Filter by constituents.aggregates.uuid
	*/
	ConstituentsAggregatesUUIDQueryParameter *string

	/* ConstituentsMovementCutoverWindow.

	   Filter by constituents.movement.cutover_window
	*/
	ConstituentsMovementCutoverWindowQueryParameter *int64

	/* ConstituentsMovementDestinationAggregateName.

	   Filter by constituents.movement.destination_aggregate.name
	*/
	ConstituentsMovementDestinationAggregateNameQueryParameter *string

	/* ConstituentsMovementDestinationAggregateUUID.

	   Filter by constituents.movement.destination_aggregate.uuid
	*/
	ConstituentsMovementDestinationAggregateUUIDQueryParameter *string

	/* ConstituentsMovementPercentComplete.

	   Filter by constituents.movement.percent_complete
	*/
	ConstituentsMovementPercentCompleteQueryParameter *int64

	/* ConstituentsMovementState.

	   Filter by constituents.movement.state
	*/
	ConstituentsMovementStateQueryParameter *string

	/* ConstituentsName.

	   Filter by constituents.name
	*/
	ConstituentsNameQueryParameter *string

	/* ConstituentsSpaceAfsTotal.

	   Filter by constituents.space.afs_total
	*/
	ConstituentsSpaceAfsTotalQueryParameter *int64

	/* ConstituentsSpaceAvailable.

	   Filter by constituents.space.available
	*/
	ConstituentsSpaceAvailableQueryParameter *int64

	/* ConstituentsSpaceAvailablePercent.

	   Filter by constituents.space.available_percent
	*/
	ConstituentsSpaceAvailablePercentQueryParameter *int64

	/* ConstituentsSpaceBlockStorageInactiveUserData.

	   Filter by constituents.space.block_storage_inactive_user_data
	*/
	ConstituentsSpaceBlockStorageInactiveUserDataQueryParameter *int64

	/* ConstituentsSpaceCapacityTierFootprint.

	   Filter by constituents.space.capacity_tier_footprint
	*/
	ConstituentsSpaceCapacityTierFootprintQueryParameter *int64

	/* ConstituentsSpaceFootprint.

	   Filter by constituents.space.footprint
	*/
	ConstituentsSpaceFootprintQueryParameter *int64

	/* ConstituentsSpaceLocalTierFootprint.

	   Filter by constituents.space.local_tier_footprint
	*/
	ConstituentsSpaceLocalTierFootprintQueryParameter *int64

	/* ConstituentsSpaceLogicalSpaceAvailable.

	   Filter by constituents.space.logical_space.available
	*/
	ConstituentsSpaceLogicalSpaceAvailableQueryParameter *int64

	/* ConstituentsSpaceLogicalSpaceEnforcement.

	   Filter by constituents.space.logical_space.enforcement
	*/
	ConstituentsSpaceLogicalSpaceEnforcementQueryParameter *bool

	/* ConstituentsSpaceLogicalSpaceReporting.

	   Filter by constituents.space.logical_space.reporting
	*/
	ConstituentsSpaceLogicalSpaceReportingQueryParameter *bool

	/* ConstituentsSpaceLogicalSpaceUsedByAfs.

	   Filter by constituents.space.logical_space.used_by_afs
	*/
	ConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter *int64

	/* ConstituentsSpaceMetadata.

	   Filter by constituents.space.metadata
	*/
	ConstituentsSpaceMetadataQueryParameter *int64

	/* ConstituentsSpaceOverProvisioned.

	   Filter by constituents.space.over_provisioned
	*/
	ConstituentsSpaceOverProvisionedQueryParameter *int64

	/* ConstituentsSpacePerformanceTierFootprint.

	   Filter by constituents.space.performance_tier_footprint
	*/
	ConstituentsSpacePerformanceTierFootprintQueryParameter *int64

	/* ConstituentsSpaceSize.

	   Filter by constituents.space.size
	*/
	ConstituentsSpaceSizeQueryParameter *int64

	/* ConstituentsSpaceSnapshotReservePercent.

	   Filter by constituents.space.snapshot.reserve_percent
	*/
	ConstituentsSpaceSnapshotReservePercentQueryParameter *int64

	/* ConstituentsSpaceSnapshotUsed.

	   Filter by constituents.space.snapshot.used
	*/
	ConstituentsSpaceSnapshotUsedQueryParameter *int64

	/* ConstituentsSpaceTotalFootprint.

	   Filter by constituents.space.total_footprint
	*/
	ConstituentsSpaceTotalFootprintQueryParameter *int64

	/* ConstituentsSpaceUsed.

	   Filter by constituents.space.used
	*/
	ConstituentsSpaceUsedQueryParameter *int64

	/* ConstituentsSpaceUsedByAfs.

	   Filter by constituents.space.used_by_afs
	*/
	ConstituentsSpaceUsedByAfsQueryParameter *int64

	/* ConstituentsSpaceUsedPercent.

	   Filter by constituents.space.used_percent
	*/
	ConstituentsSpaceUsedPercentQueryParameter *int64

	/* ConvertUnicode.

	   Filter by convert_unicode
	*/
	ConvertUnicodeQueryParameter *bool

	/* CreateTime.

	   Filter by create_time
	*/
	CreateTimeQueryParameter *string

	/* EfficiencyApplicationIoSize.

	   Filter by efficiency.application_io_size
	*/
	EfficiencyApplicationIoSizeQueryParameter *string

	/* EfficiencyCompaction.

	   Filter by efficiency.compaction
	*/
	EfficiencyCompactionQueryParameter *string

	/* EfficiencyCompression.

	   Filter by efficiency.compression
	*/
	EfficiencyCompressionQueryParameter *string

	/* EfficiencyCompressionType.

	   Filter by efficiency.compression_type
	*/
	EfficiencyCompressionTypeQueryParameter *string

	/* EfficiencyCrossVolumeDedupe.

	   Filter by efficiency.cross_volume_dedupe
	*/
	EfficiencyCrossVolumeDedupeQueryParameter *string

	/* EfficiencyDedupe.

	   Filter by efficiency.dedupe
	*/
	EfficiencyDedupeQueryParameter *string

	/* EfficiencyHasSavings.

	   Filter by efficiency.has_savings
	*/
	EfficiencyHasSavingsQueryParameter *bool

	/* EfficiencyLastOpBegin.

	   Filter by efficiency.last_op_begin
	*/
	EfficiencyLastOpBeginQueryParameter *string

	/* EfficiencyLastOpEnd.

	   Filter by efficiency.last_op_end
	*/
	EfficiencyLastOpEndQueryParameter *string

	/* EfficiencyLastOpErr.

	   Filter by efficiency.last_op_err
	*/
	EfficiencyLastOpErrQueryParameter *string

	/* EfficiencyLastOpSize.

	   Filter by efficiency.last_op_size
	*/
	EfficiencyLastOpSizeQueryParameter *int64

	/* EfficiencyLastOpState.

	   Filter by efficiency.last_op_state
	*/
	EfficiencyLastOpStateQueryParameter *string

	/* EfficiencyLoggingEnabled.

	   Filter by efficiency.logging_enabled
	*/
	EfficiencyLoggingEnabledQueryParameter *bool

	/* EfficiencyOpState.

	   Filter by efficiency.op_state
	*/
	EfficiencyOpStateQueryParameter *string

	/* EfficiencyPath.

	   Filter by efficiency.path
	*/
	EfficiencyPathQueryParameter *string

	/* EfficiencyPolicyName.

	   Filter by efficiency.policy.name
	*/
	EfficiencyPolicyNameQueryParameter *string

	/* EfficiencyProgress.

	   Filter by efficiency.progress
	*/
	EfficiencyProgressQueryParameter *string

	/* EfficiencyScannerCompression.

	   Filter by efficiency.scanner.compression
	*/
	EfficiencyScannerCompressionQueryParameter *bool

	/* EfficiencyScannerDedupe.

	   Filter by efficiency.scanner.dedupe
	*/
	EfficiencyScannerDedupeQueryParameter *bool

	/* EfficiencyScannerScanOldData.

	   Filter by efficiency.scanner.scan_old_data
	*/
	EfficiencyScannerScanOldDataQueryParameter *bool

	/* EfficiencyScannerState.

	   Filter by efficiency.scanner.state
	*/
	EfficiencyScannerStateQueryParameter *string

	/* EfficiencySchedule.

	   Filter by efficiency.schedule
	*/
	EfficiencyScheduleQueryParameter *string

	/* EfficiencySpaceSavingsCompression.

	   Filter by efficiency.space_savings.compression
	*/
	EfficiencySpaceSavingsCompressionQueryParameter *int64

	/* EfficiencySpaceSavingsCompressionPercent.

	   Filter by efficiency.space_savings.compression_percent
	*/
	EfficiencySpaceSavingsCompressionPercentQueryParameter *int64

	/* EfficiencySpaceSavingsDedupe.

	   Filter by efficiency.space_savings.dedupe
	*/
	EfficiencySpaceSavingsDedupeQueryParameter *int64

	/* EfficiencySpaceSavingsDedupePercent.

	   Filter by efficiency.space_savings.dedupe_percent
	*/
	EfficiencySpaceSavingsDedupePercentQueryParameter *int64

	/* EfficiencySpaceSavingsDedupeSharing.

	   Filter by efficiency.space_savings.dedupe_sharing
	*/
	EfficiencySpaceSavingsDedupeSharingQueryParameter *int64

	/* EfficiencySpaceSavingsTotal.

	   Filter by efficiency.space_savings.total
	*/
	EfficiencySpaceSavingsTotalQueryParameter *int64

	/* EfficiencySpaceSavingsTotalPercent.

	   Filter by efficiency.space_savings.total_percent
	*/
	EfficiencySpaceSavingsTotalPercentQueryParameter *int64

	/* EfficiencyState.

	   Filter by efficiency.state
	*/
	EfficiencyStateQueryParameter *string

	/* EfficiencyStorageEfficiencyMode.

	   Filter by efficiency.storage_efficiency_mode
	*/
	EfficiencyStorageEfficiencyModeQueryParameter *string

	/* EfficiencyType.

	   Filter by efficiency.type
	*/
	EfficiencyTypeQueryParameter *string

	/* EncryptionEnabled.

	   Filter by encryption.enabled
	*/
	EncryptionEnabledQueryParameter *bool

	/* EncryptionKeyCreateTime.

	   Filter by encryption.key_create_time
	*/
	EncryptionKeyCreateTimeQueryParameter *string

	/* EncryptionKeyID.

	   Filter by encryption.key_id
	*/
	EncryptionKeyIDQueryParameter *string

	/* EncryptionRekey.

	   Filter by encryption.rekey
	*/
	EncryptionRekeyQueryParameter *bool

	/* EncryptionState.

	   Filter by encryption.state
	*/
	EncryptionStateQueryParameter *string

	/* EncryptionStatusCode.

	   Filter by encryption.status.code
	*/
	EncryptionStatusCodeQueryParameter *string

	/* EncryptionStatusMessage.

	   Filter by encryption.status.message
	*/
	EncryptionStatusMessageQueryParameter *string

	/* EncryptionType.

	   Filter by encryption.type
	*/
	EncryptionTypeQueryParameter *string

	/* ErrorStateHasBadBlocks.

	   Filter by error_state.has_bad_blocks
	*/
	ErrorStateHasBadBlocksQueryParameter *bool

	/* ErrorStateIsInconsistent.

	   Filter by error_state.is_inconsistent
	*/
	ErrorStateIsInconsistentQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* FilesMaximum.

	   Filter by files.maximum
	*/
	FilesMaximumQueryParameter *int64

	/* FilesUsed.

	   Filter by files.used
	*/
	FilesUsedQueryParameter *int64

	/* FlashPoolCacheEligibility.

	   Filter by flash_pool.cache_eligibility
	*/
	FlashPoolCacheEligibilityQueryParameter *string

	/* FlashPoolCacheRetentionPriority.

	   Filter by flash_pool.cache_retention_priority
	*/
	FlashPoolCacheRetentionPriorityQueryParameter *string

	/* FlashPoolCachingPolicy.

	   Filter by flash_pool.caching_policy
	*/
	FlashPoolCachingPolicyQueryParameter *string

	/* FlexcacheEndpointType.

	   Filter by flexcache_endpoint_type
	*/
	FlexcacheEndpointTypeQueryParameter *string

	/* FlexgroupName.

	   Filter by flexgroup.name
	*/
	FlexgroupNameQueryParameter *string

	/* FlexgroupUUID.

	   Filter by flexgroup.uuid
	*/
	FlexgroupUUIDQueryParameter *string

	/* GranularData.

	   Filter by granular_data
	*/
	GranularDataQueryParameter *bool

	/* GuaranteeHonored.

	   Filter by guarantee.honored
	*/
	GuaranteeHonoredQueryParameter *bool

	/* GuaranteeType.

	   Filter by guarantee.type
	*/
	GuaranteeTypeQueryParameter *string

	/* IdcsScannerEnabled.

	   Filter by idcs_scanner.enabled
	*/
	IdcsScannerEnabledQueryParameter *bool

	/* IdcsScannerMode.

	   Filter by idcs_scanner.mode
	*/
	IdcsScannerModeQueryParameter *string

	/* IdcsScannerOperationState.

	   Filter by idcs_scanner.operation_state
	*/
	IdcsScannerOperationStateQueryParameter *string

	/* IdcsScannerStatus.

	   Filter by idcs_scanner.status
	*/
	IdcsScannerStatusQueryParameter *string

	/* IdcsScannerThresholdInactiveTime.

	   Filter by idcs_scanner.threshold_inactive_time
	*/
	IdcsScannerThresholdInactiveTimeQueryParameter *string

	/* IsConstituent.

	   When set to false, only FlexVol and FlexGroup volumes are returned.  When set to true, only FlexGroup constituent volumes are returned. Default for GET calls is false.
	*/
	IsConstituentQueryParameter *bool

	/* IsObjectStore.

	   Filter by is_object_store
	*/
	IsObjectStoreQueryParameter *bool

	/* IsSvmRoot.

	   Filter by is_svm_root
	*/
	IsSVMRootQueryParameter *bool

	/* Language.

	   Filter by language
	*/
	LanguageQueryParameter *string

	/* MaxDirSize.

	   Filter by max_dir_size
	*/
	MaxDirSizeQueryParameter *int64

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* MetricCloudDuration.

	   Filter by metric.cloud.duration
	*/
	MetricCloudDurationQueryParameter *string

	/* MetricCloudIopsOther.

	   Filter by metric.cloud.iops.other
	*/
	MetricCloudIopsOtherQueryParameter *int64

	/* MetricCloudIopsRead.

	   Filter by metric.cloud.iops.read
	*/
	MetricCloudIopsReadQueryParameter *int64

	/* MetricCloudIopsTotal.

	   Filter by metric.cloud.iops.total
	*/
	MetricCloudIopsTotalQueryParameter *int64

	/* MetricCloudIopsWrite.

	   Filter by metric.cloud.iops.write
	*/
	MetricCloudIopsWriteQueryParameter *int64

	/* MetricCloudLatencyOther.

	   Filter by metric.cloud.latency.other
	*/
	MetricCloudLatencyOtherQueryParameter *int64

	/* MetricCloudLatencyRead.

	   Filter by metric.cloud.latency.read
	*/
	MetricCloudLatencyReadQueryParameter *int64

	/* MetricCloudLatencyTotal.

	   Filter by metric.cloud.latency.total
	*/
	MetricCloudLatencyTotalQueryParameter *int64

	/* MetricCloudLatencyWrite.

	   Filter by metric.cloud.latency.write
	*/
	MetricCloudLatencyWriteQueryParameter *int64

	/* MetricCloudStatus.

	   Filter by metric.cloud.status
	*/
	MetricCloudStatusQueryParameter *string

	/* MetricCloudTimestamp.

	   Filter by metric.cloud.timestamp
	*/
	MetricCloudTimestampQueryParameter *string

	/* MetricDuration.

	   Filter by metric.duration
	*/
	MetricDurationQueryParameter *string

	/* MetricFlexcacheBandwidthSavings.

	   Filter by metric.flexcache.bandwidth_savings
	*/
	MetricFlexcacheBandwidthSavingsQueryParameter *int64

	/* MetricFlexcacheCacheMissPercent.

	   Filter by metric.flexcache.cache_miss_percent
	*/
	MetricFlexcacheCacheMissPercentQueryParameter *int64

	/* MetricFlexcacheDuration.

	   Filter by metric.flexcache.duration
	*/
	MetricFlexcacheDurationQueryParameter *string

	/* MetricFlexcacheStatus.

	   Filter by metric.flexcache.status
	*/
	MetricFlexcacheStatusQueryParameter *string

	/* MetricFlexcacheTimestamp.

	   Filter by metric.flexcache.timestamp
	*/
	MetricFlexcacheTimestampQueryParameter *string

	/* MetricIopsOther.

	   Filter by metric.iops.other
	*/
	MetricIopsOtherQueryParameter *int64

	/* MetricIopsRead.

	   Filter by metric.iops.read
	*/
	MetricIopsReadQueryParameter *int64

	/* MetricIopsTotal.

	   Filter by metric.iops.total
	*/
	MetricIopsTotalQueryParameter *int64

	/* MetricIopsWrite.

	   Filter by metric.iops.write
	*/
	MetricIopsWriteQueryParameter *int64

	/* MetricLatencyOther.

	   Filter by metric.latency.other
	*/
	MetricLatencyOtherQueryParameter *int64

	/* MetricLatencyRead.

	   Filter by metric.latency.read
	*/
	MetricLatencyReadQueryParameter *int64

	/* MetricLatencyTotal.

	   Filter by metric.latency.total
	*/
	MetricLatencyTotalQueryParameter *int64

	/* MetricLatencyWrite.

	   Filter by metric.latency.write
	*/
	MetricLatencyWriteQueryParameter *int64

	/* MetricStatus.

	   Filter by metric.status
	*/
	MetricStatusQueryParameter *string

	/* MetricThroughputOther.

	   Filter by metric.throughput.other
	*/
	MetricThroughputOtherQueryParameter *int64

	/* MetricThroughputRead.

	   Filter by metric.throughput.read
	*/
	MetricThroughputReadQueryParameter *int64

	/* MetricThroughputTotal.

	   Filter by metric.throughput.total
	*/
	MetricThroughputTotalQueryParameter *int64

	/* MetricThroughputWrite.

	   Filter by metric.throughput.write
	*/
	MetricThroughputWriteQueryParameter *int64

	/* MetricTimestamp.

	   Filter by metric.timestamp
	*/
	MetricTimestampQueryParameter *string

	/* MovementCutoverWindow.

	   Filter by movement.cutover_window
	*/
	MovementCutoverWindowQueryParameter *int64

	/* MovementDestinationAggregateName.

	   Filter by movement.destination_aggregate.name
	*/
	MovementDestinationAggregateNameQueryParameter *string

	/* MovementDestinationAggregateUUID.

	   Filter by movement.destination_aggregate.uuid
	*/
	MovementDestinationAggregateUUIDQueryParameter *string

	/* MovementPercentComplete.

	   Filter by movement.percent_complete
	*/
	MovementPercentCompleteQueryParameter *int64

	/* MovementStartTime.

	   Filter by movement.start_time
	*/
	MovementStartTimeQueryParameter *string

	/* MovementState.

	   Filter by movement.state
	*/
	MovementStateQueryParameter *string

	/* Msid.

	   Filter by msid
	*/
	MsIDQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* NasExportPolicyID.

	   Filter by nas.export_policy.id
	*/
	NasExportPolicyIDQueryParameter *int64

	/* NasExportPolicyName.

	   Filter by nas.export_policy.name
	*/
	NasExportPolicyNameQueryParameter *string

	/* NasGid.

	   Filter by nas.gid
	*/
	NasGIDQueryParameter *int64

	/* NasJunctionParentName.

	   Filter by nas.junction_parent.name
	*/
	NasJunctionParentNameQueryParameter *string

	/* NasJunctionParentUUID.

	   Filter by nas.junction_parent.uuid
	*/
	NasJunctionParentUUIDQueryParameter *string

	/* NasPath.

	   Filter by nas.path
	*/
	NasPathQueryParameter *string

	/* NasSecurityStyle.

	   Filter by nas.security_style
	*/
	NasSecurityStyleQueryParameter *string

	/* NasUID.

	   Filter by nas.uid
	*/
	NasUIDQueryParameter *int64

	/* NasUnixPermissions.

	   Filter by nas.unix_permissions
	*/
	NasUnixPermissionsQueryParameter *int64

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* QosPolicyMaxThroughputIops.

	   Filter by qos.policy.max_throughput_iops
	*/
	QosPolicyMaxThroughputIopsQueryParameter *int64

	/* QosPolicyMaxThroughputMbps.

	   Filter by qos.policy.max_throughput_mbps
	*/
	QosPolicyMaxThroughputMbpsQueryParameter *int64

	/* QosPolicyMinThroughputIops.

	   Filter by qos.policy.min_throughput_iops
	*/
	QosPolicyMinThroughputIopsQueryParameter *int64

	/* QosPolicyMinThroughputMbps.

	   Filter by qos.policy.min_throughput_mbps
	*/
	QosPolicyMinThroughputMbpsQueryParameter *int64

	/* QosPolicyName.

	   Filter by qos.policy.name
	*/
	QosPolicyNameQueryParameter *string

	/* QosPolicyUUID.

	   Filter by qos.policy.uuid
	*/
	QosPolicyUUIDQueryParameter *string

	/* QueueForEncryption.

	   Filter by queue_for_encryption
	*/
	QueueForEncryptionQueryParameter *bool

	/* QuotaState.

	   Filter by quota.state
	*/
	QuotaStateQueryParameter *string

	/* RebalancingDataMoved.

	   Filter by rebalancing.data_moved
	*/
	RebalancingDataMovedQueryParameter *int64

	/* RebalancingExcludeSnapshots.

	   Filter by rebalancing.exclude_snapshots
	*/
	RebalancingExcludeSnapshotsQueryParameter *bool

	/* RebalancingFailureReasonCode.

	   Filter by rebalancing.failure_reason.code
	*/
	RebalancingFailureReasonCodeQueryParameter *string

	/* RebalancingFailureReasonMessage.

	   Filter by rebalancing.failure_reason.message
	*/
	RebalancingFailureReasonMessageQueryParameter *string

	/* RebalancingImbalancePercent.

	   Filter by rebalancing.imbalance_percent
	*/
	RebalancingImbalancePercentQueryParameter *int64

	/* RebalancingImbalanceSize.

	   Filter by rebalancing.imbalance_size
	*/
	RebalancingImbalanceSizeQueryParameter *int64

	/* RebalancingMaxConstituentImbalancePercent.

	   Filter by rebalancing.max_constituent_imbalance_percent
	*/
	RebalancingMaxConstituentImbalancePercentQueryParameter *int64

	/* RebalancingMaxFileMoves.

	   Filter by rebalancing.max_file_moves
	*/
	RebalancingMaxFileMovesQueryParameter *int64

	/* RebalancingMaxRuntime.

	   Filter by rebalancing.max_runtime
	*/
	RebalancingMaxRuntimeQueryParameter *string

	/* RebalancingMaxThreshold.

	   Filter by rebalancing.max_threshold
	*/
	RebalancingMaxThresholdQueryParameter *int64

	/* RebalancingMinFileSize.

	   Filter by rebalancing.min_file_size
	*/
	RebalancingMinFileSizeQueryParameter *int64

	/* RebalancingMinThreshold.

	   Filter by rebalancing.min_threshold
	*/
	RebalancingMinThresholdQueryParameter *int64

	/* RebalancingRuntime.

	   Filter by rebalancing.runtime
	*/
	RebalancingRuntimeQueryParameter *string

	/* RebalancingStartTime.

	   Filter by rebalancing.start_time
	*/
	RebalancingStartTimeQueryParameter *string

	/* RebalancingState.

	   Filter by rebalancing.state
	*/
	RebalancingStateQueryParameter *string

	/* RebalancingStopTime.

	   Filter by rebalancing.stop_time
	*/
	RebalancingStopTimeQueryParameter *string

	/* RebalancingTargetUsed.

	   Filter by rebalancing.target_used
	*/
	RebalancingTargetUsedQueryParameter *int64

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* ScheduledSnapshotNamingScheme.

	   Filter by scheduled_snapshot_naming_scheme
	*/
	ScheduledSnapshotNamingSchemeQueryParameter *string

	/* Size.

	   Filter by size
	*/
	SizeQueryParameter *int64

	/* SnaplockAppendModeEnabled.

	   Filter by snaplock.append_mode_enabled
	*/
	SnaplockAppendModeEnabledQueryParameter *bool

	/* SnaplockAutocommitPeriod.

	   Filter by snaplock.autocommit_period
	*/
	SnaplockAutocommitPeriodQueryParameter *string

	/* SnaplockComplianceClockTime.

	   Filter by snaplock.compliance_clock_time
	*/
	SnaplockComplianceClockTimeQueryParameter *string

	/* SnaplockExpiryTime.

	   Filter by snaplock.expiry_time
	*/
	SnaplockExpiryTimeQueryParameter *string

	/* SnaplockIsAuditLog.

	   Filter by snaplock.is_audit_log
	*/
	SnaplockIsAuditLogQueryParameter *bool

	/* SnaplockLitigationCount.

	   Filter by snaplock.litigation_count
	*/
	SnaplockLitigationCountQueryParameter *int64

	/* SnaplockPrivilegedDelete.

	   Filter by snaplock.privileged_delete
	*/
	SnaplockPrivilegedDeleteQueryParameter *string

	/* SnaplockRetentionDefault.

	   Filter by snaplock.retention.default
	*/
	SnaplockRetentionDefaultQueryParameter *string

	/* SnaplockRetentionMaximum.

	   Filter by snaplock.retention.maximum
	*/
	SnaplockRetentionMaximumQueryParameter *string

	/* SnaplockRetentionMinimum.

	   Filter by snaplock.retention.minimum
	*/
	SnaplockRetentionMinimumQueryParameter *string

	/* SnaplockType.

	   Filter by snaplock.type
	*/
	SnaplockTypeQueryParameter *string

	/* SnaplockUnspecifiedRetentionFileCount.

	   Filter by snaplock.unspecified_retention_file_count
	*/
	SnaplockUnspecifiedRetentionFileCountQueryParameter *int64

	/* SnapmirrorDestinationsIsCloud.

	   Filter by snapmirror.destinations.is_cloud
	*/
	SnapmirrorDestinationsIsCloudQueryParameter *bool

	/* SnapmirrorDestinationsIsOntap.

	   Filter by snapmirror.destinations.is_ontap
	*/
	SnapmirrorDestinationsIsOntapQueryParameter *bool

	/* SnapmirrorIsProtected.

	   Filter by snapmirror.is_protected
	*/
	SnapmirrorIsProtectedQueryParameter *bool

	/* SnapshotCount.

	   Filter by snapshot_count
	*/
	SnapshotCountQueryParameter *int64

	/* SnapshotDirectoryAccessEnabled.

	   Filters by the client visiblity of the ".snapshot" directory.
	*/
	SnapshotDirectoryAccessEnabledQueryParameter *bool

	/* SnapshotPolicyName.

	   Filter by snapshot_policy.name
	*/
	SnapshotPolicyNameQueryParameter *string

	/* SnapshotPolicyUUID.

	   Filter by snapshot_policy.uuid
	*/
	SnapshotPolicyUUIDQueryParameter *string

	/* SpaceAfsTotal.

	   Filter by space.afs_total
	*/
	SpaceAfsTotalQueryParameter *int64

	/* SpaceAutoAdaptiveCompressionFootprintDataReduction.

	   Filter by space.auto_adaptive_compression_footprint_data_reduction
	*/
	SpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter *int64

	/* SpaceAvailable.

	   Filter by space.available
	*/
	SpaceAvailableQueryParameter *int64

	/* SpaceAvailablePercent.

	   Filter by space.available_percent
	*/
	SpaceAvailablePercentQueryParameter *int64

	/* SpaceBlockStorageInactiveUserData.

	   Filter by space.block_storage_inactive_user_data
	*/
	SpaceBlockStorageInactiveUserDataQueryParameter *int64

	/* SpaceBlockStorageInactiveUserDataPercent.

	   Filter by space.block_storage_inactive_user_data_percent
	*/
	SpaceBlockStorageInactiveUserDataPercentQueryParameter *int64

	/* SpaceCapacityTierFootprint.

	   Filter by space.capacity_tier_footprint
	*/
	SpaceCapacityTierFootprintQueryParameter *int64

	/* SpaceCrossVolumeDedupeMetafilesFootprint.

	   Filter by space.cross_volume_dedupe_metafiles_footprint
	*/
	SpaceCrossVolumeDedupeMetafilesFootprintQueryParameter *int64

	/* SpaceCrossVolumeDedupeMetafilesTemporaryFootprint.

	   Filter by space.cross_volume_dedupe_metafiles_temporary_footprint
	*/
	SpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter *int64

	/* SpaceDedupeMetafilesFootprint.

	   Filter by space.dedupe_metafiles_footprint
	*/
	SpaceDedupeMetafilesFootprintQueryParameter *int64

	/* SpaceDedupeMetafilesTemporaryFootprint.

	   Filter by space.dedupe_metafiles_temporary_footprint
	*/
	SpaceDedupeMetafilesTemporaryFootprintQueryParameter *int64

	/* SpaceDelayedFreeFootprint.

	   Filter by space.delayed_free_footprint
	*/
	SpaceDelayedFreeFootprintQueryParameter *int64

	/* SpaceEffectiveTotalFootprint.

	   Filter by space.effective_total_footprint
	*/
	SpaceEffectiveTotalFootprintQueryParameter *int64

	/* SpaceExpectedAvailable.

	   Filter by space.expected_available
	*/
	SpaceExpectedAvailableQueryParameter *int64

	/* SpaceFileOperationMetadata.

	   Filter by space.file_operation_metadata
	*/
	SpaceFileOperationMetadataQueryParameter *int64

	/* SpaceFilesystemSize.

	   Filter by space.filesystem_size
	*/
	SpaceFilesystemSizeQueryParameter *int64

	/* SpaceFilesystemSizeFixed.

	   Filter by space.filesystem_size_fixed
	*/
	SpaceFilesystemSizeFixedQueryParameter *bool

	/* SpaceFootprint.

	   Filter by space.footprint
	*/
	SpaceFootprintQueryParameter *int64

	/* SpaceFractionalReserve.

	   Filter by space.fractional_reserve
	*/
	SpaceFractionalReserveQueryParameter *int64

	/* SpaceFullThresholdPercent.

	   Filter by space.full_threshold_percent
	*/
	SpaceFullThresholdPercentQueryParameter *int64

	/* SpaceLocalTierFootprint.

	   Filter by space.local_tier_footprint
	*/
	SpaceLocalTierFootprintQueryParameter *int64

	/* SpaceLogicalSpaceAvailable.

	   Filter by space.logical_space.available
	*/
	SpaceLogicalSpaceAvailableQueryParameter *int64

	/* SpaceLogicalSpaceEnforcement.

	   Filter by space.logical_space.enforcement
	*/
	SpaceLogicalSpaceEnforcementQueryParameter *bool

	/* SpaceLogicalSpaceReporting.

	   Filter by space.logical_space.reporting
	*/
	SpaceLogicalSpaceReportingQueryParameter *bool

	/* SpaceLogicalSpaceUsed.

	   Filter by space.logical_space.used
	*/
	SpaceLogicalSpaceUsedQueryParameter *int64

	/* SpaceLogicalSpaceUsedByAfs.

	   Filter by space.logical_space.used_by_afs
	*/
	SpaceLogicalSpaceUsedByAfsQueryParameter *int64

	/* SpaceLogicalSpaceUsedBySnapshots.

	   Filter by space.logical_space.used_by_snapshots
	*/
	SpaceLogicalSpaceUsedBySnapshotsQueryParameter *int64

	/* SpaceLogicalSpaceUsedPercent.

	   Filter by space.logical_space.used_percent
	*/
	SpaceLogicalSpaceUsedPercentQueryParameter *int64

	/* SpaceMetadata.

	   Filter by space.metadata
	*/
	SpaceMetadataQueryParameter *int64

	/* SpaceNearlyFullThresholdPercent.

	   Filter by space.nearly_full_threshold_percent
	*/
	SpaceNearlyFullThresholdPercentQueryParameter *int64

	/* SpaceOverProvisioned.

	   Filter by space.over_provisioned
	*/
	SpaceOverProvisionedQueryParameter *int64

	/* SpaceOverwriteReserve.

	   Filter by space.overwrite_reserve
	*/
	SpaceOverwriteReserveQueryParameter *int64

	/* SpaceOverwriteReserveUsed.

	   Filter by space.overwrite_reserve_used
	*/
	SpaceOverwriteReserveUsedQueryParameter *int64

	/* SpacePercentUsed.

	   Filter by space.percent_used
	*/
	SpacePercentUsedQueryParameter *int64

	/* SpacePerformanceTierFootprint.

	   Filter by space.performance_tier_footprint
	*/
	SpacePerformanceTierFootprintQueryParameter *int64

	/* SpacePhysicalUsed.

	   Filter by space.physical_used
	*/
	SpacePhysicalUsedQueryParameter *int64

	/* SpacePhysicalUsedPercent.

	   Filter by space.physical_used_percent
	*/
	SpacePhysicalUsedPercentQueryParameter *int64

	/* SpaceSize.

	   Filter by space.size
	*/
	SpaceSizeQueryParameter *int64

	/* SpaceSizeAvailableForSnapshots.

	   Filter by space.size_available_for_snapshots
	*/
	SpaceSizeAvailableForSnapshotsQueryParameter *int64

	/* SpaceSnapmirrorDestinationFootprint.

	   Filter by space.snapmirror_destination_footprint
	*/
	SpaceSnapmirrorDestinationFootprintQueryParameter *int64

	/* SpaceSnapshotAutodeleteTrigger.

	   Filter by space.snapshot.autodelete_trigger
	*/
	SpaceSnapshotAutodeleteTriggerQueryParameter *string

	/* SpaceSnapshotReserveAvailable.

	   Filter by space.snapshot.reserve_available
	*/
	SpaceSnapshotReserveAvailableQueryParameter *int64

	/* SpaceSnapshotReservePercent.

	   Filter by space.snapshot.reserve_percent
	*/
	SpaceSnapshotReservePercentQueryParameter *int64

	/* SpaceSnapshotReserveSize.

	   Filter by space.snapshot.reserve_size
	*/
	SpaceSnapshotReserveSizeQueryParameter *int64

	/* SpaceSnapshotSpaceUsedPercent.

	   Filter by space.snapshot.space_used_percent
	*/
	SpaceSnapshotSpaceUsedPercentQueryParameter *int64

	/* SpaceSnapshotUsed.

	   Filter by space.snapshot.used
	*/
	SpaceSnapshotUsedQueryParameter *int64

	/* SpaceSnapshotReserveUnusable.

	   Filter by space.snapshot_reserve_unusable
	*/
	SpaceSnapshotReserveUnusableQueryParameter *int64

	/* SpaceSnapshotSpill.

	   Filter by space.snapshot_spill
	*/
	SpaceSnapshotSpillQueryParameter *int64

	/* SpaceTotalFootprint.

	   Filter by space.total_footprint
	*/
	SpaceTotalFootprintQueryParameter *int64

	/* SpaceUsed.

	   Filter by space.used
	*/
	SpaceUsedQueryParameter *int64

	/* SpaceUsedByAfs.

	   Filter by space.used_by_afs
	*/
	SpaceUsedByAfsQueryParameter *int64

	/* SpaceUserData.

	   Filter by space.user_data
	*/
	SpaceUserDataQueryParameter *int64

	/* SpaceVolumeGuaranteeFootprint.

	   Filter by space.volume_guarantee_footprint
	*/
	SpaceVolumeGuaranteeFootprintQueryParameter *int64

	/* State.

	   Filter by state
	*/
	StateQueryParameter *string

	/* StatisticsCifsOpsRawAccessCount.

	   Filter by statistics.cifs_ops_raw.access.count
	*/
	StatisticsCifsOpsRawAccessCountQueryParameter *int64

	/* StatisticsCifsOpsRawAccessTotalTime.

	   Filter by statistics.cifs_ops_raw.access.total_time
	*/
	StatisticsCifsOpsRawAccessTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawAuditCount.

	   Filter by statistics.cifs_ops_raw.audit.count
	*/
	StatisticsCifsOpsRawAuditCountQueryParameter *int64

	/* StatisticsCifsOpsRawAuditTotalTime.

	   Filter by statistics.cifs_ops_raw.audit.total_time
	*/
	StatisticsCifsOpsRawAuditTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawCreateDirCount.

	   Filter by statistics.cifs_ops_raw.create.dir.count
	*/
	StatisticsCifsOpsRawCreateDirCountQueryParameter *int64

	/* StatisticsCifsOpsRawCreateDirTotalTime.

	   Filter by statistics.cifs_ops_raw.create.dir.total_time
	*/
	StatisticsCifsOpsRawCreateDirTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawCreateFileCount.

	   Filter by statistics.cifs_ops_raw.create.file.count
	*/
	StatisticsCifsOpsRawCreateFileCountQueryParameter *int64

	/* StatisticsCifsOpsRawCreateFileTotalTime.

	   Filter by statistics.cifs_ops_raw.create.file.total_time
	*/
	StatisticsCifsOpsRawCreateFileTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawCreateOtherCount.

	   Filter by statistics.cifs_ops_raw.create.other.count
	*/
	StatisticsCifsOpsRawCreateOtherCountQueryParameter *int64

	/* StatisticsCifsOpsRawCreateOtherTotalTime.

	   Filter by statistics.cifs_ops_raw.create.other.total_time
	*/
	StatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawCreateSymlinkCount.

	   Filter by statistics.cifs_ops_raw.create.symlink.count
	*/
	StatisticsCifsOpsRawCreateSymlinkCountQueryParameter *int64

	/* StatisticsCifsOpsRawCreateSymlinkTotalTime.

	   Filter by statistics.cifs_ops_raw.create.symlink.total_time
	*/
	StatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawGetattrCount.

	   Filter by statistics.cifs_ops_raw.getattr.count
	*/
	StatisticsCifsOpsRawGetattrCountQueryParameter *int64

	/* StatisticsCifsOpsRawGetattrTotalTime.

	   Filter by statistics.cifs_ops_raw.getattr.total_time
	*/
	StatisticsCifsOpsRawGetattrTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawLinkCount.

	   Filter by statistics.cifs_ops_raw.link.count
	*/
	StatisticsCifsOpsRawLinkCountQueryParameter *int64

	/* StatisticsCifsOpsRawLinkTotalTime.

	   Filter by statistics.cifs_ops_raw.link.total_time
	*/
	StatisticsCifsOpsRawLinkTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawLockCount.

	   Filter by statistics.cifs_ops_raw.lock.count
	*/
	StatisticsCifsOpsRawLockCountQueryParameter *int64

	/* StatisticsCifsOpsRawLockTotalTime.

	   Filter by statistics.cifs_ops_raw.lock.total_time
	*/
	StatisticsCifsOpsRawLockTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawLookupCount.

	   Filter by statistics.cifs_ops_raw.lookup.count
	*/
	StatisticsCifsOpsRawLookupCountQueryParameter *int64

	/* StatisticsCifsOpsRawLookupTotalTime.

	   Filter by statistics.cifs_ops_raw.lookup.total_time
	*/
	StatisticsCifsOpsRawLookupTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawOpenCount.

	   Filter by statistics.cifs_ops_raw.open.count
	*/
	StatisticsCifsOpsRawOpenCountQueryParameter *int64

	/* StatisticsCifsOpsRawOpenTotalTime.

	   Filter by statistics.cifs_ops_raw.open.total_time
	*/
	StatisticsCifsOpsRawOpenTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawReadCount.

	   Filter by statistics.cifs_ops_raw.read.count
	*/
	StatisticsCifsOpsRawReadCountQueryParameter *int64

	/* StatisticsCifsOpsRawReadTotalTime.

	   Filter by statistics.cifs_ops_raw.read.total_time
	*/
	StatisticsCifsOpsRawReadTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts.

	   Filter by statistics.cifs_ops_raw.read.volume_protocol_latency_histogram_counts
	*/
	StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter *int64

	/* StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels.

	   Filter by statistics.cifs_ops_raw.read.volume_protocol_latency_histogram_labels
	*/
	StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter *string

	/* StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts.

	   Filter by statistics.cifs_ops_raw.read.volume_protocol_size_histogram_counts
	*/
	StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter *int64

	/* StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels.

	   Filter by statistics.cifs_ops_raw.read.volume_protocol_size_histogram_labels
	*/
	StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter *string

	/* StatisticsCifsOpsRawReaddirCount.

	   Filter by statistics.cifs_ops_raw.readdir.count
	*/
	StatisticsCifsOpsRawReaddirCountQueryParameter *int64

	/* StatisticsCifsOpsRawReaddirTotalTime.

	   Filter by statistics.cifs_ops_raw.readdir.total_time
	*/
	StatisticsCifsOpsRawReaddirTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawReadlinkCount.

	   Filter by statistics.cifs_ops_raw.readlink.count
	*/
	StatisticsCifsOpsRawReadlinkCountQueryParameter *int64

	/* StatisticsCifsOpsRawReadlinkTotalTime.

	   Filter by statistics.cifs_ops_raw.readlink.total_time
	*/
	StatisticsCifsOpsRawReadlinkTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawRenameCount.

	   Filter by statistics.cifs_ops_raw.rename.count
	*/
	StatisticsCifsOpsRawRenameCountQueryParameter *int64

	/* StatisticsCifsOpsRawRenameTotalTime.

	   Filter by statistics.cifs_ops_raw.rename.total_time
	*/
	StatisticsCifsOpsRawRenameTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawSetattrCount.

	   Filter by statistics.cifs_ops_raw.setattr.count
	*/
	StatisticsCifsOpsRawSetattrCountQueryParameter *int64

	/* StatisticsCifsOpsRawSetattrTotalTime.

	   Filter by statistics.cifs_ops_raw.setattr.total_time
	*/
	StatisticsCifsOpsRawSetattrTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawUnlinkCount.

	   Filter by statistics.cifs_ops_raw.unlink.count
	*/
	StatisticsCifsOpsRawUnlinkCountQueryParameter *int64

	/* StatisticsCifsOpsRawUnlinkTotalTime.

	   Filter by statistics.cifs_ops_raw.unlink.total_time
	*/
	StatisticsCifsOpsRawUnlinkTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawWatchCount.

	   Filter by statistics.cifs_ops_raw.watch.count
	*/
	StatisticsCifsOpsRawWatchCountQueryParameter *int64

	/* StatisticsCifsOpsRawWatchTotalTime.

	   Filter by statistics.cifs_ops_raw.watch.total_time
	*/
	StatisticsCifsOpsRawWatchTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawWriteCount.

	   Filter by statistics.cifs_ops_raw.write.count
	*/
	StatisticsCifsOpsRawWriteCountQueryParameter *int64

	/* StatisticsCifsOpsRawWriteTotalTime.

	   Filter by statistics.cifs_ops_raw.write.total_time
	*/
	StatisticsCifsOpsRawWriteTotalTimeQueryParameter *int64

	/* StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts.

	   Filter by statistics.cifs_ops_raw.write.volume_protocol_latency_histogram_counts
	*/
	StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter *int64

	/* StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels.

	   Filter by statistics.cifs_ops_raw.write.volume_protocol_latency_histogram_labels
	*/
	StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter *string

	/* StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts.

	   Filter by statistics.cifs_ops_raw.write.volume_protocol_size_histogram_counts
	*/
	StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter *int64

	/* StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels.

	   Filter by statistics.cifs_ops_raw.write.volume_protocol_size_histogram_labels
	*/
	StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter *string

	/* StatisticsCloudIopsRawOther.

	   Filter by statistics.cloud.iops_raw.other
	*/
	StatisticsCloudIopsRawOtherQueryParameter *int64

	/* StatisticsCloudIopsRawRead.

	   Filter by statistics.cloud.iops_raw.read
	*/
	StatisticsCloudIopsRawReadQueryParameter *int64

	/* StatisticsCloudIopsRawTotal.

	   Filter by statistics.cloud.iops_raw.total
	*/
	StatisticsCloudIopsRawTotalQueryParameter *int64

	/* StatisticsCloudIopsRawWrite.

	   Filter by statistics.cloud.iops_raw.write
	*/
	StatisticsCloudIopsRawWriteQueryParameter *int64

	/* StatisticsCloudLatencyRawOther.

	   Filter by statistics.cloud.latency_raw.other
	*/
	StatisticsCloudLatencyRawOtherQueryParameter *int64

	/* StatisticsCloudLatencyRawRead.

	   Filter by statistics.cloud.latency_raw.read
	*/
	StatisticsCloudLatencyRawReadQueryParameter *int64

	/* StatisticsCloudLatencyRawTotal.

	   Filter by statistics.cloud.latency_raw.total
	*/
	StatisticsCloudLatencyRawTotalQueryParameter *int64

	/* StatisticsCloudLatencyRawWrite.

	   Filter by statistics.cloud.latency_raw.write
	*/
	StatisticsCloudLatencyRawWriteQueryParameter *int64

	/* StatisticsCloudStatus.

	   Filter by statistics.cloud.status
	*/
	StatisticsCloudStatusQueryParameter *string

	/* StatisticsCloudTimestamp.

	   Filter by statistics.cloud.timestamp
	*/
	StatisticsCloudTimestampQueryParameter *string

	/* StatisticsFlexcacheRawCacheMissBlocks.

	   Filter by statistics.flexcache_raw.cache_miss_blocks
	*/
	StatisticsFlexcacheRawCacheMissBlocksQueryParameter *int64

	/* StatisticsFlexcacheRawClientRequestedBlocks.

	   Filter by statistics.flexcache_raw.client_requested_blocks
	*/
	StatisticsFlexcacheRawClientRequestedBlocksQueryParameter *int64

	/* StatisticsFlexcacheRawStatus.

	   Filter by statistics.flexcache_raw.status
	*/
	StatisticsFlexcacheRawStatusQueryParameter *string

	/* StatisticsFlexcacheRawTimestamp.

	   Filter by statistics.flexcache_raw.timestamp
	*/
	StatisticsFlexcacheRawTimestampQueryParameter *string

	/* StatisticsIopsRawOther.

	   Filter by statistics.iops_raw.other
	*/
	StatisticsIopsRawOtherQueryParameter *int64

	/* StatisticsIopsRawRead.

	   Filter by statistics.iops_raw.read
	*/
	StatisticsIopsRawReadQueryParameter *int64

	/* StatisticsIopsRawTotal.

	   Filter by statistics.iops_raw.total
	*/
	StatisticsIopsRawTotalQueryParameter *int64

	/* StatisticsIopsRawWrite.

	   Filter by statistics.iops_raw.write
	*/
	StatisticsIopsRawWriteQueryParameter *int64

	/* StatisticsLatencyRawOther.

	   Filter by statistics.latency_raw.other
	*/
	StatisticsLatencyRawOtherQueryParameter *int64

	/* StatisticsLatencyRawRead.

	   Filter by statistics.latency_raw.read
	*/
	StatisticsLatencyRawReadQueryParameter *int64

	/* StatisticsLatencyRawTotal.

	   Filter by statistics.latency_raw.total
	*/
	StatisticsLatencyRawTotalQueryParameter *int64

	/* StatisticsLatencyRawWrite.

	   Filter by statistics.latency_raw.write
	*/
	StatisticsLatencyRawWriteQueryParameter *int64

	/* StatisticsNfsOpsRawAccessCount.

	   Filter by statistics.nfs_ops_raw.access.count
	*/
	StatisticsNfsOpsRawAccessCountQueryParameter *int64

	/* StatisticsNfsOpsRawAccessTotalTime.

	   Filter by statistics.nfs_ops_raw.access.total_time
	*/
	StatisticsNfsOpsRawAccessTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawAuditCount.

	   Filter by statistics.nfs_ops_raw.audit.count
	*/
	StatisticsNfsOpsRawAuditCountQueryParameter *int64

	/* StatisticsNfsOpsRawAuditTotalTime.

	   Filter by statistics.nfs_ops_raw.audit.total_time
	*/
	StatisticsNfsOpsRawAuditTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawCreateDirCount.

	   Filter by statistics.nfs_ops_raw.create.dir.count
	*/
	StatisticsNfsOpsRawCreateDirCountQueryParameter *int64

	/* StatisticsNfsOpsRawCreateDirTotalTime.

	   Filter by statistics.nfs_ops_raw.create.dir.total_time
	*/
	StatisticsNfsOpsRawCreateDirTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawCreateFileCount.

	   Filter by statistics.nfs_ops_raw.create.file.count
	*/
	StatisticsNfsOpsRawCreateFileCountQueryParameter *int64

	/* StatisticsNfsOpsRawCreateFileTotalTime.

	   Filter by statistics.nfs_ops_raw.create.file.total_time
	*/
	StatisticsNfsOpsRawCreateFileTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawCreateOtherCount.

	   Filter by statistics.nfs_ops_raw.create.other.count
	*/
	StatisticsNfsOpsRawCreateOtherCountQueryParameter *int64

	/* StatisticsNfsOpsRawCreateOtherTotalTime.

	   Filter by statistics.nfs_ops_raw.create.other.total_time
	*/
	StatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawCreateSymlinkCount.

	   Filter by statistics.nfs_ops_raw.create.symlink.count
	*/
	StatisticsNfsOpsRawCreateSymlinkCountQueryParameter *int64

	/* StatisticsNfsOpsRawCreateSymlinkTotalTime.

	   Filter by statistics.nfs_ops_raw.create.symlink.total_time
	*/
	StatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawGetattrCount.

	   Filter by statistics.nfs_ops_raw.getattr.count
	*/
	StatisticsNfsOpsRawGetattrCountQueryParameter *int64

	/* StatisticsNfsOpsRawGetattrTotalTime.

	   Filter by statistics.nfs_ops_raw.getattr.total_time
	*/
	StatisticsNfsOpsRawGetattrTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawLinkCount.

	   Filter by statistics.nfs_ops_raw.link.count
	*/
	StatisticsNfsOpsRawLinkCountQueryParameter *int64

	/* StatisticsNfsOpsRawLinkTotalTime.

	   Filter by statistics.nfs_ops_raw.link.total_time
	*/
	StatisticsNfsOpsRawLinkTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawLockCount.

	   Filter by statistics.nfs_ops_raw.lock.count
	*/
	StatisticsNfsOpsRawLockCountQueryParameter *int64

	/* StatisticsNfsOpsRawLockTotalTime.

	   Filter by statistics.nfs_ops_raw.lock.total_time
	*/
	StatisticsNfsOpsRawLockTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawLookupCount.

	   Filter by statistics.nfs_ops_raw.lookup.count
	*/
	StatisticsNfsOpsRawLookupCountQueryParameter *int64

	/* StatisticsNfsOpsRawLookupTotalTime.

	   Filter by statistics.nfs_ops_raw.lookup.total_time
	*/
	StatisticsNfsOpsRawLookupTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawOpenCount.

	   Filter by statistics.nfs_ops_raw.open.count
	*/
	StatisticsNfsOpsRawOpenCountQueryParameter *int64

	/* StatisticsNfsOpsRawOpenTotalTime.

	   Filter by statistics.nfs_ops_raw.open.total_time
	*/
	StatisticsNfsOpsRawOpenTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawReadCount.

	   Filter by statistics.nfs_ops_raw.read.count
	*/
	StatisticsNfsOpsRawReadCountQueryParameter *int64

	/* StatisticsNfsOpsRawReadTotalTime.

	   Filter by statistics.nfs_ops_raw.read.total_time
	*/
	StatisticsNfsOpsRawReadTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts.

	   Filter by statistics.nfs_ops_raw.read.volume_protocol_latency_histogram_counts
	*/
	StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter *int64

	/* StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels.

	   Filter by statistics.nfs_ops_raw.read.volume_protocol_latency_histogram_labels
	*/
	StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter *string

	/* StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts.

	   Filter by statistics.nfs_ops_raw.read.volume_protocol_size_histogram_counts
	*/
	StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter *int64

	/* StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels.

	   Filter by statistics.nfs_ops_raw.read.volume_protocol_size_histogram_labels
	*/
	StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter *string

	/* StatisticsNfsOpsRawReaddirCount.

	   Filter by statistics.nfs_ops_raw.readdir.count
	*/
	StatisticsNfsOpsRawReaddirCountQueryParameter *int64

	/* StatisticsNfsOpsRawReaddirTotalTime.

	   Filter by statistics.nfs_ops_raw.readdir.total_time
	*/
	StatisticsNfsOpsRawReaddirTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawReadlinkCount.

	   Filter by statistics.nfs_ops_raw.readlink.count
	*/
	StatisticsNfsOpsRawReadlinkCountQueryParameter *int64

	/* StatisticsNfsOpsRawReadlinkTotalTime.

	   Filter by statistics.nfs_ops_raw.readlink.total_time
	*/
	StatisticsNfsOpsRawReadlinkTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawRenameCount.

	   Filter by statistics.nfs_ops_raw.rename.count
	*/
	StatisticsNfsOpsRawRenameCountQueryParameter *int64

	/* StatisticsNfsOpsRawRenameTotalTime.

	   Filter by statistics.nfs_ops_raw.rename.total_time
	*/
	StatisticsNfsOpsRawRenameTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawSetattrCount.

	   Filter by statistics.nfs_ops_raw.setattr.count
	*/
	StatisticsNfsOpsRawSetattrCountQueryParameter *int64

	/* StatisticsNfsOpsRawSetattrTotalTime.

	   Filter by statistics.nfs_ops_raw.setattr.total_time
	*/
	StatisticsNfsOpsRawSetattrTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawUnlinkCount.

	   Filter by statistics.nfs_ops_raw.unlink.count
	*/
	StatisticsNfsOpsRawUnlinkCountQueryParameter *int64

	/* StatisticsNfsOpsRawUnlinkTotalTime.

	   Filter by statistics.nfs_ops_raw.unlink.total_time
	*/
	StatisticsNfsOpsRawUnlinkTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawWatchCount.

	   Filter by statistics.nfs_ops_raw.watch.count
	*/
	StatisticsNfsOpsRawWatchCountQueryParameter *int64

	/* StatisticsNfsOpsRawWatchTotalTime.

	   Filter by statistics.nfs_ops_raw.watch.total_time
	*/
	StatisticsNfsOpsRawWatchTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawWriteCount.

	   Filter by statistics.nfs_ops_raw.write.count
	*/
	StatisticsNfsOpsRawWriteCountQueryParameter *int64

	/* StatisticsNfsOpsRawWriteTotalTime.

	   Filter by statistics.nfs_ops_raw.write.total_time
	*/
	StatisticsNfsOpsRawWriteTotalTimeQueryParameter *int64

	/* StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts.

	   Filter by statistics.nfs_ops_raw.write.volume_protocol_latency_histogram_counts
	*/
	StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter *int64

	/* StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels.

	   Filter by statistics.nfs_ops_raw.write.volume_protocol_latency_histogram_labels
	*/
	StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter *string

	/* StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts.

	   Filter by statistics.nfs_ops_raw.write.volume_protocol_size_histogram_counts
	*/
	StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter *int64

	/* StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels.

	   Filter by statistics.nfs_ops_raw.write.volume_protocol_size_histogram_labels
	*/
	StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter *string

	/* StatisticsStatus.

	   Filter by statistics.status
	*/
	StatisticsStatusQueryParameter *string

	/* StatisticsThroughputRawOther.

	   Filter by statistics.throughput_raw.other
	*/
	StatisticsThroughputRawOtherQueryParameter *int64

	/* StatisticsThroughputRawRead.

	   Filter by statistics.throughput_raw.read
	*/
	StatisticsThroughputRawReadQueryParameter *int64

	/* StatisticsThroughputRawTotal.

	   Filter by statistics.throughput_raw.total
	*/
	StatisticsThroughputRawTotalQueryParameter *int64

	/* StatisticsThroughputRawWrite.

	   Filter by statistics.throughput_raw.write
	*/
	StatisticsThroughputRawWriteQueryParameter *int64

	/* StatisticsTimestamp.

	   Filter by statistics.timestamp
	*/
	StatisticsTimestampQueryParameter *string

	/* Status.

	   Filter by status
	*/
	StatusQueryParameter *string

	/* Style.

	   Filter by style
	*/
	StyleQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* TieringMinCoolingDays.

	   Filter by tiering.min_cooling_days
	*/
	TieringMinCoolingDaysQueryParameter *int64

	/* TieringObjectTags.

	   Filter by tiering.object_tags
	*/
	TieringObjectTagsQueryParameter *string

	/* TieringPolicy.

	   Filter by tiering.policy
	*/
	TieringPolicyQueryParameter *string

	/* Type.

	   Filter by type
	*/
	TypeQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the volume collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VolumeCollectionGetParams) WithDefaults() *VolumeCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the volume collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VolumeCollectionGetParams) SetDefaults() {
	var (
		isConstituentQueryParameterDefault = bool(false)

		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := VolumeCollectionGetParams{
		IsConstituentQueryParameter: &isConstituentQueryParameterDefault,
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the volume collection get params
func (o *VolumeCollectionGetParams) WithTimeout(timeout time.Duration) *VolumeCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the volume collection get params
func (o *VolumeCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the volume collection get params
func (o *VolumeCollectionGetParams) WithContext(ctx context.Context) *VolumeCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the volume collection get params
func (o *VolumeCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the volume collection get params
func (o *VolumeCollectionGetParams) WithHTTPClient(client *http.Client) *VolumeCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the volume collection get params
func (o *VolumeCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessTimeEnabledQueryParameter adds the accessTimeEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) WithAccessTimeEnabledQueryParameter(accessTimeEnabled *bool) *VolumeCollectionGetParams {
	o.SetAccessTimeEnabledQueryParameter(accessTimeEnabled)
	return o
}

// SetAccessTimeEnabledQueryParameter adds the accessTimeEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) SetAccessTimeEnabledQueryParameter(accessTimeEnabled *bool) {
	o.AccessTimeEnabledQueryParameter = accessTimeEnabled
}

// WithActivityTrackingStateQueryParameter adds the activityTrackingState to the volume collection get params
func (o *VolumeCollectionGetParams) WithActivityTrackingStateQueryParameter(activityTrackingState *string) *VolumeCollectionGetParams {
	o.SetActivityTrackingStateQueryParameter(activityTrackingState)
	return o
}

// SetActivityTrackingStateQueryParameter adds the activityTrackingState to the volume collection get params
func (o *VolumeCollectionGetParams) SetActivityTrackingStateQueryParameter(activityTrackingState *string) {
	o.ActivityTrackingStateQueryParameter = activityTrackingState
}

// WithActivityTrackingSupportedQueryParameter adds the activityTrackingSupported to the volume collection get params
func (o *VolumeCollectionGetParams) WithActivityTrackingSupportedQueryParameter(activityTrackingSupported *bool) *VolumeCollectionGetParams {
	o.SetActivityTrackingSupportedQueryParameter(activityTrackingSupported)
	return o
}

// SetActivityTrackingSupportedQueryParameter adds the activityTrackingSupported to the volume collection get params
func (o *VolumeCollectionGetParams) SetActivityTrackingSupportedQueryParameter(activityTrackingSupported *bool) {
	o.ActivityTrackingSupportedQueryParameter = activityTrackingSupported
}

// WithActivityTrackingUnsupportedReasonCodeQueryParameter adds the activityTrackingUnsupportedReasonCode to the volume collection get params
func (o *VolumeCollectionGetParams) WithActivityTrackingUnsupportedReasonCodeQueryParameter(activityTrackingUnsupportedReasonCode *string) *VolumeCollectionGetParams {
	o.SetActivityTrackingUnsupportedReasonCodeQueryParameter(activityTrackingUnsupportedReasonCode)
	return o
}

// SetActivityTrackingUnsupportedReasonCodeQueryParameter adds the activityTrackingUnsupportedReasonCode to the volume collection get params
func (o *VolumeCollectionGetParams) SetActivityTrackingUnsupportedReasonCodeQueryParameter(activityTrackingUnsupportedReasonCode *string) {
	o.ActivityTrackingUnsupportedReasonCodeQueryParameter = activityTrackingUnsupportedReasonCode
}

// WithActivityTrackingUnsupportedReasonMessageQueryParameter adds the activityTrackingUnsupportedReasonMessage to the volume collection get params
func (o *VolumeCollectionGetParams) WithActivityTrackingUnsupportedReasonMessageQueryParameter(activityTrackingUnsupportedReasonMessage *string) *VolumeCollectionGetParams {
	o.SetActivityTrackingUnsupportedReasonMessageQueryParameter(activityTrackingUnsupportedReasonMessage)
	return o
}

// SetActivityTrackingUnsupportedReasonMessageQueryParameter adds the activityTrackingUnsupportedReasonMessage to the volume collection get params
func (o *VolumeCollectionGetParams) SetActivityTrackingUnsupportedReasonMessageQueryParameter(activityTrackingUnsupportedReasonMessage *string) {
	o.ActivityTrackingUnsupportedReasonMessageQueryParameter = activityTrackingUnsupportedReasonMessage
}

// WithAggregatesNameQueryParameter adds the aggregatesName to the volume collection get params
func (o *VolumeCollectionGetParams) WithAggregatesNameQueryParameter(aggregatesName *string) *VolumeCollectionGetParams {
	o.SetAggregatesNameQueryParameter(aggregatesName)
	return o
}

// SetAggregatesNameQueryParameter adds the aggregatesName to the volume collection get params
func (o *VolumeCollectionGetParams) SetAggregatesNameQueryParameter(aggregatesName *string) {
	o.AggregatesNameQueryParameter = aggregatesName
}

// WithAggregatesUUIDQueryParameter adds the aggregatesUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithAggregatesUUIDQueryParameter(aggregatesUUID *string) *VolumeCollectionGetParams {
	o.SetAggregatesUUIDQueryParameter(aggregatesUUID)
	return o
}

// SetAggregatesUUIDQueryParameter adds the aggregatesUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetAggregatesUUIDQueryParameter(aggregatesUUID *string) {
	o.AggregatesUUIDQueryParameter = aggregatesUUID
}

// WithAnalyticsScanProgressQueryParameter adds the analyticsScanProgress to the volume collection get params
func (o *VolumeCollectionGetParams) WithAnalyticsScanProgressQueryParameter(analyticsScanProgress *int64) *VolumeCollectionGetParams {
	o.SetAnalyticsScanProgressQueryParameter(analyticsScanProgress)
	return o
}

// SetAnalyticsScanProgressQueryParameter adds the analyticsScanProgress to the volume collection get params
func (o *VolumeCollectionGetParams) SetAnalyticsScanProgressQueryParameter(analyticsScanProgress *int64) {
	o.AnalyticsScanProgressQueryParameter = analyticsScanProgress
}

// WithAnalyticsStateQueryParameter adds the analyticsState to the volume collection get params
func (o *VolumeCollectionGetParams) WithAnalyticsStateQueryParameter(analyticsState *string) *VolumeCollectionGetParams {
	o.SetAnalyticsStateQueryParameter(analyticsState)
	return o
}

// SetAnalyticsStateQueryParameter adds the analyticsState to the volume collection get params
func (o *VolumeCollectionGetParams) SetAnalyticsStateQueryParameter(analyticsState *string) {
	o.AnalyticsStateQueryParameter = analyticsState
}

// WithAnalyticsSupportedQueryParameter adds the analyticsSupported to the volume collection get params
func (o *VolumeCollectionGetParams) WithAnalyticsSupportedQueryParameter(analyticsSupported *bool) *VolumeCollectionGetParams {
	o.SetAnalyticsSupportedQueryParameter(analyticsSupported)
	return o
}

// SetAnalyticsSupportedQueryParameter adds the analyticsSupported to the volume collection get params
func (o *VolumeCollectionGetParams) SetAnalyticsSupportedQueryParameter(analyticsSupported *bool) {
	o.AnalyticsSupportedQueryParameter = analyticsSupported
}

// WithAnalyticsUnsupportedReasonCodeQueryParameter adds the analyticsUnsupportedReasonCode to the volume collection get params
func (o *VolumeCollectionGetParams) WithAnalyticsUnsupportedReasonCodeQueryParameter(analyticsUnsupportedReasonCode *string) *VolumeCollectionGetParams {
	o.SetAnalyticsUnsupportedReasonCodeQueryParameter(analyticsUnsupportedReasonCode)
	return o
}

// SetAnalyticsUnsupportedReasonCodeQueryParameter adds the analyticsUnsupportedReasonCode to the volume collection get params
func (o *VolumeCollectionGetParams) SetAnalyticsUnsupportedReasonCodeQueryParameter(analyticsUnsupportedReasonCode *string) {
	o.AnalyticsUnsupportedReasonCodeQueryParameter = analyticsUnsupportedReasonCode
}

// WithAnalyticsUnsupportedReasonMessageQueryParameter adds the analyticsUnsupportedReasonMessage to the volume collection get params
func (o *VolumeCollectionGetParams) WithAnalyticsUnsupportedReasonMessageQueryParameter(analyticsUnsupportedReasonMessage *string) *VolumeCollectionGetParams {
	o.SetAnalyticsUnsupportedReasonMessageQueryParameter(analyticsUnsupportedReasonMessage)
	return o
}

// SetAnalyticsUnsupportedReasonMessageQueryParameter adds the analyticsUnsupportedReasonMessage to the volume collection get params
func (o *VolumeCollectionGetParams) SetAnalyticsUnsupportedReasonMessageQueryParameter(analyticsUnsupportedReasonMessage *string) {
	o.AnalyticsUnsupportedReasonMessageQueryParameter = analyticsUnsupportedReasonMessage
}

// WithAntiRansomwareAttackProbabilityQueryParameter adds the antiRansomwareAttackProbability to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareAttackProbabilityQueryParameter(antiRansomwareAttackProbability *string) *VolumeCollectionGetParams {
	o.SetAntiRansomwareAttackProbabilityQueryParameter(antiRansomwareAttackProbability)
	return o
}

// SetAntiRansomwareAttackProbabilityQueryParameter adds the antiRansomwareAttackProbability to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareAttackProbabilityQueryParameter(antiRansomwareAttackProbability *string) {
	o.AntiRansomwareAttackProbabilityQueryParameter = antiRansomwareAttackProbability
}

// WithAntiRansomwareAttackReportsTimeQueryParameter adds the antiRansomwareAttackReportsTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareAttackReportsTimeQueryParameter(antiRansomwareAttackReportsTime *string) *VolumeCollectionGetParams {
	o.SetAntiRansomwareAttackReportsTimeQueryParameter(antiRansomwareAttackReportsTime)
	return o
}

// SetAntiRansomwareAttackReportsTimeQueryParameter adds the antiRansomwareAttackReportsTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareAttackReportsTimeQueryParameter(antiRansomwareAttackReportsTime *string) {
	o.AntiRansomwareAttackReportsTimeQueryParameter = antiRansomwareAttackReportsTime
}

// WithAntiRansomwareDryRunStartTimeQueryParameter adds the antiRansomwareDryRunStartTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareDryRunStartTimeQueryParameter(antiRansomwareDryRunStartTime *string) *VolumeCollectionGetParams {
	o.SetAntiRansomwareDryRunStartTimeQueryParameter(antiRansomwareDryRunStartTime)
	return o
}

// SetAntiRansomwareDryRunStartTimeQueryParameter adds the antiRansomwareDryRunStartTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareDryRunStartTimeQueryParameter(antiRansomwareDryRunStartTime *string) {
	o.AntiRansomwareDryRunStartTimeQueryParameter = antiRansomwareDryRunStartTime
}

// WithAntiRansomwareSpaceSnapshotCountQueryParameter adds the antiRansomwareSpaceSnapshotCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSpaceSnapshotCountQueryParameter(antiRansomwareSpaceSnapshotCount *int64) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSpaceSnapshotCountQueryParameter(antiRansomwareSpaceSnapshotCount)
	return o
}

// SetAntiRansomwareSpaceSnapshotCountQueryParameter adds the antiRansomwareSpaceSnapshotCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSpaceSnapshotCountQueryParameter(antiRansomwareSpaceSnapshotCount *int64) {
	o.AntiRansomwareSpaceSnapshotCountQueryParameter = antiRansomwareSpaceSnapshotCount
}

// WithAntiRansomwareSpaceUsedQueryParameter adds the antiRansomwareSpaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSpaceUsedQueryParameter(antiRansomwareSpaceUsed *int64) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSpaceUsedQueryParameter(antiRansomwareSpaceUsed)
	return o
}

// SetAntiRansomwareSpaceUsedQueryParameter adds the antiRansomwareSpaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSpaceUsedQueryParameter(antiRansomwareSpaceUsed *int64) {
	o.AntiRansomwareSpaceUsedQueryParameter = antiRansomwareSpaceUsed
}

// WithAntiRansomwareSpaceUsedByLogsQueryParameter adds the antiRansomwareSpaceUsedByLogs to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSpaceUsedByLogsQueryParameter(antiRansomwareSpaceUsedByLogs *int64) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSpaceUsedByLogsQueryParameter(antiRansomwareSpaceUsedByLogs)
	return o
}

// SetAntiRansomwareSpaceUsedByLogsQueryParameter adds the antiRansomwareSpaceUsedByLogs to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSpaceUsedByLogsQueryParameter(antiRansomwareSpaceUsedByLogs *int64) {
	o.AntiRansomwareSpaceUsedByLogsQueryParameter = antiRansomwareSpaceUsedByLogs
}

// WithAntiRansomwareSpaceUsedBySnapshotsQueryParameter adds the antiRansomwareSpaceUsedBySnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSpaceUsedBySnapshotsQueryParameter(antiRansomwareSpaceUsedBySnapshots *int64) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSpaceUsedBySnapshotsQueryParameter(antiRansomwareSpaceUsedBySnapshots)
	return o
}

// SetAntiRansomwareSpaceUsedBySnapshotsQueryParameter adds the antiRansomwareSpaceUsedBySnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSpaceUsedBySnapshotsQueryParameter(antiRansomwareSpaceUsedBySnapshots *int64) {
	o.AntiRansomwareSpaceUsedBySnapshotsQueryParameter = antiRansomwareSpaceUsedBySnapshots
}

// WithAntiRansomwareStateQueryParameter adds the antiRansomwareState to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareStateQueryParameter(antiRansomwareState *string) *VolumeCollectionGetParams {
	o.SetAntiRansomwareStateQueryParameter(antiRansomwareState)
	return o
}

// SetAntiRansomwareStateQueryParameter adds the antiRansomwareState to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareStateQueryParameter(antiRansomwareState *string) {
	o.AntiRansomwareStateQueryParameter = antiRansomwareState
}

// WithAntiRansomwareSurgeAsNormalQueryParameter adds the antiRansomwareSurgeAsNormal to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSurgeAsNormalQueryParameter(antiRansomwareSurgeAsNormal *bool) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSurgeAsNormalQueryParameter(antiRansomwareSurgeAsNormal)
	return o
}

// SetAntiRansomwareSurgeAsNormalQueryParameter adds the antiRansomwareSurgeAsNormal to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSurgeAsNormalQueryParameter(antiRansomwareSurgeAsNormal *bool) {
	o.AntiRansomwareSurgeAsNormalQueryParameter = antiRansomwareSurgeAsNormal
}

// WithAntiRansomwareSuspectFilesCountQueryParameter adds the antiRansomwareSuspectFilesCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSuspectFilesCountQueryParameter(antiRansomwareSuspectFilesCount *int64) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSuspectFilesCountQueryParameter(antiRansomwareSuspectFilesCount)
	return o
}

// SetAntiRansomwareSuspectFilesCountQueryParameter adds the antiRansomwareSuspectFilesCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSuspectFilesCountQueryParameter(antiRansomwareSuspectFilesCount *int64) {
	o.AntiRansomwareSuspectFilesCountQueryParameter = antiRansomwareSuspectFilesCount
}

// WithAntiRansomwareSuspectFilesEntropyQueryParameter adds the antiRansomwareSuspectFilesEntropy to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSuspectFilesEntropyQueryParameter(antiRansomwareSuspectFilesEntropy *string) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSuspectFilesEntropyQueryParameter(antiRansomwareSuspectFilesEntropy)
	return o
}

// SetAntiRansomwareSuspectFilesEntropyQueryParameter adds the antiRansomwareSuspectFilesEntropy to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSuspectFilesEntropyQueryParameter(antiRansomwareSuspectFilesEntropy *string) {
	o.AntiRansomwareSuspectFilesEntropyQueryParameter = antiRansomwareSuspectFilesEntropy
}

// WithAntiRansomwareSuspectFilesFormatQueryParameter adds the antiRansomwareSuspectFilesFormat to the volume collection get params
func (o *VolumeCollectionGetParams) WithAntiRansomwareSuspectFilesFormatQueryParameter(antiRansomwareSuspectFilesFormat *string) *VolumeCollectionGetParams {
	o.SetAntiRansomwareSuspectFilesFormatQueryParameter(antiRansomwareSuspectFilesFormat)
	return o
}

// SetAntiRansomwareSuspectFilesFormatQueryParameter adds the antiRansomwareSuspectFilesFormat to the volume collection get params
func (o *VolumeCollectionGetParams) SetAntiRansomwareSuspectFilesFormatQueryParameter(antiRansomwareSuspectFilesFormat *string) {
	o.AntiRansomwareSuspectFilesFormatQueryParameter = antiRansomwareSuspectFilesFormat
}

// WithApplicationNameQueryParameter adds the applicationName to the volume collection get params
func (o *VolumeCollectionGetParams) WithApplicationNameQueryParameter(applicationName *string) *VolumeCollectionGetParams {
	o.SetApplicationNameQueryParameter(applicationName)
	return o
}

// SetApplicationNameQueryParameter adds the applicationName to the volume collection get params
func (o *VolumeCollectionGetParams) SetApplicationNameQueryParameter(applicationName *string) {
	o.ApplicationNameQueryParameter = applicationName
}

// WithApplicationUUIDQueryParameter adds the applicationUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithApplicationUUIDQueryParameter(applicationUUID *string) *VolumeCollectionGetParams {
	o.SetApplicationUUIDQueryParameter(applicationUUID)
	return o
}

// SetApplicationUUIDQueryParameter adds the applicationUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetApplicationUUIDQueryParameter(applicationUUID *string) {
	o.ApplicationUUIDQueryParameter = applicationUUID
}

// WithAsynchronousDirectoryDeleteEnabledQueryParameter adds the asynchronousDirectoryDeleteEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) WithAsynchronousDirectoryDeleteEnabledQueryParameter(asynchronousDirectoryDeleteEnabled *bool) *VolumeCollectionGetParams {
	o.SetAsynchronousDirectoryDeleteEnabledQueryParameter(asynchronousDirectoryDeleteEnabled)
	return o
}

// SetAsynchronousDirectoryDeleteEnabledQueryParameter adds the asynchronousDirectoryDeleteEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) SetAsynchronousDirectoryDeleteEnabledQueryParameter(asynchronousDirectoryDeleteEnabled *bool) {
	o.AsynchronousDirectoryDeleteEnabledQueryParameter = asynchronousDirectoryDeleteEnabled
}

// WithAsynchronousDirectoryDeleteTrashBinQueryParameter adds the asynchronousDirectoryDeleteTrashBin to the volume collection get params
func (o *VolumeCollectionGetParams) WithAsynchronousDirectoryDeleteTrashBinQueryParameter(asynchronousDirectoryDeleteTrashBin *string) *VolumeCollectionGetParams {
	o.SetAsynchronousDirectoryDeleteTrashBinQueryParameter(asynchronousDirectoryDeleteTrashBin)
	return o
}

// SetAsynchronousDirectoryDeleteTrashBinQueryParameter adds the asynchronousDirectoryDeleteTrashBin to the volume collection get params
func (o *VolumeCollectionGetParams) SetAsynchronousDirectoryDeleteTrashBinQueryParameter(asynchronousDirectoryDeleteTrashBin *string) {
	o.AsynchronousDirectoryDeleteTrashBinQueryParameter = asynchronousDirectoryDeleteTrashBin
}

// WithAutosizeGrowThresholdQueryParameter adds the autosizeGrowThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) WithAutosizeGrowThresholdQueryParameter(autosizeGrowThreshold *int64) *VolumeCollectionGetParams {
	o.SetAutosizeGrowThresholdQueryParameter(autosizeGrowThreshold)
	return o
}

// SetAutosizeGrowThresholdQueryParameter adds the autosizeGrowThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) SetAutosizeGrowThresholdQueryParameter(autosizeGrowThreshold *int64) {
	o.AutosizeGrowThresholdQueryParameter = autosizeGrowThreshold
}

// WithAutosizeMaximumQueryParameter adds the autosizeMaximum to the volume collection get params
func (o *VolumeCollectionGetParams) WithAutosizeMaximumQueryParameter(autosizeMaximum *int64) *VolumeCollectionGetParams {
	o.SetAutosizeMaximumQueryParameter(autosizeMaximum)
	return o
}

// SetAutosizeMaximumQueryParameter adds the autosizeMaximum to the volume collection get params
func (o *VolumeCollectionGetParams) SetAutosizeMaximumQueryParameter(autosizeMaximum *int64) {
	o.AutosizeMaximumQueryParameter = autosizeMaximum
}

// WithAutosizeMinimumQueryParameter adds the autosizeMinimum to the volume collection get params
func (o *VolumeCollectionGetParams) WithAutosizeMinimumQueryParameter(autosizeMinimum *int64) *VolumeCollectionGetParams {
	o.SetAutosizeMinimumQueryParameter(autosizeMinimum)
	return o
}

// SetAutosizeMinimumQueryParameter adds the autosizeMinimum to the volume collection get params
func (o *VolumeCollectionGetParams) SetAutosizeMinimumQueryParameter(autosizeMinimum *int64) {
	o.AutosizeMinimumQueryParameter = autosizeMinimum
}

// WithAutosizeModeQueryParameter adds the autosizeMode to the volume collection get params
func (o *VolumeCollectionGetParams) WithAutosizeModeQueryParameter(autosizeMode *string) *VolumeCollectionGetParams {
	o.SetAutosizeModeQueryParameter(autosizeMode)
	return o
}

// SetAutosizeModeQueryParameter adds the autosizeMode to the volume collection get params
func (o *VolumeCollectionGetParams) SetAutosizeModeQueryParameter(autosizeMode *string) {
	o.AutosizeModeQueryParameter = autosizeMode
}

// WithAutosizeShrinkThresholdQueryParameter adds the autosizeShrinkThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) WithAutosizeShrinkThresholdQueryParameter(autosizeShrinkThreshold *int64) *VolumeCollectionGetParams {
	o.SetAutosizeShrinkThresholdQueryParameter(autosizeShrinkThreshold)
	return o
}

// SetAutosizeShrinkThresholdQueryParameter adds the autosizeShrinkThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) SetAutosizeShrinkThresholdQueryParameter(autosizeShrinkThreshold *int64) {
	o.AutosizeShrinkThresholdQueryParameter = autosizeShrinkThreshold
}

// WithCloneIsFlexcloneQueryParameter adds the cloneIsFlexclone to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneIsFlexcloneQueryParameter(cloneIsFlexclone *bool) *VolumeCollectionGetParams {
	o.SetCloneIsFlexcloneQueryParameter(cloneIsFlexclone)
	return o
}

// SetCloneIsFlexcloneQueryParameter adds the cloneIsFlexclone to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneIsFlexcloneQueryParameter(cloneIsFlexclone *bool) {
	o.CloneIsFlexcloneQueryParameter = cloneIsFlexclone
}

// WithCloneParentSnapshotNameQueryParameter adds the cloneParentSnapshotName to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneParentSnapshotNameQueryParameter(cloneParentSnapshotName *string) *VolumeCollectionGetParams {
	o.SetCloneParentSnapshotNameQueryParameter(cloneParentSnapshotName)
	return o
}

// SetCloneParentSnapshotNameQueryParameter adds the cloneParentSnapshotName to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneParentSnapshotNameQueryParameter(cloneParentSnapshotName *string) {
	o.CloneParentSnapshotNameQueryParameter = cloneParentSnapshotName
}

// WithCloneParentSnapshotUUIDQueryParameter adds the cloneParentSnapshotUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneParentSnapshotUUIDQueryParameter(cloneParentSnapshotUUID *string) *VolumeCollectionGetParams {
	o.SetCloneParentSnapshotUUIDQueryParameter(cloneParentSnapshotUUID)
	return o
}

// SetCloneParentSnapshotUUIDQueryParameter adds the cloneParentSnapshotUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneParentSnapshotUUIDQueryParameter(cloneParentSnapshotUUID *string) {
	o.CloneParentSnapshotUUIDQueryParameter = cloneParentSnapshotUUID
}

// WithCloneParentSVMNameQueryParameter adds the cloneParentSvmName to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneParentSVMNameQueryParameter(cloneParentSvmName *string) *VolumeCollectionGetParams {
	o.SetCloneParentSVMNameQueryParameter(cloneParentSvmName)
	return o
}

// SetCloneParentSVMNameQueryParameter adds the cloneParentSvmName to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneParentSVMNameQueryParameter(cloneParentSvmName *string) {
	o.CloneParentSVMNameQueryParameter = cloneParentSvmName
}

// WithCloneParentSVMUUIDQueryParameter adds the cloneParentSvmUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneParentSVMUUIDQueryParameter(cloneParentSvmUUID *string) *VolumeCollectionGetParams {
	o.SetCloneParentSVMUUIDQueryParameter(cloneParentSvmUUID)
	return o
}

// SetCloneParentSVMUUIDQueryParameter adds the cloneParentSvmUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneParentSVMUUIDQueryParameter(cloneParentSvmUUID *string) {
	o.CloneParentSVMUUIDQueryParameter = cloneParentSvmUUID
}

// WithCloneParentVolumeNameQueryParameter adds the cloneParentVolumeName to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneParentVolumeNameQueryParameter(cloneParentVolumeName *string) *VolumeCollectionGetParams {
	o.SetCloneParentVolumeNameQueryParameter(cloneParentVolumeName)
	return o
}

// SetCloneParentVolumeNameQueryParameter adds the cloneParentVolumeName to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneParentVolumeNameQueryParameter(cloneParentVolumeName *string) {
	o.CloneParentVolumeNameQueryParameter = cloneParentVolumeName
}

// WithCloneParentVolumeUUIDQueryParameter adds the cloneParentVolumeUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneParentVolumeUUIDQueryParameter(cloneParentVolumeUUID *string) *VolumeCollectionGetParams {
	o.SetCloneParentVolumeUUIDQueryParameter(cloneParentVolumeUUID)
	return o
}

// SetCloneParentVolumeUUIDQueryParameter adds the cloneParentVolumeUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneParentVolumeUUIDQueryParameter(cloneParentVolumeUUID *string) {
	o.CloneParentVolumeUUIDQueryParameter = cloneParentVolumeUUID
}

// WithCloneSplitCompletePercentQueryParameter adds the cloneSplitCompletePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneSplitCompletePercentQueryParameter(cloneSplitCompletePercent *int64) *VolumeCollectionGetParams {
	o.SetCloneSplitCompletePercentQueryParameter(cloneSplitCompletePercent)
	return o
}

// SetCloneSplitCompletePercentQueryParameter adds the cloneSplitCompletePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneSplitCompletePercentQueryParameter(cloneSplitCompletePercent *int64) {
	o.CloneSplitCompletePercentQueryParameter = cloneSplitCompletePercent
}

// WithCloneSplitEstimateQueryParameter adds the cloneSplitEstimate to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneSplitEstimateQueryParameter(cloneSplitEstimate *int64) *VolumeCollectionGetParams {
	o.SetCloneSplitEstimateQueryParameter(cloneSplitEstimate)
	return o
}

// SetCloneSplitEstimateQueryParameter adds the cloneSplitEstimate to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneSplitEstimateQueryParameter(cloneSplitEstimate *int64) {
	o.CloneSplitEstimateQueryParameter = cloneSplitEstimate
}

// WithCloneSplitInitiatedQueryParameter adds the cloneSplitInitiated to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloneSplitInitiatedQueryParameter(cloneSplitInitiated *bool) *VolumeCollectionGetParams {
	o.SetCloneSplitInitiatedQueryParameter(cloneSplitInitiated)
	return o
}

// SetCloneSplitInitiatedQueryParameter adds the cloneSplitInitiated to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloneSplitInitiatedQueryParameter(cloneSplitInitiated *bool) {
	o.CloneSplitInitiatedQueryParameter = cloneSplitInitiated
}

// WithCloudRetrievalPolicyQueryParameter adds the cloudRetrievalPolicy to the volume collection get params
func (o *VolumeCollectionGetParams) WithCloudRetrievalPolicyQueryParameter(cloudRetrievalPolicy *string) *VolumeCollectionGetParams {
	o.SetCloudRetrievalPolicyQueryParameter(cloudRetrievalPolicy)
	return o
}

// SetCloudRetrievalPolicyQueryParameter adds the cloudRetrievalPolicy to the volume collection get params
func (o *VolumeCollectionGetParams) SetCloudRetrievalPolicyQueryParameter(cloudRetrievalPolicy *string) {
	o.CloudRetrievalPolicyQueryParameter = cloudRetrievalPolicy
}

// WithCommentQueryParameter adds the comment to the volume collection get params
func (o *VolumeCollectionGetParams) WithCommentQueryParameter(comment *string) *VolumeCollectionGetParams {
	o.SetCommentQueryParameter(comment)
	return o
}

// SetCommentQueryParameter adds the comment to the volume collection get params
func (o *VolumeCollectionGetParams) SetCommentQueryParameter(comment *string) {
	o.CommentQueryParameter = comment
}

// WithConsistencyGroupNameQueryParameter adds the consistencyGroupName to the volume collection get params
func (o *VolumeCollectionGetParams) WithConsistencyGroupNameQueryParameter(consistencyGroupName *string) *VolumeCollectionGetParams {
	o.SetConsistencyGroupNameQueryParameter(consistencyGroupName)
	return o
}

// SetConsistencyGroupNameQueryParameter adds the consistencyGroupName to the volume collection get params
func (o *VolumeCollectionGetParams) SetConsistencyGroupNameQueryParameter(consistencyGroupName *string) {
	o.ConsistencyGroupNameQueryParameter = consistencyGroupName
}

// WithConsistencyGroupUUIDQueryParameter adds the consistencyGroupUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithConsistencyGroupUUIDQueryParameter(consistencyGroupUUID *string) *VolumeCollectionGetParams {
	o.SetConsistencyGroupUUIDQueryParameter(consistencyGroupUUID)
	return o
}

// SetConsistencyGroupUUIDQueryParameter adds the consistencyGroupUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetConsistencyGroupUUIDQueryParameter(consistencyGroupUUID *string) {
	o.ConsistencyGroupUUIDQueryParameter = consistencyGroupUUID
}

// WithConstituentsAggregatesNameQueryParameter adds the constituentsAggregatesName to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsAggregatesNameQueryParameter(constituentsAggregatesName *string) *VolumeCollectionGetParams {
	o.SetConstituentsAggregatesNameQueryParameter(constituentsAggregatesName)
	return o
}

// SetConstituentsAggregatesNameQueryParameter adds the constituentsAggregatesName to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsAggregatesNameQueryParameter(constituentsAggregatesName *string) {
	o.ConstituentsAggregatesNameQueryParameter = constituentsAggregatesName
}

// WithConstituentsAggregatesUUIDQueryParameter adds the constituentsAggregatesUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsAggregatesUUIDQueryParameter(constituentsAggregatesUUID *string) *VolumeCollectionGetParams {
	o.SetConstituentsAggregatesUUIDQueryParameter(constituentsAggregatesUUID)
	return o
}

// SetConstituentsAggregatesUUIDQueryParameter adds the constituentsAggregatesUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsAggregatesUUIDQueryParameter(constituentsAggregatesUUID *string) {
	o.ConstituentsAggregatesUUIDQueryParameter = constituentsAggregatesUUID
}

// WithConstituentsMovementCutoverWindowQueryParameter adds the constituentsMovementCutoverWindow to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsMovementCutoverWindowQueryParameter(constituentsMovementCutoverWindow *int64) *VolumeCollectionGetParams {
	o.SetConstituentsMovementCutoverWindowQueryParameter(constituentsMovementCutoverWindow)
	return o
}

// SetConstituentsMovementCutoverWindowQueryParameter adds the constituentsMovementCutoverWindow to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsMovementCutoverWindowQueryParameter(constituentsMovementCutoverWindow *int64) {
	o.ConstituentsMovementCutoverWindowQueryParameter = constituentsMovementCutoverWindow
}

// WithConstituentsMovementDestinationAggregateNameQueryParameter adds the constituentsMovementDestinationAggregateName to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsMovementDestinationAggregateNameQueryParameter(constituentsMovementDestinationAggregateName *string) *VolumeCollectionGetParams {
	o.SetConstituentsMovementDestinationAggregateNameQueryParameter(constituentsMovementDestinationAggregateName)
	return o
}

// SetConstituentsMovementDestinationAggregateNameQueryParameter adds the constituentsMovementDestinationAggregateName to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsMovementDestinationAggregateNameQueryParameter(constituentsMovementDestinationAggregateName *string) {
	o.ConstituentsMovementDestinationAggregateNameQueryParameter = constituentsMovementDestinationAggregateName
}

// WithConstituentsMovementDestinationAggregateUUIDQueryParameter adds the constituentsMovementDestinationAggregateUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsMovementDestinationAggregateUUIDQueryParameter(constituentsMovementDestinationAggregateUUID *string) *VolumeCollectionGetParams {
	o.SetConstituentsMovementDestinationAggregateUUIDQueryParameter(constituentsMovementDestinationAggregateUUID)
	return o
}

// SetConstituentsMovementDestinationAggregateUUIDQueryParameter adds the constituentsMovementDestinationAggregateUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsMovementDestinationAggregateUUIDQueryParameter(constituentsMovementDestinationAggregateUUID *string) {
	o.ConstituentsMovementDestinationAggregateUUIDQueryParameter = constituentsMovementDestinationAggregateUUID
}

// WithConstituentsMovementPercentCompleteQueryParameter adds the constituentsMovementPercentComplete to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsMovementPercentCompleteQueryParameter(constituentsMovementPercentComplete *int64) *VolumeCollectionGetParams {
	o.SetConstituentsMovementPercentCompleteQueryParameter(constituentsMovementPercentComplete)
	return o
}

// SetConstituentsMovementPercentCompleteQueryParameter adds the constituentsMovementPercentComplete to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsMovementPercentCompleteQueryParameter(constituentsMovementPercentComplete *int64) {
	o.ConstituentsMovementPercentCompleteQueryParameter = constituentsMovementPercentComplete
}

// WithConstituentsMovementStateQueryParameter adds the constituentsMovementState to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsMovementStateQueryParameter(constituentsMovementState *string) *VolumeCollectionGetParams {
	o.SetConstituentsMovementStateQueryParameter(constituentsMovementState)
	return o
}

// SetConstituentsMovementStateQueryParameter adds the constituentsMovementState to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsMovementStateQueryParameter(constituentsMovementState *string) {
	o.ConstituentsMovementStateQueryParameter = constituentsMovementState
}

// WithConstituentsNameQueryParameter adds the constituentsName to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsNameQueryParameter(constituentsName *string) *VolumeCollectionGetParams {
	o.SetConstituentsNameQueryParameter(constituentsName)
	return o
}

// SetConstituentsNameQueryParameter adds the constituentsName to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsNameQueryParameter(constituentsName *string) {
	o.ConstituentsNameQueryParameter = constituentsName
}

// WithConstituentsSpaceAfsTotalQueryParameter adds the constituentsSpaceAfsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceAfsTotalQueryParameter(constituentsSpaceAfsTotal *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceAfsTotalQueryParameter(constituentsSpaceAfsTotal)
	return o
}

// SetConstituentsSpaceAfsTotalQueryParameter adds the constituentsSpaceAfsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceAfsTotalQueryParameter(constituentsSpaceAfsTotal *int64) {
	o.ConstituentsSpaceAfsTotalQueryParameter = constituentsSpaceAfsTotal
}

// WithConstituentsSpaceAvailableQueryParameter adds the constituentsSpaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceAvailableQueryParameter(constituentsSpaceAvailable *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceAvailableQueryParameter(constituentsSpaceAvailable)
	return o
}

// SetConstituentsSpaceAvailableQueryParameter adds the constituentsSpaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceAvailableQueryParameter(constituentsSpaceAvailable *int64) {
	o.ConstituentsSpaceAvailableQueryParameter = constituentsSpaceAvailable
}

// WithConstituentsSpaceAvailablePercentQueryParameter adds the constituentsSpaceAvailablePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceAvailablePercentQueryParameter(constituentsSpaceAvailablePercent *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceAvailablePercentQueryParameter(constituentsSpaceAvailablePercent)
	return o
}

// SetConstituentsSpaceAvailablePercentQueryParameter adds the constituentsSpaceAvailablePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceAvailablePercentQueryParameter(constituentsSpaceAvailablePercent *int64) {
	o.ConstituentsSpaceAvailablePercentQueryParameter = constituentsSpaceAvailablePercent
}

// WithConstituentsSpaceBlockStorageInactiveUserDataQueryParameter adds the constituentsSpaceBlockStorageInactiveUserData to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceBlockStorageInactiveUserDataQueryParameter(constituentsSpaceBlockStorageInactiveUserData *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceBlockStorageInactiveUserDataQueryParameter(constituentsSpaceBlockStorageInactiveUserData)
	return o
}

// SetConstituentsSpaceBlockStorageInactiveUserDataQueryParameter adds the constituentsSpaceBlockStorageInactiveUserData to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceBlockStorageInactiveUserDataQueryParameter(constituentsSpaceBlockStorageInactiveUserData *int64) {
	o.ConstituentsSpaceBlockStorageInactiveUserDataQueryParameter = constituentsSpaceBlockStorageInactiveUserData
}

// WithConstituentsSpaceCapacityTierFootprintQueryParameter adds the constituentsSpaceCapacityTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceCapacityTierFootprintQueryParameter(constituentsSpaceCapacityTierFootprint *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceCapacityTierFootprintQueryParameter(constituentsSpaceCapacityTierFootprint)
	return o
}

// SetConstituentsSpaceCapacityTierFootprintQueryParameter adds the constituentsSpaceCapacityTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceCapacityTierFootprintQueryParameter(constituentsSpaceCapacityTierFootprint *int64) {
	o.ConstituentsSpaceCapacityTierFootprintQueryParameter = constituentsSpaceCapacityTierFootprint
}

// WithConstituentsSpaceFootprintQueryParameter adds the constituentsSpaceFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceFootprintQueryParameter(constituentsSpaceFootprint *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceFootprintQueryParameter(constituentsSpaceFootprint)
	return o
}

// SetConstituentsSpaceFootprintQueryParameter adds the constituentsSpaceFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceFootprintQueryParameter(constituentsSpaceFootprint *int64) {
	o.ConstituentsSpaceFootprintQueryParameter = constituentsSpaceFootprint
}

// WithConstituentsSpaceLocalTierFootprintQueryParameter adds the constituentsSpaceLocalTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceLocalTierFootprintQueryParameter(constituentsSpaceLocalTierFootprint *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceLocalTierFootprintQueryParameter(constituentsSpaceLocalTierFootprint)
	return o
}

// SetConstituentsSpaceLocalTierFootprintQueryParameter adds the constituentsSpaceLocalTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceLocalTierFootprintQueryParameter(constituentsSpaceLocalTierFootprint *int64) {
	o.ConstituentsSpaceLocalTierFootprintQueryParameter = constituentsSpaceLocalTierFootprint
}

// WithConstituentsSpaceLogicalSpaceAvailableQueryParameter adds the constituentsSpaceLogicalSpaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceLogicalSpaceAvailableQueryParameter(constituentsSpaceLogicalSpaceAvailable *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceLogicalSpaceAvailableQueryParameter(constituentsSpaceLogicalSpaceAvailable)
	return o
}

// SetConstituentsSpaceLogicalSpaceAvailableQueryParameter adds the constituentsSpaceLogicalSpaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceLogicalSpaceAvailableQueryParameter(constituentsSpaceLogicalSpaceAvailable *int64) {
	o.ConstituentsSpaceLogicalSpaceAvailableQueryParameter = constituentsSpaceLogicalSpaceAvailable
}

// WithConstituentsSpaceLogicalSpaceEnforcementQueryParameter adds the constituentsSpaceLogicalSpaceEnforcement to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceLogicalSpaceEnforcementQueryParameter(constituentsSpaceLogicalSpaceEnforcement *bool) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceLogicalSpaceEnforcementQueryParameter(constituentsSpaceLogicalSpaceEnforcement)
	return o
}

// SetConstituentsSpaceLogicalSpaceEnforcementQueryParameter adds the constituentsSpaceLogicalSpaceEnforcement to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceLogicalSpaceEnforcementQueryParameter(constituentsSpaceLogicalSpaceEnforcement *bool) {
	o.ConstituentsSpaceLogicalSpaceEnforcementQueryParameter = constituentsSpaceLogicalSpaceEnforcement
}

// WithConstituentsSpaceLogicalSpaceReportingQueryParameter adds the constituentsSpaceLogicalSpaceReporting to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceLogicalSpaceReportingQueryParameter(constituentsSpaceLogicalSpaceReporting *bool) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceLogicalSpaceReportingQueryParameter(constituentsSpaceLogicalSpaceReporting)
	return o
}

// SetConstituentsSpaceLogicalSpaceReportingQueryParameter adds the constituentsSpaceLogicalSpaceReporting to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceLogicalSpaceReportingQueryParameter(constituentsSpaceLogicalSpaceReporting *bool) {
	o.ConstituentsSpaceLogicalSpaceReportingQueryParameter = constituentsSpaceLogicalSpaceReporting
}

// WithConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter adds the constituentsSpaceLogicalSpaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter(constituentsSpaceLogicalSpaceUsedByAfs *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter(constituentsSpaceLogicalSpaceUsedByAfs)
	return o
}

// SetConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter adds the constituentsSpaceLogicalSpaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter(constituentsSpaceLogicalSpaceUsedByAfs *int64) {
	o.ConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter = constituentsSpaceLogicalSpaceUsedByAfs
}

// WithConstituentsSpaceMetadataQueryParameter adds the constituentsSpaceMetadata to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceMetadataQueryParameter(constituentsSpaceMetadata *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceMetadataQueryParameter(constituentsSpaceMetadata)
	return o
}

// SetConstituentsSpaceMetadataQueryParameter adds the constituentsSpaceMetadata to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceMetadataQueryParameter(constituentsSpaceMetadata *int64) {
	o.ConstituentsSpaceMetadataQueryParameter = constituentsSpaceMetadata
}

// WithConstituentsSpaceOverProvisionedQueryParameter adds the constituentsSpaceOverProvisioned to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceOverProvisionedQueryParameter(constituentsSpaceOverProvisioned *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceOverProvisionedQueryParameter(constituentsSpaceOverProvisioned)
	return o
}

// SetConstituentsSpaceOverProvisionedQueryParameter adds the constituentsSpaceOverProvisioned to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceOverProvisionedQueryParameter(constituentsSpaceOverProvisioned *int64) {
	o.ConstituentsSpaceOverProvisionedQueryParameter = constituentsSpaceOverProvisioned
}

// WithConstituentsSpacePerformanceTierFootprintQueryParameter adds the constituentsSpacePerformanceTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpacePerformanceTierFootprintQueryParameter(constituentsSpacePerformanceTierFootprint *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpacePerformanceTierFootprintQueryParameter(constituentsSpacePerformanceTierFootprint)
	return o
}

// SetConstituentsSpacePerformanceTierFootprintQueryParameter adds the constituentsSpacePerformanceTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpacePerformanceTierFootprintQueryParameter(constituentsSpacePerformanceTierFootprint *int64) {
	o.ConstituentsSpacePerformanceTierFootprintQueryParameter = constituentsSpacePerformanceTierFootprint
}

// WithConstituentsSpaceSizeQueryParameter adds the constituentsSpaceSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceSizeQueryParameter(constituentsSpaceSize *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceSizeQueryParameter(constituentsSpaceSize)
	return o
}

// SetConstituentsSpaceSizeQueryParameter adds the constituentsSpaceSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceSizeQueryParameter(constituentsSpaceSize *int64) {
	o.ConstituentsSpaceSizeQueryParameter = constituentsSpaceSize
}

// WithConstituentsSpaceSnapshotReservePercentQueryParameter adds the constituentsSpaceSnapshotReservePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceSnapshotReservePercentQueryParameter(constituentsSpaceSnapshotReservePercent *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceSnapshotReservePercentQueryParameter(constituentsSpaceSnapshotReservePercent)
	return o
}

// SetConstituentsSpaceSnapshotReservePercentQueryParameter adds the constituentsSpaceSnapshotReservePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceSnapshotReservePercentQueryParameter(constituentsSpaceSnapshotReservePercent *int64) {
	o.ConstituentsSpaceSnapshotReservePercentQueryParameter = constituentsSpaceSnapshotReservePercent
}

// WithConstituentsSpaceSnapshotUsedQueryParameter adds the constituentsSpaceSnapshotUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceSnapshotUsedQueryParameter(constituentsSpaceSnapshotUsed *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceSnapshotUsedQueryParameter(constituentsSpaceSnapshotUsed)
	return o
}

// SetConstituentsSpaceSnapshotUsedQueryParameter adds the constituentsSpaceSnapshotUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceSnapshotUsedQueryParameter(constituentsSpaceSnapshotUsed *int64) {
	o.ConstituentsSpaceSnapshotUsedQueryParameter = constituentsSpaceSnapshotUsed
}

// WithConstituentsSpaceTotalFootprintQueryParameter adds the constituentsSpaceTotalFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceTotalFootprintQueryParameter(constituentsSpaceTotalFootprint *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceTotalFootprintQueryParameter(constituentsSpaceTotalFootprint)
	return o
}

// SetConstituentsSpaceTotalFootprintQueryParameter adds the constituentsSpaceTotalFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceTotalFootprintQueryParameter(constituentsSpaceTotalFootprint *int64) {
	o.ConstituentsSpaceTotalFootprintQueryParameter = constituentsSpaceTotalFootprint
}

// WithConstituentsSpaceUsedQueryParameter adds the constituentsSpaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceUsedQueryParameter(constituentsSpaceUsed *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceUsedQueryParameter(constituentsSpaceUsed)
	return o
}

// SetConstituentsSpaceUsedQueryParameter adds the constituentsSpaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceUsedQueryParameter(constituentsSpaceUsed *int64) {
	o.ConstituentsSpaceUsedQueryParameter = constituentsSpaceUsed
}

// WithConstituentsSpaceUsedByAfsQueryParameter adds the constituentsSpaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceUsedByAfsQueryParameter(constituentsSpaceUsedByAfs *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceUsedByAfsQueryParameter(constituentsSpaceUsedByAfs)
	return o
}

// SetConstituentsSpaceUsedByAfsQueryParameter adds the constituentsSpaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceUsedByAfsQueryParameter(constituentsSpaceUsedByAfs *int64) {
	o.ConstituentsSpaceUsedByAfsQueryParameter = constituentsSpaceUsedByAfs
}

// WithConstituentsSpaceUsedPercentQueryParameter adds the constituentsSpaceUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithConstituentsSpaceUsedPercentQueryParameter(constituentsSpaceUsedPercent *int64) *VolumeCollectionGetParams {
	o.SetConstituentsSpaceUsedPercentQueryParameter(constituentsSpaceUsedPercent)
	return o
}

// SetConstituentsSpaceUsedPercentQueryParameter adds the constituentsSpaceUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetConstituentsSpaceUsedPercentQueryParameter(constituentsSpaceUsedPercent *int64) {
	o.ConstituentsSpaceUsedPercentQueryParameter = constituentsSpaceUsedPercent
}

// WithConvertUnicodeQueryParameter adds the convertUnicode to the volume collection get params
func (o *VolumeCollectionGetParams) WithConvertUnicodeQueryParameter(convertUnicode *bool) *VolumeCollectionGetParams {
	o.SetConvertUnicodeQueryParameter(convertUnicode)
	return o
}

// SetConvertUnicodeQueryParameter adds the convertUnicode to the volume collection get params
func (o *VolumeCollectionGetParams) SetConvertUnicodeQueryParameter(convertUnicode *bool) {
	o.ConvertUnicodeQueryParameter = convertUnicode
}

// WithCreateTimeQueryParameter adds the createTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithCreateTimeQueryParameter(createTime *string) *VolumeCollectionGetParams {
	o.SetCreateTimeQueryParameter(createTime)
	return o
}

// SetCreateTimeQueryParameter adds the createTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetCreateTimeQueryParameter(createTime *string) {
	o.CreateTimeQueryParameter = createTime
}

// WithEfficiencyApplicationIoSizeQueryParameter adds the efficiencyApplicationIoSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyApplicationIoSizeQueryParameter(efficiencyApplicationIoSize *string) *VolumeCollectionGetParams {
	o.SetEfficiencyApplicationIoSizeQueryParameter(efficiencyApplicationIoSize)
	return o
}

// SetEfficiencyApplicationIoSizeQueryParameter adds the efficiencyApplicationIoSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyApplicationIoSizeQueryParameter(efficiencyApplicationIoSize *string) {
	o.EfficiencyApplicationIoSizeQueryParameter = efficiencyApplicationIoSize
}

// WithEfficiencyCompactionQueryParameter adds the efficiencyCompaction to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyCompactionQueryParameter(efficiencyCompaction *string) *VolumeCollectionGetParams {
	o.SetEfficiencyCompactionQueryParameter(efficiencyCompaction)
	return o
}

// SetEfficiencyCompactionQueryParameter adds the efficiencyCompaction to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyCompactionQueryParameter(efficiencyCompaction *string) {
	o.EfficiencyCompactionQueryParameter = efficiencyCompaction
}

// WithEfficiencyCompressionQueryParameter adds the efficiencyCompression to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyCompressionQueryParameter(efficiencyCompression *string) *VolumeCollectionGetParams {
	o.SetEfficiencyCompressionQueryParameter(efficiencyCompression)
	return o
}

// SetEfficiencyCompressionQueryParameter adds the efficiencyCompression to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyCompressionQueryParameter(efficiencyCompression *string) {
	o.EfficiencyCompressionQueryParameter = efficiencyCompression
}

// WithEfficiencyCompressionTypeQueryParameter adds the efficiencyCompressionType to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyCompressionTypeQueryParameter(efficiencyCompressionType *string) *VolumeCollectionGetParams {
	o.SetEfficiencyCompressionTypeQueryParameter(efficiencyCompressionType)
	return o
}

// SetEfficiencyCompressionTypeQueryParameter adds the efficiencyCompressionType to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyCompressionTypeQueryParameter(efficiencyCompressionType *string) {
	o.EfficiencyCompressionTypeQueryParameter = efficiencyCompressionType
}

// WithEfficiencyCrossVolumeDedupeQueryParameter adds the efficiencyCrossVolumeDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyCrossVolumeDedupeQueryParameter(efficiencyCrossVolumeDedupe *string) *VolumeCollectionGetParams {
	o.SetEfficiencyCrossVolumeDedupeQueryParameter(efficiencyCrossVolumeDedupe)
	return o
}

// SetEfficiencyCrossVolumeDedupeQueryParameter adds the efficiencyCrossVolumeDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyCrossVolumeDedupeQueryParameter(efficiencyCrossVolumeDedupe *string) {
	o.EfficiencyCrossVolumeDedupeQueryParameter = efficiencyCrossVolumeDedupe
}

// WithEfficiencyDedupeQueryParameter adds the efficiencyDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyDedupeQueryParameter(efficiencyDedupe *string) *VolumeCollectionGetParams {
	o.SetEfficiencyDedupeQueryParameter(efficiencyDedupe)
	return o
}

// SetEfficiencyDedupeQueryParameter adds the efficiencyDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyDedupeQueryParameter(efficiencyDedupe *string) {
	o.EfficiencyDedupeQueryParameter = efficiencyDedupe
}

// WithEfficiencyHasSavingsQueryParameter adds the efficiencyHasSavings to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyHasSavingsQueryParameter(efficiencyHasSavings *bool) *VolumeCollectionGetParams {
	o.SetEfficiencyHasSavingsQueryParameter(efficiencyHasSavings)
	return o
}

// SetEfficiencyHasSavingsQueryParameter adds the efficiencyHasSavings to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyHasSavingsQueryParameter(efficiencyHasSavings *bool) {
	o.EfficiencyHasSavingsQueryParameter = efficiencyHasSavings
}

// WithEfficiencyLastOpBeginQueryParameter adds the efficiencyLastOpBegin to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyLastOpBeginQueryParameter(efficiencyLastOpBegin *string) *VolumeCollectionGetParams {
	o.SetEfficiencyLastOpBeginQueryParameter(efficiencyLastOpBegin)
	return o
}

// SetEfficiencyLastOpBeginQueryParameter adds the efficiencyLastOpBegin to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyLastOpBeginQueryParameter(efficiencyLastOpBegin *string) {
	o.EfficiencyLastOpBeginQueryParameter = efficiencyLastOpBegin
}

// WithEfficiencyLastOpEndQueryParameter adds the efficiencyLastOpEnd to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyLastOpEndQueryParameter(efficiencyLastOpEnd *string) *VolumeCollectionGetParams {
	o.SetEfficiencyLastOpEndQueryParameter(efficiencyLastOpEnd)
	return o
}

// SetEfficiencyLastOpEndQueryParameter adds the efficiencyLastOpEnd to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyLastOpEndQueryParameter(efficiencyLastOpEnd *string) {
	o.EfficiencyLastOpEndQueryParameter = efficiencyLastOpEnd
}

// WithEfficiencyLastOpErrQueryParameter adds the efficiencyLastOpErr to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyLastOpErrQueryParameter(efficiencyLastOpErr *string) *VolumeCollectionGetParams {
	o.SetEfficiencyLastOpErrQueryParameter(efficiencyLastOpErr)
	return o
}

// SetEfficiencyLastOpErrQueryParameter adds the efficiencyLastOpErr to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyLastOpErrQueryParameter(efficiencyLastOpErr *string) {
	o.EfficiencyLastOpErrQueryParameter = efficiencyLastOpErr
}

// WithEfficiencyLastOpSizeQueryParameter adds the efficiencyLastOpSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyLastOpSizeQueryParameter(efficiencyLastOpSize *int64) *VolumeCollectionGetParams {
	o.SetEfficiencyLastOpSizeQueryParameter(efficiencyLastOpSize)
	return o
}

// SetEfficiencyLastOpSizeQueryParameter adds the efficiencyLastOpSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyLastOpSizeQueryParameter(efficiencyLastOpSize *int64) {
	o.EfficiencyLastOpSizeQueryParameter = efficiencyLastOpSize
}

// WithEfficiencyLastOpStateQueryParameter adds the efficiencyLastOpState to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyLastOpStateQueryParameter(efficiencyLastOpState *string) *VolumeCollectionGetParams {
	o.SetEfficiencyLastOpStateQueryParameter(efficiencyLastOpState)
	return o
}

// SetEfficiencyLastOpStateQueryParameter adds the efficiencyLastOpState to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyLastOpStateQueryParameter(efficiencyLastOpState *string) {
	o.EfficiencyLastOpStateQueryParameter = efficiencyLastOpState
}

// WithEfficiencyLoggingEnabledQueryParameter adds the efficiencyLoggingEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyLoggingEnabledQueryParameter(efficiencyLoggingEnabled *bool) *VolumeCollectionGetParams {
	o.SetEfficiencyLoggingEnabledQueryParameter(efficiencyLoggingEnabled)
	return o
}

// SetEfficiencyLoggingEnabledQueryParameter adds the efficiencyLoggingEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyLoggingEnabledQueryParameter(efficiencyLoggingEnabled *bool) {
	o.EfficiencyLoggingEnabledQueryParameter = efficiencyLoggingEnabled
}

// WithEfficiencyOpStateQueryParameter adds the efficiencyOpState to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyOpStateQueryParameter(efficiencyOpState *string) *VolumeCollectionGetParams {
	o.SetEfficiencyOpStateQueryParameter(efficiencyOpState)
	return o
}

// SetEfficiencyOpStateQueryParameter adds the efficiencyOpState to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyOpStateQueryParameter(efficiencyOpState *string) {
	o.EfficiencyOpStateQueryParameter = efficiencyOpState
}

// WithEfficiencyPathQueryParameter adds the efficiencyPath to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyPathQueryParameter(efficiencyPath *string) *VolumeCollectionGetParams {
	o.SetEfficiencyPathQueryParameter(efficiencyPath)
	return o
}

// SetEfficiencyPathQueryParameter adds the efficiencyPath to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyPathQueryParameter(efficiencyPath *string) {
	o.EfficiencyPathQueryParameter = efficiencyPath
}

// WithEfficiencyPolicyNameQueryParameter adds the efficiencyPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyPolicyNameQueryParameter(efficiencyPolicyName *string) *VolumeCollectionGetParams {
	o.SetEfficiencyPolicyNameQueryParameter(efficiencyPolicyName)
	return o
}

// SetEfficiencyPolicyNameQueryParameter adds the efficiencyPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyPolicyNameQueryParameter(efficiencyPolicyName *string) {
	o.EfficiencyPolicyNameQueryParameter = efficiencyPolicyName
}

// WithEfficiencyProgressQueryParameter adds the efficiencyProgress to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyProgressQueryParameter(efficiencyProgress *string) *VolumeCollectionGetParams {
	o.SetEfficiencyProgressQueryParameter(efficiencyProgress)
	return o
}

// SetEfficiencyProgressQueryParameter adds the efficiencyProgress to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyProgressQueryParameter(efficiencyProgress *string) {
	o.EfficiencyProgressQueryParameter = efficiencyProgress
}

// WithEfficiencyScannerCompressionQueryParameter adds the efficiencyScannerCompression to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyScannerCompressionQueryParameter(efficiencyScannerCompression *bool) *VolumeCollectionGetParams {
	o.SetEfficiencyScannerCompressionQueryParameter(efficiencyScannerCompression)
	return o
}

// SetEfficiencyScannerCompressionQueryParameter adds the efficiencyScannerCompression to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyScannerCompressionQueryParameter(efficiencyScannerCompression *bool) {
	o.EfficiencyScannerCompressionQueryParameter = efficiencyScannerCompression
}

// WithEfficiencyScannerDedupeQueryParameter adds the efficiencyScannerDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyScannerDedupeQueryParameter(efficiencyScannerDedupe *bool) *VolumeCollectionGetParams {
	o.SetEfficiencyScannerDedupeQueryParameter(efficiencyScannerDedupe)
	return o
}

// SetEfficiencyScannerDedupeQueryParameter adds the efficiencyScannerDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyScannerDedupeQueryParameter(efficiencyScannerDedupe *bool) {
	o.EfficiencyScannerDedupeQueryParameter = efficiencyScannerDedupe
}

// WithEfficiencyScannerScanOldDataQueryParameter adds the efficiencyScannerScanOldData to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyScannerScanOldDataQueryParameter(efficiencyScannerScanOldData *bool) *VolumeCollectionGetParams {
	o.SetEfficiencyScannerScanOldDataQueryParameter(efficiencyScannerScanOldData)
	return o
}

// SetEfficiencyScannerScanOldDataQueryParameter adds the efficiencyScannerScanOldData to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyScannerScanOldDataQueryParameter(efficiencyScannerScanOldData *bool) {
	o.EfficiencyScannerScanOldDataQueryParameter = efficiencyScannerScanOldData
}

// WithEfficiencyScannerStateQueryParameter adds the efficiencyScannerState to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyScannerStateQueryParameter(efficiencyScannerState *string) *VolumeCollectionGetParams {
	o.SetEfficiencyScannerStateQueryParameter(efficiencyScannerState)
	return o
}

// SetEfficiencyScannerStateQueryParameter adds the efficiencyScannerState to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyScannerStateQueryParameter(efficiencyScannerState *string) {
	o.EfficiencyScannerStateQueryParameter = efficiencyScannerState
}

// WithEfficiencyScheduleQueryParameter adds the efficiencySchedule to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyScheduleQueryParameter(efficiencySchedule *string) *VolumeCollectionGetParams {
	o.SetEfficiencyScheduleQueryParameter(efficiencySchedule)
	return o
}

// SetEfficiencyScheduleQueryParameter adds the efficiencySchedule to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyScheduleQueryParameter(efficiencySchedule *string) {
	o.EfficiencyScheduleQueryParameter = efficiencySchedule
}

// WithEfficiencySpaceSavingsCompressionQueryParameter adds the efficiencySpaceSavingsCompression to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencySpaceSavingsCompressionQueryParameter(efficiencySpaceSavingsCompression *int64) *VolumeCollectionGetParams {
	o.SetEfficiencySpaceSavingsCompressionQueryParameter(efficiencySpaceSavingsCompression)
	return o
}

// SetEfficiencySpaceSavingsCompressionQueryParameter adds the efficiencySpaceSavingsCompression to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencySpaceSavingsCompressionQueryParameter(efficiencySpaceSavingsCompression *int64) {
	o.EfficiencySpaceSavingsCompressionQueryParameter = efficiencySpaceSavingsCompression
}

// WithEfficiencySpaceSavingsCompressionPercentQueryParameter adds the efficiencySpaceSavingsCompressionPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencySpaceSavingsCompressionPercentQueryParameter(efficiencySpaceSavingsCompressionPercent *int64) *VolumeCollectionGetParams {
	o.SetEfficiencySpaceSavingsCompressionPercentQueryParameter(efficiencySpaceSavingsCompressionPercent)
	return o
}

// SetEfficiencySpaceSavingsCompressionPercentQueryParameter adds the efficiencySpaceSavingsCompressionPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencySpaceSavingsCompressionPercentQueryParameter(efficiencySpaceSavingsCompressionPercent *int64) {
	o.EfficiencySpaceSavingsCompressionPercentQueryParameter = efficiencySpaceSavingsCompressionPercent
}

// WithEfficiencySpaceSavingsDedupeQueryParameter adds the efficiencySpaceSavingsDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencySpaceSavingsDedupeQueryParameter(efficiencySpaceSavingsDedupe *int64) *VolumeCollectionGetParams {
	o.SetEfficiencySpaceSavingsDedupeQueryParameter(efficiencySpaceSavingsDedupe)
	return o
}

// SetEfficiencySpaceSavingsDedupeQueryParameter adds the efficiencySpaceSavingsDedupe to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencySpaceSavingsDedupeQueryParameter(efficiencySpaceSavingsDedupe *int64) {
	o.EfficiencySpaceSavingsDedupeQueryParameter = efficiencySpaceSavingsDedupe
}

// WithEfficiencySpaceSavingsDedupePercentQueryParameter adds the efficiencySpaceSavingsDedupePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencySpaceSavingsDedupePercentQueryParameter(efficiencySpaceSavingsDedupePercent *int64) *VolumeCollectionGetParams {
	o.SetEfficiencySpaceSavingsDedupePercentQueryParameter(efficiencySpaceSavingsDedupePercent)
	return o
}

// SetEfficiencySpaceSavingsDedupePercentQueryParameter adds the efficiencySpaceSavingsDedupePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencySpaceSavingsDedupePercentQueryParameter(efficiencySpaceSavingsDedupePercent *int64) {
	o.EfficiencySpaceSavingsDedupePercentQueryParameter = efficiencySpaceSavingsDedupePercent
}

// WithEfficiencySpaceSavingsDedupeSharingQueryParameter adds the efficiencySpaceSavingsDedupeSharing to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencySpaceSavingsDedupeSharingQueryParameter(efficiencySpaceSavingsDedupeSharing *int64) *VolumeCollectionGetParams {
	o.SetEfficiencySpaceSavingsDedupeSharingQueryParameter(efficiencySpaceSavingsDedupeSharing)
	return o
}

// SetEfficiencySpaceSavingsDedupeSharingQueryParameter adds the efficiencySpaceSavingsDedupeSharing to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencySpaceSavingsDedupeSharingQueryParameter(efficiencySpaceSavingsDedupeSharing *int64) {
	o.EfficiencySpaceSavingsDedupeSharingQueryParameter = efficiencySpaceSavingsDedupeSharing
}

// WithEfficiencySpaceSavingsTotalQueryParameter adds the efficiencySpaceSavingsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencySpaceSavingsTotalQueryParameter(efficiencySpaceSavingsTotal *int64) *VolumeCollectionGetParams {
	o.SetEfficiencySpaceSavingsTotalQueryParameter(efficiencySpaceSavingsTotal)
	return o
}

// SetEfficiencySpaceSavingsTotalQueryParameter adds the efficiencySpaceSavingsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencySpaceSavingsTotalQueryParameter(efficiencySpaceSavingsTotal *int64) {
	o.EfficiencySpaceSavingsTotalQueryParameter = efficiencySpaceSavingsTotal
}

// WithEfficiencySpaceSavingsTotalPercentQueryParameter adds the efficiencySpaceSavingsTotalPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencySpaceSavingsTotalPercentQueryParameter(efficiencySpaceSavingsTotalPercent *int64) *VolumeCollectionGetParams {
	o.SetEfficiencySpaceSavingsTotalPercentQueryParameter(efficiencySpaceSavingsTotalPercent)
	return o
}

// SetEfficiencySpaceSavingsTotalPercentQueryParameter adds the efficiencySpaceSavingsTotalPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencySpaceSavingsTotalPercentQueryParameter(efficiencySpaceSavingsTotalPercent *int64) {
	o.EfficiencySpaceSavingsTotalPercentQueryParameter = efficiencySpaceSavingsTotalPercent
}

// WithEfficiencyStateQueryParameter adds the efficiencyState to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyStateQueryParameter(efficiencyState *string) *VolumeCollectionGetParams {
	o.SetEfficiencyStateQueryParameter(efficiencyState)
	return o
}

// SetEfficiencyStateQueryParameter adds the efficiencyState to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyStateQueryParameter(efficiencyState *string) {
	o.EfficiencyStateQueryParameter = efficiencyState
}

// WithEfficiencyStorageEfficiencyModeQueryParameter adds the efficiencyStorageEfficiencyMode to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyStorageEfficiencyModeQueryParameter(efficiencyStorageEfficiencyMode *string) *VolumeCollectionGetParams {
	o.SetEfficiencyStorageEfficiencyModeQueryParameter(efficiencyStorageEfficiencyMode)
	return o
}

// SetEfficiencyStorageEfficiencyModeQueryParameter adds the efficiencyStorageEfficiencyMode to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyStorageEfficiencyModeQueryParameter(efficiencyStorageEfficiencyMode *string) {
	o.EfficiencyStorageEfficiencyModeQueryParameter = efficiencyStorageEfficiencyMode
}

// WithEfficiencyTypeQueryParameter adds the efficiencyType to the volume collection get params
func (o *VolumeCollectionGetParams) WithEfficiencyTypeQueryParameter(efficiencyType *string) *VolumeCollectionGetParams {
	o.SetEfficiencyTypeQueryParameter(efficiencyType)
	return o
}

// SetEfficiencyTypeQueryParameter adds the efficiencyType to the volume collection get params
func (o *VolumeCollectionGetParams) SetEfficiencyTypeQueryParameter(efficiencyType *string) {
	o.EfficiencyTypeQueryParameter = efficiencyType
}

// WithEncryptionEnabledQueryParameter adds the encryptionEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionEnabledQueryParameter(encryptionEnabled *bool) *VolumeCollectionGetParams {
	o.SetEncryptionEnabledQueryParameter(encryptionEnabled)
	return o
}

// SetEncryptionEnabledQueryParameter adds the encryptionEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionEnabledQueryParameter(encryptionEnabled *bool) {
	o.EncryptionEnabledQueryParameter = encryptionEnabled
}

// WithEncryptionKeyCreateTimeQueryParameter adds the encryptionKeyCreateTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionKeyCreateTimeQueryParameter(encryptionKeyCreateTime *string) *VolumeCollectionGetParams {
	o.SetEncryptionKeyCreateTimeQueryParameter(encryptionKeyCreateTime)
	return o
}

// SetEncryptionKeyCreateTimeQueryParameter adds the encryptionKeyCreateTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionKeyCreateTimeQueryParameter(encryptionKeyCreateTime *string) {
	o.EncryptionKeyCreateTimeQueryParameter = encryptionKeyCreateTime
}

// WithEncryptionKeyIDQueryParameter adds the encryptionKeyID to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionKeyIDQueryParameter(encryptionKeyID *string) *VolumeCollectionGetParams {
	o.SetEncryptionKeyIDQueryParameter(encryptionKeyID)
	return o
}

// SetEncryptionKeyIDQueryParameter adds the encryptionKeyId to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionKeyIDQueryParameter(encryptionKeyID *string) {
	o.EncryptionKeyIDQueryParameter = encryptionKeyID
}

// WithEncryptionRekeyQueryParameter adds the encryptionRekey to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionRekeyQueryParameter(encryptionRekey *bool) *VolumeCollectionGetParams {
	o.SetEncryptionRekeyQueryParameter(encryptionRekey)
	return o
}

// SetEncryptionRekeyQueryParameter adds the encryptionRekey to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionRekeyQueryParameter(encryptionRekey *bool) {
	o.EncryptionRekeyQueryParameter = encryptionRekey
}

// WithEncryptionStateQueryParameter adds the encryptionState to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionStateQueryParameter(encryptionState *string) *VolumeCollectionGetParams {
	o.SetEncryptionStateQueryParameter(encryptionState)
	return o
}

// SetEncryptionStateQueryParameter adds the encryptionState to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionStateQueryParameter(encryptionState *string) {
	o.EncryptionStateQueryParameter = encryptionState
}

// WithEncryptionStatusCodeQueryParameter adds the encryptionStatusCode to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionStatusCodeQueryParameter(encryptionStatusCode *string) *VolumeCollectionGetParams {
	o.SetEncryptionStatusCodeQueryParameter(encryptionStatusCode)
	return o
}

// SetEncryptionStatusCodeQueryParameter adds the encryptionStatusCode to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionStatusCodeQueryParameter(encryptionStatusCode *string) {
	o.EncryptionStatusCodeQueryParameter = encryptionStatusCode
}

// WithEncryptionStatusMessageQueryParameter adds the encryptionStatusMessage to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionStatusMessageQueryParameter(encryptionStatusMessage *string) *VolumeCollectionGetParams {
	o.SetEncryptionStatusMessageQueryParameter(encryptionStatusMessage)
	return o
}

// SetEncryptionStatusMessageQueryParameter adds the encryptionStatusMessage to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionStatusMessageQueryParameter(encryptionStatusMessage *string) {
	o.EncryptionStatusMessageQueryParameter = encryptionStatusMessage
}

// WithEncryptionTypeQueryParameter adds the encryptionType to the volume collection get params
func (o *VolumeCollectionGetParams) WithEncryptionTypeQueryParameter(encryptionType *string) *VolumeCollectionGetParams {
	o.SetEncryptionTypeQueryParameter(encryptionType)
	return o
}

// SetEncryptionTypeQueryParameter adds the encryptionType to the volume collection get params
func (o *VolumeCollectionGetParams) SetEncryptionTypeQueryParameter(encryptionType *string) {
	o.EncryptionTypeQueryParameter = encryptionType
}

// WithErrorStateHasBadBlocksQueryParameter adds the errorStateHasBadBlocks to the volume collection get params
func (o *VolumeCollectionGetParams) WithErrorStateHasBadBlocksQueryParameter(errorStateHasBadBlocks *bool) *VolumeCollectionGetParams {
	o.SetErrorStateHasBadBlocksQueryParameter(errorStateHasBadBlocks)
	return o
}

// SetErrorStateHasBadBlocksQueryParameter adds the errorStateHasBadBlocks to the volume collection get params
func (o *VolumeCollectionGetParams) SetErrorStateHasBadBlocksQueryParameter(errorStateHasBadBlocks *bool) {
	o.ErrorStateHasBadBlocksQueryParameter = errorStateHasBadBlocks
}

// WithErrorStateIsInconsistentQueryParameter adds the errorStateIsInconsistent to the volume collection get params
func (o *VolumeCollectionGetParams) WithErrorStateIsInconsistentQueryParameter(errorStateIsInconsistent *bool) *VolumeCollectionGetParams {
	o.SetErrorStateIsInconsistentQueryParameter(errorStateIsInconsistent)
	return o
}

// SetErrorStateIsInconsistentQueryParameter adds the errorStateIsInconsistent to the volume collection get params
func (o *VolumeCollectionGetParams) SetErrorStateIsInconsistentQueryParameter(errorStateIsInconsistent *bool) {
	o.ErrorStateIsInconsistentQueryParameter = errorStateIsInconsistent
}

// WithFieldsQueryParameter adds the fields to the volume collection get params
func (o *VolumeCollectionGetParams) WithFieldsQueryParameter(fields []string) *VolumeCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the volume collection get params
func (o *VolumeCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithFilesMaximumQueryParameter adds the filesMaximum to the volume collection get params
func (o *VolumeCollectionGetParams) WithFilesMaximumQueryParameter(filesMaximum *int64) *VolumeCollectionGetParams {
	o.SetFilesMaximumQueryParameter(filesMaximum)
	return o
}

// SetFilesMaximumQueryParameter adds the filesMaximum to the volume collection get params
func (o *VolumeCollectionGetParams) SetFilesMaximumQueryParameter(filesMaximum *int64) {
	o.FilesMaximumQueryParameter = filesMaximum
}

// WithFilesUsedQueryParameter adds the filesUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithFilesUsedQueryParameter(filesUsed *int64) *VolumeCollectionGetParams {
	o.SetFilesUsedQueryParameter(filesUsed)
	return o
}

// SetFilesUsedQueryParameter adds the filesUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetFilesUsedQueryParameter(filesUsed *int64) {
	o.FilesUsedQueryParameter = filesUsed
}

// WithFlashPoolCacheEligibilityQueryParameter adds the flashPoolCacheEligibility to the volume collection get params
func (o *VolumeCollectionGetParams) WithFlashPoolCacheEligibilityQueryParameter(flashPoolCacheEligibility *string) *VolumeCollectionGetParams {
	o.SetFlashPoolCacheEligibilityQueryParameter(flashPoolCacheEligibility)
	return o
}

// SetFlashPoolCacheEligibilityQueryParameter adds the flashPoolCacheEligibility to the volume collection get params
func (o *VolumeCollectionGetParams) SetFlashPoolCacheEligibilityQueryParameter(flashPoolCacheEligibility *string) {
	o.FlashPoolCacheEligibilityQueryParameter = flashPoolCacheEligibility
}

// WithFlashPoolCacheRetentionPriorityQueryParameter adds the flashPoolCacheRetentionPriority to the volume collection get params
func (o *VolumeCollectionGetParams) WithFlashPoolCacheRetentionPriorityQueryParameter(flashPoolCacheRetentionPriority *string) *VolumeCollectionGetParams {
	o.SetFlashPoolCacheRetentionPriorityQueryParameter(flashPoolCacheRetentionPriority)
	return o
}

// SetFlashPoolCacheRetentionPriorityQueryParameter adds the flashPoolCacheRetentionPriority to the volume collection get params
func (o *VolumeCollectionGetParams) SetFlashPoolCacheRetentionPriorityQueryParameter(flashPoolCacheRetentionPriority *string) {
	o.FlashPoolCacheRetentionPriorityQueryParameter = flashPoolCacheRetentionPriority
}

// WithFlashPoolCachingPolicyQueryParameter adds the flashPoolCachingPolicy to the volume collection get params
func (o *VolumeCollectionGetParams) WithFlashPoolCachingPolicyQueryParameter(flashPoolCachingPolicy *string) *VolumeCollectionGetParams {
	o.SetFlashPoolCachingPolicyQueryParameter(flashPoolCachingPolicy)
	return o
}

// SetFlashPoolCachingPolicyQueryParameter adds the flashPoolCachingPolicy to the volume collection get params
func (o *VolumeCollectionGetParams) SetFlashPoolCachingPolicyQueryParameter(flashPoolCachingPolicy *string) {
	o.FlashPoolCachingPolicyQueryParameter = flashPoolCachingPolicy
}

// WithFlexcacheEndpointTypeQueryParameter adds the flexcacheEndpointType to the volume collection get params
func (o *VolumeCollectionGetParams) WithFlexcacheEndpointTypeQueryParameter(flexcacheEndpointType *string) *VolumeCollectionGetParams {
	o.SetFlexcacheEndpointTypeQueryParameter(flexcacheEndpointType)
	return o
}

// SetFlexcacheEndpointTypeQueryParameter adds the flexcacheEndpointType to the volume collection get params
func (o *VolumeCollectionGetParams) SetFlexcacheEndpointTypeQueryParameter(flexcacheEndpointType *string) {
	o.FlexcacheEndpointTypeQueryParameter = flexcacheEndpointType
}

// WithFlexgroupNameQueryParameter adds the flexgroupName to the volume collection get params
func (o *VolumeCollectionGetParams) WithFlexgroupNameQueryParameter(flexgroupName *string) *VolumeCollectionGetParams {
	o.SetFlexgroupNameQueryParameter(flexgroupName)
	return o
}

// SetFlexgroupNameQueryParameter adds the flexgroupName to the volume collection get params
func (o *VolumeCollectionGetParams) SetFlexgroupNameQueryParameter(flexgroupName *string) {
	o.FlexgroupNameQueryParameter = flexgroupName
}

// WithFlexgroupUUIDQueryParameter adds the flexgroupUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithFlexgroupUUIDQueryParameter(flexgroupUUID *string) *VolumeCollectionGetParams {
	o.SetFlexgroupUUIDQueryParameter(flexgroupUUID)
	return o
}

// SetFlexgroupUUIDQueryParameter adds the flexgroupUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetFlexgroupUUIDQueryParameter(flexgroupUUID *string) {
	o.FlexgroupUUIDQueryParameter = flexgroupUUID
}

// WithGranularDataQueryParameter adds the granularData to the volume collection get params
func (o *VolumeCollectionGetParams) WithGranularDataQueryParameter(granularData *bool) *VolumeCollectionGetParams {
	o.SetGranularDataQueryParameter(granularData)
	return o
}

// SetGranularDataQueryParameter adds the granularData to the volume collection get params
func (o *VolumeCollectionGetParams) SetGranularDataQueryParameter(granularData *bool) {
	o.GranularDataQueryParameter = granularData
}

// WithGuaranteeHonoredQueryParameter adds the guaranteeHonored to the volume collection get params
func (o *VolumeCollectionGetParams) WithGuaranteeHonoredQueryParameter(guaranteeHonored *bool) *VolumeCollectionGetParams {
	o.SetGuaranteeHonoredQueryParameter(guaranteeHonored)
	return o
}

// SetGuaranteeHonoredQueryParameter adds the guaranteeHonored to the volume collection get params
func (o *VolumeCollectionGetParams) SetGuaranteeHonoredQueryParameter(guaranteeHonored *bool) {
	o.GuaranteeHonoredQueryParameter = guaranteeHonored
}

// WithGuaranteeTypeQueryParameter adds the guaranteeType to the volume collection get params
func (o *VolumeCollectionGetParams) WithGuaranteeTypeQueryParameter(guaranteeType *string) *VolumeCollectionGetParams {
	o.SetGuaranteeTypeQueryParameter(guaranteeType)
	return o
}

// SetGuaranteeTypeQueryParameter adds the guaranteeType to the volume collection get params
func (o *VolumeCollectionGetParams) SetGuaranteeTypeQueryParameter(guaranteeType *string) {
	o.GuaranteeTypeQueryParameter = guaranteeType
}

// WithIdcsScannerEnabledQueryParameter adds the idcsScannerEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) WithIdcsScannerEnabledQueryParameter(idcsScannerEnabled *bool) *VolumeCollectionGetParams {
	o.SetIdcsScannerEnabledQueryParameter(idcsScannerEnabled)
	return o
}

// SetIdcsScannerEnabledQueryParameter adds the idcsScannerEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) SetIdcsScannerEnabledQueryParameter(idcsScannerEnabled *bool) {
	o.IdcsScannerEnabledQueryParameter = idcsScannerEnabled
}

// WithIdcsScannerModeQueryParameter adds the idcsScannerMode to the volume collection get params
func (o *VolumeCollectionGetParams) WithIdcsScannerModeQueryParameter(idcsScannerMode *string) *VolumeCollectionGetParams {
	o.SetIdcsScannerModeQueryParameter(idcsScannerMode)
	return o
}

// SetIdcsScannerModeQueryParameter adds the idcsScannerMode to the volume collection get params
func (o *VolumeCollectionGetParams) SetIdcsScannerModeQueryParameter(idcsScannerMode *string) {
	o.IdcsScannerModeQueryParameter = idcsScannerMode
}

// WithIdcsScannerOperationStateQueryParameter adds the idcsScannerOperationState to the volume collection get params
func (o *VolumeCollectionGetParams) WithIdcsScannerOperationStateQueryParameter(idcsScannerOperationState *string) *VolumeCollectionGetParams {
	o.SetIdcsScannerOperationStateQueryParameter(idcsScannerOperationState)
	return o
}

// SetIdcsScannerOperationStateQueryParameter adds the idcsScannerOperationState to the volume collection get params
func (o *VolumeCollectionGetParams) SetIdcsScannerOperationStateQueryParameter(idcsScannerOperationState *string) {
	o.IdcsScannerOperationStateQueryParameter = idcsScannerOperationState
}

// WithIdcsScannerStatusQueryParameter adds the idcsScannerStatus to the volume collection get params
func (o *VolumeCollectionGetParams) WithIdcsScannerStatusQueryParameter(idcsScannerStatus *string) *VolumeCollectionGetParams {
	o.SetIdcsScannerStatusQueryParameter(idcsScannerStatus)
	return o
}

// SetIdcsScannerStatusQueryParameter adds the idcsScannerStatus to the volume collection get params
func (o *VolumeCollectionGetParams) SetIdcsScannerStatusQueryParameter(idcsScannerStatus *string) {
	o.IdcsScannerStatusQueryParameter = idcsScannerStatus
}

// WithIdcsScannerThresholdInactiveTimeQueryParameter adds the idcsScannerThresholdInactiveTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithIdcsScannerThresholdInactiveTimeQueryParameter(idcsScannerThresholdInactiveTime *string) *VolumeCollectionGetParams {
	o.SetIdcsScannerThresholdInactiveTimeQueryParameter(idcsScannerThresholdInactiveTime)
	return o
}

// SetIdcsScannerThresholdInactiveTimeQueryParameter adds the idcsScannerThresholdInactiveTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetIdcsScannerThresholdInactiveTimeQueryParameter(idcsScannerThresholdInactiveTime *string) {
	o.IdcsScannerThresholdInactiveTimeQueryParameter = idcsScannerThresholdInactiveTime
}

// WithIsConstituentQueryParameter adds the isConstituent to the volume collection get params
func (o *VolumeCollectionGetParams) WithIsConstituentQueryParameter(isConstituent *bool) *VolumeCollectionGetParams {
	o.SetIsConstituentQueryParameter(isConstituent)
	return o
}

// SetIsConstituentQueryParameter adds the isConstituent to the volume collection get params
func (o *VolumeCollectionGetParams) SetIsConstituentQueryParameter(isConstituent *bool) {
	o.IsConstituentQueryParameter = isConstituent
}

// WithIsObjectStoreQueryParameter adds the isObjectStore to the volume collection get params
func (o *VolumeCollectionGetParams) WithIsObjectStoreQueryParameter(isObjectStore *bool) *VolumeCollectionGetParams {
	o.SetIsObjectStoreQueryParameter(isObjectStore)
	return o
}

// SetIsObjectStoreQueryParameter adds the isObjectStore to the volume collection get params
func (o *VolumeCollectionGetParams) SetIsObjectStoreQueryParameter(isObjectStore *bool) {
	o.IsObjectStoreQueryParameter = isObjectStore
}

// WithIsSVMRootQueryParameter adds the isSvmRoot to the volume collection get params
func (o *VolumeCollectionGetParams) WithIsSVMRootQueryParameter(isSvmRoot *bool) *VolumeCollectionGetParams {
	o.SetIsSVMRootQueryParameter(isSvmRoot)
	return o
}

// SetIsSVMRootQueryParameter adds the isSvmRoot to the volume collection get params
func (o *VolumeCollectionGetParams) SetIsSVMRootQueryParameter(isSvmRoot *bool) {
	o.IsSVMRootQueryParameter = isSvmRoot
}

// WithLanguageQueryParameter adds the language to the volume collection get params
func (o *VolumeCollectionGetParams) WithLanguageQueryParameter(language *string) *VolumeCollectionGetParams {
	o.SetLanguageQueryParameter(language)
	return o
}

// SetLanguageQueryParameter adds the language to the volume collection get params
func (o *VolumeCollectionGetParams) SetLanguageQueryParameter(language *string) {
	o.LanguageQueryParameter = language
}

// WithMaxDirSizeQueryParameter adds the maxDirSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithMaxDirSizeQueryParameter(maxDirSize *int64) *VolumeCollectionGetParams {
	o.SetMaxDirSizeQueryParameter(maxDirSize)
	return o
}

// SetMaxDirSizeQueryParameter adds the maxDirSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetMaxDirSizeQueryParameter(maxDirSize *int64) {
	o.MaxDirSizeQueryParameter = maxDirSize
}

// WithMaxRecordsQueryParameter adds the maxRecords to the volume collection get params
func (o *VolumeCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *VolumeCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the volume collection get params
func (o *VolumeCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMetricCloudDurationQueryParameter adds the metricCloudDuration to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudDurationQueryParameter(metricCloudDuration *string) *VolumeCollectionGetParams {
	o.SetMetricCloudDurationQueryParameter(metricCloudDuration)
	return o
}

// SetMetricCloudDurationQueryParameter adds the metricCloudDuration to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudDurationQueryParameter(metricCloudDuration *string) {
	o.MetricCloudDurationQueryParameter = metricCloudDuration
}

// WithMetricCloudIopsOtherQueryParameter adds the metricCloudIopsOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudIopsOtherQueryParameter(metricCloudIopsOther *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudIopsOtherQueryParameter(metricCloudIopsOther)
	return o
}

// SetMetricCloudIopsOtherQueryParameter adds the metricCloudIopsOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudIopsOtherQueryParameter(metricCloudIopsOther *int64) {
	o.MetricCloudIopsOtherQueryParameter = metricCloudIopsOther
}

// WithMetricCloudIopsReadQueryParameter adds the metricCloudIopsRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudIopsReadQueryParameter(metricCloudIopsRead *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudIopsReadQueryParameter(metricCloudIopsRead)
	return o
}

// SetMetricCloudIopsReadQueryParameter adds the metricCloudIopsRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudIopsReadQueryParameter(metricCloudIopsRead *int64) {
	o.MetricCloudIopsReadQueryParameter = metricCloudIopsRead
}

// WithMetricCloudIopsTotalQueryParameter adds the metricCloudIopsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudIopsTotalQueryParameter(metricCloudIopsTotal *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudIopsTotalQueryParameter(metricCloudIopsTotal)
	return o
}

// SetMetricCloudIopsTotalQueryParameter adds the metricCloudIopsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudIopsTotalQueryParameter(metricCloudIopsTotal *int64) {
	o.MetricCloudIopsTotalQueryParameter = metricCloudIopsTotal
}

// WithMetricCloudIopsWriteQueryParameter adds the metricCloudIopsWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudIopsWriteQueryParameter(metricCloudIopsWrite *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudIopsWriteQueryParameter(metricCloudIopsWrite)
	return o
}

// SetMetricCloudIopsWriteQueryParameter adds the metricCloudIopsWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudIopsWriteQueryParameter(metricCloudIopsWrite *int64) {
	o.MetricCloudIopsWriteQueryParameter = metricCloudIopsWrite
}

// WithMetricCloudLatencyOtherQueryParameter adds the metricCloudLatencyOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudLatencyOtherQueryParameter(metricCloudLatencyOther *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudLatencyOtherQueryParameter(metricCloudLatencyOther)
	return o
}

// SetMetricCloudLatencyOtherQueryParameter adds the metricCloudLatencyOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudLatencyOtherQueryParameter(metricCloudLatencyOther *int64) {
	o.MetricCloudLatencyOtherQueryParameter = metricCloudLatencyOther
}

// WithMetricCloudLatencyReadQueryParameter adds the metricCloudLatencyRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudLatencyReadQueryParameter(metricCloudLatencyRead *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudLatencyReadQueryParameter(metricCloudLatencyRead)
	return o
}

// SetMetricCloudLatencyReadQueryParameter adds the metricCloudLatencyRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudLatencyReadQueryParameter(metricCloudLatencyRead *int64) {
	o.MetricCloudLatencyReadQueryParameter = metricCloudLatencyRead
}

// WithMetricCloudLatencyTotalQueryParameter adds the metricCloudLatencyTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudLatencyTotalQueryParameter(metricCloudLatencyTotal *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudLatencyTotalQueryParameter(metricCloudLatencyTotal)
	return o
}

// SetMetricCloudLatencyTotalQueryParameter adds the metricCloudLatencyTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudLatencyTotalQueryParameter(metricCloudLatencyTotal *int64) {
	o.MetricCloudLatencyTotalQueryParameter = metricCloudLatencyTotal
}

// WithMetricCloudLatencyWriteQueryParameter adds the metricCloudLatencyWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudLatencyWriteQueryParameter(metricCloudLatencyWrite *int64) *VolumeCollectionGetParams {
	o.SetMetricCloudLatencyWriteQueryParameter(metricCloudLatencyWrite)
	return o
}

// SetMetricCloudLatencyWriteQueryParameter adds the metricCloudLatencyWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudLatencyWriteQueryParameter(metricCloudLatencyWrite *int64) {
	o.MetricCloudLatencyWriteQueryParameter = metricCloudLatencyWrite
}

// WithMetricCloudStatusQueryParameter adds the metricCloudStatus to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudStatusQueryParameter(metricCloudStatus *string) *VolumeCollectionGetParams {
	o.SetMetricCloudStatusQueryParameter(metricCloudStatus)
	return o
}

// SetMetricCloudStatusQueryParameter adds the metricCloudStatus to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudStatusQueryParameter(metricCloudStatus *string) {
	o.MetricCloudStatusQueryParameter = metricCloudStatus
}

// WithMetricCloudTimestampQueryParameter adds the metricCloudTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricCloudTimestampQueryParameter(metricCloudTimestamp *string) *VolumeCollectionGetParams {
	o.SetMetricCloudTimestampQueryParameter(metricCloudTimestamp)
	return o
}

// SetMetricCloudTimestampQueryParameter adds the metricCloudTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricCloudTimestampQueryParameter(metricCloudTimestamp *string) {
	o.MetricCloudTimestampQueryParameter = metricCloudTimestamp
}

// WithMetricDurationQueryParameter adds the metricDuration to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricDurationQueryParameter(metricDuration *string) *VolumeCollectionGetParams {
	o.SetMetricDurationQueryParameter(metricDuration)
	return o
}

// SetMetricDurationQueryParameter adds the metricDuration to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricDurationQueryParameter(metricDuration *string) {
	o.MetricDurationQueryParameter = metricDuration
}

// WithMetricFlexcacheBandwidthSavingsQueryParameter adds the metricFlexcacheBandwidthSavings to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricFlexcacheBandwidthSavingsQueryParameter(metricFlexcacheBandwidthSavings *int64) *VolumeCollectionGetParams {
	o.SetMetricFlexcacheBandwidthSavingsQueryParameter(metricFlexcacheBandwidthSavings)
	return o
}

// SetMetricFlexcacheBandwidthSavingsQueryParameter adds the metricFlexcacheBandwidthSavings to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricFlexcacheBandwidthSavingsQueryParameter(metricFlexcacheBandwidthSavings *int64) {
	o.MetricFlexcacheBandwidthSavingsQueryParameter = metricFlexcacheBandwidthSavings
}

// WithMetricFlexcacheCacheMissPercentQueryParameter adds the metricFlexcacheCacheMissPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricFlexcacheCacheMissPercentQueryParameter(metricFlexcacheCacheMissPercent *int64) *VolumeCollectionGetParams {
	o.SetMetricFlexcacheCacheMissPercentQueryParameter(metricFlexcacheCacheMissPercent)
	return o
}

// SetMetricFlexcacheCacheMissPercentQueryParameter adds the metricFlexcacheCacheMissPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricFlexcacheCacheMissPercentQueryParameter(metricFlexcacheCacheMissPercent *int64) {
	o.MetricFlexcacheCacheMissPercentQueryParameter = metricFlexcacheCacheMissPercent
}

// WithMetricFlexcacheDurationQueryParameter adds the metricFlexcacheDuration to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricFlexcacheDurationQueryParameter(metricFlexcacheDuration *string) *VolumeCollectionGetParams {
	o.SetMetricFlexcacheDurationQueryParameter(metricFlexcacheDuration)
	return o
}

// SetMetricFlexcacheDurationQueryParameter adds the metricFlexcacheDuration to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricFlexcacheDurationQueryParameter(metricFlexcacheDuration *string) {
	o.MetricFlexcacheDurationQueryParameter = metricFlexcacheDuration
}

// WithMetricFlexcacheStatusQueryParameter adds the metricFlexcacheStatus to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricFlexcacheStatusQueryParameter(metricFlexcacheStatus *string) *VolumeCollectionGetParams {
	o.SetMetricFlexcacheStatusQueryParameter(metricFlexcacheStatus)
	return o
}

// SetMetricFlexcacheStatusQueryParameter adds the metricFlexcacheStatus to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricFlexcacheStatusQueryParameter(metricFlexcacheStatus *string) {
	o.MetricFlexcacheStatusQueryParameter = metricFlexcacheStatus
}

// WithMetricFlexcacheTimestampQueryParameter adds the metricFlexcacheTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricFlexcacheTimestampQueryParameter(metricFlexcacheTimestamp *string) *VolumeCollectionGetParams {
	o.SetMetricFlexcacheTimestampQueryParameter(metricFlexcacheTimestamp)
	return o
}

// SetMetricFlexcacheTimestampQueryParameter adds the metricFlexcacheTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricFlexcacheTimestampQueryParameter(metricFlexcacheTimestamp *string) {
	o.MetricFlexcacheTimestampQueryParameter = metricFlexcacheTimestamp
}

// WithMetricIopsOtherQueryParameter adds the metricIopsOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricIopsOtherQueryParameter(metricIopsOther *int64) *VolumeCollectionGetParams {
	o.SetMetricIopsOtherQueryParameter(metricIopsOther)
	return o
}

// SetMetricIopsOtherQueryParameter adds the metricIopsOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricIopsOtherQueryParameter(metricIopsOther *int64) {
	o.MetricIopsOtherQueryParameter = metricIopsOther
}

// WithMetricIopsReadQueryParameter adds the metricIopsRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricIopsReadQueryParameter(metricIopsRead *int64) *VolumeCollectionGetParams {
	o.SetMetricIopsReadQueryParameter(metricIopsRead)
	return o
}

// SetMetricIopsReadQueryParameter adds the metricIopsRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricIopsReadQueryParameter(metricIopsRead *int64) {
	o.MetricIopsReadQueryParameter = metricIopsRead
}

// WithMetricIopsTotalQueryParameter adds the metricIopsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricIopsTotalQueryParameter(metricIopsTotal *int64) *VolumeCollectionGetParams {
	o.SetMetricIopsTotalQueryParameter(metricIopsTotal)
	return o
}

// SetMetricIopsTotalQueryParameter adds the metricIopsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricIopsTotalQueryParameter(metricIopsTotal *int64) {
	o.MetricIopsTotalQueryParameter = metricIopsTotal
}

// WithMetricIopsWriteQueryParameter adds the metricIopsWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricIopsWriteQueryParameter(metricIopsWrite *int64) *VolumeCollectionGetParams {
	o.SetMetricIopsWriteQueryParameter(metricIopsWrite)
	return o
}

// SetMetricIopsWriteQueryParameter adds the metricIopsWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricIopsWriteQueryParameter(metricIopsWrite *int64) {
	o.MetricIopsWriteQueryParameter = metricIopsWrite
}

// WithMetricLatencyOtherQueryParameter adds the metricLatencyOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricLatencyOtherQueryParameter(metricLatencyOther *int64) *VolumeCollectionGetParams {
	o.SetMetricLatencyOtherQueryParameter(metricLatencyOther)
	return o
}

// SetMetricLatencyOtherQueryParameter adds the metricLatencyOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricLatencyOtherQueryParameter(metricLatencyOther *int64) {
	o.MetricLatencyOtherQueryParameter = metricLatencyOther
}

// WithMetricLatencyReadQueryParameter adds the metricLatencyRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricLatencyReadQueryParameter(metricLatencyRead *int64) *VolumeCollectionGetParams {
	o.SetMetricLatencyReadQueryParameter(metricLatencyRead)
	return o
}

// SetMetricLatencyReadQueryParameter adds the metricLatencyRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricLatencyReadQueryParameter(metricLatencyRead *int64) {
	o.MetricLatencyReadQueryParameter = metricLatencyRead
}

// WithMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) *VolumeCollectionGetParams {
	o.SetMetricLatencyTotalQueryParameter(metricLatencyTotal)
	return o
}

// SetMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) {
	o.MetricLatencyTotalQueryParameter = metricLatencyTotal
}

// WithMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) *VolumeCollectionGetParams {
	o.SetMetricLatencyWriteQueryParameter(metricLatencyWrite)
	return o
}

// SetMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) {
	o.MetricLatencyWriteQueryParameter = metricLatencyWrite
}

// WithMetricStatusQueryParameter adds the metricStatus to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricStatusQueryParameter(metricStatus *string) *VolumeCollectionGetParams {
	o.SetMetricStatusQueryParameter(metricStatus)
	return o
}

// SetMetricStatusQueryParameter adds the metricStatus to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricStatusQueryParameter(metricStatus *string) {
	o.MetricStatusQueryParameter = metricStatus
}

// WithMetricThroughputOtherQueryParameter adds the metricThroughputOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricThroughputOtherQueryParameter(metricThroughputOther *int64) *VolumeCollectionGetParams {
	o.SetMetricThroughputOtherQueryParameter(metricThroughputOther)
	return o
}

// SetMetricThroughputOtherQueryParameter adds the metricThroughputOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricThroughputOtherQueryParameter(metricThroughputOther *int64) {
	o.MetricThroughputOtherQueryParameter = metricThroughputOther
}

// WithMetricThroughputReadQueryParameter adds the metricThroughputRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricThroughputReadQueryParameter(metricThroughputRead *int64) *VolumeCollectionGetParams {
	o.SetMetricThroughputReadQueryParameter(metricThroughputRead)
	return o
}

// SetMetricThroughputReadQueryParameter adds the metricThroughputRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricThroughputReadQueryParameter(metricThroughputRead *int64) {
	o.MetricThroughputReadQueryParameter = metricThroughputRead
}

// WithMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) *VolumeCollectionGetParams {
	o.SetMetricThroughputTotalQueryParameter(metricThroughputTotal)
	return o
}

// SetMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) {
	o.MetricThroughputTotalQueryParameter = metricThroughputTotal
}

// WithMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) *VolumeCollectionGetParams {
	o.SetMetricThroughputWriteQueryParameter(metricThroughputWrite)
	return o
}

// SetMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) {
	o.MetricThroughputWriteQueryParameter = metricThroughputWrite
}

// WithMetricTimestampQueryParameter adds the metricTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) WithMetricTimestampQueryParameter(metricTimestamp *string) *VolumeCollectionGetParams {
	o.SetMetricTimestampQueryParameter(metricTimestamp)
	return o
}

// SetMetricTimestampQueryParameter adds the metricTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) SetMetricTimestampQueryParameter(metricTimestamp *string) {
	o.MetricTimestampQueryParameter = metricTimestamp
}

// WithMovementCutoverWindowQueryParameter adds the movementCutoverWindow to the volume collection get params
func (o *VolumeCollectionGetParams) WithMovementCutoverWindowQueryParameter(movementCutoverWindow *int64) *VolumeCollectionGetParams {
	o.SetMovementCutoverWindowQueryParameter(movementCutoverWindow)
	return o
}

// SetMovementCutoverWindowQueryParameter adds the movementCutoverWindow to the volume collection get params
func (o *VolumeCollectionGetParams) SetMovementCutoverWindowQueryParameter(movementCutoverWindow *int64) {
	o.MovementCutoverWindowQueryParameter = movementCutoverWindow
}

// WithMovementDestinationAggregateNameQueryParameter adds the movementDestinationAggregateName to the volume collection get params
func (o *VolumeCollectionGetParams) WithMovementDestinationAggregateNameQueryParameter(movementDestinationAggregateName *string) *VolumeCollectionGetParams {
	o.SetMovementDestinationAggregateNameQueryParameter(movementDestinationAggregateName)
	return o
}

// SetMovementDestinationAggregateNameQueryParameter adds the movementDestinationAggregateName to the volume collection get params
func (o *VolumeCollectionGetParams) SetMovementDestinationAggregateNameQueryParameter(movementDestinationAggregateName *string) {
	o.MovementDestinationAggregateNameQueryParameter = movementDestinationAggregateName
}

// WithMovementDestinationAggregateUUIDQueryParameter adds the movementDestinationAggregateUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithMovementDestinationAggregateUUIDQueryParameter(movementDestinationAggregateUUID *string) *VolumeCollectionGetParams {
	o.SetMovementDestinationAggregateUUIDQueryParameter(movementDestinationAggregateUUID)
	return o
}

// SetMovementDestinationAggregateUUIDQueryParameter adds the movementDestinationAggregateUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetMovementDestinationAggregateUUIDQueryParameter(movementDestinationAggregateUUID *string) {
	o.MovementDestinationAggregateUUIDQueryParameter = movementDestinationAggregateUUID
}

// WithMovementPercentCompleteQueryParameter adds the movementPercentComplete to the volume collection get params
func (o *VolumeCollectionGetParams) WithMovementPercentCompleteQueryParameter(movementPercentComplete *int64) *VolumeCollectionGetParams {
	o.SetMovementPercentCompleteQueryParameter(movementPercentComplete)
	return o
}

// SetMovementPercentCompleteQueryParameter adds the movementPercentComplete to the volume collection get params
func (o *VolumeCollectionGetParams) SetMovementPercentCompleteQueryParameter(movementPercentComplete *int64) {
	o.MovementPercentCompleteQueryParameter = movementPercentComplete
}

// WithMovementStartTimeQueryParameter adds the movementStartTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithMovementStartTimeQueryParameter(movementStartTime *string) *VolumeCollectionGetParams {
	o.SetMovementStartTimeQueryParameter(movementStartTime)
	return o
}

// SetMovementStartTimeQueryParameter adds the movementStartTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetMovementStartTimeQueryParameter(movementStartTime *string) {
	o.MovementStartTimeQueryParameter = movementStartTime
}

// WithMovementStateQueryParameter adds the movementState to the volume collection get params
func (o *VolumeCollectionGetParams) WithMovementStateQueryParameter(movementState *string) *VolumeCollectionGetParams {
	o.SetMovementStateQueryParameter(movementState)
	return o
}

// SetMovementStateQueryParameter adds the movementState to the volume collection get params
func (o *VolumeCollectionGetParams) SetMovementStateQueryParameter(movementState *string) {
	o.MovementStateQueryParameter = movementState
}

// WithMsIDQueryParameter adds the msid to the volume collection get params
func (o *VolumeCollectionGetParams) WithMsIDQueryParameter(msid *int64) *VolumeCollectionGetParams {
	o.SetMsIDQueryParameter(msid)
	return o
}

// SetMsIDQueryParameter adds the msid to the volume collection get params
func (o *VolumeCollectionGetParams) SetMsIDQueryParameter(msid *int64) {
	o.MsIDQueryParameter = msid
}

// WithNameQueryParameter adds the name to the volume collection get params
func (o *VolumeCollectionGetParams) WithNameQueryParameter(name *string) *VolumeCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the volume collection get params
func (o *VolumeCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithNasExportPolicyIDQueryParameter adds the nasExportPolicyID to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasExportPolicyIDQueryParameter(nasExportPolicyID *int64) *VolumeCollectionGetParams {
	o.SetNasExportPolicyIDQueryParameter(nasExportPolicyID)
	return o
}

// SetNasExportPolicyIDQueryParameter adds the nasExportPolicyId to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasExportPolicyIDQueryParameter(nasExportPolicyID *int64) {
	o.NasExportPolicyIDQueryParameter = nasExportPolicyID
}

// WithNasExportPolicyNameQueryParameter adds the nasExportPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasExportPolicyNameQueryParameter(nasExportPolicyName *string) *VolumeCollectionGetParams {
	o.SetNasExportPolicyNameQueryParameter(nasExportPolicyName)
	return o
}

// SetNasExportPolicyNameQueryParameter adds the nasExportPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasExportPolicyNameQueryParameter(nasExportPolicyName *string) {
	o.NasExportPolicyNameQueryParameter = nasExportPolicyName
}

// WithNasGIDQueryParameter adds the nasGid to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasGIDQueryParameter(nasGid *int64) *VolumeCollectionGetParams {
	o.SetNasGIDQueryParameter(nasGid)
	return o
}

// SetNasGIDQueryParameter adds the nasGid to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasGIDQueryParameter(nasGid *int64) {
	o.NasGIDQueryParameter = nasGid
}

// WithNasJunctionParentNameQueryParameter adds the nasJunctionParentName to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasJunctionParentNameQueryParameter(nasJunctionParentName *string) *VolumeCollectionGetParams {
	o.SetNasJunctionParentNameQueryParameter(nasJunctionParentName)
	return o
}

// SetNasJunctionParentNameQueryParameter adds the nasJunctionParentName to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasJunctionParentNameQueryParameter(nasJunctionParentName *string) {
	o.NasJunctionParentNameQueryParameter = nasJunctionParentName
}

// WithNasJunctionParentUUIDQueryParameter adds the nasJunctionParentUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasJunctionParentUUIDQueryParameter(nasJunctionParentUUID *string) *VolumeCollectionGetParams {
	o.SetNasJunctionParentUUIDQueryParameter(nasJunctionParentUUID)
	return o
}

// SetNasJunctionParentUUIDQueryParameter adds the nasJunctionParentUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasJunctionParentUUIDQueryParameter(nasJunctionParentUUID *string) {
	o.NasJunctionParentUUIDQueryParameter = nasJunctionParentUUID
}

// WithNasPathQueryParameter adds the nasPath to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasPathQueryParameter(nasPath *string) *VolumeCollectionGetParams {
	o.SetNasPathQueryParameter(nasPath)
	return o
}

// SetNasPathQueryParameter adds the nasPath to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasPathQueryParameter(nasPath *string) {
	o.NasPathQueryParameter = nasPath
}

// WithNasSecurityStyleQueryParameter adds the nasSecurityStyle to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasSecurityStyleQueryParameter(nasSecurityStyle *string) *VolumeCollectionGetParams {
	o.SetNasSecurityStyleQueryParameter(nasSecurityStyle)
	return o
}

// SetNasSecurityStyleQueryParameter adds the nasSecurityStyle to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasSecurityStyleQueryParameter(nasSecurityStyle *string) {
	o.NasSecurityStyleQueryParameter = nasSecurityStyle
}

// WithNasUIDQueryParameter adds the nasUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasUIDQueryParameter(nasUID *int64) *VolumeCollectionGetParams {
	o.SetNasUIDQueryParameter(nasUID)
	return o
}

// SetNasUIDQueryParameter adds the nasUid to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasUIDQueryParameter(nasUID *int64) {
	o.NasUIDQueryParameter = nasUID
}

// WithNasUnixPermissionsQueryParameter adds the nasUnixPermissions to the volume collection get params
func (o *VolumeCollectionGetParams) WithNasUnixPermissionsQueryParameter(nasUnixPermissions *int64) *VolumeCollectionGetParams {
	o.SetNasUnixPermissionsQueryParameter(nasUnixPermissions)
	return o
}

// SetNasUnixPermissionsQueryParameter adds the nasUnixPermissions to the volume collection get params
func (o *VolumeCollectionGetParams) SetNasUnixPermissionsQueryParameter(nasUnixPermissions *int64) {
	o.NasUnixPermissionsQueryParameter = nasUnixPermissions
}

// WithOrderByQueryParameter adds the orderBy to the volume collection get params
func (o *VolumeCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *VolumeCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the volume collection get params
func (o *VolumeCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithQosPolicyMaxThroughputIopsQueryParameter adds the qosPolicyMaxThroughputIops to the volume collection get params
func (o *VolumeCollectionGetParams) WithQosPolicyMaxThroughputIopsQueryParameter(qosPolicyMaxThroughputIops *int64) *VolumeCollectionGetParams {
	o.SetQosPolicyMaxThroughputIopsQueryParameter(qosPolicyMaxThroughputIops)
	return o
}

// SetQosPolicyMaxThroughputIopsQueryParameter adds the qosPolicyMaxThroughputIops to the volume collection get params
func (o *VolumeCollectionGetParams) SetQosPolicyMaxThroughputIopsQueryParameter(qosPolicyMaxThroughputIops *int64) {
	o.QosPolicyMaxThroughputIopsQueryParameter = qosPolicyMaxThroughputIops
}

// WithQosPolicyMaxThroughputMbpsQueryParameter adds the qosPolicyMaxThroughputMbps to the volume collection get params
func (o *VolumeCollectionGetParams) WithQosPolicyMaxThroughputMbpsQueryParameter(qosPolicyMaxThroughputMbps *int64) *VolumeCollectionGetParams {
	o.SetQosPolicyMaxThroughputMbpsQueryParameter(qosPolicyMaxThroughputMbps)
	return o
}

// SetQosPolicyMaxThroughputMbpsQueryParameter adds the qosPolicyMaxThroughputMbps to the volume collection get params
func (o *VolumeCollectionGetParams) SetQosPolicyMaxThroughputMbpsQueryParameter(qosPolicyMaxThroughputMbps *int64) {
	o.QosPolicyMaxThroughputMbpsQueryParameter = qosPolicyMaxThroughputMbps
}

// WithQosPolicyMinThroughputIopsQueryParameter adds the qosPolicyMinThroughputIops to the volume collection get params
func (o *VolumeCollectionGetParams) WithQosPolicyMinThroughputIopsQueryParameter(qosPolicyMinThroughputIops *int64) *VolumeCollectionGetParams {
	o.SetQosPolicyMinThroughputIopsQueryParameter(qosPolicyMinThroughputIops)
	return o
}

// SetQosPolicyMinThroughputIopsQueryParameter adds the qosPolicyMinThroughputIops to the volume collection get params
func (o *VolumeCollectionGetParams) SetQosPolicyMinThroughputIopsQueryParameter(qosPolicyMinThroughputIops *int64) {
	o.QosPolicyMinThroughputIopsQueryParameter = qosPolicyMinThroughputIops
}

// WithQosPolicyMinThroughputMbpsQueryParameter adds the qosPolicyMinThroughputMbps to the volume collection get params
func (o *VolumeCollectionGetParams) WithQosPolicyMinThroughputMbpsQueryParameter(qosPolicyMinThroughputMbps *int64) *VolumeCollectionGetParams {
	o.SetQosPolicyMinThroughputMbpsQueryParameter(qosPolicyMinThroughputMbps)
	return o
}

// SetQosPolicyMinThroughputMbpsQueryParameter adds the qosPolicyMinThroughputMbps to the volume collection get params
func (o *VolumeCollectionGetParams) SetQosPolicyMinThroughputMbpsQueryParameter(qosPolicyMinThroughputMbps *int64) {
	o.QosPolicyMinThroughputMbpsQueryParameter = qosPolicyMinThroughputMbps
}

// WithQosPolicyNameQueryParameter adds the qosPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) WithQosPolicyNameQueryParameter(qosPolicyName *string) *VolumeCollectionGetParams {
	o.SetQosPolicyNameQueryParameter(qosPolicyName)
	return o
}

// SetQosPolicyNameQueryParameter adds the qosPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) SetQosPolicyNameQueryParameter(qosPolicyName *string) {
	o.QosPolicyNameQueryParameter = qosPolicyName
}

// WithQosPolicyUUIDQueryParameter adds the qosPolicyUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithQosPolicyUUIDQueryParameter(qosPolicyUUID *string) *VolumeCollectionGetParams {
	o.SetQosPolicyUUIDQueryParameter(qosPolicyUUID)
	return o
}

// SetQosPolicyUUIDQueryParameter adds the qosPolicyUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetQosPolicyUUIDQueryParameter(qosPolicyUUID *string) {
	o.QosPolicyUUIDQueryParameter = qosPolicyUUID
}

// WithQueueForEncryptionQueryParameter adds the queueForEncryption to the volume collection get params
func (o *VolumeCollectionGetParams) WithQueueForEncryptionQueryParameter(queueForEncryption *bool) *VolumeCollectionGetParams {
	o.SetQueueForEncryptionQueryParameter(queueForEncryption)
	return o
}

// SetQueueForEncryptionQueryParameter adds the queueForEncryption to the volume collection get params
func (o *VolumeCollectionGetParams) SetQueueForEncryptionQueryParameter(queueForEncryption *bool) {
	o.QueueForEncryptionQueryParameter = queueForEncryption
}

// WithQuotaStateQueryParameter adds the quotaState to the volume collection get params
func (o *VolumeCollectionGetParams) WithQuotaStateQueryParameter(quotaState *string) *VolumeCollectionGetParams {
	o.SetQuotaStateQueryParameter(quotaState)
	return o
}

// SetQuotaStateQueryParameter adds the quotaState to the volume collection get params
func (o *VolumeCollectionGetParams) SetQuotaStateQueryParameter(quotaState *string) {
	o.QuotaStateQueryParameter = quotaState
}

// WithRebalancingDataMovedQueryParameter adds the rebalancingDataMoved to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingDataMovedQueryParameter(rebalancingDataMoved *int64) *VolumeCollectionGetParams {
	o.SetRebalancingDataMovedQueryParameter(rebalancingDataMoved)
	return o
}

// SetRebalancingDataMovedQueryParameter adds the rebalancingDataMoved to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingDataMovedQueryParameter(rebalancingDataMoved *int64) {
	o.RebalancingDataMovedQueryParameter = rebalancingDataMoved
}

// WithRebalancingExcludeSnapshotsQueryParameter adds the rebalancingExcludeSnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingExcludeSnapshotsQueryParameter(rebalancingExcludeSnapshots *bool) *VolumeCollectionGetParams {
	o.SetRebalancingExcludeSnapshotsQueryParameter(rebalancingExcludeSnapshots)
	return o
}

// SetRebalancingExcludeSnapshotsQueryParameter adds the rebalancingExcludeSnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingExcludeSnapshotsQueryParameter(rebalancingExcludeSnapshots *bool) {
	o.RebalancingExcludeSnapshotsQueryParameter = rebalancingExcludeSnapshots
}

// WithRebalancingFailureReasonCodeQueryParameter adds the rebalancingFailureReasonCode to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingFailureReasonCodeQueryParameter(rebalancingFailureReasonCode *string) *VolumeCollectionGetParams {
	o.SetRebalancingFailureReasonCodeQueryParameter(rebalancingFailureReasonCode)
	return o
}

// SetRebalancingFailureReasonCodeQueryParameter adds the rebalancingFailureReasonCode to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingFailureReasonCodeQueryParameter(rebalancingFailureReasonCode *string) {
	o.RebalancingFailureReasonCodeQueryParameter = rebalancingFailureReasonCode
}

// WithRebalancingFailureReasonMessageQueryParameter adds the rebalancingFailureReasonMessage to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingFailureReasonMessageQueryParameter(rebalancingFailureReasonMessage *string) *VolumeCollectionGetParams {
	o.SetRebalancingFailureReasonMessageQueryParameter(rebalancingFailureReasonMessage)
	return o
}

// SetRebalancingFailureReasonMessageQueryParameter adds the rebalancingFailureReasonMessage to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingFailureReasonMessageQueryParameter(rebalancingFailureReasonMessage *string) {
	o.RebalancingFailureReasonMessageQueryParameter = rebalancingFailureReasonMessage
}

// WithRebalancingImbalancePercentQueryParameter adds the rebalancingImbalancePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingImbalancePercentQueryParameter(rebalancingImbalancePercent *int64) *VolumeCollectionGetParams {
	o.SetRebalancingImbalancePercentQueryParameter(rebalancingImbalancePercent)
	return o
}

// SetRebalancingImbalancePercentQueryParameter adds the rebalancingImbalancePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingImbalancePercentQueryParameter(rebalancingImbalancePercent *int64) {
	o.RebalancingImbalancePercentQueryParameter = rebalancingImbalancePercent
}

// WithRebalancingImbalanceSizeQueryParameter adds the rebalancingImbalanceSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingImbalanceSizeQueryParameter(rebalancingImbalanceSize *int64) *VolumeCollectionGetParams {
	o.SetRebalancingImbalanceSizeQueryParameter(rebalancingImbalanceSize)
	return o
}

// SetRebalancingImbalanceSizeQueryParameter adds the rebalancingImbalanceSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingImbalanceSizeQueryParameter(rebalancingImbalanceSize *int64) {
	o.RebalancingImbalanceSizeQueryParameter = rebalancingImbalanceSize
}

// WithRebalancingMaxConstituentImbalancePercentQueryParameter adds the rebalancingMaxConstituentImbalancePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingMaxConstituentImbalancePercentQueryParameter(rebalancingMaxConstituentImbalancePercent *int64) *VolumeCollectionGetParams {
	o.SetRebalancingMaxConstituentImbalancePercentQueryParameter(rebalancingMaxConstituentImbalancePercent)
	return o
}

// SetRebalancingMaxConstituentImbalancePercentQueryParameter adds the rebalancingMaxConstituentImbalancePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingMaxConstituentImbalancePercentQueryParameter(rebalancingMaxConstituentImbalancePercent *int64) {
	o.RebalancingMaxConstituentImbalancePercentQueryParameter = rebalancingMaxConstituentImbalancePercent
}

// WithRebalancingMaxFileMovesQueryParameter adds the rebalancingMaxFileMoves to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingMaxFileMovesQueryParameter(rebalancingMaxFileMoves *int64) *VolumeCollectionGetParams {
	o.SetRebalancingMaxFileMovesQueryParameter(rebalancingMaxFileMoves)
	return o
}

// SetRebalancingMaxFileMovesQueryParameter adds the rebalancingMaxFileMoves to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingMaxFileMovesQueryParameter(rebalancingMaxFileMoves *int64) {
	o.RebalancingMaxFileMovesQueryParameter = rebalancingMaxFileMoves
}

// WithRebalancingMaxRuntimeQueryParameter adds the rebalancingMaxRuntime to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingMaxRuntimeQueryParameter(rebalancingMaxRuntime *string) *VolumeCollectionGetParams {
	o.SetRebalancingMaxRuntimeQueryParameter(rebalancingMaxRuntime)
	return o
}

// SetRebalancingMaxRuntimeQueryParameter adds the rebalancingMaxRuntime to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingMaxRuntimeQueryParameter(rebalancingMaxRuntime *string) {
	o.RebalancingMaxRuntimeQueryParameter = rebalancingMaxRuntime
}

// WithRebalancingMaxThresholdQueryParameter adds the rebalancingMaxThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingMaxThresholdQueryParameter(rebalancingMaxThreshold *int64) *VolumeCollectionGetParams {
	o.SetRebalancingMaxThresholdQueryParameter(rebalancingMaxThreshold)
	return o
}

// SetRebalancingMaxThresholdQueryParameter adds the rebalancingMaxThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingMaxThresholdQueryParameter(rebalancingMaxThreshold *int64) {
	o.RebalancingMaxThresholdQueryParameter = rebalancingMaxThreshold
}

// WithRebalancingMinFileSizeQueryParameter adds the rebalancingMinFileSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingMinFileSizeQueryParameter(rebalancingMinFileSize *int64) *VolumeCollectionGetParams {
	o.SetRebalancingMinFileSizeQueryParameter(rebalancingMinFileSize)
	return o
}

// SetRebalancingMinFileSizeQueryParameter adds the rebalancingMinFileSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingMinFileSizeQueryParameter(rebalancingMinFileSize *int64) {
	o.RebalancingMinFileSizeQueryParameter = rebalancingMinFileSize
}

// WithRebalancingMinThresholdQueryParameter adds the rebalancingMinThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingMinThresholdQueryParameter(rebalancingMinThreshold *int64) *VolumeCollectionGetParams {
	o.SetRebalancingMinThresholdQueryParameter(rebalancingMinThreshold)
	return o
}

// SetRebalancingMinThresholdQueryParameter adds the rebalancingMinThreshold to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingMinThresholdQueryParameter(rebalancingMinThreshold *int64) {
	o.RebalancingMinThresholdQueryParameter = rebalancingMinThreshold
}

// WithRebalancingRuntimeQueryParameter adds the rebalancingRuntime to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingRuntimeQueryParameter(rebalancingRuntime *string) *VolumeCollectionGetParams {
	o.SetRebalancingRuntimeQueryParameter(rebalancingRuntime)
	return o
}

// SetRebalancingRuntimeQueryParameter adds the rebalancingRuntime to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingRuntimeQueryParameter(rebalancingRuntime *string) {
	o.RebalancingRuntimeQueryParameter = rebalancingRuntime
}

// WithRebalancingStartTimeQueryParameter adds the rebalancingStartTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingStartTimeQueryParameter(rebalancingStartTime *string) *VolumeCollectionGetParams {
	o.SetRebalancingStartTimeQueryParameter(rebalancingStartTime)
	return o
}

// SetRebalancingStartTimeQueryParameter adds the rebalancingStartTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingStartTimeQueryParameter(rebalancingStartTime *string) {
	o.RebalancingStartTimeQueryParameter = rebalancingStartTime
}

// WithRebalancingStateQueryParameter adds the rebalancingState to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingStateQueryParameter(rebalancingState *string) *VolumeCollectionGetParams {
	o.SetRebalancingStateQueryParameter(rebalancingState)
	return o
}

// SetRebalancingStateQueryParameter adds the rebalancingState to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingStateQueryParameter(rebalancingState *string) {
	o.RebalancingStateQueryParameter = rebalancingState
}

// WithRebalancingStopTimeQueryParameter adds the rebalancingStopTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingStopTimeQueryParameter(rebalancingStopTime *string) *VolumeCollectionGetParams {
	o.SetRebalancingStopTimeQueryParameter(rebalancingStopTime)
	return o
}

// SetRebalancingStopTimeQueryParameter adds the rebalancingStopTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingStopTimeQueryParameter(rebalancingStopTime *string) {
	o.RebalancingStopTimeQueryParameter = rebalancingStopTime
}

// WithRebalancingTargetUsedQueryParameter adds the rebalancingTargetUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithRebalancingTargetUsedQueryParameter(rebalancingTargetUsed *int64) *VolumeCollectionGetParams {
	o.SetRebalancingTargetUsedQueryParameter(rebalancingTargetUsed)
	return o
}

// SetRebalancingTargetUsedQueryParameter adds the rebalancingTargetUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetRebalancingTargetUsedQueryParameter(rebalancingTargetUsed *int64) {
	o.RebalancingTargetUsedQueryParameter = rebalancingTargetUsed
}

// WithReturnRecordsQueryParameter adds the returnRecords to the volume collection get params
func (o *VolumeCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *VolumeCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the volume collection get params
func (o *VolumeCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the volume collection get params
func (o *VolumeCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *VolumeCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the volume collection get params
func (o *VolumeCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithScheduledSnapshotNamingSchemeQueryParameter adds the scheduledSnapshotNamingScheme to the volume collection get params
func (o *VolumeCollectionGetParams) WithScheduledSnapshotNamingSchemeQueryParameter(scheduledSnapshotNamingScheme *string) *VolumeCollectionGetParams {
	o.SetScheduledSnapshotNamingSchemeQueryParameter(scheduledSnapshotNamingScheme)
	return o
}

// SetScheduledSnapshotNamingSchemeQueryParameter adds the scheduledSnapshotNamingScheme to the volume collection get params
func (o *VolumeCollectionGetParams) SetScheduledSnapshotNamingSchemeQueryParameter(scheduledSnapshotNamingScheme *string) {
	o.ScheduledSnapshotNamingSchemeQueryParameter = scheduledSnapshotNamingScheme
}

// WithSizeQueryParameter adds the size to the volume collection get params
func (o *VolumeCollectionGetParams) WithSizeQueryParameter(size *int64) *VolumeCollectionGetParams {
	o.SetSizeQueryParameter(size)
	return o
}

// SetSizeQueryParameter adds the size to the volume collection get params
func (o *VolumeCollectionGetParams) SetSizeQueryParameter(size *int64) {
	o.SizeQueryParameter = size
}

// WithSnaplockAppendModeEnabledQueryParameter adds the snaplockAppendModeEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockAppendModeEnabledQueryParameter(snaplockAppendModeEnabled *bool) *VolumeCollectionGetParams {
	o.SetSnaplockAppendModeEnabledQueryParameter(snaplockAppendModeEnabled)
	return o
}

// SetSnaplockAppendModeEnabledQueryParameter adds the snaplockAppendModeEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockAppendModeEnabledQueryParameter(snaplockAppendModeEnabled *bool) {
	o.SnaplockAppendModeEnabledQueryParameter = snaplockAppendModeEnabled
}

// WithSnaplockAutocommitPeriodQueryParameter adds the snaplockAutocommitPeriod to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockAutocommitPeriodQueryParameter(snaplockAutocommitPeriod *string) *VolumeCollectionGetParams {
	o.SetSnaplockAutocommitPeriodQueryParameter(snaplockAutocommitPeriod)
	return o
}

// SetSnaplockAutocommitPeriodQueryParameter adds the snaplockAutocommitPeriod to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockAutocommitPeriodQueryParameter(snaplockAutocommitPeriod *string) {
	o.SnaplockAutocommitPeriodQueryParameter = snaplockAutocommitPeriod
}

// WithSnaplockComplianceClockTimeQueryParameter adds the snaplockComplianceClockTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockComplianceClockTimeQueryParameter(snaplockComplianceClockTime *string) *VolumeCollectionGetParams {
	o.SetSnaplockComplianceClockTimeQueryParameter(snaplockComplianceClockTime)
	return o
}

// SetSnaplockComplianceClockTimeQueryParameter adds the snaplockComplianceClockTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockComplianceClockTimeQueryParameter(snaplockComplianceClockTime *string) {
	o.SnaplockComplianceClockTimeQueryParameter = snaplockComplianceClockTime
}

// WithSnaplockExpiryTimeQueryParameter adds the snaplockExpiryTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockExpiryTimeQueryParameter(snaplockExpiryTime *string) *VolumeCollectionGetParams {
	o.SetSnaplockExpiryTimeQueryParameter(snaplockExpiryTime)
	return o
}

// SetSnaplockExpiryTimeQueryParameter adds the snaplockExpiryTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockExpiryTimeQueryParameter(snaplockExpiryTime *string) {
	o.SnaplockExpiryTimeQueryParameter = snaplockExpiryTime
}

// WithSnaplockIsAuditLogQueryParameter adds the snaplockIsAuditLog to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockIsAuditLogQueryParameter(snaplockIsAuditLog *bool) *VolumeCollectionGetParams {
	o.SetSnaplockIsAuditLogQueryParameter(snaplockIsAuditLog)
	return o
}

// SetSnaplockIsAuditLogQueryParameter adds the snaplockIsAuditLog to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockIsAuditLogQueryParameter(snaplockIsAuditLog *bool) {
	o.SnaplockIsAuditLogQueryParameter = snaplockIsAuditLog
}

// WithSnaplockLitigationCountQueryParameter adds the snaplockLitigationCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockLitigationCountQueryParameter(snaplockLitigationCount *int64) *VolumeCollectionGetParams {
	o.SetSnaplockLitigationCountQueryParameter(snaplockLitigationCount)
	return o
}

// SetSnaplockLitigationCountQueryParameter adds the snaplockLitigationCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockLitigationCountQueryParameter(snaplockLitigationCount *int64) {
	o.SnaplockLitigationCountQueryParameter = snaplockLitigationCount
}

// WithSnaplockPrivilegedDeleteQueryParameter adds the snaplockPrivilegedDelete to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockPrivilegedDeleteQueryParameter(snaplockPrivilegedDelete *string) *VolumeCollectionGetParams {
	o.SetSnaplockPrivilegedDeleteQueryParameter(snaplockPrivilegedDelete)
	return o
}

// SetSnaplockPrivilegedDeleteQueryParameter adds the snaplockPrivilegedDelete to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockPrivilegedDeleteQueryParameter(snaplockPrivilegedDelete *string) {
	o.SnaplockPrivilegedDeleteQueryParameter = snaplockPrivilegedDelete
}

// WithSnaplockRetentionDefaultQueryParameter adds the snaplockRetentionDefault to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockRetentionDefaultQueryParameter(snaplockRetentionDefault *string) *VolumeCollectionGetParams {
	o.SetSnaplockRetentionDefaultQueryParameter(snaplockRetentionDefault)
	return o
}

// SetSnaplockRetentionDefaultQueryParameter adds the snaplockRetentionDefault to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockRetentionDefaultQueryParameter(snaplockRetentionDefault *string) {
	o.SnaplockRetentionDefaultQueryParameter = snaplockRetentionDefault
}

// WithSnaplockRetentionMaximumQueryParameter adds the snaplockRetentionMaximum to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockRetentionMaximumQueryParameter(snaplockRetentionMaximum *string) *VolumeCollectionGetParams {
	o.SetSnaplockRetentionMaximumQueryParameter(snaplockRetentionMaximum)
	return o
}

// SetSnaplockRetentionMaximumQueryParameter adds the snaplockRetentionMaximum to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockRetentionMaximumQueryParameter(snaplockRetentionMaximum *string) {
	o.SnaplockRetentionMaximumQueryParameter = snaplockRetentionMaximum
}

// WithSnaplockRetentionMinimumQueryParameter adds the snaplockRetentionMinimum to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockRetentionMinimumQueryParameter(snaplockRetentionMinimum *string) *VolumeCollectionGetParams {
	o.SetSnaplockRetentionMinimumQueryParameter(snaplockRetentionMinimum)
	return o
}

// SetSnaplockRetentionMinimumQueryParameter adds the snaplockRetentionMinimum to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockRetentionMinimumQueryParameter(snaplockRetentionMinimum *string) {
	o.SnaplockRetentionMinimumQueryParameter = snaplockRetentionMinimum
}

// WithSnaplockTypeQueryParameter adds the snaplockType to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockTypeQueryParameter(snaplockType *string) *VolumeCollectionGetParams {
	o.SetSnaplockTypeQueryParameter(snaplockType)
	return o
}

// SetSnaplockTypeQueryParameter adds the snaplockType to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockTypeQueryParameter(snaplockType *string) {
	o.SnaplockTypeQueryParameter = snaplockType
}

// WithSnaplockUnspecifiedRetentionFileCountQueryParameter adds the snaplockUnspecifiedRetentionFileCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnaplockUnspecifiedRetentionFileCountQueryParameter(snaplockUnspecifiedRetentionFileCount *int64) *VolumeCollectionGetParams {
	o.SetSnaplockUnspecifiedRetentionFileCountQueryParameter(snaplockUnspecifiedRetentionFileCount)
	return o
}

// SetSnaplockUnspecifiedRetentionFileCountQueryParameter adds the snaplockUnspecifiedRetentionFileCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnaplockUnspecifiedRetentionFileCountQueryParameter(snaplockUnspecifiedRetentionFileCount *int64) {
	o.SnaplockUnspecifiedRetentionFileCountQueryParameter = snaplockUnspecifiedRetentionFileCount
}

// WithSnapmirrorDestinationsIsCloudQueryParameter adds the snapmirrorDestinationsIsCloud to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnapmirrorDestinationsIsCloudQueryParameter(snapmirrorDestinationsIsCloud *bool) *VolumeCollectionGetParams {
	o.SetSnapmirrorDestinationsIsCloudQueryParameter(snapmirrorDestinationsIsCloud)
	return o
}

// SetSnapmirrorDestinationsIsCloudQueryParameter adds the snapmirrorDestinationsIsCloud to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnapmirrorDestinationsIsCloudQueryParameter(snapmirrorDestinationsIsCloud *bool) {
	o.SnapmirrorDestinationsIsCloudQueryParameter = snapmirrorDestinationsIsCloud
}

// WithSnapmirrorDestinationsIsOntapQueryParameter adds the snapmirrorDestinationsIsOntap to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnapmirrorDestinationsIsOntapQueryParameter(snapmirrorDestinationsIsOntap *bool) *VolumeCollectionGetParams {
	o.SetSnapmirrorDestinationsIsOntapQueryParameter(snapmirrorDestinationsIsOntap)
	return o
}

// SetSnapmirrorDestinationsIsOntapQueryParameter adds the snapmirrorDestinationsIsOntap to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnapmirrorDestinationsIsOntapQueryParameter(snapmirrorDestinationsIsOntap *bool) {
	o.SnapmirrorDestinationsIsOntapQueryParameter = snapmirrorDestinationsIsOntap
}

// WithSnapmirrorIsProtectedQueryParameter adds the snapmirrorIsProtected to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnapmirrorIsProtectedQueryParameter(snapmirrorIsProtected *bool) *VolumeCollectionGetParams {
	o.SetSnapmirrorIsProtectedQueryParameter(snapmirrorIsProtected)
	return o
}

// SetSnapmirrorIsProtectedQueryParameter adds the snapmirrorIsProtected to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnapmirrorIsProtectedQueryParameter(snapmirrorIsProtected *bool) {
	o.SnapmirrorIsProtectedQueryParameter = snapmirrorIsProtected
}

// WithSnapshotCountQueryParameter adds the snapshotCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnapshotCountQueryParameter(snapshotCount *int64) *VolumeCollectionGetParams {
	o.SetSnapshotCountQueryParameter(snapshotCount)
	return o
}

// SetSnapshotCountQueryParameter adds the snapshotCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnapshotCountQueryParameter(snapshotCount *int64) {
	o.SnapshotCountQueryParameter = snapshotCount
}

// WithSnapshotDirectoryAccessEnabledQueryParameter adds the snapshotDirectoryAccessEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnapshotDirectoryAccessEnabledQueryParameter(snapshotDirectoryAccessEnabled *bool) *VolumeCollectionGetParams {
	o.SetSnapshotDirectoryAccessEnabledQueryParameter(snapshotDirectoryAccessEnabled)
	return o
}

// SetSnapshotDirectoryAccessEnabledQueryParameter adds the snapshotDirectoryAccessEnabled to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnapshotDirectoryAccessEnabledQueryParameter(snapshotDirectoryAccessEnabled *bool) {
	o.SnapshotDirectoryAccessEnabledQueryParameter = snapshotDirectoryAccessEnabled
}

// WithSnapshotPolicyNameQueryParameter adds the snapshotPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnapshotPolicyNameQueryParameter(snapshotPolicyName *string) *VolumeCollectionGetParams {
	o.SetSnapshotPolicyNameQueryParameter(snapshotPolicyName)
	return o
}

// SetSnapshotPolicyNameQueryParameter adds the snapshotPolicyName to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnapshotPolicyNameQueryParameter(snapshotPolicyName *string) {
	o.SnapshotPolicyNameQueryParameter = snapshotPolicyName
}

// WithSnapshotPolicyUUIDQueryParameter adds the snapshotPolicyUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithSnapshotPolicyUUIDQueryParameter(snapshotPolicyUUID *string) *VolumeCollectionGetParams {
	o.SetSnapshotPolicyUUIDQueryParameter(snapshotPolicyUUID)
	return o
}

// SetSnapshotPolicyUUIDQueryParameter adds the snapshotPolicyUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetSnapshotPolicyUUIDQueryParameter(snapshotPolicyUUID *string) {
	o.SnapshotPolicyUUIDQueryParameter = snapshotPolicyUUID
}

// WithSpaceAfsTotalQueryParameter adds the spaceAfsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceAfsTotalQueryParameter(spaceAfsTotal *int64) *VolumeCollectionGetParams {
	o.SetSpaceAfsTotalQueryParameter(spaceAfsTotal)
	return o
}

// SetSpaceAfsTotalQueryParameter adds the spaceAfsTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceAfsTotalQueryParameter(spaceAfsTotal *int64) {
	o.SpaceAfsTotalQueryParameter = spaceAfsTotal
}

// WithSpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter adds the spaceAutoAdaptiveCompressionFootprintDataReduction to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter(spaceAutoAdaptiveCompressionFootprintDataReduction *int64) *VolumeCollectionGetParams {
	o.SetSpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter(spaceAutoAdaptiveCompressionFootprintDataReduction)
	return o
}

// SetSpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter adds the spaceAutoAdaptiveCompressionFootprintDataReduction to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter(spaceAutoAdaptiveCompressionFootprintDataReduction *int64) {
	o.SpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter = spaceAutoAdaptiveCompressionFootprintDataReduction
}

// WithSpaceAvailableQueryParameter adds the spaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceAvailableQueryParameter(spaceAvailable *int64) *VolumeCollectionGetParams {
	o.SetSpaceAvailableQueryParameter(spaceAvailable)
	return o
}

// SetSpaceAvailableQueryParameter adds the spaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceAvailableQueryParameter(spaceAvailable *int64) {
	o.SpaceAvailableQueryParameter = spaceAvailable
}

// WithSpaceAvailablePercentQueryParameter adds the spaceAvailablePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceAvailablePercentQueryParameter(spaceAvailablePercent *int64) *VolumeCollectionGetParams {
	o.SetSpaceAvailablePercentQueryParameter(spaceAvailablePercent)
	return o
}

// SetSpaceAvailablePercentQueryParameter adds the spaceAvailablePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceAvailablePercentQueryParameter(spaceAvailablePercent *int64) {
	o.SpaceAvailablePercentQueryParameter = spaceAvailablePercent
}

// WithSpaceBlockStorageInactiveUserDataQueryParameter adds the spaceBlockStorageInactiveUserData to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceBlockStorageInactiveUserDataQueryParameter(spaceBlockStorageInactiveUserData *int64) *VolumeCollectionGetParams {
	o.SetSpaceBlockStorageInactiveUserDataQueryParameter(spaceBlockStorageInactiveUserData)
	return o
}

// SetSpaceBlockStorageInactiveUserDataQueryParameter adds the spaceBlockStorageInactiveUserData to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceBlockStorageInactiveUserDataQueryParameter(spaceBlockStorageInactiveUserData *int64) {
	o.SpaceBlockStorageInactiveUserDataQueryParameter = spaceBlockStorageInactiveUserData
}

// WithSpaceBlockStorageInactiveUserDataPercentQueryParameter adds the spaceBlockStorageInactiveUserDataPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceBlockStorageInactiveUserDataPercentQueryParameter(spaceBlockStorageInactiveUserDataPercent *int64) *VolumeCollectionGetParams {
	o.SetSpaceBlockStorageInactiveUserDataPercentQueryParameter(spaceBlockStorageInactiveUserDataPercent)
	return o
}

// SetSpaceBlockStorageInactiveUserDataPercentQueryParameter adds the spaceBlockStorageInactiveUserDataPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceBlockStorageInactiveUserDataPercentQueryParameter(spaceBlockStorageInactiveUserDataPercent *int64) {
	o.SpaceBlockStorageInactiveUserDataPercentQueryParameter = spaceBlockStorageInactiveUserDataPercent
}

// WithSpaceCapacityTierFootprintQueryParameter adds the spaceCapacityTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceCapacityTierFootprintQueryParameter(spaceCapacityTierFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceCapacityTierFootprintQueryParameter(spaceCapacityTierFootprint)
	return o
}

// SetSpaceCapacityTierFootprintQueryParameter adds the spaceCapacityTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceCapacityTierFootprintQueryParameter(spaceCapacityTierFootprint *int64) {
	o.SpaceCapacityTierFootprintQueryParameter = spaceCapacityTierFootprint
}

// WithSpaceCrossVolumeDedupeMetafilesFootprintQueryParameter adds the spaceCrossVolumeDedupeMetafilesFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceCrossVolumeDedupeMetafilesFootprintQueryParameter(spaceCrossVolumeDedupeMetafilesFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceCrossVolumeDedupeMetafilesFootprintQueryParameter(spaceCrossVolumeDedupeMetafilesFootprint)
	return o
}

// SetSpaceCrossVolumeDedupeMetafilesFootprintQueryParameter adds the spaceCrossVolumeDedupeMetafilesFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceCrossVolumeDedupeMetafilesFootprintQueryParameter(spaceCrossVolumeDedupeMetafilesFootprint *int64) {
	o.SpaceCrossVolumeDedupeMetafilesFootprintQueryParameter = spaceCrossVolumeDedupeMetafilesFootprint
}

// WithSpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter adds the spaceCrossVolumeDedupeMetafilesTemporaryFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter(spaceCrossVolumeDedupeMetafilesTemporaryFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter(spaceCrossVolumeDedupeMetafilesTemporaryFootprint)
	return o
}

// SetSpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter adds the spaceCrossVolumeDedupeMetafilesTemporaryFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter(spaceCrossVolumeDedupeMetafilesTemporaryFootprint *int64) {
	o.SpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter = spaceCrossVolumeDedupeMetafilesTemporaryFootprint
}

// WithSpaceDedupeMetafilesFootprintQueryParameter adds the spaceDedupeMetafilesFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceDedupeMetafilesFootprintQueryParameter(spaceDedupeMetafilesFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceDedupeMetafilesFootprintQueryParameter(spaceDedupeMetafilesFootprint)
	return o
}

// SetSpaceDedupeMetafilesFootprintQueryParameter adds the spaceDedupeMetafilesFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceDedupeMetafilesFootprintQueryParameter(spaceDedupeMetafilesFootprint *int64) {
	o.SpaceDedupeMetafilesFootprintQueryParameter = spaceDedupeMetafilesFootprint
}

// WithSpaceDedupeMetafilesTemporaryFootprintQueryParameter adds the spaceDedupeMetafilesTemporaryFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceDedupeMetafilesTemporaryFootprintQueryParameter(spaceDedupeMetafilesTemporaryFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceDedupeMetafilesTemporaryFootprintQueryParameter(spaceDedupeMetafilesTemporaryFootprint)
	return o
}

// SetSpaceDedupeMetafilesTemporaryFootprintQueryParameter adds the spaceDedupeMetafilesTemporaryFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceDedupeMetafilesTemporaryFootprintQueryParameter(spaceDedupeMetafilesTemporaryFootprint *int64) {
	o.SpaceDedupeMetafilesTemporaryFootprintQueryParameter = spaceDedupeMetafilesTemporaryFootprint
}

// WithSpaceDelayedFreeFootprintQueryParameter adds the spaceDelayedFreeFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceDelayedFreeFootprintQueryParameter(spaceDelayedFreeFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceDelayedFreeFootprintQueryParameter(spaceDelayedFreeFootprint)
	return o
}

// SetSpaceDelayedFreeFootprintQueryParameter adds the spaceDelayedFreeFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceDelayedFreeFootprintQueryParameter(spaceDelayedFreeFootprint *int64) {
	o.SpaceDelayedFreeFootprintQueryParameter = spaceDelayedFreeFootprint
}

// WithSpaceEffectiveTotalFootprintQueryParameter adds the spaceEffectiveTotalFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceEffectiveTotalFootprintQueryParameter(spaceEffectiveTotalFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceEffectiveTotalFootprintQueryParameter(spaceEffectiveTotalFootprint)
	return o
}

// SetSpaceEffectiveTotalFootprintQueryParameter adds the spaceEffectiveTotalFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceEffectiveTotalFootprintQueryParameter(spaceEffectiveTotalFootprint *int64) {
	o.SpaceEffectiveTotalFootprintQueryParameter = spaceEffectiveTotalFootprint
}

// WithSpaceExpectedAvailableQueryParameter adds the spaceExpectedAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceExpectedAvailableQueryParameter(spaceExpectedAvailable *int64) *VolumeCollectionGetParams {
	o.SetSpaceExpectedAvailableQueryParameter(spaceExpectedAvailable)
	return o
}

// SetSpaceExpectedAvailableQueryParameter adds the spaceExpectedAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceExpectedAvailableQueryParameter(spaceExpectedAvailable *int64) {
	o.SpaceExpectedAvailableQueryParameter = spaceExpectedAvailable
}

// WithSpaceFileOperationMetadataQueryParameter adds the spaceFileOperationMetadata to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceFileOperationMetadataQueryParameter(spaceFileOperationMetadata *int64) *VolumeCollectionGetParams {
	o.SetSpaceFileOperationMetadataQueryParameter(spaceFileOperationMetadata)
	return o
}

// SetSpaceFileOperationMetadataQueryParameter adds the spaceFileOperationMetadata to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceFileOperationMetadataQueryParameter(spaceFileOperationMetadata *int64) {
	o.SpaceFileOperationMetadataQueryParameter = spaceFileOperationMetadata
}

// WithSpaceFilesystemSizeQueryParameter adds the spaceFilesystemSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceFilesystemSizeQueryParameter(spaceFilesystemSize *int64) *VolumeCollectionGetParams {
	o.SetSpaceFilesystemSizeQueryParameter(spaceFilesystemSize)
	return o
}

// SetSpaceFilesystemSizeQueryParameter adds the spaceFilesystemSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceFilesystemSizeQueryParameter(spaceFilesystemSize *int64) {
	o.SpaceFilesystemSizeQueryParameter = spaceFilesystemSize
}

// WithSpaceFilesystemSizeFixedQueryParameter adds the spaceFilesystemSizeFixed to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceFilesystemSizeFixedQueryParameter(spaceFilesystemSizeFixed *bool) *VolumeCollectionGetParams {
	o.SetSpaceFilesystemSizeFixedQueryParameter(spaceFilesystemSizeFixed)
	return o
}

// SetSpaceFilesystemSizeFixedQueryParameter adds the spaceFilesystemSizeFixed to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceFilesystemSizeFixedQueryParameter(spaceFilesystemSizeFixed *bool) {
	o.SpaceFilesystemSizeFixedQueryParameter = spaceFilesystemSizeFixed
}

// WithSpaceFootprintQueryParameter adds the spaceFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceFootprintQueryParameter(spaceFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceFootprintQueryParameter(spaceFootprint)
	return o
}

// SetSpaceFootprintQueryParameter adds the spaceFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceFootprintQueryParameter(spaceFootprint *int64) {
	o.SpaceFootprintQueryParameter = spaceFootprint
}

// WithSpaceFractionalReserveQueryParameter adds the spaceFractionalReserve to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceFractionalReserveQueryParameter(spaceFractionalReserve *int64) *VolumeCollectionGetParams {
	o.SetSpaceFractionalReserveQueryParameter(spaceFractionalReserve)
	return o
}

// SetSpaceFractionalReserveQueryParameter adds the spaceFractionalReserve to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceFractionalReserveQueryParameter(spaceFractionalReserve *int64) {
	o.SpaceFractionalReserveQueryParameter = spaceFractionalReserve
}

// WithSpaceFullThresholdPercentQueryParameter adds the spaceFullThresholdPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceFullThresholdPercentQueryParameter(spaceFullThresholdPercent *int64) *VolumeCollectionGetParams {
	o.SetSpaceFullThresholdPercentQueryParameter(spaceFullThresholdPercent)
	return o
}

// SetSpaceFullThresholdPercentQueryParameter adds the spaceFullThresholdPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceFullThresholdPercentQueryParameter(spaceFullThresholdPercent *int64) {
	o.SpaceFullThresholdPercentQueryParameter = spaceFullThresholdPercent
}

// WithSpaceLocalTierFootprintQueryParameter adds the spaceLocalTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLocalTierFootprintQueryParameter(spaceLocalTierFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceLocalTierFootprintQueryParameter(spaceLocalTierFootprint)
	return o
}

// SetSpaceLocalTierFootprintQueryParameter adds the spaceLocalTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLocalTierFootprintQueryParameter(spaceLocalTierFootprint *int64) {
	o.SpaceLocalTierFootprintQueryParameter = spaceLocalTierFootprint
}

// WithSpaceLogicalSpaceAvailableQueryParameter adds the spaceLogicalSpaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLogicalSpaceAvailableQueryParameter(spaceLogicalSpaceAvailable *int64) *VolumeCollectionGetParams {
	o.SetSpaceLogicalSpaceAvailableQueryParameter(spaceLogicalSpaceAvailable)
	return o
}

// SetSpaceLogicalSpaceAvailableQueryParameter adds the spaceLogicalSpaceAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLogicalSpaceAvailableQueryParameter(spaceLogicalSpaceAvailable *int64) {
	o.SpaceLogicalSpaceAvailableQueryParameter = spaceLogicalSpaceAvailable
}

// WithSpaceLogicalSpaceEnforcementQueryParameter adds the spaceLogicalSpaceEnforcement to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLogicalSpaceEnforcementQueryParameter(spaceLogicalSpaceEnforcement *bool) *VolumeCollectionGetParams {
	o.SetSpaceLogicalSpaceEnforcementQueryParameter(spaceLogicalSpaceEnforcement)
	return o
}

// SetSpaceLogicalSpaceEnforcementQueryParameter adds the spaceLogicalSpaceEnforcement to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLogicalSpaceEnforcementQueryParameter(spaceLogicalSpaceEnforcement *bool) {
	o.SpaceLogicalSpaceEnforcementQueryParameter = spaceLogicalSpaceEnforcement
}

// WithSpaceLogicalSpaceReportingQueryParameter adds the spaceLogicalSpaceReporting to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLogicalSpaceReportingQueryParameter(spaceLogicalSpaceReporting *bool) *VolumeCollectionGetParams {
	o.SetSpaceLogicalSpaceReportingQueryParameter(spaceLogicalSpaceReporting)
	return o
}

// SetSpaceLogicalSpaceReportingQueryParameter adds the spaceLogicalSpaceReporting to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLogicalSpaceReportingQueryParameter(spaceLogicalSpaceReporting *bool) {
	o.SpaceLogicalSpaceReportingQueryParameter = spaceLogicalSpaceReporting
}

// WithSpaceLogicalSpaceUsedQueryParameter adds the spaceLogicalSpaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLogicalSpaceUsedQueryParameter(spaceLogicalSpaceUsed *int64) *VolumeCollectionGetParams {
	o.SetSpaceLogicalSpaceUsedQueryParameter(spaceLogicalSpaceUsed)
	return o
}

// SetSpaceLogicalSpaceUsedQueryParameter adds the spaceLogicalSpaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLogicalSpaceUsedQueryParameter(spaceLogicalSpaceUsed *int64) {
	o.SpaceLogicalSpaceUsedQueryParameter = spaceLogicalSpaceUsed
}

// WithSpaceLogicalSpaceUsedByAfsQueryParameter adds the spaceLogicalSpaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLogicalSpaceUsedByAfsQueryParameter(spaceLogicalSpaceUsedByAfs *int64) *VolumeCollectionGetParams {
	o.SetSpaceLogicalSpaceUsedByAfsQueryParameter(spaceLogicalSpaceUsedByAfs)
	return o
}

// SetSpaceLogicalSpaceUsedByAfsQueryParameter adds the spaceLogicalSpaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLogicalSpaceUsedByAfsQueryParameter(spaceLogicalSpaceUsedByAfs *int64) {
	o.SpaceLogicalSpaceUsedByAfsQueryParameter = spaceLogicalSpaceUsedByAfs
}

// WithSpaceLogicalSpaceUsedBySnapshotsQueryParameter adds the spaceLogicalSpaceUsedBySnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLogicalSpaceUsedBySnapshotsQueryParameter(spaceLogicalSpaceUsedBySnapshots *int64) *VolumeCollectionGetParams {
	o.SetSpaceLogicalSpaceUsedBySnapshotsQueryParameter(spaceLogicalSpaceUsedBySnapshots)
	return o
}

// SetSpaceLogicalSpaceUsedBySnapshotsQueryParameter adds the spaceLogicalSpaceUsedBySnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLogicalSpaceUsedBySnapshotsQueryParameter(spaceLogicalSpaceUsedBySnapshots *int64) {
	o.SpaceLogicalSpaceUsedBySnapshotsQueryParameter = spaceLogicalSpaceUsedBySnapshots
}

// WithSpaceLogicalSpaceUsedPercentQueryParameter adds the spaceLogicalSpaceUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceLogicalSpaceUsedPercentQueryParameter(spaceLogicalSpaceUsedPercent *int64) *VolumeCollectionGetParams {
	o.SetSpaceLogicalSpaceUsedPercentQueryParameter(spaceLogicalSpaceUsedPercent)
	return o
}

// SetSpaceLogicalSpaceUsedPercentQueryParameter adds the spaceLogicalSpaceUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceLogicalSpaceUsedPercentQueryParameter(spaceLogicalSpaceUsedPercent *int64) {
	o.SpaceLogicalSpaceUsedPercentQueryParameter = spaceLogicalSpaceUsedPercent
}

// WithSpaceMetadataQueryParameter adds the spaceMetadata to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceMetadataQueryParameter(spaceMetadata *int64) *VolumeCollectionGetParams {
	o.SetSpaceMetadataQueryParameter(spaceMetadata)
	return o
}

// SetSpaceMetadataQueryParameter adds the spaceMetadata to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceMetadataQueryParameter(spaceMetadata *int64) {
	o.SpaceMetadataQueryParameter = spaceMetadata
}

// WithSpaceNearlyFullThresholdPercentQueryParameter adds the spaceNearlyFullThresholdPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceNearlyFullThresholdPercentQueryParameter(spaceNearlyFullThresholdPercent *int64) *VolumeCollectionGetParams {
	o.SetSpaceNearlyFullThresholdPercentQueryParameter(spaceNearlyFullThresholdPercent)
	return o
}

// SetSpaceNearlyFullThresholdPercentQueryParameter adds the spaceNearlyFullThresholdPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceNearlyFullThresholdPercentQueryParameter(spaceNearlyFullThresholdPercent *int64) {
	o.SpaceNearlyFullThresholdPercentQueryParameter = spaceNearlyFullThresholdPercent
}

// WithSpaceOverProvisionedQueryParameter adds the spaceOverProvisioned to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceOverProvisionedQueryParameter(spaceOverProvisioned *int64) *VolumeCollectionGetParams {
	o.SetSpaceOverProvisionedQueryParameter(spaceOverProvisioned)
	return o
}

// SetSpaceOverProvisionedQueryParameter adds the spaceOverProvisioned to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceOverProvisionedQueryParameter(spaceOverProvisioned *int64) {
	o.SpaceOverProvisionedQueryParameter = spaceOverProvisioned
}

// WithSpaceOverwriteReserveQueryParameter adds the spaceOverwriteReserve to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceOverwriteReserveQueryParameter(spaceOverwriteReserve *int64) *VolumeCollectionGetParams {
	o.SetSpaceOverwriteReserveQueryParameter(spaceOverwriteReserve)
	return o
}

// SetSpaceOverwriteReserveQueryParameter adds the spaceOverwriteReserve to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceOverwriteReserveQueryParameter(spaceOverwriteReserve *int64) {
	o.SpaceOverwriteReserveQueryParameter = spaceOverwriteReserve
}

// WithSpaceOverwriteReserveUsedQueryParameter adds the spaceOverwriteReserveUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceOverwriteReserveUsedQueryParameter(spaceOverwriteReserveUsed *int64) *VolumeCollectionGetParams {
	o.SetSpaceOverwriteReserveUsedQueryParameter(spaceOverwriteReserveUsed)
	return o
}

// SetSpaceOverwriteReserveUsedQueryParameter adds the spaceOverwriteReserveUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceOverwriteReserveUsedQueryParameter(spaceOverwriteReserveUsed *int64) {
	o.SpaceOverwriteReserveUsedQueryParameter = spaceOverwriteReserveUsed
}

// WithSpacePercentUsedQueryParameter adds the spacePercentUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpacePercentUsedQueryParameter(spacePercentUsed *int64) *VolumeCollectionGetParams {
	o.SetSpacePercentUsedQueryParameter(spacePercentUsed)
	return o
}

// SetSpacePercentUsedQueryParameter adds the spacePercentUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpacePercentUsedQueryParameter(spacePercentUsed *int64) {
	o.SpacePercentUsedQueryParameter = spacePercentUsed
}

// WithSpacePerformanceTierFootprintQueryParameter adds the spacePerformanceTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpacePerformanceTierFootprintQueryParameter(spacePerformanceTierFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpacePerformanceTierFootprintQueryParameter(spacePerformanceTierFootprint)
	return o
}

// SetSpacePerformanceTierFootprintQueryParameter adds the spacePerformanceTierFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpacePerformanceTierFootprintQueryParameter(spacePerformanceTierFootprint *int64) {
	o.SpacePerformanceTierFootprintQueryParameter = spacePerformanceTierFootprint
}

// WithSpacePhysicalUsedQueryParameter adds the spacePhysicalUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpacePhysicalUsedQueryParameter(spacePhysicalUsed *int64) *VolumeCollectionGetParams {
	o.SetSpacePhysicalUsedQueryParameter(spacePhysicalUsed)
	return o
}

// SetSpacePhysicalUsedQueryParameter adds the spacePhysicalUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpacePhysicalUsedQueryParameter(spacePhysicalUsed *int64) {
	o.SpacePhysicalUsedQueryParameter = spacePhysicalUsed
}

// WithSpacePhysicalUsedPercentQueryParameter adds the spacePhysicalUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpacePhysicalUsedPercentQueryParameter(spacePhysicalUsedPercent *int64) *VolumeCollectionGetParams {
	o.SetSpacePhysicalUsedPercentQueryParameter(spacePhysicalUsedPercent)
	return o
}

// SetSpacePhysicalUsedPercentQueryParameter adds the spacePhysicalUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpacePhysicalUsedPercentQueryParameter(spacePhysicalUsedPercent *int64) {
	o.SpacePhysicalUsedPercentQueryParameter = spacePhysicalUsedPercent
}

// WithSpaceSizeQueryParameter adds the spaceSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSizeQueryParameter(spaceSize *int64) *VolumeCollectionGetParams {
	o.SetSpaceSizeQueryParameter(spaceSize)
	return o
}

// SetSpaceSizeQueryParameter adds the spaceSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSizeQueryParameter(spaceSize *int64) {
	o.SpaceSizeQueryParameter = spaceSize
}

// WithSpaceSizeAvailableForSnapshotsQueryParameter adds the spaceSizeAvailableForSnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSizeAvailableForSnapshotsQueryParameter(spaceSizeAvailableForSnapshots *int64) *VolumeCollectionGetParams {
	o.SetSpaceSizeAvailableForSnapshotsQueryParameter(spaceSizeAvailableForSnapshots)
	return o
}

// SetSpaceSizeAvailableForSnapshotsQueryParameter adds the spaceSizeAvailableForSnapshots to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSizeAvailableForSnapshotsQueryParameter(spaceSizeAvailableForSnapshots *int64) {
	o.SpaceSizeAvailableForSnapshotsQueryParameter = spaceSizeAvailableForSnapshots
}

// WithSpaceSnapmirrorDestinationFootprintQueryParameter adds the spaceSnapmirrorDestinationFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapmirrorDestinationFootprintQueryParameter(spaceSnapmirrorDestinationFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapmirrorDestinationFootprintQueryParameter(spaceSnapmirrorDestinationFootprint)
	return o
}

// SetSpaceSnapmirrorDestinationFootprintQueryParameter adds the spaceSnapmirrorDestinationFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapmirrorDestinationFootprintQueryParameter(spaceSnapmirrorDestinationFootprint *int64) {
	o.SpaceSnapmirrorDestinationFootprintQueryParameter = spaceSnapmirrorDestinationFootprint
}

// WithSpaceSnapshotAutodeleteTriggerQueryParameter adds the spaceSnapshotAutodeleteTrigger to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotAutodeleteTriggerQueryParameter(spaceSnapshotAutodeleteTrigger *string) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotAutodeleteTriggerQueryParameter(spaceSnapshotAutodeleteTrigger)
	return o
}

// SetSpaceSnapshotAutodeleteTriggerQueryParameter adds the spaceSnapshotAutodeleteTrigger to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotAutodeleteTriggerQueryParameter(spaceSnapshotAutodeleteTrigger *string) {
	o.SpaceSnapshotAutodeleteTriggerQueryParameter = spaceSnapshotAutodeleteTrigger
}

// WithSpaceSnapshotReserveAvailableQueryParameter adds the spaceSnapshotReserveAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotReserveAvailableQueryParameter(spaceSnapshotReserveAvailable *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotReserveAvailableQueryParameter(spaceSnapshotReserveAvailable)
	return o
}

// SetSpaceSnapshotReserveAvailableQueryParameter adds the spaceSnapshotReserveAvailable to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotReserveAvailableQueryParameter(spaceSnapshotReserveAvailable *int64) {
	o.SpaceSnapshotReserveAvailableQueryParameter = spaceSnapshotReserveAvailable
}

// WithSpaceSnapshotReservePercentQueryParameter adds the spaceSnapshotReservePercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotReservePercentQueryParameter(spaceSnapshotReservePercent *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotReservePercentQueryParameter(spaceSnapshotReservePercent)
	return o
}

// SetSpaceSnapshotReservePercentQueryParameter adds the spaceSnapshotReservePercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotReservePercentQueryParameter(spaceSnapshotReservePercent *int64) {
	o.SpaceSnapshotReservePercentQueryParameter = spaceSnapshotReservePercent
}

// WithSpaceSnapshotReserveSizeQueryParameter adds the spaceSnapshotReserveSize to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotReserveSizeQueryParameter(spaceSnapshotReserveSize *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotReserveSizeQueryParameter(spaceSnapshotReserveSize)
	return o
}

// SetSpaceSnapshotReserveSizeQueryParameter adds the spaceSnapshotReserveSize to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotReserveSizeQueryParameter(spaceSnapshotReserveSize *int64) {
	o.SpaceSnapshotReserveSizeQueryParameter = spaceSnapshotReserveSize
}

// WithSpaceSnapshotSpaceUsedPercentQueryParameter adds the spaceSnapshotSpaceUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotSpaceUsedPercentQueryParameter(spaceSnapshotSpaceUsedPercent *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotSpaceUsedPercentQueryParameter(spaceSnapshotSpaceUsedPercent)
	return o
}

// SetSpaceSnapshotSpaceUsedPercentQueryParameter adds the spaceSnapshotSpaceUsedPercent to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotSpaceUsedPercentQueryParameter(spaceSnapshotSpaceUsedPercent *int64) {
	o.SpaceSnapshotSpaceUsedPercentQueryParameter = spaceSnapshotSpaceUsedPercent
}

// WithSpaceSnapshotUsedQueryParameter adds the spaceSnapshotUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotUsedQueryParameter(spaceSnapshotUsed *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotUsedQueryParameter(spaceSnapshotUsed)
	return o
}

// SetSpaceSnapshotUsedQueryParameter adds the spaceSnapshotUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotUsedQueryParameter(spaceSnapshotUsed *int64) {
	o.SpaceSnapshotUsedQueryParameter = spaceSnapshotUsed
}

// WithSpaceSnapshotReserveUnusableQueryParameter adds the spaceSnapshotReserveUnusable to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotReserveUnusableQueryParameter(spaceSnapshotReserveUnusable *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotReserveUnusableQueryParameter(spaceSnapshotReserveUnusable)
	return o
}

// SetSpaceSnapshotReserveUnusableQueryParameter adds the spaceSnapshotReserveUnusable to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotReserveUnusableQueryParameter(spaceSnapshotReserveUnusable *int64) {
	o.SpaceSnapshotReserveUnusableQueryParameter = spaceSnapshotReserveUnusable
}

// WithSpaceSnapshotSpillQueryParameter adds the spaceSnapshotSpill to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceSnapshotSpillQueryParameter(spaceSnapshotSpill *int64) *VolumeCollectionGetParams {
	o.SetSpaceSnapshotSpillQueryParameter(spaceSnapshotSpill)
	return o
}

// SetSpaceSnapshotSpillQueryParameter adds the spaceSnapshotSpill to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceSnapshotSpillQueryParameter(spaceSnapshotSpill *int64) {
	o.SpaceSnapshotSpillQueryParameter = spaceSnapshotSpill
}

// WithSpaceTotalFootprintQueryParameter adds the spaceTotalFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceTotalFootprintQueryParameter(spaceTotalFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceTotalFootprintQueryParameter(spaceTotalFootprint)
	return o
}

// SetSpaceTotalFootprintQueryParameter adds the spaceTotalFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceTotalFootprintQueryParameter(spaceTotalFootprint *int64) {
	o.SpaceTotalFootprintQueryParameter = spaceTotalFootprint
}

// WithSpaceUsedQueryParameter adds the spaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceUsedQueryParameter(spaceUsed *int64) *VolumeCollectionGetParams {
	o.SetSpaceUsedQueryParameter(spaceUsed)
	return o
}

// SetSpaceUsedQueryParameter adds the spaceUsed to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceUsedQueryParameter(spaceUsed *int64) {
	o.SpaceUsedQueryParameter = spaceUsed
}

// WithSpaceUsedByAfsQueryParameter adds the spaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceUsedByAfsQueryParameter(spaceUsedByAfs *int64) *VolumeCollectionGetParams {
	o.SetSpaceUsedByAfsQueryParameter(spaceUsedByAfs)
	return o
}

// SetSpaceUsedByAfsQueryParameter adds the spaceUsedByAfs to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceUsedByAfsQueryParameter(spaceUsedByAfs *int64) {
	o.SpaceUsedByAfsQueryParameter = spaceUsedByAfs
}

// WithSpaceUserDataQueryParameter adds the spaceUserData to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceUserDataQueryParameter(spaceUserData *int64) *VolumeCollectionGetParams {
	o.SetSpaceUserDataQueryParameter(spaceUserData)
	return o
}

// SetSpaceUserDataQueryParameter adds the spaceUserData to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceUserDataQueryParameter(spaceUserData *int64) {
	o.SpaceUserDataQueryParameter = spaceUserData
}

// WithSpaceVolumeGuaranteeFootprintQueryParameter adds the spaceVolumeGuaranteeFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) WithSpaceVolumeGuaranteeFootprintQueryParameter(spaceVolumeGuaranteeFootprint *int64) *VolumeCollectionGetParams {
	o.SetSpaceVolumeGuaranteeFootprintQueryParameter(spaceVolumeGuaranteeFootprint)
	return o
}

// SetSpaceVolumeGuaranteeFootprintQueryParameter adds the spaceVolumeGuaranteeFootprint to the volume collection get params
func (o *VolumeCollectionGetParams) SetSpaceVolumeGuaranteeFootprintQueryParameter(spaceVolumeGuaranteeFootprint *int64) {
	o.SpaceVolumeGuaranteeFootprintQueryParameter = spaceVolumeGuaranteeFootprint
}

// WithStateQueryParameter adds the state to the volume collection get params
func (o *VolumeCollectionGetParams) WithStateQueryParameter(state *string) *VolumeCollectionGetParams {
	o.SetStateQueryParameter(state)
	return o
}

// SetStateQueryParameter adds the state to the volume collection get params
func (o *VolumeCollectionGetParams) SetStateQueryParameter(state *string) {
	o.StateQueryParameter = state
}

// WithStatisticsCifsOpsRawAccessCountQueryParameter adds the statisticsCifsOpsRawAccessCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawAccessCountQueryParameter(statisticsCifsOpsRawAccessCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawAccessCountQueryParameter(statisticsCifsOpsRawAccessCount)
	return o
}

// SetStatisticsCifsOpsRawAccessCountQueryParameter adds the statisticsCifsOpsRawAccessCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawAccessCountQueryParameter(statisticsCifsOpsRawAccessCount *int64) {
	o.StatisticsCifsOpsRawAccessCountQueryParameter = statisticsCifsOpsRawAccessCount
}

// WithStatisticsCifsOpsRawAccessTotalTimeQueryParameter adds the statisticsCifsOpsRawAccessTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawAccessTotalTimeQueryParameter(statisticsCifsOpsRawAccessTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawAccessTotalTimeQueryParameter(statisticsCifsOpsRawAccessTotalTime)
	return o
}

// SetStatisticsCifsOpsRawAccessTotalTimeQueryParameter adds the statisticsCifsOpsRawAccessTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawAccessTotalTimeQueryParameter(statisticsCifsOpsRawAccessTotalTime *int64) {
	o.StatisticsCifsOpsRawAccessTotalTimeQueryParameter = statisticsCifsOpsRawAccessTotalTime
}

// WithStatisticsCifsOpsRawAuditCountQueryParameter adds the statisticsCifsOpsRawAuditCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawAuditCountQueryParameter(statisticsCifsOpsRawAuditCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawAuditCountQueryParameter(statisticsCifsOpsRawAuditCount)
	return o
}

// SetStatisticsCifsOpsRawAuditCountQueryParameter adds the statisticsCifsOpsRawAuditCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawAuditCountQueryParameter(statisticsCifsOpsRawAuditCount *int64) {
	o.StatisticsCifsOpsRawAuditCountQueryParameter = statisticsCifsOpsRawAuditCount
}

// WithStatisticsCifsOpsRawAuditTotalTimeQueryParameter adds the statisticsCifsOpsRawAuditTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawAuditTotalTimeQueryParameter(statisticsCifsOpsRawAuditTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawAuditTotalTimeQueryParameter(statisticsCifsOpsRawAuditTotalTime)
	return o
}

// SetStatisticsCifsOpsRawAuditTotalTimeQueryParameter adds the statisticsCifsOpsRawAuditTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawAuditTotalTimeQueryParameter(statisticsCifsOpsRawAuditTotalTime *int64) {
	o.StatisticsCifsOpsRawAuditTotalTimeQueryParameter = statisticsCifsOpsRawAuditTotalTime
}

// WithStatisticsCifsOpsRawCreateDirCountQueryParameter adds the statisticsCifsOpsRawCreateDirCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateDirCountQueryParameter(statisticsCifsOpsRawCreateDirCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateDirCountQueryParameter(statisticsCifsOpsRawCreateDirCount)
	return o
}

// SetStatisticsCifsOpsRawCreateDirCountQueryParameter adds the statisticsCifsOpsRawCreateDirCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateDirCountQueryParameter(statisticsCifsOpsRawCreateDirCount *int64) {
	o.StatisticsCifsOpsRawCreateDirCountQueryParameter = statisticsCifsOpsRawCreateDirCount
}

// WithStatisticsCifsOpsRawCreateDirTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateDirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateDirTotalTimeQueryParameter(statisticsCifsOpsRawCreateDirTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateDirTotalTimeQueryParameter(statisticsCifsOpsRawCreateDirTotalTime)
	return o
}

// SetStatisticsCifsOpsRawCreateDirTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateDirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateDirTotalTimeQueryParameter(statisticsCifsOpsRawCreateDirTotalTime *int64) {
	o.StatisticsCifsOpsRawCreateDirTotalTimeQueryParameter = statisticsCifsOpsRawCreateDirTotalTime
}

// WithStatisticsCifsOpsRawCreateFileCountQueryParameter adds the statisticsCifsOpsRawCreateFileCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateFileCountQueryParameter(statisticsCifsOpsRawCreateFileCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateFileCountQueryParameter(statisticsCifsOpsRawCreateFileCount)
	return o
}

// SetStatisticsCifsOpsRawCreateFileCountQueryParameter adds the statisticsCifsOpsRawCreateFileCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateFileCountQueryParameter(statisticsCifsOpsRawCreateFileCount *int64) {
	o.StatisticsCifsOpsRawCreateFileCountQueryParameter = statisticsCifsOpsRawCreateFileCount
}

// WithStatisticsCifsOpsRawCreateFileTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateFileTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateFileTotalTimeQueryParameter(statisticsCifsOpsRawCreateFileTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateFileTotalTimeQueryParameter(statisticsCifsOpsRawCreateFileTotalTime)
	return o
}

// SetStatisticsCifsOpsRawCreateFileTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateFileTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateFileTotalTimeQueryParameter(statisticsCifsOpsRawCreateFileTotalTime *int64) {
	o.StatisticsCifsOpsRawCreateFileTotalTimeQueryParameter = statisticsCifsOpsRawCreateFileTotalTime
}

// WithStatisticsCifsOpsRawCreateOtherCountQueryParameter adds the statisticsCifsOpsRawCreateOtherCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateOtherCountQueryParameter(statisticsCifsOpsRawCreateOtherCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateOtherCountQueryParameter(statisticsCifsOpsRawCreateOtherCount)
	return o
}

// SetStatisticsCifsOpsRawCreateOtherCountQueryParameter adds the statisticsCifsOpsRawCreateOtherCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateOtherCountQueryParameter(statisticsCifsOpsRawCreateOtherCount *int64) {
	o.StatisticsCifsOpsRawCreateOtherCountQueryParameter = statisticsCifsOpsRawCreateOtherCount
}

// WithStatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateOtherTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter(statisticsCifsOpsRawCreateOtherTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter(statisticsCifsOpsRawCreateOtherTotalTime)
	return o
}

// SetStatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateOtherTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter(statisticsCifsOpsRawCreateOtherTotalTime *int64) {
	o.StatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter = statisticsCifsOpsRawCreateOtherTotalTime
}

// WithStatisticsCifsOpsRawCreateSymlinkCountQueryParameter adds the statisticsCifsOpsRawCreateSymlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateSymlinkCountQueryParameter(statisticsCifsOpsRawCreateSymlinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateSymlinkCountQueryParameter(statisticsCifsOpsRawCreateSymlinkCount)
	return o
}

// SetStatisticsCifsOpsRawCreateSymlinkCountQueryParameter adds the statisticsCifsOpsRawCreateSymlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateSymlinkCountQueryParameter(statisticsCifsOpsRawCreateSymlinkCount *int64) {
	o.StatisticsCifsOpsRawCreateSymlinkCountQueryParameter = statisticsCifsOpsRawCreateSymlinkCount
}

// WithStatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateSymlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter(statisticsCifsOpsRawCreateSymlinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter(statisticsCifsOpsRawCreateSymlinkTotalTime)
	return o
}

// SetStatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter adds the statisticsCifsOpsRawCreateSymlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter(statisticsCifsOpsRawCreateSymlinkTotalTime *int64) {
	o.StatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter = statisticsCifsOpsRawCreateSymlinkTotalTime
}

// WithStatisticsCifsOpsRawGetattrCountQueryParameter adds the statisticsCifsOpsRawGetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawGetattrCountQueryParameter(statisticsCifsOpsRawGetattrCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawGetattrCountQueryParameter(statisticsCifsOpsRawGetattrCount)
	return o
}

// SetStatisticsCifsOpsRawGetattrCountQueryParameter adds the statisticsCifsOpsRawGetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawGetattrCountQueryParameter(statisticsCifsOpsRawGetattrCount *int64) {
	o.StatisticsCifsOpsRawGetattrCountQueryParameter = statisticsCifsOpsRawGetattrCount
}

// WithStatisticsCifsOpsRawGetattrTotalTimeQueryParameter adds the statisticsCifsOpsRawGetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawGetattrTotalTimeQueryParameter(statisticsCifsOpsRawGetattrTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawGetattrTotalTimeQueryParameter(statisticsCifsOpsRawGetattrTotalTime)
	return o
}

// SetStatisticsCifsOpsRawGetattrTotalTimeQueryParameter adds the statisticsCifsOpsRawGetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawGetattrTotalTimeQueryParameter(statisticsCifsOpsRawGetattrTotalTime *int64) {
	o.StatisticsCifsOpsRawGetattrTotalTimeQueryParameter = statisticsCifsOpsRawGetattrTotalTime
}

// WithStatisticsCifsOpsRawLinkCountQueryParameter adds the statisticsCifsOpsRawLinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawLinkCountQueryParameter(statisticsCifsOpsRawLinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawLinkCountQueryParameter(statisticsCifsOpsRawLinkCount)
	return o
}

// SetStatisticsCifsOpsRawLinkCountQueryParameter adds the statisticsCifsOpsRawLinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawLinkCountQueryParameter(statisticsCifsOpsRawLinkCount *int64) {
	o.StatisticsCifsOpsRawLinkCountQueryParameter = statisticsCifsOpsRawLinkCount
}

// WithStatisticsCifsOpsRawLinkTotalTimeQueryParameter adds the statisticsCifsOpsRawLinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawLinkTotalTimeQueryParameter(statisticsCifsOpsRawLinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawLinkTotalTimeQueryParameter(statisticsCifsOpsRawLinkTotalTime)
	return o
}

// SetStatisticsCifsOpsRawLinkTotalTimeQueryParameter adds the statisticsCifsOpsRawLinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawLinkTotalTimeQueryParameter(statisticsCifsOpsRawLinkTotalTime *int64) {
	o.StatisticsCifsOpsRawLinkTotalTimeQueryParameter = statisticsCifsOpsRawLinkTotalTime
}

// WithStatisticsCifsOpsRawLockCountQueryParameter adds the statisticsCifsOpsRawLockCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawLockCountQueryParameter(statisticsCifsOpsRawLockCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawLockCountQueryParameter(statisticsCifsOpsRawLockCount)
	return o
}

// SetStatisticsCifsOpsRawLockCountQueryParameter adds the statisticsCifsOpsRawLockCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawLockCountQueryParameter(statisticsCifsOpsRawLockCount *int64) {
	o.StatisticsCifsOpsRawLockCountQueryParameter = statisticsCifsOpsRawLockCount
}

// WithStatisticsCifsOpsRawLockTotalTimeQueryParameter adds the statisticsCifsOpsRawLockTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawLockTotalTimeQueryParameter(statisticsCifsOpsRawLockTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawLockTotalTimeQueryParameter(statisticsCifsOpsRawLockTotalTime)
	return o
}

// SetStatisticsCifsOpsRawLockTotalTimeQueryParameter adds the statisticsCifsOpsRawLockTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawLockTotalTimeQueryParameter(statisticsCifsOpsRawLockTotalTime *int64) {
	o.StatisticsCifsOpsRawLockTotalTimeQueryParameter = statisticsCifsOpsRawLockTotalTime
}

// WithStatisticsCifsOpsRawLookupCountQueryParameter adds the statisticsCifsOpsRawLookupCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawLookupCountQueryParameter(statisticsCifsOpsRawLookupCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawLookupCountQueryParameter(statisticsCifsOpsRawLookupCount)
	return o
}

// SetStatisticsCifsOpsRawLookupCountQueryParameter adds the statisticsCifsOpsRawLookupCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawLookupCountQueryParameter(statisticsCifsOpsRawLookupCount *int64) {
	o.StatisticsCifsOpsRawLookupCountQueryParameter = statisticsCifsOpsRawLookupCount
}

// WithStatisticsCifsOpsRawLookupTotalTimeQueryParameter adds the statisticsCifsOpsRawLookupTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawLookupTotalTimeQueryParameter(statisticsCifsOpsRawLookupTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawLookupTotalTimeQueryParameter(statisticsCifsOpsRawLookupTotalTime)
	return o
}

// SetStatisticsCifsOpsRawLookupTotalTimeQueryParameter adds the statisticsCifsOpsRawLookupTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawLookupTotalTimeQueryParameter(statisticsCifsOpsRawLookupTotalTime *int64) {
	o.StatisticsCifsOpsRawLookupTotalTimeQueryParameter = statisticsCifsOpsRawLookupTotalTime
}

// WithStatisticsCifsOpsRawOpenCountQueryParameter adds the statisticsCifsOpsRawOpenCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawOpenCountQueryParameter(statisticsCifsOpsRawOpenCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawOpenCountQueryParameter(statisticsCifsOpsRawOpenCount)
	return o
}

// SetStatisticsCifsOpsRawOpenCountQueryParameter adds the statisticsCifsOpsRawOpenCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawOpenCountQueryParameter(statisticsCifsOpsRawOpenCount *int64) {
	o.StatisticsCifsOpsRawOpenCountQueryParameter = statisticsCifsOpsRawOpenCount
}

// WithStatisticsCifsOpsRawOpenTotalTimeQueryParameter adds the statisticsCifsOpsRawOpenTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawOpenTotalTimeQueryParameter(statisticsCifsOpsRawOpenTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawOpenTotalTimeQueryParameter(statisticsCifsOpsRawOpenTotalTime)
	return o
}

// SetStatisticsCifsOpsRawOpenTotalTimeQueryParameter adds the statisticsCifsOpsRawOpenTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawOpenTotalTimeQueryParameter(statisticsCifsOpsRawOpenTotalTime *int64) {
	o.StatisticsCifsOpsRawOpenTotalTimeQueryParameter = statisticsCifsOpsRawOpenTotalTime
}

// WithStatisticsCifsOpsRawReadCountQueryParameter adds the statisticsCifsOpsRawReadCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadCountQueryParameter(statisticsCifsOpsRawReadCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadCountQueryParameter(statisticsCifsOpsRawReadCount)
	return o
}

// SetStatisticsCifsOpsRawReadCountQueryParameter adds the statisticsCifsOpsRawReadCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadCountQueryParameter(statisticsCifsOpsRawReadCount *int64) {
	o.StatisticsCifsOpsRawReadCountQueryParameter = statisticsCifsOpsRawReadCount
}

// WithStatisticsCifsOpsRawReadTotalTimeQueryParameter adds the statisticsCifsOpsRawReadTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadTotalTimeQueryParameter(statisticsCifsOpsRawReadTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadTotalTimeQueryParameter(statisticsCifsOpsRawReadTotalTime)
	return o
}

// SetStatisticsCifsOpsRawReadTotalTimeQueryParameter adds the statisticsCifsOpsRawReadTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadTotalTimeQueryParameter(statisticsCifsOpsRawReadTotalTime *int64) {
	o.StatisticsCifsOpsRawReadTotalTimeQueryParameter = statisticsCifsOpsRawReadTotalTime
}

// WithStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts)
	return o
}

// SetStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts *int64) {
	o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter = statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts
}

// WithStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels)
	return o
}

// SetStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels *string) {
	o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter = statisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels
}

// WithStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts)
	return o
}

// SetStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts *int64) {
	o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter = statisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts
}

// WithStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels)
	return o
}

// SetStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels *string) {
	o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter = statisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels
}

// WithStatisticsCifsOpsRawReaddirCountQueryParameter adds the statisticsCifsOpsRawReaddirCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReaddirCountQueryParameter(statisticsCifsOpsRawReaddirCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReaddirCountQueryParameter(statisticsCifsOpsRawReaddirCount)
	return o
}

// SetStatisticsCifsOpsRawReaddirCountQueryParameter adds the statisticsCifsOpsRawReaddirCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReaddirCountQueryParameter(statisticsCifsOpsRawReaddirCount *int64) {
	o.StatisticsCifsOpsRawReaddirCountQueryParameter = statisticsCifsOpsRawReaddirCount
}

// WithStatisticsCifsOpsRawReaddirTotalTimeQueryParameter adds the statisticsCifsOpsRawReaddirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReaddirTotalTimeQueryParameter(statisticsCifsOpsRawReaddirTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReaddirTotalTimeQueryParameter(statisticsCifsOpsRawReaddirTotalTime)
	return o
}

// SetStatisticsCifsOpsRawReaddirTotalTimeQueryParameter adds the statisticsCifsOpsRawReaddirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReaddirTotalTimeQueryParameter(statisticsCifsOpsRawReaddirTotalTime *int64) {
	o.StatisticsCifsOpsRawReaddirTotalTimeQueryParameter = statisticsCifsOpsRawReaddirTotalTime
}

// WithStatisticsCifsOpsRawReadlinkCountQueryParameter adds the statisticsCifsOpsRawReadlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadlinkCountQueryParameter(statisticsCifsOpsRawReadlinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadlinkCountQueryParameter(statisticsCifsOpsRawReadlinkCount)
	return o
}

// SetStatisticsCifsOpsRawReadlinkCountQueryParameter adds the statisticsCifsOpsRawReadlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadlinkCountQueryParameter(statisticsCifsOpsRawReadlinkCount *int64) {
	o.StatisticsCifsOpsRawReadlinkCountQueryParameter = statisticsCifsOpsRawReadlinkCount
}

// WithStatisticsCifsOpsRawReadlinkTotalTimeQueryParameter adds the statisticsCifsOpsRawReadlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawReadlinkTotalTimeQueryParameter(statisticsCifsOpsRawReadlinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawReadlinkTotalTimeQueryParameter(statisticsCifsOpsRawReadlinkTotalTime)
	return o
}

// SetStatisticsCifsOpsRawReadlinkTotalTimeQueryParameter adds the statisticsCifsOpsRawReadlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawReadlinkTotalTimeQueryParameter(statisticsCifsOpsRawReadlinkTotalTime *int64) {
	o.StatisticsCifsOpsRawReadlinkTotalTimeQueryParameter = statisticsCifsOpsRawReadlinkTotalTime
}

// WithStatisticsCifsOpsRawRenameCountQueryParameter adds the statisticsCifsOpsRawRenameCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawRenameCountQueryParameter(statisticsCifsOpsRawRenameCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawRenameCountQueryParameter(statisticsCifsOpsRawRenameCount)
	return o
}

// SetStatisticsCifsOpsRawRenameCountQueryParameter adds the statisticsCifsOpsRawRenameCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawRenameCountQueryParameter(statisticsCifsOpsRawRenameCount *int64) {
	o.StatisticsCifsOpsRawRenameCountQueryParameter = statisticsCifsOpsRawRenameCount
}

// WithStatisticsCifsOpsRawRenameTotalTimeQueryParameter adds the statisticsCifsOpsRawRenameTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawRenameTotalTimeQueryParameter(statisticsCifsOpsRawRenameTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawRenameTotalTimeQueryParameter(statisticsCifsOpsRawRenameTotalTime)
	return o
}

// SetStatisticsCifsOpsRawRenameTotalTimeQueryParameter adds the statisticsCifsOpsRawRenameTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawRenameTotalTimeQueryParameter(statisticsCifsOpsRawRenameTotalTime *int64) {
	o.StatisticsCifsOpsRawRenameTotalTimeQueryParameter = statisticsCifsOpsRawRenameTotalTime
}

// WithStatisticsCifsOpsRawSetattrCountQueryParameter adds the statisticsCifsOpsRawSetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawSetattrCountQueryParameter(statisticsCifsOpsRawSetattrCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawSetattrCountQueryParameter(statisticsCifsOpsRawSetattrCount)
	return o
}

// SetStatisticsCifsOpsRawSetattrCountQueryParameter adds the statisticsCifsOpsRawSetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawSetattrCountQueryParameter(statisticsCifsOpsRawSetattrCount *int64) {
	o.StatisticsCifsOpsRawSetattrCountQueryParameter = statisticsCifsOpsRawSetattrCount
}

// WithStatisticsCifsOpsRawSetattrTotalTimeQueryParameter adds the statisticsCifsOpsRawSetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawSetattrTotalTimeQueryParameter(statisticsCifsOpsRawSetattrTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawSetattrTotalTimeQueryParameter(statisticsCifsOpsRawSetattrTotalTime)
	return o
}

// SetStatisticsCifsOpsRawSetattrTotalTimeQueryParameter adds the statisticsCifsOpsRawSetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawSetattrTotalTimeQueryParameter(statisticsCifsOpsRawSetattrTotalTime *int64) {
	o.StatisticsCifsOpsRawSetattrTotalTimeQueryParameter = statisticsCifsOpsRawSetattrTotalTime
}

// WithStatisticsCifsOpsRawUnlinkCountQueryParameter adds the statisticsCifsOpsRawUnlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawUnlinkCountQueryParameter(statisticsCifsOpsRawUnlinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawUnlinkCountQueryParameter(statisticsCifsOpsRawUnlinkCount)
	return o
}

// SetStatisticsCifsOpsRawUnlinkCountQueryParameter adds the statisticsCifsOpsRawUnlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawUnlinkCountQueryParameter(statisticsCifsOpsRawUnlinkCount *int64) {
	o.StatisticsCifsOpsRawUnlinkCountQueryParameter = statisticsCifsOpsRawUnlinkCount
}

// WithStatisticsCifsOpsRawUnlinkTotalTimeQueryParameter adds the statisticsCifsOpsRawUnlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawUnlinkTotalTimeQueryParameter(statisticsCifsOpsRawUnlinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawUnlinkTotalTimeQueryParameter(statisticsCifsOpsRawUnlinkTotalTime)
	return o
}

// SetStatisticsCifsOpsRawUnlinkTotalTimeQueryParameter adds the statisticsCifsOpsRawUnlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawUnlinkTotalTimeQueryParameter(statisticsCifsOpsRawUnlinkTotalTime *int64) {
	o.StatisticsCifsOpsRawUnlinkTotalTimeQueryParameter = statisticsCifsOpsRawUnlinkTotalTime
}

// WithStatisticsCifsOpsRawWatchCountQueryParameter adds the statisticsCifsOpsRawWatchCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWatchCountQueryParameter(statisticsCifsOpsRawWatchCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWatchCountQueryParameter(statisticsCifsOpsRawWatchCount)
	return o
}

// SetStatisticsCifsOpsRawWatchCountQueryParameter adds the statisticsCifsOpsRawWatchCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWatchCountQueryParameter(statisticsCifsOpsRawWatchCount *int64) {
	o.StatisticsCifsOpsRawWatchCountQueryParameter = statisticsCifsOpsRawWatchCount
}

// WithStatisticsCifsOpsRawWatchTotalTimeQueryParameter adds the statisticsCifsOpsRawWatchTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWatchTotalTimeQueryParameter(statisticsCifsOpsRawWatchTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWatchTotalTimeQueryParameter(statisticsCifsOpsRawWatchTotalTime)
	return o
}

// SetStatisticsCifsOpsRawWatchTotalTimeQueryParameter adds the statisticsCifsOpsRawWatchTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWatchTotalTimeQueryParameter(statisticsCifsOpsRawWatchTotalTime *int64) {
	o.StatisticsCifsOpsRawWatchTotalTimeQueryParameter = statisticsCifsOpsRawWatchTotalTime
}

// WithStatisticsCifsOpsRawWriteCountQueryParameter adds the statisticsCifsOpsRawWriteCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWriteCountQueryParameter(statisticsCifsOpsRawWriteCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWriteCountQueryParameter(statisticsCifsOpsRawWriteCount)
	return o
}

// SetStatisticsCifsOpsRawWriteCountQueryParameter adds the statisticsCifsOpsRawWriteCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWriteCountQueryParameter(statisticsCifsOpsRawWriteCount *int64) {
	o.StatisticsCifsOpsRawWriteCountQueryParameter = statisticsCifsOpsRawWriteCount
}

// WithStatisticsCifsOpsRawWriteTotalTimeQueryParameter adds the statisticsCifsOpsRawWriteTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWriteTotalTimeQueryParameter(statisticsCifsOpsRawWriteTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWriteTotalTimeQueryParameter(statisticsCifsOpsRawWriteTotalTime)
	return o
}

// SetStatisticsCifsOpsRawWriteTotalTimeQueryParameter adds the statisticsCifsOpsRawWriteTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWriteTotalTimeQueryParameter(statisticsCifsOpsRawWriteTotalTime *int64) {
	o.StatisticsCifsOpsRawWriteTotalTimeQueryParameter = statisticsCifsOpsRawWriteTotalTime
}

// WithStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts)
	return o
}

// SetStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts *int64) {
	o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter = statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts
}

// WithStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels)
	return o
}

// SetStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels *string) {
	o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter = statisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels
}

// WithStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts)
	return o
}

// SetStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts *int64) {
	o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter = statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts
}

// WithStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels)
	return o
}

// SetStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels *string) {
	o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter = statisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels
}

// WithStatisticsCloudIopsRawOtherQueryParameter adds the statisticsCloudIopsRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudIopsRawOtherQueryParameter(statisticsCloudIopsRawOther *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudIopsRawOtherQueryParameter(statisticsCloudIopsRawOther)
	return o
}

// SetStatisticsCloudIopsRawOtherQueryParameter adds the statisticsCloudIopsRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudIopsRawOtherQueryParameter(statisticsCloudIopsRawOther *int64) {
	o.StatisticsCloudIopsRawOtherQueryParameter = statisticsCloudIopsRawOther
}

// WithStatisticsCloudIopsRawReadQueryParameter adds the statisticsCloudIopsRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudIopsRawReadQueryParameter(statisticsCloudIopsRawRead *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudIopsRawReadQueryParameter(statisticsCloudIopsRawRead)
	return o
}

// SetStatisticsCloudIopsRawReadQueryParameter adds the statisticsCloudIopsRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudIopsRawReadQueryParameter(statisticsCloudIopsRawRead *int64) {
	o.StatisticsCloudIopsRawReadQueryParameter = statisticsCloudIopsRawRead
}

// WithStatisticsCloudIopsRawTotalQueryParameter adds the statisticsCloudIopsRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudIopsRawTotalQueryParameter(statisticsCloudIopsRawTotal *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudIopsRawTotalQueryParameter(statisticsCloudIopsRawTotal)
	return o
}

// SetStatisticsCloudIopsRawTotalQueryParameter adds the statisticsCloudIopsRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudIopsRawTotalQueryParameter(statisticsCloudIopsRawTotal *int64) {
	o.StatisticsCloudIopsRawTotalQueryParameter = statisticsCloudIopsRawTotal
}

// WithStatisticsCloudIopsRawWriteQueryParameter adds the statisticsCloudIopsRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudIopsRawWriteQueryParameter(statisticsCloudIopsRawWrite *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudIopsRawWriteQueryParameter(statisticsCloudIopsRawWrite)
	return o
}

// SetStatisticsCloudIopsRawWriteQueryParameter adds the statisticsCloudIopsRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudIopsRawWriteQueryParameter(statisticsCloudIopsRawWrite *int64) {
	o.StatisticsCloudIopsRawWriteQueryParameter = statisticsCloudIopsRawWrite
}

// WithStatisticsCloudLatencyRawOtherQueryParameter adds the statisticsCloudLatencyRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudLatencyRawOtherQueryParameter(statisticsCloudLatencyRawOther *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudLatencyRawOtherQueryParameter(statisticsCloudLatencyRawOther)
	return o
}

// SetStatisticsCloudLatencyRawOtherQueryParameter adds the statisticsCloudLatencyRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudLatencyRawOtherQueryParameter(statisticsCloudLatencyRawOther *int64) {
	o.StatisticsCloudLatencyRawOtherQueryParameter = statisticsCloudLatencyRawOther
}

// WithStatisticsCloudLatencyRawReadQueryParameter adds the statisticsCloudLatencyRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudLatencyRawReadQueryParameter(statisticsCloudLatencyRawRead *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudLatencyRawReadQueryParameter(statisticsCloudLatencyRawRead)
	return o
}

// SetStatisticsCloudLatencyRawReadQueryParameter adds the statisticsCloudLatencyRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudLatencyRawReadQueryParameter(statisticsCloudLatencyRawRead *int64) {
	o.StatisticsCloudLatencyRawReadQueryParameter = statisticsCloudLatencyRawRead
}

// WithStatisticsCloudLatencyRawTotalQueryParameter adds the statisticsCloudLatencyRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudLatencyRawTotalQueryParameter(statisticsCloudLatencyRawTotal *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudLatencyRawTotalQueryParameter(statisticsCloudLatencyRawTotal)
	return o
}

// SetStatisticsCloudLatencyRawTotalQueryParameter adds the statisticsCloudLatencyRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudLatencyRawTotalQueryParameter(statisticsCloudLatencyRawTotal *int64) {
	o.StatisticsCloudLatencyRawTotalQueryParameter = statisticsCloudLatencyRawTotal
}

// WithStatisticsCloudLatencyRawWriteQueryParameter adds the statisticsCloudLatencyRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudLatencyRawWriteQueryParameter(statisticsCloudLatencyRawWrite *int64) *VolumeCollectionGetParams {
	o.SetStatisticsCloudLatencyRawWriteQueryParameter(statisticsCloudLatencyRawWrite)
	return o
}

// SetStatisticsCloudLatencyRawWriteQueryParameter adds the statisticsCloudLatencyRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudLatencyRawWriteQueryParameter(statisticsCloudLatencyRawWrite *int64) {
	o.StatisticsCloudLatencyRawWriteQueryParameter = statisticsCloudLatencyRawWrite
}

// WithStatisticsCloudStatusQueryParameter adds the statisticsCloudStatus to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudStatusQueryParameter(statisticsCloudStatus *string) *VolumeCollectionGetParams {
	o.SetStatisticsCloudStatusQueryParameter(statisticsCloudStatus)
	return o
}

// SetStatisticsCloudStatusQueryParameter adds the statisticsCloudStatus to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudStatusQueryParameter(statisticsCloudStatus *string) {
	o.StatisticsCloudStatusQueryParameter = statisticsCloudStatus
}

// WithStatisticsCloudTimestampQueryParameter adds the statisticsCloudTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsCloudTimestampQueryParameter(statisticsCloudTimestamp *string) *VolumeCollectionGetParams {
	o.SetStatisticsCloudTimestampQueryParameter(statisticsCloudTimestamp)
	return o
}

// SetStatisticsCloudTimestampQueryParameter adds the statisticsCloudTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsCloudTimestampQueryParameter(statisticsCloudTimestamp *string) {
	o.StatisticsCloudTimestampQueryParameter = statisticsCloudTimestamp
}

// WithStatisticsFlexcacheRawCacheMissBlocksQueryParameter adds the statisticsFlexcacheRawCacheMissBlocks to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsFlexcacheRawCacheMissBlocksQueryParameter(statisticsFlexcacheRawCacheMissBlocks *int64) *VolumeCollectionGetParams {
	o.SetStatisticsFlexcacheRawCacheMissBlocksQueryParameter(statisticsFlexcacheRawCacheMissBlocks)
	return o
}

// SetStatisticsFlexcacheRawCacheMissBlocksQueryParameter adds the statisticsFlexcacheRawCacheMissBlocks to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsFlexcacheRawCacheMissBlocksQueryParameter(statisticsFlexcacheRawCacheMissBlocks *int64) {
	o.StatisticsFlexcacheRawCacheMissBlocksQueryParameter = statisticsFlexcacheRawCacheMissBlocks
}

// WithStatisticsFlexcacheRawClientRequestedBlocksQueryParameter adds the statisticsFlexcacheRawClientRequestedBlocks to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsFlexcacheRawClientRequestedBlocksQueryParameter(statisticsFlexcacheRawClientRequestedBlocks *int64) *VolumeCollectionGetParams {
	o.SetStatisticsFlexcacheRawClientRequestedBlocksQueryParameter(statisticsFlexcacheRawClientRequestedBlocks)
	return o
}

// SetStatisticsFlexcacheRawClientRequestedBlocksQueryParameter adds the statisticsFlexcacheRawClientRequestedBlocks to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsFlexcacheRawClientRequestedBlocksQueryParameter(statisticsFlexcacheRawClientRequestedBlocks *int64) {
	o.StatisticsFlexcacheRawClientRequestedBlocksQueryParameter = statisticsFlexcacheRawClientRequestedBlocks
}

// WithStatisticsFlexcacheRawStatusQueryParameter adds the statisticsFlexcacheRawStatus to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsFlexcacheRawStatusQueryParameter(statisticsFlexcacheRawStatus *string) *VolumeCollectionGetParams {
	o.SetStatisticsFlexcacheRawStatusQueryParameter(statisticsFlexcacheRawStatus)
	return o
}

// SetStatisticsFlexcacheRawStatusQueryParameter adds the statisticsFlexcacheRawStatus to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsFlexcacheRawStatusQueryParameter(statisticsFlexcacheRawStatus *string) {
	o.StatisticsFlexcacheRawStatusQueryParameter = statisticsFlexcacheRawStatus
}

// WithStatisticsFlexcacheRawTimestampQueryParameter adds the statisticsFlexcacheRawTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsFlexcacheRawTimestampQueryParameter(statisticsFlexcacheRawTimestamp *string) *VolumeCollectionGetParams {
	o.SetStatisticsFlexcacheRawTimestampQueryParameter(statisticsFlexcacheRawTimestamp)
	return o
}

// SetStatisticsFlexcacheRawTimestampQueryParameter adds the statisticsFlexcacheRawTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsFlexcacheRawTimestampQueryParameter(statisticsFlexcacheRawTimestamp *string) {
	o.StatisticsFlexcacheRawTimestampQueryParameter = statisticsFlexcacheRawTimestamp
}

// WithStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) *VolumeCollectionGetParams {
	o.SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther)
	return o
}

// SetStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) {
	o.StatisticsIopsRawOtherQueryParameter = statisticsIopsRawOther
}

// WithStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) *VolumeCollectionGetParams {
	o.SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead)
	return o
}

// SetStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) {
	o.StatisticsIopsRawReadQueryParameter = statisticsIopsRawRead
}

// WithStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) *VolumeCollectionGetParams {
	o.SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal)
	return o
}

// SetStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) {
	o.StatisticsIopsRawTotalQueryParameter = statisticsIopsRawTotal
}

// WithStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) *VolumeCollectionGetParams {
	o.SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite)
	return o
}

// SetStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) {
	o.StatisticsIopsRawWriteQueryParameter = statisticsIopsRawWrite
}

// WithStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) *VolumeCollectionGetParams {
	o.SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther)
	return o
}

// SetStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) {
	o.StatisticsLatencyRawOtherQueryParameter = statisticsLatencyRawOther
}

// WithStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) *VolumeCollectionGetParams {
	o.SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead)
	return o
}

// SetStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) {
	o.StatisticsLatencyRawReadQueryParameter = statisticsLatencyRawRead
}

// WithStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) *VolumeCollectionGetParams {
	o.SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal)
	return o
}

// SetStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) {
	o.StatisticsLatencyRawTotalQueryParameter = statisticsLatencyRawTotal
}

// WithStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) *VolumeCollectionGetParams {
	o.SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite)
	return o
}

// SetStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) {
	o.StatisticsLatencyRawWriteQueryParameter = statisticsLatencyRawWrite
}

// WithStatisticsNfsOpsRawAccessCountQueryParameter adds the statisticsNfsOpsRawAccessCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawAccessCountQueryParameter(statisticsNfsOpsRawAccessCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawAccessCountQueryParameter(statisticsNfsOpsRawAccessCount)
	return o
}

// SetStatisticsNfsOpsRawAccessCountQueryParameter adds the statisticsNfsOpsRawAccessCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawAccessCountQueryParameter(statisticsNfsOpsRawAccessCount *int64) {
	o.StatisticsNfsOpsRawAccessCountQueryParameter = statisticsNfsOpsRawAccessCount
}

// WithStatisticsNfsOpsRawAccessTotalTimeQueryParameter adds the statisticsNfsOpsRawAccessTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawAccessTotalTimeQueryParameter(statisticsNfsOpsRawAccessTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawAccessTotalTimeQueryParameter(statisticsNfsOpsRawAccessTotalTime)
	return o
}

// SetStatisticsNfsOpsRawAccessTotalTimeQueryParameter adds the statisticsNfsOpsRawAccessTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawAccessTotalTimeQueryParameter(statisticsNfsOpsRawAccessTotalTime *int64) {
	o.StatisticsNfsOpsRawAccessTotalTimeQueryParameter = statisticsNfsOpsRawAccessTotalTime
}

// WithStatisticsNfsOpsRawAuditCountQueryParameter adds the statisticsNfsOpsRawAuditCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawAuditCountQueryParameter(statisticsNfsOpsRawAuditCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawAuditCountQueryParameter(statisticsNfsOpsRawAuditCount)
	return o
}

// SetStatisticsNfsOpsRawAuditCountQueryParameter adds the statisticsNfsOpsRawAuditCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawAuditCountQueryParameter(statisticsNfsOpsRawAuditCount *int64) {
	o.StatisticsNfsOpsRawAuditCountQueryParameter = statisticsNfsOpsRawAuditCount
}

// WithStatisticsNfsOpsRawAuditTotalTimeQueryParameter adds the statisticsNfsOpsRawAuditTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawAuditTotalTimeQueryParameter(statisticsNfsOpsRawAuditTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawAuditTotalTimeQueryParameter(statisticsNfsOpsRawAuditTotalTime)
	return o
}

// SetStatisticsNfsOpsRawAuditTotalTimeQueryParameter adds the statisticsNfsOpsRawAuditTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawAuditTotalTimeQueryParameter(statisticsNfsOpsRawAuditTotalTime *int64) {
	o.StatisticsNfsOpsRawAuditTotalTimeQueryParameter = statisticsNfsOpsRawAuditTotalTime
}

// WithStatisticsNfsOpsRawCreateDirCountQueryParameter adds the statisticsNfsOpsRawCreateDirCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateDirCountQueryParameter(statisticsNfsOpsRawCreateDirCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateDirCountQueryParameter(statisticsNfsOpsRawCreateDirCount)
	return o
}

// SetStatisticsNfsOpsRawCreateDirCountQueryParameter adds the statisticsNfsOpsRawCreateDirCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateDirCountQueryParameter(statisticsNfsOpsRawCreateDirCount *int64) {
	o.StatisticsNfsOpsRawCreateDirCountQueryParameter = statisticsNfsOpsRawCreateDirCount
}

// WithStatisticsNfsOpsRawCreateDirTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateDirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateDirTotalTimeQueryParameter(statisticsNfsOpsRawCreateDirTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateDirTotalTimeQueryParameter(statisticsNfsOpsRawCreateDirTotalTime)
	return o
}

// SetStatisticsNfsOpsRawCreateDirTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateDirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateDirTotalTimeQueryParameter(statisticsNfsOpsRawCreateDirTotalTime *int64) {
	o.StatisticsNfsOpsRawCreateDirTotalTimeQueryParameter = statisticsNfsOpsRawCreateDirTotalTime
}

// WithStatisticsNfsOpsRawCreateFileCountQueryParameter adds the statisticsNfsOpsRawCreateFileCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateFileCountQueryParameter(statisticsNfsOpsRawCreateFileCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateFileCountQueryParameter(statisticsNfsOpsRawCreateFileCount)
	return o
}

// SetStatisticsNfsOpsRawCreateFileCountQueryParameter adds the statisticsNfsOpsRawCreateFileCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateFileCountQueryParameter(statisticsNfsOpsRawCreateFileCount *int64) {
	o.StatisticsNfsOpsRawCreateFileCountQueryParameter = statisticsNfsOpsRawCreateFileCount
}

// WithStatisticsNfsOpsRawCreateFileTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateFileTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateFileTotalTimeQueryParameter(statisticsNfsOpsRawCreateFileTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateFileTotalTimeQueryParameter(statisticsNfsOpsRawCreateFileTotalTime)
	return o
}

// SetStatisticsNfsOpsRawCreateFileTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateFileTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateFileTotalTimeQueryParameter(statisticsNfsOpsRawCreateFileTotalTime *int64) {
	o.StatisticsNfsOpsRawCreateFileTotalTimeQueryParameter = statisticsNfsOpsRawCreateFileTotalTime
}

// WithStatisticsNfsOpsRawCreateOtherCountQueryParameter adds the statisticsNfsOpsRawCreateOtherCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateOtherCountQueryParameter(statisticsNfsOpsRawCreateOtherCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateOtherCountQueryParameter(statisticsNfsOpsRawCreateOtherCount)
	return o
}

// SetStatisticsNfsOpsRawCreateOtherCountQueryParameter adds the statisticsNfsOpsRawCreateOtherCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateOtherCountQueryParameter(statisticsNfsOpsRawCreateOtherCount *int64) {
	o.StatisticsNfsOpsRawCreateOtherCountQueryParameter = statisticsNfsOpsRawCreateOtherCount
}

// WithStatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateOtherTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter(statisticsNfsOpsRawCreateOtherTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter(statisticsNfsOpsRawCreateOtherTotalTime)
	return o
}

// SetStatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateOtherTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter(statisticsNfsOpsRawCreateOtherTotalTime *int64) {
	o.StatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter = statisticsNfsOpsRawCreateOtherTotalTime
}

// WithStatisticsNfsOpsRawCreateSymlinkCountQueryParameter adds the statisticsNfsOpsRawCreateSymlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateSymlinkCountQueryParameter(statisticsNfsOpsRawCreateSymlinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateSymlinkCountQueryParameter(statisticsNfsOpsRawCreateSymlinkCount)
	return o
}

// SetStatisticsNfsOpsRawCreateSymlinkCountQueryParameter adds the statisticsNfsOpsRawCreateSymlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateSymlinkCountQueryParameter(statisticsNfsOpsRawCreateSymlinkCount *int64) {
	o.StatisticsNfsOpsRawCreateSymlinkCountQueryParameter = statisticsNfsOpsRawCreateSymlinkCount
}

// WithStatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateSymlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter(statisticsNfsOpsRawCreateSymlinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter(statisticsNfsOpsRawCreateSymlinkTotalTime)
	return o
}

// SetStatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter adds the statisticsNfsOpsRawCreateSymlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter(statisticsNfsOpsRawCreateSymlinkTotalTime *int64) {
	o.StatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter = statisticsNfsOpsRawCreateSymlinkTotalTime
}

// WithStatisticsNfsOpsRawGetattrCountQueryParameter adds the statisticsNfsOpsRawGetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawGetattrCountQueryParameter(statisticsNfsOpsRawGetattrCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawGetattrCountQueryParameter(statisticsNfsOpsRawGetattrCount)
	return o
}

// SetStatisticsNfsOpsRawGetattrCountQueryParameter adds the statisticsNfsOpsRawGetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawGetattrCountQueryParameter(statisticsNfsOpsRawGetattrCount *int64) {
	o.StatisticsNfsOpsRawGetattrCountQueryParameter = statisticsNfsOpsRawGetattrCount
}

// WithStatisticsNfsOpsRawGetattrTotalTimeQueryParameter adds the statisticsNfsOpsRawGetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawGetattrTotalTimeQueryParameter(statisticsNfsOpsRawGetattrTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawGetattrTotalTimeQueryParameter(statisticsNfsOpsRawGetattrTotalTime)
	return o
}

// SetStatisticsNfsOpsRawGetattrTotalTimeQueryParameter adds the statisticsNfsOpsRawGetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawGetattrTotalTimeQueryParameter(statisticsNfsOpsRawGetattrTotalTime *int64) {
	o.StatisticsNfsOpsRawGetattrTotalTimeQueryParameter = statisticsNfsOpsRawGetattrTotalTime
}

// WithStatisticsNfsOpsRawLinkCountQueryParameter adds the statisticsNfsOpsRawLinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawLinkCountQueryParameter(statisticsNfsOpsRawLinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawLinkCountQueryParameter(statisticsNfsOpsRawLinkCount)
	return o
}

// SetStatisticsNfsOpsRawLinkCountQueryParameter adds the statisticsNfsOpsRawLinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawLinkCountQueryParameter(statisticsNfsOpsRawLinkCount *int64) {
	o.StatisticsNfsOpsRawLinkCountQueryParameter = statisticsNfsOpsRawLinkCount
}

// WithStatisticsNfsOpsRawLinkTotalTimeQueryParameter adds the statisticsNfsOpsRawLinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawLinkTotalTimeQueryParameter(statisticsNfsOpsRawLinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawLinkTotalTimeQueryParameter(statisticsNfsOpsRawLinkTotalTime)
	return o
}

// SetStatisticsNfsOpsRawLinkTotalTimeQueryParameter adds the statisticsNfsOpsRawLinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawLinkTotalTimeQueryParameter(statisticsNfsOpsRawLinkTotalTime *int64) {
	o.StatisticsNfsOpsRawLinkTotalTimeQueryParameter = statisticsNfsOpsRawLinkTotalTime
}

// WithStatisticsNfsOpsRawLockCountQueryParameter adds the statisticsNfsOpsRawLockCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawLockCountQueryParameter(statisticsNfsOpsRawLockCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawLockCountQueryParameter(statisticsNfsOpsRawLockCount)
	return o
}

// SetStatisticsNfsOpsRawLockCountQueryParameter adds the statisticsNfsOpsRawLockCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawLockCountQueryParameter(statisticsNfsOpsRawLockCount *int64) {
	o.StatisticsNfsOpsRawLockCountQueryParameter = statisticsNfsOpsRawLockCount
}

// WithStatisticsNfsOpsRawLockTotalTimeQueryParameter adds the statisticsNfsOpsRawLockTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawLockTotalTimeQueryParameter(statisticsNfsOpsRawLockTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawLockTotalTimeQueryParameter(statisticsNfsOpsRawLockTotalTime)
	return o
}

// SetStatisticsNfsOpsRawLockTotalTimeQueryParameter adds the statisticsNfsOpsRawLockTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawLockTotalTimeQueryParameter(statisticsNfsOpsRawLockTotalTime *int64) {
	o.StatisticsNfsOpsRawLockTotalTimeQueryParameter = statisticsNfsOpsRawLockTotalTime
}

// WithStatisticsNfsOpsRawLookupCountQueryParameter adds the statisticsNfsOpsRawLookupCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawLookupCountQueryParameter(statisticsNfsOpsRawLookupCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawLookupCountQueryParameter(statisticsNfsOpsRawLookupCount)
	return o
}

// SetStatisticsNfsOpsRawLookupCountQueryParameter adds the statisticsNfsOpsRawLookupCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawLookupCountQueryParameter(statisticsNfsOpsRawLookupCount *int64) {
	o.StatisticsNfsOpsRawLookupCountQueryParameter = statisticsNfsOpsRawLookupCount
}

// WithStatisticsNfsOpsRawLookupTotalTimeQueryParameter adds the statisticsNfsOpsRawLookupTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawLookupTotalTimeQueryParameter(statisticsNfsOpsRawLookupTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawLookupTotalTimeQueryParameter(statisticsNfsOpsRawLookupTotalTime)
	return o
}

// SetStatisticsNfsOpsRawLookupTotalTimeQueryParameter adds the statisticsNfsOpsRawLookupTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawLookupTotalTimeQueryParameter(statisticsNfsOpsRawLookupTotalTime *int64) {
	o.StatisticsNfsOpsRawLookupTotalTimeQueryParameter = statisticsNfsOpsRawLookupTotalTime
}

// WithStatisticsNfsOpsRawOpenCountQueryParameter adds the statisticsNfsOpsRawOpenCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawOpenCountQueryParameter(statisticsNfsOpsRawOpenCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawOpenCountQueryParameter(statisticsNfsOpsRawOpenCount)
	return o
}

// SetStatisticsNfsOpsRawOpenCountQueryParameter adds the statisticsNfsOpsRawOpenCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawOpenCountQueryParameter(statisticsNfsOpsRawOpenCount *int64) {
	o.StatisticsNfsOpsRawOpenCountQueryParameter = statisticsNfsOpsRawOpenCount
}

// WithStatisticsNfsOpsRawOpenTotalTimeQueryParameter adds the statisticsNfsOpsRawOpenTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawOpenTotalTimeQueryParameter(statisticsNfsOpsRawOpenTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawOpenTotalTimeQueryParameter(statisticsNfsOpsRawOpenTotalTime)
	return o
}

// SetStatisticsNfsOpsRawOpenTotalTimeQueryParameter adds the statisticsNfsOpsRawOpenTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawOpenTotalTimeQueryParameter(statisticsNfsOpsRawOpenTotalTime *int64) {
	o.StatisticsNfsOpsRawOpenTotalTimeQueryParameter = statisticsNfsOpsRawOpenTotalTime
}

// WithStatisticsNfsOpsRawReadCountQueryParameter adds the statisticsNfsOpsRawReadCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadCountQueryParameter(statisticsNfsOpsRawReadCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadCountQueryParameter(statisticsNfsOpsRawReadCount)
	return o
}

// SetStatisticsNfsOpsRawReadCountQueryParameter adds the statisticsNfsOpsRawReadCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadCountQueryParameter(statisticsNfsOpsRawReadCount *int64) {
	o.StatisticsNfsOpsRawReadCountQueryParameter = statisticsNfsOpsRawReadCount
}

// WithStatisticsNfsOpsRawReadTotalTimeQueryParameter adds the statisticsNfsOpsRawReadTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadTotalTimeQueryParameter(statisticsNfsOpsRawReadTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadTotalTimeQueryParameter(statisticsNfsOpsRawReadTotalTime)
	return o
}

// SetStatisticsNfsOpsRawReadTotalTimeQueryParameter adds the statisticsNfsOpsRawReadTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadTotalTimeQueryParameter(statisticsNfsOpsRawReadTotalTime *int64) {
	o.StatisticsNfsOpsRawReadTotalTimeQueryParameter = statisticsNfsOpsRawReadTotalTime
}

// WithStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts)
	return o
}

// SetStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts *int64) {
	o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter = statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts
}

// WithStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels)
	return o
}

// SetStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels *string) {
	o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter = statisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels
}

// WithStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts)
	return o
}

// SetStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts *int64) {
	o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter = statisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts
}

// WithStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels)
	return o
}

// SetStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels *string) {
	o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter = statisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels
}

// WithStatisticsNfsOpsRawReaddirCountQueryParameter adds the statisticsNfsOpsRawReaddirCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReaddirCountQueryParameter(statisticsNfsOpsRawReaddirCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReaddirCountQueryParameter(statisticsNfsOpsRawReaddirCount)
	return o
}

// SetStatisticsNfsOpsRawReaddirCountQueryParameter adds the statisticsNfsOpsRawReaddirCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReaddirCountQueryParameter(statisticsNfsOpsRawReaddirCount *int64) {
	o.StatisticsNfsOpsRawReaddirCountQueryParameter = statisticsNfsOpsRawReaddirCount
}

// WithStatisticsNfsOpsRawReaddirTotalTimeQueryParameter adds the statisticsNfsOpsRawReaddirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReaddirTotalTimeQueryParameter(statisticsNfsOpsRawReaddirTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReaddirTotalTimeQueryParameter(statisticsNfsOpsRawReaddirTotalTime)
	return o
}

// SetStatisticsNfsOpsRawReaddirTotalTimeQueryParameter adds the statisticsNfsOpsRawReaddirTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReaddirTotalTimeQueryParameter(statisticsNfsOpsRawReaddirTotalTime *int64) {
	o.StatisticsNfsOpsRawReaddirTotalTimeQueryParameter = statisticsNfsOpsRawReaddirTotalTime
}

// WithStatisticsNfsOpsRawReadlinkCountQueryParameter adds the statisticsNfsOpsRawReadlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadlinkCountQueryParameter(statisticsNfsOpsRawReadlinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadlinkCountQueryParameter(statisticsNfsOpsRawReadlinkCount)
	return o
}

// SetStatisticsNfsOpsRawReadlinkCountQueryParameter adds the statisticsNfsOpsRawReadlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadlinkCountQueryParameter(statisticsNfsOpsRawReadlinkCount *int64) {
	o.StatisticsNfsOpsRawReadlinkCountQueryParameter = statisticsNfsOpsRawReadlinkCount
}

// WithStatisticsNfsOpsRawReadlinkTotalTimeQueryParameter adds the statisticsNfsOpsRawReadlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawReadlinkTotalTimeQueryParameter(statisticsNfsOpsRawReadlinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawReadlinkTotalTimeQueryParameter(statisticsNfsOpsRawReadlinkTotalTime)
	return o
}

// SetStatisticsNfsOpsRawReadlinkTotalTimeQueryParameter adds the statisticsNfsOpsRawReadlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawReadlinkTotalTimeQueryParameter(statisticsNfsOpsRawReadlinkTotalTime *int64) {
	o.StatisticsNfsOpsRawReadlinkTotalTimeQueryParameter = statisticsNfsOpsRawReadlinkTotalTime
}

// WithStatisticsNfsOpsRawRenameCountQueryParameter adds the statisticsNfsOpsRawRenameCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawRenameCountQueryParameter(statisticsNfsOpsRawRenameCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawRenameCountQueryParameter(statisticsNfsOpsRawRenameCount)
	return o
}

// SetStatisticsNfsOpsRawRenameCountQueryParameter adds the statisticsNfsOpsRawRenameCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawRenameCountQueryParameter(statisticsNfsOpsRawRenameCount *int64) {
	o.StatisticsNfsOpsRawRenameCountQueryParameter = statisticsNfsOpsRawRenameCount
}

// WithStatisticsNfsOpsRawRenameTotalTimeQueryParameter adds the statisticsNfsOpsRawRenameTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawRenameTotalTimeQueryParameter(statisticsNfsOpsRawRenameTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawRenameTotalTimeQueryParameter(statisticsNfsOpsRawRenameTotalTime)
	return o
}

// SetStatisticsNfsOpsRawRenameTotalTimeQueryParameter adds the statisticsNfsOpsRawRenameTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawRenameTotalTimeQueryParameter(statisticsNfsOpsRawRenameTotalTime *int64) {
	o.StatisticsNfsOpsRawRenameTotalTimeQueryParameter = statisticsNfsOpsRawRenameTotalTime
}

// WithStatisticsNfsOpsRawSetattrCountQueryParameter adds the statisticsNfsOpsRawSetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawSetattrCountQueryParameter(statisticsNfsOpsRawSetattrCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawSetattrCountQueryParameter(statisticsNfsOpsRawSetattrCount)
	return o
}

// SetStatisticsNfsOpsRawSetattrCountQueryParameter adds the statisticsNfsOpsRawSetattrCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawSetattrCountQueryParameter(statisticsNfsOpsRawSetattrCount *int64) {
	o.StatisticsNfsOpsRawSetattrCountQueryParameter = statisticsNfsOpsRawSetattrCount
}

// WithStatisticsNfsOpsRawSetattrTotalTimeQueryParameter adds the statisticsNfsOpsRawSetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawSetattrTotalTimeQueryParameter(statisticsNfsOpsRawSetattrTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawSetattrTotalTimeQueryParameter(statisticsNfsOpsRawSetattrTotalTime)
	return o
}

// SetStatisticsNfsOpsRawSetattrTotalTimeQueryParameter adds the statisticsNfsOpsRawSetattrTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawSetattrTotalTimeQueryParameter(statisticsNfsOpsRawSetattrTotalTime *int64) {
	o.StatisticsNfsOpsRawSetattrTotalTimeQueryParameter = statisticsNfsOpsRawSetattrTotalTime
}

// WithStatisticsNfsOpsRawUnlinkCountQueryParameter adds the statisticsNfsOpsRawUnlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawUnlinkCountQueryParameter(statisticsNfsOpsRawUnlinkCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawUnlinkCountQueryParameter(statisticsNfsOpsRawUnlinkCount)
	return o
}

// SetStatisticsNfsOpsRawUnlinkCountQueryParameter adds the statisticsNfsOpsRawUnlinkCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawUnlinkCountQueryParameter(statisticsNfsOpsRawUnlinkCount *int64) {
	o.StatisticsNfsOpsRawUnlinkCountQueryParameter = statisticsNfsOpsRawUnlinkCount
}

// WithStatisticsNfsOpsRawUnlinkTotalTimeQueryParameter adds the statisticsNfsOpsRawUnlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawUnlinkTotalTimeQueryParameter(statisticsNfsOpsRawUnlinkTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawUnlinkTotalTimeQueryParameter(statisticsNfsOpsRawUnlinkTotalTime)
	return o
}

// SetStatisticsNfsOpsRawUnlinkTotalTimeQueryParameter adds the statisticsNfsOpsRawUnlinkTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawUnlinkTotalTimeQueryParameter(statisticsNfsOpsRawUnlinkTotalTime *int64) {
	o.StatisticsNfsOpsRawUnlinkTotalTimeQueryParameter = statisticsNfsOpsRawUnlinkTotalTime
}

// WithStatisticsNfsOpsRawWatchCountQueryParameter adds the statisticsNfsOpsRawWatchCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWatchCountQueryParameter(statisticsNfsOpsRawWatchCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWatchCountQueryParameter(statisticsNfsOpsRawWatchCount)
	return o
}

// SetStatisticsNfsOpsRawWatchCountQueryParameter adds the statisticsNfsOpsRawWatchCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWatchCountQueryParameter(statisticsNfsOpsRawWatchCount *int64) {
	o.StatisticsNfsOpsRawWatchCountQueryParameter = statisticsNfsOpsRawWatchCount
}

// WithStatisticsNfsOpsRawWatchTotalTimeQueryParameter adds the statisticsNfsOpsRawWatchTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWatchTotalTimeQueryParameter(statisticsNfsOpsRawWatchTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWatchTotalTimeQueryParameter(statisticsNfsOpsRawWatchTotalTime)
	return o
}

// SetStatisticsNfsOpsRawWatchTotalTimeQueryParameter adds the statisticsNfsOpsRawWatchTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWatchTotalTimeQueryParameter(statisticsNfsOpsRawWatchTotalTime *int64) {
	o.StatisticsNfsOpsRawWatchTotalTimeQueryParameter = statisticsNfsOpsRawWatchTotalTime
}

// WithStatisticsNfsOpsRawWriteCountQueryParameter adds the statisticsNfsOpsRawWriteCount to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWriteCountQueryParameter(statisticsNfsOpsRawWriteCount *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWriteCountQueryParameter(statisticsNfsOpsRawWriteCount)
	return o
}

// SetStatisticsNfsOpsRawWriteCountQueryParameter adds the statisticsNfsOpsRawWriteCount to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWriteCountQueryParameter(statisticsNfsOpsRawWriteCount *int64) {
	o.StatisticsNfsOpsRawWriteCountQueryParameter = statisticsNfsOpsRawWriteCount
}

// WithStatisticsNfsOpsRawWriteTotalTimeQueryParameter adds the statisticsNfsOpsRawWriteTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWriteTotalTimeQueryParameter(statisticsNfsOpsRawWriteTotalTime *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWriteTotalTimeQueryParameter(statisticsNfsOpsRawWriteTotalTime)
	return o
}

// SetStatisticsNfsOpsRawWriteTotalTimeQueryParameter adds the statisticsNfsOpsRawWriteTotalTime to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWriteTotalTimeQueryParameter(statisticsNfsOpsRawWriteTotalTime *int64) {
	o.StatisticsNfsOpsRawWriteTotalTimeQueryParameter = statisticsNfsOpsRawWriteTotalTime
}

// WithStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts)
	return o
}

// SetStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts *int64) {
	o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter = statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts
}

// WithStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels)
	return o
}

// SetStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels *string) {
	o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter = statisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels
}

// WithStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts *int64) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts)
	return o
}

// SetStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts *int64) {
	o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter = statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts
}

// WithStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels *string) *VolumeCollectionGetParams {
	o.SetStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels)
	return o
}

// SetStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter adds the statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter(statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels *string) {
	o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter = statisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels
}

// WithStatisticsStatusQueryParameter adds the statisticsStatus to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsStatusQueryParameter(statisticsStatus *string) *VolumeCollectionGetParams {
	o.SetStatisticsStatusQueryParameter(statisticsStatus)
	return o
}

// SetStatisticsStatusQueryParameter adds the statisticsStatus to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsStatusQueryParameter(statisticsStatus *string) {
	o.StatisticsStatusQueryParameter = statisticsStatus
}

// WithStatisticsThroughputRawOtherQueryParameter adds the statisticsThroughputRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther *int64) *VolumeCollectionGetParams {
	o.SetStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther)
	return o
}

// SetStatisticsThroughputRawOtherQueryParameter adds the statisticsThroughputRawOther to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther *int64) {
	o.StatisticsThroughputRawOtherQueryParameter = statisticsThroughputRawOther
}

// WithStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) *VolumeCollectionGetParams {
	o.SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead)
	return o
}

// SetStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) {
	o.StatisticsThroughputRawReadQueryParameter = statisticsThroughputRawRead
}

// WithStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) *VolumeCollectionGetParams {
	o.SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal)
	return o
}

// SetStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) {
	o.StatisticsThroughputRawTotalQueryParameter = statisticsThroughputRawTotal
}

// WithStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) *VolumeCollectionGetParams {
	o.SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite)
	return o
}

// SetStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) {
	o.StatisticsThroughputRawWriteQueryParameter = statisticsThroughputRawWrite
}

// WithStatisticsTimestampQueryParameter adds the statisticsTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatisticsTimestampQueryParameter(statisticsTimestamp *string) *VolumeCollectionGetParams {
	o.SetStatisticsTimestampQueryParameter(statisticsTimestamp)
	return o
}

// SetStatisticsTimestampQueryParameter adds the statisticsTimestamp to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatisticsTimestampQueryParameter(statisticsTimestamp *string) {
	o.StatisticsTimestampQueryParameter = statisticsTimestamp
}

// WithStatusQueryParameter adds the status to the volume collection get params
func (o *VolumeCollectionGetParams) WithStatusQueryParameter(status *string) *VolumeCollectionGetParams {
	o.SetStatusQueryParameter(status)
	return o
}

// SetStatusQueryParameter adds the status to the volume collection get params
func (o *VolumeCollectionGetParams) SetStatusQueryParameter(status *string) {
	o.StatusQueryParameter = status
}

// WithStyleQueryParameter adds the style to the volume collection get params
func (o *VolumeCollectionGetParams) WithStyleQueryParameter(style *string) *VolumeCollectionGetParams {
	o.SetStyleQueryParameter(style)
	return o
}

// SetStyleQueryParameter adds the style to the volume collection get params
func (o *VolumeCollectionGetParams) SetStyleQueryParameter(style *string) {
	o.StyleQueryParameter = style
}

// WithSVMNameQueryParameter adds the svmName to the volume collection get params
func (o *VolumeCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *VolumeCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the volume collection get params
func (o *VolumeCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the volume collection get params
func (o *VolumeCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *VolumeCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithTieringMinCoolingDaysQueryParameter adds the tieringMinCoolingDays to the volume collection get params
func (o *VolumeCollectionGetParams) WithTieringMinCoolingDaysQueryParameter(tieringMinCoolingDays *int64) *VolumeCollectionGetParams {
	o.SetTieringMinCoolingDaysQueryParameter(tieringMinCoolingDays)
	return o
}

// SetTieringMinCoolingDaysQueryParameter adds the tieringMinCoolingDays to the volume collection get params
func (o *VolumeCollectionGetParams) SetTieringMinCoolingDaysQueryParameter(tieringMinCoolingDays *int64) {
	o.TieringMinCoolingDaysQueryParameter = tieringMinCoolingDays
}

// WithTieringObjectTagsQueryParameter adds the tieringObjectTags to the volume collection get params
func (o *VolumeCollectionGetParams) WithTieringObjectTagsQueryParameter(tieringObjectTags *string) *VolumeCollectionGetParams {
	o.SetTieringObjectTagsQueryParameter(tieringObjectTags)
	return o
}

// SetTieringObjectTagsQueryParameter adds the tieringObjectTags to the volume collection get params
func (o *VolumeCollectionGetParams) SetTieringObjectTagsQueryParameter(tieringObjectTags *string) {
	o.TieringObjectTagsQueryParameter = tieringObjectTags
}

// WithTieringPolicyQueryParameter adds the tieringPolicy to the volume collection get params
func (o *VolumeCollectionGetParams) WithTieringPolicyQueryParameter(tieringPolicy *string) *VolumeCollectionGetParams {
	o.SetTieringPolicyQueryParameter(tieringPolicy)
	return o
}

// SetTieringPolicyQueryParameter adds the tieringPolicy to the volume collection get params
func (o *VolumeCollectionGetParams) SetTieringPolicyQueryParameter(tieringPolicy *string) {
	o.TieringPolicyQueryParameter = tieringPolicy
}

// WithTypeQueryParameter adds the typeVar to the volume collection get params
func (o *VolumeCollectionGetParams) WithTypeQueryParameter(typeVar *string) *VolumeCollectionGetParams {
	o.SetTypeQueryParameter(typeVar)
	return o
}

// SetTypeQueryParameter adds the type to the volume collection get params
func (o *VolumeCollectionGetParams) SetTypeQueryParameter(typeVar *string) {
	o.TypeQueryParameter = typeVar
}

// WithUUIDQueryParameter adds the uuid to the volume collection get params
func (o *VolumeCollectionGetParams) WithUUIDQueryParameter(uuid *string) *VolumeCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the volume collection get params
func (o *VolumeCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *VolumeCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessTimeEnabledQueryParameter != nil {

		// query param access_time_enabled
		var qrAccessTimeEnabled bool

		if o.AccessTimeEnabledQueryParameter != nil {
			qrAccessTimeEnabled = *o.AccessTimeEnabledQueryParameter
		}
		qAccessTimeEnabled := swag.FormatBool(qrAccessTimeEnabled)
		if qAccessTimeEnabled != "" {

			if err := r.SetQueryParam("access_time_enabled", qAccessTimeEnabled); err != nil {
				return err
			}
		}
	}

	if o.ActivityTrackingStateQueryParameter != nil {

		// query param activity_tracking.state
		var qrActivityTrackingState string

		if o.ActivityTrackingStateQueryParameter != nil {
			qrActivityTrackingState = *o.ActivityTrackingStateQueryParameter
		}
		qActivityTrackingState := qrActivityTrackingState
		if qActivityTrackingState != "" {

			if err := r.SetQueryParam("activity_tracking.state", qActivityTrackingState); err != nil {
				return err
			}
		}
	}

	if o.ActivityTrackingSupportedQueryParameter != nil {

		// query param activity_tracking.supported
		var qrActivityTrackingSupported bool

		if o.ActivityTrackingSupportedQueryParameter != nil {
			qrActivityTrackingSupported = *o.ActivityTrackingSupportedQueryParameter
		}
		qActivityTrackingSupported := swag.FormatBool(qrActivityTrackingSupported)
		if qActivityTrackingSupported != "" {

			if err := r.SetQueryParam("activity_tracking.supported", qActivityTrackingSupported); err != nil {
				return err
			}
		}
	}

	if o.ActivityTrackingUnsupportedReasonCodeQueryParameter != nil {

		// query param activity_tracking.unsupported_reason.code
		var qrActivityTrackingUnsupportedReasonCode string

		if o.ActivityTrackingUnsupportedReasonCodeQueryParameter != nil {
			qrActivityTrackingUnsupportedReasonCode = *o.ActivityTrackingUnsupportedReasonCodeQueryParameter
		}
		qActivityTrackingUnsupportedReasonCode := qrActivityTrackingUnsupportedReasonCode
		if qActivityTrackingUnsupportedReasonCode != "" {

			if err := r.SetQueryParam("activity_tracking.unsupported_reason.code", qActivityTrackingUnsupportedReasonCode); err != nil {
				return err
			}
		}
	}

	if o.ActivityTrackingUnsupportedReasonMessageQueryParameter != nil {

		// query param activity_tracking.unsupported_reason.message
		var qrActivityTrackingUnsupportedReasonMessage string

		if o.ActivityTrackingUnsupportedReasonMessageQueryParameter != nil {
			qrActivityTrackingUnsupportedReasonMessage = *o.ActivityTrackingUnsupportedReasonMessageQueryParameter
		}
		qActivityTrackingUnsupportedReasonMessage := qrActivityTrackingUnsupportedReasonMessage
		if qActivityTrackingUnsupportedReasonMessage != "" {

			if err := r.SetQueryParam("activity_tracking.unsupported_reason.message", qActivityTrackingUnsupportedReasonMessage); err != nil {
				return err
			}
		}
	}

	if o.AggregatesNameQueryParameter != nil {

		// query param aggregates.name
		var qrAggregatesName string

		if o.AggregatesNameQueryParameter != nil {
			qrAggregatesName = *o.AggregatesNameQueryParameter
		}
		qAggregatesName := qrAggregatesName
		if qAggregatesName != "" {

			if err := r.SetQueryParam("aggregates.name", qAggregatesName); err != nil {
				return err
			}
		}
	}

	if o.AggregatesUUIDQueryParameter != nil {

		// query param aggregates.uuid
		var qrAggregatesUUID string

		if o.AggregatesUUIDQueryParameter != nil {
			qrAggregatesUUID = *o.AggregatesUUIDQueryParameter
		}
		qAggregatesUUID := qrAggregatesUUID
		if qAggregatesUUID != "" {

			if err := r.SetQueryParam("aggregates.uuid", qAggregatesUUID); err != nil {
				return err
			}
		}
	}

	if o.AnalyticsScanProgressQueryParameter != nil {

		// query param analytics.scan_progress
		var qrAnalyticsScanProgress int64

		if o.AnalyticsScanProgressQueryParameter != nil {
			qrAnalyticsScanProgress = *o.AnalyticsScanProgressQueryParameter
		}
		qAnalyticsScanProgress := swag.FormatInt64(qrAnalyticsScanProgress)
		if qAnalyticsScanProgress != "" {

			if err := r.SetQueryParam("analytics.scan_progress", qAnalyticsScanProgress); err != nil {
				return err
			}
		}
	}

	if o.AnalyticsStateQueryParameter != nil {

		// query param analytics.state
		var qrAnalyticsState string

		if o.AnalyticsStateQueryParameter != nil {
			qrAnalyticsState = *o.AnalyticsStateQueryParameter
		}
		qAnalyticsState := qrAnalyticsState
		if qAnalyticsState != "" {

			if err := r.SetQueryParam("analytics.state", qAnalyticsState); err != nil {
				return err
			}
		}
	}

	if o.AnalyticsSupportedQueryParameter != nil {

		// query param analytics.supported
		var qrAnalyticsSupported bool

		if o.AnalyticsSupportedQueryParameter != nil {
			qrAnalyticsSupported = *o.AnalyticsSupportedQueryParameter
		}
		qAnalyticsSupported := swag.FormatBool(qrAnalyticsSupported)
		if qAnalyticsSupported != "" {

			if err := r.SetQueryParam("analytics.supported", qAnalyticsSupported); err != nil {
				return err
			}
		}
	}

	if o.AnalyticsUnsupportedReasonCodeQueryParameter != nil {

		// query param analytics.unsupported_reason.code
		var qrAnalyticsUnsupportedReasonCode string

		if o.AnalyticsUnsupportedReasonCodeQueryParameter != nil {
			qrAnalyticsUnsupportedReasonCode = *o.AnalyticsUnsupportedReasonCodeQueryParameter
		}
		qAnalyticsUnsupportedReasonCode := qrAnalyticsUnsupportedReasonCode
		if qAnalyticsUnsupportedReasonCode != "" {

			if err := r.SetQueryParam("analytics.unsupported_reason.code", qAnalyticsUnsupportedReasonCode); err != nil {
				return err
			}
		}
	}

	if o.AnalyticsUnsupportedReasonMessageQueryParameter != nil {

		// query param analytics.unsupported_reason.message
		var qrAnalyticsUnsupportedReasonMessage string

		if o.AnalyticsUnsupportedReasonMessageQueryParameter != nil {
			qrAnalyticsUnsupportedReasonMessage = *o.AnalyticsUnsupportedReasonMessageQueryParameter
		}
		qAnalyticsUnsupportedReasonMessage := qrAnalyticsUnsupportedReasonMessage
		if qAnalyticsUnsupportedReasonMessage != "" {

			if err := r.SetQueryParam("analytics.unsupported_reason.message", qAnalyticsUnsupportedReasonMessage); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareAttackProbabilityQueryParameter != nil {

		// query param anti_ransomware.attack_probability
		var qrAntiRansomwareAttackProbability string

		if o.AntiRansomwareAttackProbabilityQueryParameter != nil {
			qrAntiRansomwareAttackProbability = *o.AntiRansomwareAttackProbabilityQueryParameter
		}
		qAntiRansomwareAttackProbability := qrAntiRansomwareAttackProbability
		if qAntiRansomwareAttackProbability != "" {

			if err := r.SetQueryParam("anti_ransomware.attack_probability", qAntiRansomwareAttackProbability); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareAttackReportsTimeQueryParameter != nil {

		// query param anti_ransomware.attack_reports.time
		var qrAntiRansomwareAttackReportsTime string

		if o.AntiRansomwareAttackReportsTimeQueryParameter != nil {
			qrAntiRansomwareAttackReportsTime = *o.AntiRansomwareAttackReportsTimeQueryParameter
		}
		qAntiRansomwareAttackReportsTime := qrAntiRansomwareAttackReportsTime
		if qAntiRansomwareAttackReportsTime != "" {

			if err := r.SetQueryParam("anti_ransomware.attack_reports.time", qAntiRansomwareAttackReportsTime); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareDryRunStartTimeQueryParameter != nil {

		// query param anti_ransomware.dry_run_start_time
		var qrAntiRansomwareDryRunStartTime string

		if o.AntiRansomwareDryRunStartTimeQueryParameter != nil {
			qrAntiRansomwareDryRunStartTime = *o.AntiRansomwareDryRunStartTimeQueryParameter
		}
		qAntiRansomwareDryRunStartTime := qrAntiRansomwareDryRunStartTime
		if qAntiRansomwareDryRunStartTime != "" {

			if err := r.SetQueryParam("anti_ransomware.dry_run_start_time", qAntiRansomwareDryRunStartTime); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSpaceSnapshotCountQueryParameter != nil {

		// query param anti_ransomware.space.snapshot_count
		var qrAntiRansomwareSpaceSnapshotCount int64

		if o.AntiRansomwareSpaceSnapshotCountQueryParameter != nil {
			qrAntiRansomwareSpaceSnapshotCount = *o.AntiRansomwareSpaceSnapshotCountQueryParameter
		}
		qAntiRansomwareSpaceSnapshotCount := swag.FormatInt64(qrAntiRansomwareSpaceSnapshotCount)
		if qAntiRansomwareSpaceSnapshotCount != "" {

			if err := r.SetQueryParam("anti_ransomware.space.snapshot_count", qAntiRansomwareSpaceSnapshotCount); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSpaceUsedQueryParameter != nil {

		// query param anti_ransomware.space.used
		var qrAntiRansomwareSpaceUsed int64

		if o.AntiRansomwareSpaceUsedQueryParameter != nil {
			qrAntiRansomwareSpaceUsed = *o.AntiRansomwareSpaceUsedQueryParameter
		}
		qAntiRansomwareSpaceUsed := swag.FormatInt64(qrAntiRansomwareSpaceUsed)
		if qAntiRansomwareSpaceUsed != "" {

			if err := r.SetQueryParam("anti_ransomware.space.used", qAntiRansomwareSpaceUsed); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSpaceUsedByLogsQueryParameter != nil {

		// query param anti_ransomware.space.used_by_logs
		var qrAntiRansomwareSpaceUsedByLogs int64

		if o.AntiRansomwareSpaceUsedByLogsQueryParameter != nil {
			qrAntiRansomwareSpaceUsedByLogs = *o.AntiRansomwareSpaceUsedByLogsQueryParameter
		}
		qAntiRansomwareSpaceUsedByLogs := swag.FormatInt64(qrAntiRansomwareSpaceUsedByLogs)
		if qAntiRansomwareSpaceUsedByLogs != "" {

			if err := r.SetQueryParam("anti_ransomware.space.used_by_logs", qAntiRansomwareSpaceUsedByLogs); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSpaceUsedBySnapshotsQueryParameter != nil {

		// query param anti_ransomware.space.used_by_snapshots
		var qrAntiRansomwareSpaceUsedBySnapshots int64

		if o.AntiRansomwareSpaceUsedBySnapshotsQueryParameter != nil {
			qrAntiRansomwareSpaceUsedBySnapshots = *o.AntiRansomwareSpaceUsedBySnapshotsQueryParameter
		}
		qAntiRansomwareSpaceUsedBySnapshots := swag.FormatInt64(qrAntiRansomwareSpaceUsedBySnapshots)
		if qAntiRansomwareSpaceUsedBySnapshots != "" {

			if err := r.SetQueryParam("anti_ransomware.space.used_by_snapshots", qAntiRansomwareSpaceUsedBySnapshots); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareStateQueryParameter != nil {

		// query param anti_ransomware.state
		var qrAntiRansomwareState string

		if o.AntiRansomwareStateQueryParameter != nil {
			qrAntiRansomwareState = *o.AntiRansomwareStateQueryParameter
		}
		qAntiRansomwareState := qrAntiRansomwareState
		if qAntiRansomwareState != "" {

			if err := r.SetQueryParam("anti_ransomware.state", qAntiRansomwareState); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSurgeAsNormalQueryParameter != nil {

		// query param anti_ransomware.surge_as_normal
		var qrAntiRansomwareSurgeAsNormal bool

		if o.AntiRansomwareSurgeAsNormalQueryParameter != nil {
			qrAntiRansomwareSurgeAsNormal = *o.AntiRansomwareSurgeAsNormalQueryParameter
		}
		qAntiRansomwareSurgeAsNormal := swag.FormatBool(qrAntiRansomwareSurgeAsNormal)
		if qAntiRansomwareSurgeAsNormal != "" {

			if err := r.SetQueryParam("anti_ransomware.surge_as_normal", qAntiRansomwareSurgeAsNormal); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSuspectFilesCountQueryParameter != nil {

		// query param anti_ransomware.suspect_files.count
		var qrAntiRansomwareSuspectFilesCount int64

		if o.AntiRansomwareSuspectFilesCountQueryParameter != nil {
			qrAntiRansomwareSuspectFilesCount = *o.AntiRansomwareSuspectFilesCountQueryParameter
		}
		qAntiRansomwareSuspectFilesCount := swag.FormatInt64(qrAntiRansomwareSuspectFilesCount)
		if qAntiRansomwareSuspectFilesCount != "" {

			if err := r.SetQueryParam("anti_ransomware.suspect_files.count", qAntiRansomwareSuspectFilesCount); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSuspectFilesEntropyQueryParameter != nil {

		// query param anti_ransomware.suspect_files.entropy
		var qrAntiRansomwareSuspectFilesEntropy string

		if o.AntiRansomwareSuspectFilesEntropyQueryParameter != nil {
			qrAntiRansomwareSuspectFilesEntropy = *o.AntiRansomwareSuspectFilesEntropyQueryParameter
		}
		qAntiRansomwareSuspectFilesEntropy := qrAntiRansomwareSuspectFilesEntropy
		if qAntiRansomwareSuspectFilesEntropy != "" {

			if err := r.SetQueryParam("anti_ransomware.suspect_files.entropy", qAntiRansomwareSuspectFilesEntropy); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareSuspectFilesFormatQueryParameter != nil {

		// query param anti_ransomware.suspect_files.format
		var qrAntiRansomwareSuspectFilesFormat string

		if o.AntiRansomwareSuspectFilesFormatQueryParameter != nil {
			qrAntiRansomwareSuspectFilesFormat = *o.AntiRansomwareSuspectFilesFormatQueryParameter
		}
		qAntiRansomwareSuspectFilesFormat := qrAntiRansomwareSuspectFilesFormat
		if qAntiRansomwareSuspectFilesFormat != "" {

			if err := r.SetQueryParam("anti_ransomware.suspect_files.format", qAntiRansomwareSuspectFilesFormat); err != nil {
				return err
			}
		}
	}

	if o.ApplicationNameQueryParameter != nil {

		// query param application.name
		var qrApplicationName string

		if o.ApplicationNameQueryParameter != nil {
			qrApplicationName = *o.ApplicationNameQueryParameter
		}
		qApplicationName := qrApplicationName
		if qApplicationName != "" {

			if err := r.SetQueryParam("application.name", qApplicationName); err != nil {
				return err
			}
		}
	}

	if o.ApplicationUUIDQueryParameter != nil {

		// query param application.uuid
		var qrApplicationUUID string

		if o.ApplicationUUIDQueryParameter != nil {
			qrApplicationUUID = *o.ApplicationUUIDQueryParameter
		}
		qApplicationUUID := qrApplicationUUID
		if qApplicationUUID != "" {

			if err := r.SetQueryParam("application.uuid", qApplicationUUID); err != nil {
				return err
			}
		}
	}

	if o.AsynchronousDirectoryDeleteEnabledQueryParameter != nil {

		// query param asynchronous_directory_delete.enabled
		var qrAsynchronousDirectoryDeleteEnabled bool

		if o.AsynchronousDirectoryDeleteEnabledQueryParameter != nil {
			qrAsynchronousDirectoryDeleteEnabled = *o.AsynchronousDirectoryDeleteEnabledQueryParameter
		}
		qAsynchronousDirectoryDeleteEnabled := swag.FormatBool(qrAsynchronousDirectoryDeleteEnabled)
		if qAsynchronousDirectoryDeleteEnabled != "" {

			if err := r.SetQueryParam("asynchronous_directory_delete.enabled", qAsynchronousDirectoryDeleteEnabled); err != nil {
				return err
			}
		}
	}

	if o.AsynchronousDirectoryDeleteTrashBinQueryParameter != nil {

		// query param asynchronous_directory_delete.trash_bin
		var qrAsynchronousDirectoryDeleteTrashBin string

		if o.AsynchronousDirectoryDeleteTrashBinQueryParameter != nil {
			qrAsynchronousDirectoryDeleteTrashBin = *o.AsynchronousDirectoryDeleteTrashBinQueryParameter
		}
		qAsynchronousDirectoryDeleteTrashBin := qrAsynchronousDirectoryDeleteTrashBin
		if qAsynchronousDirectoryDeleteTrashBin != "" {

			if err := r.SetQueryParam("asynchronous_directory_delete.trash_bin", qAsynchronousDirectoryDeleteTrashBin); err != nil {
				return err
			}
		}
	}

	if o.AutosizeGrowThresholdQueryParameter != nil {

		// query param autosize.grow_threshold
		var qrAutosizeGrowThreshold int64

		if o.AutosizeGrowThresholdQueryParameter != nil {
			qrAutosizeGrowThreshold = *o.AutosizeGrowThresholdQueryParameter
		}
		qAutosizeGrowThreshold := swag.FormatInt64(qrAutosizeGrowThreshold)
		if qAutosizeGrowThreshold != "" {

			if err := r.SetQueryParam("autosize.grow_threshold", qAutosizeGrowThreshold); err != nil {
				return err
			}
		}
	}

	if o.AutosizeMaximumQueryParameter != nil {

		// query param autosize.maximum
		var qrAutosizeMaximum int64

		if o.AutosizeMaximumQueryParameter != nil {
			qrAutosizeMaximum = *o.AutosizeMaximumQueryParameter
		}
		qAutosizeMaximum := swag.FormatInt64(qrAutosizeMaximum)
		if qAutosizeMaximum != "" {

			if err := r.SetQueryParam("autosize.maximum", qAutosizeMaximum); err != nil {
				return err
			}
		}
	}

	if o.AutosizeMinimumQueryParameter != nil {

		// query param autosize.minimum
		var qrAutosizeMinimum int64

		if o.AutosizeMinimumQueryParameter != nil {
			qrAutosizeMinimum = *o.AutosizeMinimumQueryParameter
		}
		qAutosizeMinimum := swag.FormatInt64(qrAutosizeMinimum)
		if qAutosizeMinimum != "" {

			if err := r.SetQueryParam("autosize.minimum", qAutosizeMinimum); err != nil {
				return err
			}
		}
	}

	if o.AutosizeModeQueryParameter != nil {

		// query param autosize.mode
		var qrAutosizeMode string

		if o.AutosizeModeQueryParameter != nil {
			qrAutosizeMode = *o.AutosizeModeQueryParameter
		}
		qAutosizeMode := qrAutosizeMode
		if qAutosizeMode != "" {

			if err := r.SetQueryParam("autosize.mode", qAutosizeMode); err != nil {
				return err
			}
		}
	}

	if o.AutosizeShrinkThresholdQueryParameter != nil {

		// query param autosize.shrink_threshold
		var qrAutosizeShrinkThreshold int64

		if o.AutosizeShrinkThresholdQueryParameter != nil {
			qrAutosizeShrinkThreshold = *o.AutosizeShrinkThresholdQueryParameter
		}
		qAutosizeShrinkThreshold := swag.FormatInt64(qrAutosizeShrinkThreshold)
		if qAutosizeShrinkThreshold != "" {

			if err := r.SetQueryParam("autosize.shrink_threshold", qAutosizeShrinkThreshold); err != nil {
				return err
			}
		}
	}

	if o.CloneIsFlexcloneQueryParameter != nil {

		// query param clone.is_flexclone
		var qrCloneIsFlexclone bool

		if o.CloneIsFlexcloneQueryParameter != nil {
			qrCloneIsFlexclone = *o.CloneIsFlexcloneQueryParameter
		}
		qCloneIsFlexclone := swag.FormatBool(qrCloneIsFlexclone)
		if qCloneIsFlexclone != "" {

			if err := r.SetQueryParam("clone.is_flexclone", qCloneIsFlexclone); err != nil {
				return err
			}
		}
	}

	if o.CloneParentSnapshotNameQueryParameter != nil {

		// query param clone.parent_snapshot.name
		var qrCloneParentSnapshotName string

		if o.CloneParentSnapshotNameQueryParameter != nil {
			qrCloneParentSnapshotName = *o.CloneParentSnapshotNameQueryParameter
		}
		qCloneParentSnapshotName := qrCloneParentSnapshotName
		if qCloneParentSnapshotName != "" {

			if err := r.SetQueryParam("clone.parent_snapshot.name", qCloneParentSnapshotName); err != nil {
				return err
			}
		}
	}

	if o.CloneParentSnapshotUUIDQueryParameter != nil {

		// query param clone.parent_snapshot.uuid
		var qrCloneParentSnapshotUUID string

		if o.CloneParentSnapshotUUIDQueryParameter != nil {
			qrCloneParentSnapshotUUID = *o.CloneParentSnapshotUUIDQueryParameter
		}
		qCloneParentSnapshotUUID := qrCloneParentSnapshotUUID
		if qCloneParentSnapshotUUID != "" {

			if err := r.SetQueryParam("clone.parent_snapshot.uuid", qCloneParentSnapshotUUID); err != nil {
				return err
			}
		}
	}

	if o.CloneParentSVMNameQueryParameter != nil {

		// query param clone.parent_svm.name
		var qrCloneParentSvmName string

		if o.CloneParentSVMNameQueryParameter != nil {
			qrCloneParentSvmName = *o.CloneParentSVMNameQueryParameter
		}
		qCloneParentSvmName := qrCloneParentSvmName
		if qCloneParentSvmName != "" {

			if err := r.SetQueryParam("clone.parent_svm.name", qCloneParentSvmName); err != nil {
				return err
			}
		}
	}

	if o.CloneParentSVMUUIDQueryParameter != nil {

		// query param clone.parent_svm.uuid
		var qrCloneParentSvmUUID string

		if o.CloneParentSVMUUIDQueryParameter != nil {
			qrCloneParentSvmUUID = *o.CloneParentSVMUUIDQueryParameter
		}
		qCloneParentSvmUUID := qrCloneParentSvmUUID
		if qCloneParentSvmUUID != "" {

			if err := r.SetQueryParam("clone.parent_svm.uuid", qCloneParentSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.CloneParentVolumeNameQueryParameter != nil {

		// query param clone.parent_volume.name
		var qrCloneParentVolumeName string

		if o.CloneParentVolumeNameQueryParameter != nil {
			qrCloneParentVolumeName = *o.CloneParentVolumeNameQueryParameter
		}
		qCloneParentVolumeName := qrCloneParentVolumeName
		if qCloneParentVolumeName != "" {

			if err := r.SetQueryParam("clone.parent_volume.name", qCloneParentVolumeName); err != nil {
				return err
			}
		}
	}

	if o.CloneParentVolumeUUIDQueryParameter != nil {

		// query param clone.parent_volume.uuid
		var qrCloneParentVolumeUUID string

		if o.CloneParentVolumeUUIDQueryParameter != nil {
			qrCloneParentVolumeUUID = *o.CloneParentVolumeUUIDQueryParameter
		}
		qCloneParentVolumeUUID := qrCloneParentVolumeUUID
		if qCloneParentVolumeUUID != "" {

			if err := r.SetQueryParam("clone.parent_volume.uuid", qCloneParentVolumeUUID); err != nil {
				return err
			}
		}
	}

	if o.CloneSplitCompletePercentQueryParameter != nil {

		// query param clone.split_complete_percent
		var qrCloneSplitCompletePercent int64

		if o.CloneSplitCompletePercentQueryParameter != nil {
			qrCloneSplitCompletePercent = *o.CloneSplitCompletePercentQueryParameter
		}
		qCloneSplitCompletePercent := swag.FormatInt64(qrCloneSplitCompletePercent)
		if qCloneSplitCompletePercent != "" {

			if err := r.SetQueryParam("clone.split_complete_percent", qCloneSplitCompletePercent); err != nil {
				return err
			}
		}
	}

	if o.CloneSplitEstimateQueryParameter != nil {

		// query param clone.split_estimate
		var qrCloneSplitEstimate int64

		if o.CloneSplitEstimateQueryParameter != nil {
			qrCloneSplitEstimate = *o.CloneSplitEstimateQueryParameter
		}
		qCloneSplitEstimate := swag.FormatInt64(qrCloneSplitEstimate)
		if qCloneSplitEstimate != "" {

			if err := r.SetQueryParam("clone.split_estimate", qCloneSplitEstimate); err != nil {
				return err
			}
		}
	}

	if o.CloneSplitInitiatedQueryParameter != nil {

		// query param clone.split_initiated
		var qrCloneSplitInitiated bool

		if o.CloneSplitInitiatedQueryParameter != nil {
			qrCloneSplitInitiated = *o.CloneSplitInitiatedQueryParameter
		}
		qCloneSplitInitiated := swag.FormatBool(qrCloneSplitInitiated)
		if qCloneSplitInitiated != "" {

			if err := r.SetQueryParam("clone.split_initiated", qCloneSplitInitiated); err != nil {
				return err
			}
		}
	}

	if o.CloudRetrievalPolicyQueryParameter != nil {

		// query param cloud_retrieval_policy
		var qrCloudRetrievalPolicy string

		if o.CloudRetrievalPolicyQueryParameter != nil {
			qrCloudRetrievalPolicy = *o.CloudRetrievalPolicyQueryParameter
		}
		qCloudRetrievalPolicy := qrCloudRetrievalPolicy
		if qCloudRetrievalPolicy != "" {

			if err := r.SetQueryParam("cloud_retrieval_policy", qCloudRetrievalPolicy); err != nil {
				return err
			}
		}
	}

	if o.CommentQueryParameter != nil {

		// query param comment
		var qrComment string

		if o.CommentQueryParameter != nil {
			qrComment = *o.CommentQueryParameter
		}
		qComment := qrComment
		if qComment != "" {

			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}
	}

	if o.ConsistencyGroupNameQueryParameter != nil {

		// query param consistency_group.name
		var qrConsistencyGroupName string

		if o.ConsistencyGroupNameQueryParameter != nil {
			qrConsistencyGroupName = *o.ConsistencyGroupNameQueryParameter
		}
		qConsistencyGroupName := qrConsistencyGroupName
		if qConsistencyGroupName != "" {

			if err := r.SetQueryParam("consistency_group.name", qConsistencyGroupName); err != nil {
				return err
			}
		}
	}

	if o.ConsistencyGroupUUIDQueryParameter != nil {

		// query param consistency_group.uuid
		var qrConsistencyGroupUUID string

		if o.ConsistencyGroupUUIDQueryParameter != nil {
			qrConsistencyGroupUUID = *o.ConsistencyGroupUUIDQueryParameter
		}
		qConsistencyGroupUUID := qrConsistencyGroupUUID
		if qConsistencyGroupUUID != "" {

			if err := r.SetQueryParam("consistency_group.uuid", qConsistencyGroupUUID); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsAggregatesNameQueryParameter != nil {

		// query param constituents.aggregates.name
		var qrConstituentsAggregatesName string

		if o.ConstituentsAggregatesNameQueryParameter != nil {
			qrConstituentsAggregatesName = *o.ConstituentsAggregatesNameQueryParameter
		}
		qConstituentsAggregatesName := qrConstituentsAggregatesName
		if qConstituentsAggregatesName != "" {

			if err := r.SetQueryParam("constituents.aggregates.name", qConstituentsAggregatesName); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsAggregatesUUIDQueryParameter != nil {

		// query param constituents.aggregates.uuid
		var qrConstituentsAggregatesUUID string

		if o.ConstituentsAggregatesUUIDQueryParameter != nil {
			qrConstituentsAggregatesUUID = *o.ConstituentsAggregatesUUIDQueryParameter
		}
		qConstituentsAggregatesUUID := qrConstituentsAggregatesUUID
		if qConstituentsAggregatesUUID != "" {

			if err := r.SetQueryParam("constituents.aggregates.uuid", qConstituentsAggregatesUUID); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsMovementCutoverWindowQueryParameter != nil {

		// query param constituents.movement.cutover_window
		var qrConstituentsMovementCutoverWindow int64

		if o.ConstituentsMovementCutoverWindowQueryParameter != nil {
			qrConstituentsMovementCutoverWindow = *o.ConstituentsMovementCutoverWindowQueryParameter
		}
		qConstituentsMovementCutoverWindow := swag.FormatInt64(qrConstituentsMovementCutoverWindow)
		if qConstituentsMovementCutoverWindow != "" {

			if err := r.SetQueryParam("constituents.movement.cutover_window", qConstituentsMovementCutoverWindow); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsMovementDestinationAggregateNameQueryParameter != nil {

		// query param constituents.movement.destination_aggregate.name
		var qrConstituentsMovementDestinationAggregateName string

		if o.ConstituentsMovementDestinationAggregateNameQueryParameter != nil {
			qrConstituentsMovementDestinationAggregateName = *o.ConstituentsMovementDestinationAggregateNameQueryParameter
		}
		qConstituentsMovementDestinationAggregateName := qrConstituentsMovementDestinationAggregateName
		if qConstituentsMovementDestinationAggregateName != "" {

			if err := r.SetQueryParam("constituents.movement.destination_aggregate.name", qConstituentsMovementDestinationAggregateName); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsMovementDestinationAggregateUUIDQueryParameter != nil {

		// query param constituents.movement.destination_aggregate.uuid
		var qrConstituentsMovementDestinationAggregateUUID string

		if o.ConstituentsMovementDestinationAggregateUUIDQueryParameter != nil {
			qrConstituentsMovementDestinationAggregateUUID = *o.ConstituentsMovementDestinationAggregateUUIDQueryParameter
		}
		qConstituentsMovementDestinationAggregateUUID := qrConstituentsMovementDestinationAggregateUUID
		if qConstituentsMovementDestinationAggregateUUID != "" {

			if err := r.SetQueryParam("constituents.movement.destination_aggregate.uuid", qConstituentsMovementDestinationAggregateUUID); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsMovementPercentCompleteQueryParameter != nil {

		// query param constituents.movement.percent_complete
		var qrConstituentsMovementPercentComplete int64

		if o.ConstituentsMovementPercentCompleteQueryParameter != nil {
			qrConstituentsMovementPercentComplete = *o.ConstituentsMovementPercentCompleteQueryParameter
		}
		qConstituentsMovementPercentComplete := swag.FormatInt64(qrConstituentsMovementPercentComplete)
		if qConstituentsMovementPercentComplete != "" {

			if err := r.SetQueryParam("constituents.movement.percent_complete", qConstituentsMovementPercentComplete); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsMovementStateQueryParameter != nil {

		// query param constituents.movement.state
		var qrConstituentsMovementState string

		if o.ConstituentsMovementStateQueryParameter != nil {
			qrConstituentsMovementState = *o.ConstituentsMovementStateQueryParameter
		}
		qConstituentsMovementState := qrConstituentsMovementState
		if qConstituentsMovementState != "" {

			if err := r.SetQueryParam("constituents.movement.state", qConstituentsMovementState); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsNameQueryParameter != nil {

		// query param constituents.name
		var qrConstituentsName string

		if o.ConstituentsNameQueryParameter != nil {
			qrConstituentsName = *o.ConstituentsNameQueryParameter
		}
		qConstituentsName := qrConstituentsName
		if qConstituentsName != "" {

			if err := r.SetQueryParam("constituents.name", qConstituentsName); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceAfsTotalQueryParameter != nil {

		// query param constituents.space.afs_total
		var qrConstituentsSpaceAfsTotal int64

		if o.ConstituentsSpaceAfsTotalQueryParameter != nil {
			qrConstituentsSpaceAfsTotal = *o.ConstituentsSpaceAfsTotalQueryParameter
		}
		qConstituentsSpaceAfsTotal := swag.FormatInt64(qrConstituentsSpaceAfsTotal)
		if qConstituentsSpaceAfsTotal != "" {

			if err := r.SetQueryParam("constituents.space.afs_total", qConstituentsSpaceAfsTotal); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceAvailableQueryParameter != nil {

		// query param constituents.space.available
		var qrConstituentsSpaceAvailable int64

		if o.ConstituentsSpaceAvailableQueryParameter != nil {
			qrConstituentsSpaceAvailable = *o.ConstituentsSpaceAvailableQueryParameter
		}
		qConstituentsSpaceAvailable := swag.FormatInt64(qrConstituentsSpaceAvailable)
		if qConstituentsSpaceAvailable != "" {

			if err := r.SetQueryParam("constituents.space.available", qConstituentsSpaceAvailable); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceAvailablePercentQueryParameter != nil {

		// query param constituents.space.available_percent
		var qrConstituentsSpaceAvailablePercent int64

		if o.ConstituentsSpaceAvailablePercentQueryParameter != nil {
			qrConstituentsSpaceAvailablePercent = *o.ConstituentsSpaceAvailablePercentQueryParameter
		}
		qConstituentsSpaceAvailablePercent := swag.FormatInt64(qrConstituentsSpaceAvailablePercent)
		if qConstituentsSpaceAvailablePercent != "" {

			if err := r.SetQueryParam("constituents.space.available_percent", qConstituentsSpaceAvailablePercent); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceBlockStorageInactiveUserDataQueryParameter != nil {

		// query param constituents.space.block_storage_inactive_user_data
		var qrConstituentsSpaceBlockStorageInactiveUserData int64

		if o.ConstituentsSpaceBlockStorageInactiveUserDataQueryParameter != nil {
			qrConstituentsSpaceBlockStorageInactiveUserData = *o.ConstituentsSpaceBlockStorageInactiveUserDataQueryParameter
		}
		qConstituentsSpaceBlockStorageInactiveUserData := swag.FormatInt64(qrConstituentsSpaceBlockStorageInactiveUserData)
		if qConstituentsSpaceBlockStorageInactiveUserData != "" {

			if err := r.SetQueryParam("constituents.space.block_storage_inactive_user_data", qConstituentsSpaceBlockStorageInactiveUserData); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceCapacityTierFootprintQueryParameter != nil {

		// query param constituents.space.capacity_tier_footprint
		var qrConstituentsSpaceCapacityTierFootprint int64

		if o.ConstituentsSpaceCapacityTierFootprintQueryParameter != nil {
			qrConstituentsSpaceCapacityTierFootprint = *o.ConstituentsSpaceCapacityTierFootprintQueryParameter
		}
		qConstituentsSpaceCapacityTierFootprint := swag.FormatInt64(qrConstituentsSpaceCapacityTierFootprint)
		if qConstituentsSpaceCapacityTierFootprint != "" {

			if err := r.SetQueryParam("constituents.space.capacity_tier_footprint", qConstituentsSpaceCapacityTierFootprint); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceFootprintQueryParameter != nil {

		// query param constituents.space.footprint
		var qrConstituentsSpaceFootprint int64

		if o.ConstituentsSpaceFootprintQueryParameter != nil {
			qrConstituentsSpaceFootprint = *o.ConstituentsSpaceFootprintQueryParameter
		}
		qConstituentsSpaceFootprint := swag.FormatInt64(qrConstituentsSpaceFootprint)
		if qConstituentsSpaceFootprint != "" {

			if err := r.SetQueryParam("constituents.space.footprint", qConstituentsSpaceFootprint); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceLocalTierFootprintQueryParameter != nil {

		// query param constituents.space.local_tier_footprint
		var qrConstituentsSpaceLocalTierFootprint int64

		if o.ConstituentsSpaceLocalTierFootprintQueryParameter != nil {
			qrConstituentsSpaceLocalTierFootprint = *o.ConstituentsSpaceLocalTierFootprintQueryParameter
		}
		qConstituentsSpaceLocalTierFootprint := swag.FormatInt64(qrConstituentsSpaceLocalTierFootprint)
		if qConstituentsSpaceLocalTierFootprint != "" {

			if err := r.SetQueryParam("constituents.space.local_tier_footprint", qConstituentsSpaceLocalTierFootprint); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceLogicalSpaceAvailableQueryParameter != nil {

		// query param constituents.space.logical_space.available
		var qrConstituentsSpaceLogicalSpaceAvailable int64

		if o.ConstituentsSpaceLogicalSpaceAvailableQueryParameter != nil {
			qrConstituentsSpaceLogicalSpaceAvailable = *o.ConstituentsSpaceLogicalSpaceAvailableQueryParameter
		}
		qConstituentsSpaceLogicalSpaceAvailable := swag.FormatInt64(qrConstituentsSpaceLogicalSpaceAvailable)
		if qConstituentsSpaceLogicalSpaceAvailable != "" {

			if err := r.SetQueryParam("constituents.space.logical_space.available", qConstituentsSpaceLogicalSpaceAvailable); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceLogicalSpaceEnforcementQueryParameter != nil {

		// query param constituents.space.logical_space.enforcement
		var qrConstituentsSpaceLogicalSpaceEnforcement bool

		if o.ConstituentsSpaceLogicalSpaceEnforcementQueryParameter != nil {
			qrConstituentsSpaceLogicalSpaceEnforcement = *o.ConstituentsSpaceLogicalSpaceEnforcementQueryParameter
		}
		qConstituentsSpaceLogicalSpaceEnforcement := swag.FormatBool(qrConstituentsSpaceLogicalSpaceEnforcement)
		if qConstituentsSpaceLogicalSpaceEnforcement != "" {

			if err := r.SetQueryParam("constituents.space.logical_space.enforcement", qConstituentsSpaceLogicalSpaceEnforcement); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceLogicalSpaceReportingQueryParameter != nil {

		// query param constituents.space.logical_space.reporting
		var qrConstituentsSpaceLogicalSpaceReporting bool

		if o.ConstituentsSpaceLogicalSpaceReportingQueryParameter != nil {
			qrConstituentsSpaceLogicalSpaceReporting = *o.ConstituentsSpaceLogicalSpaceReportingQueryParameter
		}
		qConstituentsSpaceLogicalSpaceReporting := swag.FormatBool(qrConstituentsSpaceLogicalSpaceReporting)
		if qConstituentsSpaceLogicalSpaceReporting != "" {

			if err := r.SetQueryParam("constituents.space.logical_space.reporting", qConstituentsSpaceLogicalSpaceReporting); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter != nil {

		// query param constituents.space.logical_space.used_by_afs
		var qrConstituentsSpaceLogicalSpaceUsedByAfs int64

		if o.ConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter != nil {
			qrConstituentsSpaceLogicalSpaceUsedByAfs = *o.ConstituentsSpaceLogicalSpaceUsedByAfsQueryParameter
		}
		qConstituentsSpaceLogicalSpaceUsedByAfs := swag.FormatInt64(qrConstituentsSpaceLogicalSpaceUsedByAfs)
		if qConstituentsSpaceLogicalSpaceUsedByAfs != "" {

			if err := r.SetQueryParam("constituents.space.logical_space.used_by_afs", qConstituentsSpaceLogicalSpaceUsedByAfs); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceMetadataQueryParameter != nil {

		// query param constituents.space.metadata
		var qrConstituentsSpaceMetadata int64

		if o.ConstituentsSpaceMetadataQueryParameter != nil {
			qrConstituentsSpaceMetadata = *o.ConstituentsSpaceMetadataQueryParameter
		}
		qConstituentsSpaceMetadata := swag.FormatInt64(qrConstituentsSpaceMetadata)
		if qConstituentsSpaceMetadata != "" {

			if err := r.SetQueryParam("constituents.space.metadata", qConstituentsSpaceMetadata); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceOverProvisionedQueryParameter != nil {

		// query param constituents.space.over_provisioned
		var qrConstituentsSpaceOverProvisioned int64

		if o.ConstituentsSpaceOverProvisionedQueryParameter != nil {
			qrConstituentsSpaceOverProvisioned = *o.ConstituentsSpaceOverProvisionedQueryParameter
		}
		qConstituentsSpaceOverProvisioned := swag.FormatInt64(qrConstituentsSpaceOverProvisioned)
		if qConstituentsSpaceOverProvisioned != "" {

			if err := r.SetQueryParam("constituents.space.over_provisioned", qConstituentsSpaceOverProvisioned); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpacePerformanceTierFootprintQueryParameter != nil {

		// query param constituents.space.performance_tier_footprint
		var qrConstituentsSpacePerformanceTierFootprint int64

		if o.ConstituentsSpacePerformanceTierFootprintQueryParameter != nil {
			qrConstituentsSpacePerformanceTierFootprint = *o.ConstituentsSpacePerformanceTierFootprintQueryParameter
		}
		qConstituentsSpacePerformanceTierFootprint := swag.FormatInt64(qrConstituentsSpacePerformanceTierFootprint)
		if qConstituentsSpacePerformanceTierFootprint != "" {

			if err := r.SetQueryParam("constituents.space.performance_tier_footprint", qConstituentsSpacePerformanceTierFootprint); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceSizeQueryParameter != nil {

		// query param constituents.space.size
		var qrConstituentsSpaceSize int64

		if o.ConstituentsSpaceSizeQueryParameter != nil {
			qrConstituentsSpaceSize = *o.ConstituentsSpaceSizeQueryParameter
		}
		qConstituentsSpaceSize := swag.FormatInt64(qrConstituentsSpaceSize)
		if qConstituentsSpaceSize != "" {

			if err := r.SetQueryParam("constituents.space.size", qConstituentsSpaceSize); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceSnapshotReservePercentQueryParameter != nil {

		// query param constituents.space.snapshot.reserve_percent
		var qrConstituentsSpaceSnapshotReservePercent int64

		if o.ConstituentsSpaceSnapshotReservePercentQueryParameter != nil {
			qrConstituentsSpaceSnapshotReservePercent = *o.ConstituentsSpaceSnapshotReservePercentQueryParameter
		}
		qConstituentsSpaceSnapshotReservePercent := swag.FormatInt64(qrConstituentsSpaceSnapshotReservePercent)
		if qConstituentsSpaceSnapshotReservePercent != "" {

			if err := r.SetQueryParam("constituents.space.snapshot.reserve_percent", qConstituentsSpaceSnapshotReservePercent); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceSnapshotUsedQueryParameter != nil {

		// query param constituents.space.snapshot.used
		var qrConstituentsSpaceSnapshotUsed int64

		if o.ConstituentsSpaceSnapshotUsedQueryParameter != nil {
			qrConstituentsSpaceSnapshotUsed = *o.ConstituentsSpaceSnapshotUsedQueryParameter
		}
		qConstituentsSpaceSnapshotUsed := swag.FormatInt64(qrConstituentsSpaceSnapshotUsed)
		if qConstituentsSpaceSnapshotUsed != "" {

			if err := r.SetQueryParam("constituents.space.snapshot.used", qConstituentsSpaceSnapshotUsed); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceTotalFootprintQueryParameter != nil {

		// query param constituents.space.total_footprint
		var qrConstituentsSpaceTotalFootprint int64

		if o.ConstituentsSpaceTotalFootprintQueryParameter != nil {
			qrConstituentsSpaceTotalFootprint = *o.ConstituentsSpaceTotalFootprintQueryParameter
		}
		qConstituentsSpaceTotalFootprint := swag.FormatInt64(qrConstituentsSpaceTotalFootprint)
		if qConstituentsSpaceTotalFootprint != "" {

			if err := r.SetQueryParam("constituents.space.total_footprint", qConstituentsSpaceTotalFootprint); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceUsedQueryParameter != nil {

		// query param constituents.space.used
		var qrConstituentsSpaceUsed int64

		if o.ConstituentsSpaceUsedQueryParameter != nil {
			qrConstituentsSpaceUsed = *o.ConstituentsSpaceUsedQueryParameter
		}
		qConstituentsSpaceUsed := swag.FormatInt64(qrConstituentsSpaceUsed)
		if qConstituentsSpaceUsed != "" {

			if err := r.SetQueryParam("constituents.space.used", qConstituentsSpaceUsed); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceUsedByAfsQueryParameter != nil {

		// query param constituents.space.used_by_afs
		var qrConstituentsSpaceUsedByAfs int64

		if o.ConstituentsSpaceUsedByAfsQueryParameter != nil {
			qrConstituentsSpaceUsedByAfs = *o.ConstituentsSpaceUsedByAfsQueryParameter
		}
		qConstituentsSpaceUsedByAfs := swag.FormatInt64(qrConstituentsSpaceUsedByAfs)
		if qConstituentsSpaceUsedByAfs != "" {

			if err := r.SetQueryParam("constituents.space.used_by_afs", qConstituentsSpaceUsedByAfs); err != nil {
				return err
			}
		}
	}

	if o.ConstituentsSpaceUsedPercentQueryParameter != nil {

		// query param constituents.space.used_percent
		var qrConstituentsSpaceUsedPercent int64

		if o.ConstituentsSpaceUsedPercentQueryParameter != nil {
			qrConstituentsSpaceUsedPercent = *o.ConstituentsSpaceUsedPercentQueryParameter
		}
		qConstituentsSpaceUsedPercent := swag.FormatInt64(qrConstituentsSpaceUsedPercent)
		if qConstituentsSpaceUsedPercent != "" {

			if err := r.SetQueryParam("constituents.space.used_percent", qConstituentsSpaceUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.ConvertUnicodeQueryParameter != nil {

		// query param convert_unicode
		var qrConvertUnicode bool

		if o.ConvertUnicodeQueryParameter != nil {
			qrConvertUnicode = *o.ConvertUnicodeQueryParameter
		}
		qConvertUnicode := swag.FormatBool(qrConvertUnicode)
		if qConvertUnicode != "" {

			if err := r.SetQueryParam("convert_unicode", qConvertUnicode); err != nil {
				return err
			}
		}
	}

	if o.CreateTimeQueryParameter != nil {

		// query param create_time
		var qrCreateTime string

		if o.CreateTimeQueryParameter != nil {
			qrCreateTime = *o.CreateTimeQueryParameter
		}
		qCreateTime := qrCreateTime
		if qCreateTime != "" {

			if err := r.SetQueryParam("create_time", qCreateTime); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyApplicationIoSizeQueryParameter != nil {

		// query param efficiency.application_io_size
		var qrEfficiencyApplicationIoSize string

		if o.EfficiencyApplicationIoSizeQueryParameter != nil {
			qrEfficiencyApplicationIoSize = *o.EfficiencyApplicationIoSizeQueryParameter
		}
		qEfficiencyApplicationIoSize := qrEfficiencyApplicationIoSize
		if qEfficiencyApplicationIoSize != "" {

			if err := r.SetQueryParam("efficiency.application_io_size", qEfficiencyApplicationIoSize); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyCompactionQueryParameter != nil {

		// query param efficiency.compaction
		var qrEfficiencyCompaction string

		if o.EfficiencyCompactionQueryParameter != nil {
			qrEfficiencyCompaction = *o.EfficiencyCompactionQueryParameter
		}
		qEfficiencyCompaction := qrEfficiencyCompaction
		if qEfficiencyCompaction != "" {

			if err := r.SetQueryParam("efficiency.compaction", qEfficiencyCompaction); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyCompressionQueryParameter != nil {

		// query param efficiency.compression
		var qrEfficiencyCompression string

		if o.EfficiencyCompressionQueryParameter != nil {
			qrEfficiencyCompression = *o.EfficiencyCompressionQueryParameter
		}
		qEfficiencyCompression := qrEfficiencyCompression
		if qEfficiencyCompression != "" {

			if err := r.SetQueryParam("efficiency.compression", qEfficiencyCompression); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyCompressionTypeQueryParameter != nil {

		// query param efficiency.compression_type
		var qrEfficiencyCompressionType string

		if o.EfficiencyCompressionTypeQueryParameter != nil {
			qrEfficiencyCompressionType = *o.EfficiencyCompressionTypeQueryParameter
		}
		qEfficiencyCompressionType := qrEfficiencyCompressionType
		if qEfficiencyCompressionType != "" {

			if err := r.SetQueryParam("efficiency.compression_type", qEfficiencyCompressionType); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyCrossVolumeDedupeQueryParameter != nil {

		// query param efficiency.cross_volume_dedupe
		var qrEfficiencyCrossVolumeDedupe string

		if o.EfficiencyCrossVolumeDedupeQueryParameter != nil {
			qrEfficiencyCrossVolumeDedupe = *o.EfficiencyCrossVolumeDedupeQueryParameter
		}
		qEfficiencyCrossVolumeDedupe := qrEfficiencyCrossVolumeDedupe
		if qEfficiencyCrossVolumeDedupe != "" {

			if err := r.SetQueryParam("efficiency.cross_volume_dedupe", qEfficiencyCrossVolumeDedupe); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyDedupeQueryParameter != nil {

		// query param efficiency.dedupe
		var qrEfficiencyDedupe string

		if o.EfficiencyDedupeQueryParameter != nil {
			qrEfficiencyDedupe = *o.EfficiencyDedupeQueryParameter
		}
		qEfficiencyDedupe := qrEfficiencyDedupe
		if qEfficiencyDedupe != "" {

			if err := r.SetQueryParam("efficiency.dedupe", qEfficiencyDedupe); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyHasSavingsQueryParameter != nil {

		// query param efficiency.has_savings
		var qrEfficiencyHasSavings bool

		if o.EfficiencyHasSavingsQueryParameter != nil {
			qrEfficiencyHasSavings = *o.EfficiencyHasSavingsQueryParameter
		}
		qEfficiencyHasSavings := swag.FormatBool(qrEfficiencyHasSavings)
		if qEfficiencyHasSavings != "" {

			if err := r.SetQueryParam("efficiency.has_savings", qEfficiencyHasSavings); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyLastOpBeginQueryParameter != nil {

		// query param efficiency.last_op_begin
		var qrEfficiencyLastOpBegin string

		if o.EfficiencyLastOpBeginQueryParameter != nil {
			qrEfficiencyLastOpBegin = *o.EfficiencyLastOpBeginQueryParameter
		}
		qEfficiencyLastOpBegin := qrEfficiencyLastOpBegin
		if qEfficiencyLastOpBegin != "" {

			if err := r.SetQueryParam("efficiency.last_op_begin", qEfficiencyLastOpBegin); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyLastOpEndQueryParameter != nil {

		// query param efficiency.last_op_end
		var qrEfficiencyLastOpEnd string

		if o.EfficiencyLastOpEndQueryParameter != nil {
			qrEfficiencyLastOpEnd = *o.EfficiencyLastOpEndQueryParameter
		}
		qEfficiencyLastOpEnd := qrEfficiencyLastOpEnd
		if qEfficiencyLastOpEnd != "" {

			if err := r.SetQueryParam("efficiency.last_op_end", qEfficiencyLastOpEnd); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyLastOpErrQueryParameter != nil {

		// query param efficiency.last_op_err
		var qrEfficiencyLastOpErr string

		if o.EfficiencyLastOpErrQueryParameter != nil {
			qrEfficiencyLastOpErr = *o.EfficiencyLastOpErrQueryParameter
		}
		qEfficiencyLastOpErr := qrEfficiencyLastOpErr
		if qEfficiencyLastOpErr != "" {

			if err := r.SetQueryParam("efficiency.last_op_err", qEfficiencyLastOpErr); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyLastOpSizeQueryParameter != nil {

		// query param efficiency.last_op_size
		var qrEfficiencyLastOpSize int64

		if o.EfficiencyLastOpSizeQueryParameter != nil {
			qrEfficiencyLastOpSize = *o.EfficiencyLastOpSizeQueryParameter
		}
		qEfficiencyLastOpSize := swag.FormatInt64(qrEfficiencyLastOpSize)
		if qEfficiencyLastOpSize != "" {

			if err := r.SetQueryParam("efficiency.last_op_size", qEfficiencyLastOpSize); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyLastOpStateQueryParameter != nil {

		// query param efficiency.last_op_state
		var qrEfficiencyLastOpState string

		if o.EfficiencyLastOpStateQueryParameter != nil {
			qrEfficiencyLastOpState = *o.EfficiencyLastOpStateQueryParameter
		}
		qEfficiencyLastOpState := qrEfficiencyLastOpState
		if qEfficiencyLastOpState != "" {

			if err := r.SetQueryParam("efficiency.last_op_state", qEfficiencyLastOpState); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyLoggingEnabledQueryParameter != nil {

		// query param efficiency.logging_enabled
		var qrEfficiencyLoggingEnabled bool

		if o.EfficiencyLoggingEnabledQueryParameter != nil {
			qrEfficiencyLoggingEnabled = *o.EfficiencyLoggingEnabledQueryParameter
		}
		qEfficiencyLoggingEnabled := swag.FormatBool(qrEfficiencyLoggingEnabled)
		if qEfficiencyLoggingEnabled != "" {

			if err := r.SetQueryParam("efficiency.logging_enabled", qEfficiencyLoggingEnabled); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyOpStateQueryParameter != nil {

		// query param efficiency.op_state
		var qrEfficiencyOpState string

		if o.EfficiencyOpStateQueryParameter != nil {
			qrEfficiencyOpState = *o.EfficiencyOpStateQueryParameter
		}
		qEfficiencyOpState := qrEfficiencyOpState
		if qEfficiencyOpState != "" {

			if err := r.SetQueryParam("efficiency.op_state", qEfficiencyOpState); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyPathQueryParameter != nil {

		// query param efficiency.path
		var qrEfficiencyPath string

		if o.EfficiencyPathQueryParameter != nil {
			qrEfficiencyPath = *o.EfficiencyPathQueryParameter
		}
		qEfficiencyPath := qrEfficiencyPath
		if qEfficiencyPath != "" {

			if err := r.SetQueryParam("efficiency.path", qEfficiencyPath); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyPolicyNameQueryParameter != nil {

		// query param efficiency.policy.name
		var qrEfficiencyPolicyName string

		if o.EfficiencyPolicyNameQueryParameter != nil {
			qrEfficiencyPolicyName = *o.EfficiencyPolicyNameQueryParameter
		}
		qEfficiencyPolicyName := qrEfficiencyPolicyName
		if qEfficiencyPolicyName != "" {

			if err := r.SetQueryParam("efficiency.policy.name", qEfficiencyPolicyName); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyProgressQueryParameter != nil {

		// query param efficiency.progress
		var qrEfficiencyProgress string

		if o.EfficiencyProgressQueryParameter != nil {
			qrEfficiencyProgress = *o.EfficiencyProgressQueryParameter
		}
		qEfficiencyProgress := qrEfficiencyProgress
		if qEfficiencyProgress != "" {

			if err := r.SetQueryParam("efficiency.progress", qEfficiencyProgress); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyScannerCompressionQueryParameter != nil {

		// query param efficiency.scanner.compression
		var qrEfficiencyScannerCompression bool

		if o.EfficiencyScannerCompressionQueryParameter != nil {
			qrEfficiencyScannerCompression = *o.EfficiencyScannerCompressionQueryParameter
		}
		qEfficiencyScannerCompression := swag.FormatBool(qrEfficiencyScannerCompression)
		if qEfficiencyScannerCompression != "" {

			if err := r.SetQueryParam("efficiency.scanner.compression", qEfficiencyScannerCompression); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyScannerDedupeQueryParameter != nil {

		// query param efficiency.scanner.dedupe
		var qrEfficiencyScannerDedupe bool

		if o.EfficiencyScannerDedupeQueryParameter != nil {
			qrEfficiencyScannerDedupe = *o.EfficiencyScannerDedupeQueryParameter
		}
		qEfficiencyScannerDedupe := swag.FormatBool(qrEfficiencyScannerDedupe)
		if qEfficiencyScannerDedupe != "" {

			if err := r.SetQueryParam("efficiency.scanner.dedupe", qEfficiencyScannerDedupe); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyScannerScanOldDataQueryParameter != nil {

		// query param efficiency.scanner.scan_old_data
		var qrEfficiencyScannerScanOldData bool

		if o.EfficiencyScannerScanOldDataQueryParameter != nil {
			qrEfficiencyScannerScanOldData = *o.EfficiencyScannerScanOldDataQueryParameter
		}
		qEfficiencyScannerScanOldData := swag.FormatBool(qrEfficiencyScannerScanOldData)
		if qEfficiencyScannerScanOldData != "" {

			if err := r.SetQueryParam("efficiency.scanner.scan_old_data", qEfficiencyScannerScanOldData); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyScannerStateQueryParameter != nil {

		// query param efficiency.scanner.state
		var qrEfficiencyScannerState string

		if o.EfficiencyScannerStateQueryParameter != nil {
			qrEfficiencyScannerState = *o.EfficiencyScannerStateQueryParameter
		}
		qEfficiencyScannerState := qrEfficiencyScannerState
		if qEfficiencyScannerState != "" {

			if err := r.SetQueryParam("efficiency.scanner.state", qEfficiencyScannerState); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyScheduleQueryParameter != nil {

		// query param efficiency.schedule
		var qrEfficiencySchedule string

		if o.EfficiencyScheduleQueryParameter != nil {
			qrEfficiencySchedule = *o.EfficiencyScheduleQueryParameter
		}
		qEfficiencySchedule := qrEfficiencySchedule
		if qEfficiencySchedule != "" {

			if err := r.SetQueryParam("efficiency.schedule", qEfficiencySchedule); err != nil {
				return err
			}
		}
	}

	if o.EfficiencySpaceSavingsCompressionQueryParameter != nil {

		// query param efficiency.space_savings.compression
		var qrEfficiencySpaceSavingsCompression int64

		if o.EfficiencySpaceSavingsCompressionQueryParameter != nil {
			qrEfficiencySpaceSavingsCompression = *o.EfficiencySpaceSavingsCompressionQueryParameter
		}
		qEfficiencySpaceSavingsCompression := swag.FormatInt64(qrEfficiencySpaceSavingsCompression)
		if qEfficiencySpaceSavingsCompression != "" {

			if err := r.SetQueryParam("efficiency.space_savings.compression", qEfficiencySpaceSavingsCompression); err != nil {
				return err
			}
		}
	}

	if o.EfficiencySpaceSavingsCompressionPercentQueryParameter != nil {

		// query param efficiency.space_savings.compression_percent
		var qrEfficiencySpaceSavingsCompressionPercent int64

		if o.EfficiencySpaceSavingsCompressionPercentQueryParameter != nil {
			qrEfficiencySpaceSavingsCompressionPercent = *o.EfficiencySpaceSavingsCompressionPercentQueryParameter
		}
		qEfficiencySpaceSavingsCompressionPercent := swag.FormatInt64(qrEfficiencySpaceSavingsCompressionPercent)
		if qEfficiencySpaceSavingsCompressionPercent != "" {

			if err := r.SetQueryParam("efficiency.space_savings.compression_percent", qEfficiencySpaceSavingsCompressionPercent); err != nil {
				return err
			}
		}
	}

	if o.EfficiencySpaceSavingsDedupeQueryParameter != nil {

		// query param efficiency.space_savings.dedupe
		var qrEfficiencySpaceSavingsDedupe int64

		if o.EfficiencySpaceSavingsDedupeQueryParameter != nil {
			qrEfficiencySpaceSavingsDedupe = *o.EfficiencySpaceSavingsDedupeQueryParameter
		}
		qEfficiencySpaceSavingsDedupe := swag.FormatInt64(qrEfficiencySpaceSavingsDedupe)
		if qEfficiencySpaceSavingsDedupe != "" {

			if err := r.SetQueryParam("efficiency.space_savings.dedupe", qEfficiencySpaceSavingsDedupe); err != nil {
				return err
			}
		}
	}

	if o.EfficiencySpaceSavingsDedupePercentQueryParameter != nil {

		// query param efficiency.space_savings.dedupe_percent
		var qrEfficiencySpaceSavingsDedupePercent int64

		if o.EfficiencySpaceSavingsDedupePercentQueryParameter != nil {
			qrEfficiencySpaceSavingsDedupePercent = *o.EfficiencySpaceSavingsDedupePercentQueryParameter
		}
		qEfficiencySpaceSavingsDedupePercent := swag.FormatInt64(qrEfficiencySpaceSavingsDedupePercent)
		if qEfficiencySpaceSavingsDedupePercent != "" {

			if err := r.SetQueryParam("efficiency.space_savings.dedupe_percent", qEfficiencySpaceSavingsDedupePercent); err != nil {
				return err
			}
		}
	}

	if o.EfficiencySpaceSavingsDedupeSharingQueryParameter != nil {

		// query param efficiency.space_savings.dedupe_sharing
		var qrEfficiencySpaceSavingsDedupeSharing int64

		if o.EfficiencySpaceSavingsDedupeSharingQueryParameter != nil {
			qrEfficiencySpaceSavingsDedupeSharing = *o.EfficiencySpaceSavingsDedupeSharingQueryParameter
		}
		qEfficiencySpaceSavingsDedupeSharing := swag.FormatInt64(qrEfficiencySpaceSavingsDedupeSharing)
		if qEfficiencySpaceSavingsDedupeSharing != "" {

			if err := r.SetQueryParam("efficiency.space_savings.dedupe_sharing", qEfficiencySpaceSavingsDedupeSharing); err != nil {
				return err
			}
		}
	}

	if o.EfficiencySpaceSavingsTotalQueryParameter != nil {

		// query param efficiency.space_savings.total
		var qrEfficiencySpaceSavingsTotal int64

		if o.EfficiencySpaceSavingsTotalQueryParameter != nil {
			qrEfficiencySpaceSavingsTotal = *o.EfficiencySpaceSavingsTotalQueryParameter
		}
		qEfficiencySpaceSavingsTotal := swag.FormatInt64(qrEfficiencySpaceSavingsTotal)
		if qEfficiencySpaceSavingsTotal != "" {

			if err := r.SetQueryParam("efficiency.space_savings.total", qEfficiencySpaceSavingsTotal); err != nil {
				return err
			}
		}
	}

	if o.EfficiencySpaceSavingsTotalPercentQueryParameter != nil {

		// query param efficiency.space_savings.total_percent
		var qrEfficiencySpaceSavingsTotalPercent int64

		if o.EfficiencySpaceSavingsTotalPercentQueryParameter != nil {
			qrEfficiencySpaceSavingsTotalPercent = *o.EfficiencySpaceSavingsTotalPercentQueryParameter
		}
		qEfficiencySpaceSavingsTotalPercent := swag.FormatInt64(qrEfficiencySpaceSavingsTotalPercent)
		if qEfficiencySpaceSavingsTotalPercent != "" {

			if err := r.SetQueryParam("efficiency.space_savings.total_percent", qEfficiencySpaceSavingsTotalPercent); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyStateQueryParameter != nil {

		// query param efficiency.state
		var qrEfficiencyState string

		if o.EfficiencyStateQueryParameter != nil {
			qrEfficiencyState = *o.EfficiencyStateQueryParameter
		}
		qEfficiencyState := qrEfficiencyState
		if qEfficiencyState != "" {

			if err := r.SetQueryParam("efficiency.state", qEfficiencyState); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyStorageEfficiencyModeQueryParameter != nil {

		// query param efficiency.storage_efficiency_mode
		var qrEfficiencyStorageEfficiencyMode string

		if o.EfficiencyStorageEfficiencyModeQueryParameter != nil {
			qrEfficiencyStorageEfficiencyMode = *o.EfficiencyStorageEfficiencyModeQueryParameter
		}
		qEfficiencyStorageEfficiencyMode := qrEfficiencyStorageEfficiencyMode
		if qEfficiencyStorageEfficiencyMode != "" {

			if err := r.SetQueryParam("efficiency.storage_efficiency_mode", qEfficiencyStorageEfficiencyMode); err != nil {
				return err
			}
		}
	}

	if o.EfficiencyTypeQueryParameter != nil {

		// query param efficiency.type
		var qrEfficiencyType string

		if o.EfficiencyTypeQueryParameter != nil {
			qrEfficiencyType = *o.EfficiencyTypeQueryParameter
		}
		qEfficiencyType := qrEfficiencyType
		if qEfficiencyType != "" {

			if err := r.SetQueryParam("efficiency.type", qEfficiencyType); err != nil {
				return err
			}
		}
	}

	if o.EncryptionEnabledQueryParameter != nil {

		// query param encryption.enabled
		var qrEncryptionEnabled bool

		if o.EncryptionEnabledQueryParameter != nil {
			qrEncryptionEnabled = *o.EncryptionEnabledQueryParameter
		}
		qEncryptionEnabled := swag.FormatBool(qrEncryptionEnabled)
		if qEncryptionEnabled != "" {

			if err := r.SetQueryParam("encryption.enabled", qEncryptionEnabled); err != nil {
				return err
			}
		}
	}

	if o.EncryptionKeyCreateTimeQueryParameter != nil {

		// query param encryption.key_create_time
		var qrEncryptionKeyCreateTime string

		if o.EncryptionKeyCreateTimeQueryParameter != nil {
			qrEncryptionKeyCreateTime = *o.EncryptionKeyCreateTimeQueryParameter
		}
		qEncryptionKeyCreateTime := qrEncryptionKeyCreateTime
		if qEncryptionKeyCreateTime != "" {

			if err := r.SetQueryParam("encryption.key_create_time", qEncryptionKeyCreateTime); err != nil {
				return err
			}
		}
	}

	if o.EncryptionKeyIDQueryParameter != nil {

		// query param encryption.key_id
		var qrEncryptionKeyID string

		if o.EncryptionKeyIDQueryParameter != nil {
			qrEncryptionKeyID = *o.EncryptionKeyIDQueryParameter
		}
		qEncryptionKeyID := qrEncryptionKeyID
		if qEncryptionKeyID != "" {

			if err := r.SetQueryParam("encryption.key_id", qEncryptionKeyID); err != nil {
				return err
			}
		}
	}

	if o.EncryptionRekeyQueryParameter != nil {

		// query param encryption.rekey
		var qrEncryptionRekey bool

		if o.EncryptionRekeyQueryParameter != nil {
			qrEncryptionRekey = *o.EncryptionRekeyQueryParameter
		}
		qEncryptionRekey := swag.FormatBool(qrEncryptionRekey)
		if qEncryptionRekey != "" {

			if err := r.SetQueryParam("encryption.rekey", qEncryptionRekey); err != nil {
				return err
			}
		}
	}

	if o.EncryptionStateQueryParameter != nil {

		// query param encryption.state
		var qrEncryptionState string

		if o.EncryptionStateQueryParameter != nil {
			qrEncryptionState = *o.EncryptionStateQueryParameter
		}
		qEncryptionState := qrEncryptionState
		if qEncryptionState != "" {

			if err := r.SetQueryParam("encryption.state", qEncryptionState); err != nil {
				return err
			}
		}
	}

	if o.EncryptionStatusCodeQueryParameter != nil {

		// query param encryption.status.code
		var qrEncryptionStatusCode string

		if o.EncryptionStatusCodeQueryParameter != nil {
			qrEncryptionStatusCode = *o.EncryptionStatusCodeQueryParameter
		}
		qEncryptionStatusCode := qrEncryptionStatusCode
		if qEncryptionStatusCode != "" {

			if err := r.SetQueryParam("encryption.status.code", qEncryptionStatusCode); err != nil {
				return err
			}
		}
	}

	if o.EncryptionStatusMessageQueryParameter != nil {

		// query param encryption.status.message
		var qrEncryptionStatusMessage string

		if o.EncryptionStatusMessageQueryParameter != nil {
			qrEncryptionStatusMessage = *o.EncryptionStatusMessageQueryParameter
		}
		qEncryptionStatusMessage := qrEncryptionStatusMessage
		if qEncryptionStatusMessage != "" {

			if err := r.SetQueryParam("encryption.status.message", qEncryptionStatusMessage); err != nil {
				return err
			}
		}
	}

	if o.EncryptionTypeQueryParameter != nil {

		// query param encryption.type
		var qrEncryptionType string

		if o.EncryptionTypeQueryParameter != nil {
			qrEncryptionType = *o.EncryptionTypeQueryParameter
		}
		qEncryptionType := qrEncryptionType
		if qEncryptionType != "" {

			if err := r.SetQueryParam("encryption.type", qEncryptionType); err != nil {
				return err
			}
		}
	}

	if o.ErrorStateHasBadBlocksQueryParameter != nil {

		// query param error_state.has_bad_blocks
		var qrErrorStateHasBadBlocks bool

		if o.ErrorStateHasBadBlocksQueryParameter != nil {
			qrErrorStateHasBadBlocks = *o.ErrorStateHasBadBlocksQueryParameter
		}
		qErrorStateHasBadBlocks := swag.FormatBool(qrErrorStateHasBadBlocks)
		if qErrorStateHasBadBlocks != "" {

			if err := r.SetQueryParam("error_state.has_bad_blocks", qErrorStateHasBadBlocks); err != nil {
				return err
			}
		}
	}

	if o.ErrorStateIsInconsistentQueryParameter != nil {

		// query param error_state.is_inconsistent
		var qrErrorStateIsInconsistent bool

		if o.ErrorStateIsInconsistentQueryParameter != nil {
			qrErrorStateIsInconsistent = *o.ErrorStateIsInconsistentQueryParameter
		}
		qErrorStateIsInconsistent := swag.FormatBool(qrErrorStateIsInconsistent)
		if qErrorStateIsInconsistent != "" {

			if err := r.SetQueryParam("error_state.is_inconsistent", qErrorStateIsInconsistent); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.FilesMaximumQueryParameter != nil {

		// query param files.maximum
		var qrFilesMaximum int64

		if o.FilesMaximumQueryParameter != nil {
			qrFilesMaximum = *o.FilesMaximumQueryParameter
		}
		qFilesMaximum := swag.FormatInt64(qrFilesMaximum)
		if qFilesMaximum != "" {

			if err := r.SetQueryParam("files.maximum", qFilesMaximum); err != nil {
				return err
			}
		}
	}

	if o.FilesUsedQueryParameter != nil {

		// query param files.used
		var qrFilesUsed int64

		if o.FilesUsedQueryParameter != nil {
			qrFilesUsed = *o.FilesUsedQueryParameter
		}
		qFilesUsed := swag.FormatInt64(qrFilesUsed)
		if qFilesUsed != "" {

			if err := r.SetQueryParam("files.used", qFilesUsed); err != nil {
				return err
			}
		}
	}

	if o.FlashPoolCacheEligibilityQueryParameter != nil {

		// query param flash_pool.cache_eligibility
		var qrFlashPoolCacheEligibility string

		if o.FlashPoolCacheEligibilityQueryParameter != nil {
			qrFlashPoolCacheEligibility = *o.FlashPoolCacheEligibilityQueryParameter
		}
		qFlashPoolCacheEligibility := qrFlashPoolCacheEligibility
		if qFlashPoolCacheEligibility != "" {

			if err := r.SetQueryParam("flash_pool.cache_eligibility", qFlashPoolCacheEligibility); err != nil {
				return err
			}
		}
	}

	if o.FlashPoolCacheRetentionPriorityQueryParameter != nil {

		// query param flash_pool.cache_retention_priority
		var qrFlashPoolCacheRetentionPriority string

		if o.FlashPoolCacheRetentionPriorityQueryParameter != nil {
			qrFlashPoolCacheRetentionPriority = *o.FlashPoolCacheRetentionPriorityQueryParameter
		}
		qFlashPoolCacheRetentionPriority := qrFlashPoolCacheRetentionPriority
		if qFlashPoolCacheRetentionPriority != "" {

			if err := r.SetQueryParam("flash_pool.cache_retention_priority", qFlashPoolCacheRetentionPriority); err != nil {
				return err
			}
		}
	}

	if o.FlashPoolCachingPolicyQueryParameter != nil {

		// query param flash_pool.caching_policy
		var qrFlashPoolCachingPolicy string

		if o.FlashPoolCachingPolicyQueryParameter != nil {
			qrFlashPoolCachingPolicy = *o.FlashPoolCachingPolicyQueryParameter
		}
		qFlashPoolCachingPolicy := qrFlashPoolCachingPolicy
		if qFlashPoolCachingPolicy != "" {

			if err := r.SetQueryParam("flash_pool.caching_policy", qFlashPoolCachingPolicy); err != nil {
				return err
			}
		}
	}

	if o.FlexcacheEndpointTypeQueryParameter != nil {

		// query param flexcache_endpoint_type
		var qrFlexcacheEndpointType string

		if o.FlexcacheEndpointTypeQueryParameter != nil {
			qrFlexcacheEndpointType = *o.FlexcacheEndpointTypeQueryParameter
		}
		qFlexcacheEndpointType := qrFlexcacheEndpointType
		if qFlexcacheEndpointType != "" {

			if err := r.SetQueryParam("flexcache_endpoint_type", qFlexcacheEndpointType); err != nil {
				return err
			}
		}
	}

	if o.FlexgroupNameQueryParameter != nil {

		// query param flexgroup.name
		var qrFlexgroupName string

		if o.FlexgroupNameQueryParameter != nil {
			qrFlexgroupName = *o.FlexgroupNameQueryParameter
		}
		qFlexgroupName := qrFlexgroupName
		if qFlexgroupName != "" {

			if err := r.SetQueryParam("flexgroup.name", qFlexgroupName); err != nil {
				return err
			}
		}
	}

	if o.FlexgroupUUIDQueryParameter != nil {

		// query param flexgroup.uuid
		var qrFlexgroupUUID string

		if o.FlexgroupUUIDQueryParameter != nil {
			qrFlexgroupUUID = *o.FlexgroupUUIDQueryParameter
		}
		qFlexgroupUUID := qrFlexgroupUUID
		if qFlexgroupUUID != "" {

			if err := r.SetQueryParam("flexgroup.uuid", qFlexgroupUUID); err != nil {
				return err
			}
		}
	}

	if o.GranularDataQueryParameter != nil {

		// query param granular_data
		var qrGranularData bool

		if o.GranularDataQueryParameter != nil {
			qrGranularData = *o.GranularDataQueryParameter
		}
		qGranularData := swag.FormatBool(qrGranularData)
		if qGranularData != "" {

			if err := r.SetQueryParam("granular_data", qGranularData); err != nil {
				return err
			}
		}
	}

	if o.GuaranteeHonoredQueryParameter != nil {

		// query param guarantee.honored
		var qrGuaranteeHonored bool

		if o.GuaranteeHonoredQueryParameter != nil {
			qrGuaranteeHonored = *o.GuaranteeHonoredQueryParameter
		}
		qGuaranteeHonored := swag.FormatBool(qrGuaranteeHonored)
		if qGuaranteeHonored != "" {

			if err := r.SetQueryParam("guarantee.honored", qGuaranteeHonored); err != nil {
				return err
			}
		}
	}

	if o.GuaranteeTypeQueryParameter != nil {

		// query param guarantee.type
		var qrGuaranteeType string

		if o.GuaranteeTypeQueryParameter != nil {
			qrGuaranteeType = *o.GuaranteeTypeQueryParameter
		}
		qGuaranteeType := qrGuaranteeType
		if qGuaranteeType != "" {

			if err := r.SetQueryParam("guarantee.type", qGuaranteeType); err != nil {
				return err
			}
		}
	}

	if o.IdcsScannerEnabledQueryParameter != nil {

		// query param idcs_scanner.enabled
		var qrIdcsScannerEnabled bool

		if o.IdcsScannerEnabledQueryParameter != nil {
			qrIdcsScannerEnabled = *o.IdcsScannerEnabledQueryParameter
		}
		qIdcsScannerEnabled := swag.FormatBool(qrIdcsScannerEnabled)
		if qIdcsScannerEnabled != "" {

			if err := r.SetQueryParam("idcs_scanner.enabled", qIdcsScannerEnabled); err != nil {
				return err
			}
		}
	}

	if o.IdcsScannerModeQueryParameter != nil {

		// query param idcs_scanner.mode
		var qrIdcsScannerMode string

		if o.IdcsScannerModeQueryParameter != nil {
			qrIdcsScannerMode = *o.IdcsScannerModeQueryParameter
		}
		qIdcsScannerMode := qrIdcsScannerMode
		if qIdcsScannerMode != "" {

			if err := r.SetQueryParam("idcs_scanner.mode", qIdcsScannerMode); err != nil {
				return err
			}
		}
	}

	if o.IdcsScannerOperationStateQueryParameter != nil {

		// query param idcs_scanner.operation_state
		var qrIdcsScannerOperationState string

		if o.IdcsScannerOperationStateQueryParameter != nil {
			qrIdcsScannerOperationState = *o.IdcsScannerOperationStateQueryParameter
		}
		qIdcsScannerOperationState := qrIdcsScannerOperationState
		if qIdcsScannerOperationState != "" {

			if err := r.SetQueryParam("idcs_scanner.operation_state", qIdcsScannerOperationState); err != nil {
				return err
			}
		}
	}

	if o.IdcsScannerStatusQueryParameter != nil {

		// query param idcs_scanner.status
		var qrIdcsScannerStatus string

		if o.IdcsScannerStatusQueryParameter != nil {
			qrIdcsScannerStatus = *o.IdcsScannerStatusQueryParameter
		}
		qIdcsScannerStatus := qrIdcsScannerStatus
		if qIdcsScannerStatus != "" {

			if err := r.SetQueryParam("idcs_scanner.status", qIdcsScannerStatus); err != nil {
				return err
			}
		}
	}

	if o.IdcsScannerThresholdInactiveTimeQueryParameter != nil {

		// query param idcs_scanner.threshold_inactive_time
		var qrIdcsScannerThresholdInactiveTime string

		if o.IdcsScannerThresholdInactiveTimeQueryParameter != nil {
			qrIdcsScannerThresholdInactiveTime = *o.IdcsScannerThresholdInactiveTimeQueryParameter
		}
		qIdcsScannerThresholdInactiveTime := qrIdcsScannerThresholdInactiveTime
		if qIdcsScannerThresholdInactiveTime != "" {

			if err := r.SetQueryParam("idcs_scanner.threshold_inactive_time", qIdcsScannerThresholdInactiveTime); err != nil {
				return err
			}
		}
	}

	if o.IsConstituentQueryParameter != nil {

		// query param is_constituent
		var qrIsConstituent bool

		if o.IsConstituentQueryParameter != nil {
			qrIsConstituent = *o.IsConstituentQueryParameter
		}
		qIsConstituent := swag.FormatBool(qrIsConstituent)
		if qIsConstituent != "" {

			if err := r.SetQueryParam("is_constituent", qIsConstituent); err != nil {
				return err
			}
		}
	}

	if o.IsObjectStoreQueryParameter != nil {

		// query param is_object_store
		var qrIsObjectStore bool

		if o.IsObjectStoreQueryParameter != nil {
			qrIsObjectStore = *o.IsObjectStoreQueryParameter
		}
		qIsObjectStore := swag.FormatBool(qrIsObjectStore)
		if qIsObjectStore != "" {

			if err := r.SetQueryParam("is_object_store", qIsObjectStore); err != nil {
				return err
			}
		}
	}

	if o.IsSVMRootQueryParameter != nil {

		// query param is_svm_root
		var qrIsSvmRoot bool

		if o.IsSVMRootQueryParameter != nil {
			qrIsSvmRoot = *o.IsSVMRootQueryParameter
		}
		qIsSvmRoot := swag.FormatBool(qrIsSvmRoot)
		if qIsSvmRoot != "" {

			if err := r.SetQueryParam("is_svm_root", qIsSvmRoot); err != nil {
				return err
			}
		}
	}

	if o.LanguageQueryParameter != nil {

		// query param language
		var qrLanguage string

		if o.LanguageQueryParameter != nil {
			qrLanguage = *o.LanguageQueryParameter
		}
		qLanguage := qrLanguage
		if qLanguage != "" {

			if err := r.SetQueryParam("language", qLanguage); err != nil {
				return err
			}
		}
	}

	if o.MaxDirSizeQueryParameter != nil {

		// query param max_dir_size
		var qrMaxDirSize int64

		if o.MaxDirSizeQueryParameter != nil {
			qrMaxDirSize = *o.MaxDirSizeQueryParameter
		}
		qMaxDirSize := swag.FormatInt64(qrMaxDirSize)
		if qMaxDirSize != "" {

			if err := r.SetQueryParam("max_dir_size", qMaxDirSize); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudDurationQueryParameter != nil {

		// query param metric.cloud.duration
		var qrMetricCloudDuration string

		if o.MetricCloudDurationQueryParameter != nil {
			qrMetricCloudDuration = *o.MetricCloudDurationQueryParameter
		}
		qMetricCloudDuration := qrMetricCloudDuration
		if qMetricCloudDuration != "" {

			if err := r.SetQueryParam("metric.cloud.duration", qMetricCloudDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudIopsOtherQueryParameter != nil {

		// query param metric.cloud.iops.other
		var qrMetricCloudIopsOther int64

		if o.MetricCloudIopsOtherQueryParameter != nil {
			qrMetricCloudIopsOther = *o.MetricCloudIopsOtherQueryParameter
		}
		qMetricCloudIopsOther := swag.FormatInt64(qrMetricCloudIopsOther)
		if qMetricCloudIopsOther != "" {

			if err := r.SetQueryParam("metric.cloud.iops.other", qMetricCloudIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudIopsReadQueryParameter != nil {

		// query param metric.cloud.iops.read
		var qrMetricCloudIopsRead int64

		if o.MetricCloudIopsReadQueryParameter != nil {
			qrMetricCloudIopsRead = *o.MetricCloudIopsReadQueryParameter
		}
		qMetricCloudIopsRead := swag.FormatInt64(qrMetricCloudIopsRead)
		if qMetricCloudIopsRead != "" {

			if err := r.SetQueryParam("metric.cloud.iops.read", qMetricCloudIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudIopsTotalQueryParameter != nil {

		// query param metric.cloud.iops.total
		var qrMetricCloudIopsTotal int64

		if o.MetricCloudIopsTotalQueryParameter != nil {
			qrMetricCloudIopsTotal = *o.MetricCloudIopsTotalQueryParameter
		}
		qMetricCloudIopsTotal := swag.FormatInt64(qrMetricCloudIopsTotal)
		if qMetricCloudIopsTotal != "" {

			if err := r.SetQueryParam("metric.cloud.iops.total", qMetricCloudIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudIopsWriteQueryParameter != nil {

		// query param metric.cloud.iops.write
		var qrMetricCloudIopsWrite int64

		if o.MetricCloudIopsWriteQueryParameter != nil {
			qrMetricCloudIopsWrite = *o.MetricCloudIopsWriteQueryParameter
		}
		qMetricCloudIopsWrite := swag.FormatInt64(qrMetricCloudIopsWrite)
		if qMetricCloudIopsWrite != "" {

			if err := r.SetQueryParam("metric.cloud.iops.write", qMetricCloudIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudLatencyOtherQueryParameter != nil {

		// query param metric.cloud.latency.other
		var qrMetricCloudLatencyOther int64

		if o.MetricCloudLatencyOtherQueryParameter != nil {
			qrMetricCloudLatencyOther = *o.MetricCloudLatencyOtherQueryParameter
		}
		qMetricCloudLatencyOther := swag.FormatInt64(qrMetricCloudLatencyOther)
		if qMetricCloudLatencyOther != "" {

			if err := r.SetQueryParam("metric.cloud.latency.other", qMetricCloudLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudLatencyReadQueryParameter != nil {

		// query param metric.cloud.latency.read
		var qrMetricCloudLatencyRead int64

		if o.MetricCloudLatencyReadQueryParameter != nil {
			qrMetricCloudLatencyRead = *o.MetricCloudLatencyReadQueryParameter
		}
		qMetricCloudLatencyRead := swag.FormatInt64(qrMetricCloudLatencyRead)
		if qMetricCloudLatencyRead != "" {

			if err := r.SetQueryParam("metric.cloud.latency.read", qMetricCloudLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudLatencyTotalQueryParameter != nil {

		// query param metric.cloud.latency.total
		var qrMetricCloudLatencyTotal int64

		if o.MetricCloudLatencyTotalQueryParameter != nil {
			qrMetricCloudLatencyTotal = *o.MetricCloudLatencyTotalQueryParameter
		}
		qMetricCloudLatencyTotal := swag.FormatInt64(qrMetricCloudLatencyTotal)
		if qMetricCloudLatencyTotal != "" {

			if err := r.SetQueryParam("metric.cloud.latency.total", qMetricCloudLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudLatencyWriteQueryParameter != nil {

		// query param metric.cloud.latency.write
		var qrMetricCloudLatencyWrite int64

		if o.MetricCloudLatencyWriteQueryParameter != nil {
			qrMetricCloudLatencyWrite = *o.MetricCloudLatencyWriteQueryParameter
		}
		qMetricCloudLatencyWrite := swag.FormatInt64(qrMetricCloudLatencyWrite)
		if qMetricCloudLatencyWrite != "" {

			if err := r.SetQueryParam("metric.cloud.latency.write", qMetricCloudLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudStatusQueryParameter != nil {

		// query param metric.cloud.status
		var qrMetricCloudStatus string

		if o.MetricCloudStatusQueryParameter != nil {
			qrMetricCloudStatus = *o.MetricCloudStatusQueryParameter
		}
		qMetricCloudStatus := qrMetricCloudStatus
		if qMetricCloudStatus != "" {

			if err := r.SetQueryParam("metric.cloud.status", qMetricCloudStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricCloudTimestampQueryParameter != nil {

		// query param metric.cloud.timestamp
		var qrMetricCloudTimestamp string

		if o.MetricCloudTimestampQueryParameter != nil {
			qrMetricCloudTimestamp = *o.MetricCloudTimestampQueryParameter
		}
		qMetricCloudTimestamp := qrMetricCloudTimestamp
		if qMetricCloudTimestamp != "" {

			if err := r.SetQueryParam("metric.cloud.timestamp", qMetricCloudTimestamp); err != nil {
				return err
			}
		}
	}

	if o.MetricDurationQueryParameter != nil {

		// query param metric.duration
		var qrMetricDuration string

		if o.MetricDurationQueryParameter != nil {
			qrMetricDuration = *o.MetricDurationQueryParameter
		}
		qMetricDuration := qrMetricDuration
		if qMetricDuration != "" {

			if err := r.SetQueryParam("metric.duration", qMetricDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricFlexcacheBandwidthSavingsQueryParameter != nil {

		// query param metric.flexcache.bandwidth_savings
		var qrMetricFlexcacheBandwidthSavings int64

		if o.MetricFlexcacheBandwidthSavingsQueryParameter != nil {
			qrMetricFlexcacheBandwidthSavings = *o.MetricFlexcacheBandwidthSavingsQueryParameter
		}
		qMetricFlexcacheBandwidthSavings := swag.FormatInt64(qrMetricFlexcacheBandwidthSavings)
		if qMetricFlexcacheBandwidthSavings != "" {

			if err := r.SetQueryParam("metric.flexcache.bandwidth_savings", qMetricFlexcacheBandwidthSavings); err != nil {
				return err
			}
		}
	}

	if o.MetricFlexcacheCacheMissPercentQueryParameter != nil {

		// query param metric.flexcache.cache_miss_percent
		var qrMetricFlexcacheCacheMissPercent int64

		if o.MetricFlexcacheCacheMissPercentQueryParameter != nil {
			qrMetricFlexcacheCacheMissPercent = *o.MetricFlexcacheCacheMissPercentQueryParameter
		}
		qMetricFlexcacheCacheMissPercent := swag.FormatInt64(qrMetricFlexcacheCacheMissPercent)
		if qMetricFlexcacheCacheMissPercent != "" {

			if err := r.SetQueryParam("metric.flexcache.cache_miss_percent", qMetricFlexcacheCacheMissPercent); err != nil {
				return err
			}
		}
	}

	if o.MetricFlexcacheDurationQueryParameter != nil {

		// query param metric.flexcache.duration
		var qrMetricFlexcacheDuration string

		if o.MetricFlexcacheDurationQueryParameter != nil {
			qrMetricFlexcacheDuration = *o.MetricFlexcacheDurationQueryParameter
		}
		qMetricFlexcacheDuration := qrMetricFlexcacheDuration
		if qMetricFlexcacheDuration != "" {

			if err := r.SetQueryParam("metric.flexcache.duration", qMetricFlexcacheDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricFlexcacheStatusQueryParameter != nil {

		// query param metric.flexcache.status
		var qrMetricFlexcacheStatus string

		if o.MetricFlexcacheStatusQueryParameter != nil {
			qrMetricFlexcacheStatus = *o.MetricFlexcacheStatusQueryParameter
		}
		qMetricFlexcacheStatus := qrMetricFlexcacheStatus
		if qMetricFlexcacheStatus != "" {

			if err := r.SetQueryParam("metric.flexcache.status", qMetricFlexcacheStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricFlexcacheTimestampQueryParameter != nil {

		// query param metric.flexcache.timestamp
		var qrMetricFlexcacheTimestamp string

		if o.MetricFlexcacheTimestampQueryParameter != nil {
			qrMetricFlexcacheTimestamp = *o.MetricFlexcacheTimestampQueryParameter
		}
		qMetricFlexcacheTimestamp := qrMetricFlexcacheTimestamp
		if qMetricFlexcacheTimestamp != "" {

			if err := r.SetQueryParam("metric.flexcache.timestamp", qMetricFlexcacheTimestamp); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsOtherQueryParameter != nil {

		// query param metric.iops.other
		var qrMetricIopsOther int64

		if o.MetricIopsOtherQueryParameter != nil {
			qrMetricIopsOther = *o.MetricIopsOtherQueryParameter
		}
		qMetricIopsOther := swag.FormatInt64(qrMetricIopsOther)
		if qMetricIopsOther != "" {

			if err := r.SetQueryParam("metric.iops.other", qMetricIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsReadQueryParameter != nil {

		// query param metric.iops.read
		var qrMetricIopsRead int64

		if o.MetricIopsReadQueryParameter != nil {
			qrMetricIopsRead = *o.MetricIopsReadQueryParameter
		}
		qMetricIopsRead := swag.FormatInt64(qrMetricIopsRead)
		if qMetricIopsRead != "" {

			if err := r.SetQueryParam("metric.iops.read", qMetricIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsTotalQueryParameter != nil {

		// query param metric.iops.total
		var qrMetricIopsTotal int64

		if o.MetricIopsTotalQueryParameter != nil {
			qrMetricIopsTotal = *o.MetricIopsTotalQueryParameter
		}
		qMetricIopsTotal := swag.FormatInt64(qrMetricIopsTotal)
		if qMetricIopsTotal != "" {

			if err := r.SetQueryParam("metric.iops.total", qMetricIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsWriteQueryParameter != nil {

		// query param metric.iops.write
		var qrMetricIopsWrite int64

		if o.MetricIopsWriteQueryParameter != nil {
			qrMetricIopsWrite = *o.MetricIopsWriteQueryParameter
		}
		qMetricIopsWrite := swag.FormatInt64(qrMetricIopsWrite)
		if qMetricIopsWrite != "" {

			if err := r.SetQueryParam("metric.iops.write", qMetricIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyOtherQueryParameter != nil {

		// query param metric.latency.other
		var qrMetricLatencyOther int64

		if o.MetricLatencyOtherQueryParameter != nil {
			qrMetricLatencyOther = *o.MetricLatencyOtherQueryParameter
		}
		qMetricLatencyOther := swag.FormatInt64(qrMetricLatencyOther)
		if qMetricLatencyOther != "" {

			if err := r.SetQueryParam("metric.latency.other", qMetricLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyReadQueryParameter != nil {

		// query param metric.latency.read
		var qrMetricLatencyRead int64

		if o.MetricLatencyReadQueryParameter != nil {
			qrMetricLatencyRead = *o.MetricLatencyReadQueryParameter
		}
		qMetricLatencyRead := swag.FormatInt64(qrMetricLatencyRead)
		if qMetricLatencyRead != "" {

			if err := r.SetQueryParam("metric.latency.read", qMetricLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyTotalQueryParameter != nil {

		// query param metric.latency.total
		var qrMetricLatencyTotal int64

		if o.MetricLatencyTotalQueryParameter != nil {
			qrMetricLatencyTotal = *o.MetricLatencyTotalQueryParameter
		}
		qMetricLatencyTotal := swag.FormatInt64(qrMetricLatencyTotal)
		if qMetricLatencyTotal != "" {

			if err := r.SetQueryParam("metric.latency.total", qMetricLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyWriteQueryParameter != nil {

		// query param metric.latency.write
		var qrMetricLatencyWrite int64

		if o.MetricLatencyWriteQueryParameter != nil {
			qrMetricLatencyWrite = *o.MetricLatencyWriteQueryParameter
		}
		qMetricLatencyWrite := swag.FormatInt64(qrMetricLatencyWrite)
		if qMetricLatencyWrite != "" {

			if err := r.SetQueryParam("metric.latency.write", qMetricLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricStatusQueryParameter != nil {

		// query param metric.status
		var qrMetricStatus string

		if o.MetricStatusQueryParameter != nil {
			qrMetricStatus = *o.MetricStatusQueryParameter
		}
		qMetricStatus := qrMetricStatus
		if qMetricStatus != "" {

			if err := r.SetQueryParam("metric.status", qMetricStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputOtherQueryParameter != nil {

		// query param metric.throughput.other
		var qrMetricThroughputOther int64

		if o.MetricThroughputOtherQueryParameter != nil {
			qrMetricThroughputOther = *o.MetricThroughputOtherQueryParameter
		}
		qMetricThroughputOther := swag.FormatInt64(qrMetricThroughputOther)
		if qMetricThroughputOther != "" {

			if err := r.SetQueryParam("metric.throughput.other", qMetricThroughputOther); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputReadQueryParameter != nil {

		// query param metric.throughput.read
		var qrMetricThroughputRead int64

		if o.MetricThroughputReadQueryParameter != nil {
			qrMetricThroughputRead = *o.MetricThroughputReadQueryParameter
		}
		qMetricThroughputRead := swag.FormatInt64(qrMetricThroughputRead)
		if qMetricThroughputRead != "" {

			if err := r.SetQueryParam("metric.throughput.read", qMetricThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputTotalQueryParameter != nil {

		// query param metric.throughput.total
		var qrMetricThroughputTotal int64

		if o.MetricThroughputTotalQueryParameter != nil {
			qrMetricThroughputTotal = *o.MetricThroughputTotalQueryParameter
		}
		qMetricThroughputTotal := swag.FormatInt64(qrMetricThroughputTotal)
		if qMetricThroughputTotal != "" {

			if err := r.SetQueryParam("metric.throughput.total", qMetricThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputWriteQueryParameter != nil {

		// query param metric.throughput.write
		var qrMetricThroughputWrite int64

		if o.MetricThroughputWriteQueryParameter != nil {
			qrMetricThroughputWrite = *o.MetricThroughputWriteQueryParameter
		}
		qMetricThroughputWrite := swag.FormatInt64(qrMetricThroughputWrite)
		if qMetricThroughputWrite != "" {

			if err := r.SetQueryParam("metric.throughput.write", qMetricThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricTimestampQueryParameter != nil {

		// query param metric.timestamp
		var qrMetricTimestamp string

		if o.MetricTimestampQueryParameter != nil {
			qrMetricTimestamp = *o.MetricTimestampQueryParameter
		}
		qMetricTimestamp := qrMetricTimestamp
		if qMetricTimestamp != "" {

			if err := r.SetQueryParam("metric.timestamp", qMetricTimestamp); err != nil {
				return err
			}
		}
	}

	if o.MovementCutoverWindowQueryParameter != nil {

		// query param movement.cutover_window
		var qrMovementCutoverWindow int64

		if o.MovementCutoverWindowQueryParameter != nil {
			qrMovementCutoverWindow = *o.MovementCutoverWindowQueryParameter
		}
		qMovementCutoverWindow := swag.FormatInt64(qrMovementCutoverWindow)
		if qMovementCutoverWindow != "" {

			if err := r.SetQueryParam("movement.cutover_window", qMovementCutoverWindow); err != nil {
				return err
			}
		}
	}

	if o.MovementDestinationAggregateNameQueryParameter != nil {

		// query param movement.destination_aggregate.name
		var qrMovementDestinationAggregateName string

		if o.MovementDestinationAggregateNameQueryParameter != nil {
			qrMovementDestinationAggregateName = *o.MovementDestinationAggregateNameQueryParameter
		}
		qMovementDestinationAggregateName := qrMovementDestinationAggregateName
		if qMovementDestinationAggregateName != "" {

			if err := r.SetQueryParam("movement.destination_aggregate.name", qMovementDestinationAggregateName); err != nil {
				return err
			}
		}
	}

	if o.MovementDestinationAggregateUUIDQueryParameter != nil {

		// query param movement.destination_aggregate.uuid
		var qrMovementDestinationAggregateUUID string

		if o.MovementDestinationAggregateUUIDQueryParameter != nil {
			qrMovementDestinationAggregateUUID = *o.MovementDestinationAggregateUUIDQueryParameter
		}
		qMovementDestinationAggregateUUID := qrMovementDestinationAggregateUUID
		if qMovementDestinationAggregateUUID != "" {

			if err := r.SetQueryParam("movement.destination_aggregate.uuid", qMovementDestinationAggregateUUID); err != nil {
				return err
			}
		}
	}

	if o.MovementPercentCompleteQueryParameter != nil {

		// query param movement.percent_complete
		var qrMovementPercentComplete int64

		if o.MovementPercentCompleteQueryParameter != nil {
			qrMovementPercentComplete = *o.MovementPercentCompleteQueryParameter
		}
		qMovementPercentComplete := swag.FormatInt64(qrMovementPercentComplete)
		if qMovementPercentComplete != "" {

			if err := r.SetQueryParam("movement.percent_complete", qMovementPercentComplete); err != nil {
				return err
			}
		}
	}

	if o.MovementStartTimeQueryParameter != nil {

		// query param movement.start_time
		var qrMovementStartTime string

		if o.MovementStartTimeQueryParameter != nil {
			qrMovementStartTime = *o.MovementStartTimeQueryParameter
		}
		qMovementStartTime := qrMovementStartTime
		if qMovementStartTime != "" {

			if err := r.SetQueryParam("movement.start_time", qMovementStartTime); err != nil {
				return err
			}
		}
	}

	if o.MovementStateQueryParameter != nil {

		// query param movement.state
		var qrMovementState string

		if o.MovementStateQueryParameter != nil {
			qrMovementState = *o.MovementStateQueryParameter
		}
		qMovementState := qrMovementState
		if qMovementState != "" {

			if err := r.SetQueryParam("movement.state", qMovementState); err != nil {
				return err
			}
		}
	}

	if o.MsIDQueryParameter != nil {

		// query param msid
		var qrMsid int64

		if o.MsIDQueryParameter != nil {
			qrMsid = *o.MsIDQueryParameter
		}
		qMsid := swag.FormatInt64(qrMsid)
		if qMsid != "" {

			if err := r.SetQueryParam("msid", qMsid); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.NasExportPolicyIDQueryParameter != nil {

		// query param nas.export_policy.id
		var qrNasExportPolicyID int64

		if o.NasExportPolicyIDQueryParameter != nil {
			qrNasExportPolicyID = *o.NasExportPolicyIDQueryParameter
		}
		qNasExportPolicyID := swag.FormatInt64(qrNasExportPolicyID)
		if qNasExportPolicyID != "" {

			if err := r.SetQueryParam("nas.export_policy.id", qNasExportPolicyID); err != nil {
				return err
			}
		}
	}

	if o.NasExportPolicyNameQueryParameter != nil {

		// query param nas.export_policy.name
		var qrNasExportPolicyName string

		if o.NasExportPolicyNameQueryParameter != nil {
			qrNasExportPolicyName = *o.NasExportPolicyNameQueryParameter
		}
		qNasExportPolicyName := qrNasExportPolicyName
		if qNasExportPolicyName != "" {

			if err := r.SetQueryParam("nas.export_policy.name", qNasExportPolicyName); err != nil {
				return err
			}
		}
	}

	if o.NasGIDQueryParameter != nil {

		// query param nas.gid
		var qrNasGid int64

		if o.NasGIDQueryParameter != nil {
			qrNasGid = *o.NasGIDQueryParameter
		}
		qNasGid := swag.FormatInt64(qrNasGid)
		if qNasGid != "" {

			if err := r.SetQueryParam("nas.gid", qNasGid); err != nil {
				return err
			}
		}
	}

	if o.NasJunctionParentNameQueryParameter != nil {

		// query param nas.junction_parent.name
		var qrNasJunctionParentName string

		if o.NasJunctionParentNameQueryParameter != nil {
			qrNasJunctionParentName = *o.NasJunctionParentNameQueryParameter
		}
		qNasJunctionParentName := qrNasJunctionParentName
		if qNasJunctionParentName != "" {

			if err := r.SetQueryParam("nas.junction_parent.name", qNasJunctionParentName); err != nil {
				return err
			}
		}
	}

	if o.NasJunctionParentUUIDQueryParameter != nil {

		// query param nas.junction_parent.uuid
		var qrNasJunctionParentUUID string

		if o.NasJunctionParentUUIDQueryParameter != nil {
			qrNasJunctionParentUUID = *o.NasJunctionParentUUIDQueryParameter
		}
		qNasJunctionParentUUID := qrNasJunctionParentUUID
		if qNasJunctionParentUUID != "" {

			if err := r.SetQueryParam("nas.junction_parent.uuid", qNasJunctionParentUUID); err != nil {
				return err
			}
		}
	}

	if o.NasPathQueryParameter != nil {

		// query param nas.path
		var qrNasPath string

		if o.NasPathQueryParameter != nil {
			qrNasPath = *o.NasPathQueryParameter
		}
		qNasPath := qrNasPath
		if qNasPath != "" {

			if err := r.SetQueryParam("nas.path", qNasPath); err != nil {
				return err
			}
		}
	}

	if o.NasSecurityStyleQueryParameter != nil {

		// query param nas.security_style
		var qrNasSecurityStyle string

		if o.NasSecurityStyleQueryParameter != nil {
			qrNasSecurityStyle = *o.NasSecurityStyleQueryParameter
		}
		qNasSecurityStyle := qrNasSecurityStyle
		if qNasSecurityStyle != "" {

			if err := r.SetQueryParam("nas.security_style", qNasSecurityStyle); err != nil {
				return err
			}
		}
	}

	if o.NasUIDQueryParameter != nil {

		// query param nas.uid
		var qrNasUID int64

		if o.NasUIDQueryParameter != nil {
			qrNasUID = *o.NasUIDQueryParameter
		}
		qNasUID := swag.FormatInt64(qrNasUID)
		if qNasUID != "" {

			if err := r.SetQueryParam("nas.uid", qNasUID); err != nil {
				return err
			}
		}
	}

	if o.NasUnixPermissionsQueryParameter != nil {

		// query param nas.unix_permissions
		var qrNasUnixPermissions int64

		if o.NasUnixPermissionsQueryParameter != nil {
			qrNasUnixPermissions = *o.NasUnixPermissionsQueryParameter
		}
		qNasUnixPermissions := swag.FormatInt64(qrNasUnixPermissions)
		if qNasUnixPermissions != "" {

			if err := r.SetQueryParam("nas.unix_permissions", qNasUnixPermissions); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.QosPolicyMaxThroughputIopsQueryParameter != nil {

		// query param qos.policy.max_throughput_iops
		var qrQosPolicyMaxThroughputIops int64

		if o.QosPolicyMaxThroughputIopsQueryParameter != nil {
			qrQosPolicyMaxThroughputIops = *o.QosPolicyMaxThroughputIopsQueryParameter
		}
		qQosPolicyMaxThroughputIops := swag.FormatInt64(qrQosPolicyMaxThroughputIops)
		if qQosPolicyMaxThroughputIops != "" {

			if err := r.SetQueryParam("qos.policy.max_throughput_iops", qQosPolicyMaxThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyMaxThroughputMbpsQueryParameter != nil {

		// query param qos.policy.max_throughput_mbps
		var qrQosPolicyMaxThroughputMbps int64

		if o.QosPolicyMaxThroughputMbpsQueryParameter != nil {
			qrQosPolicyMaxThroughputMbps = *o.QosPolicyMaxThroughputMbpsQueryParameter
		}
		qQosPolicyMaxThroughputMbps := swag.FormatInt64(qrQosPolicyMaxThroughputMbps)
		if qQosPolicyMaxThroughputMbps != "" {

			if err := r.SetQueryParam("qos.policy.max_throughput_mbps", qQosPolicyMaxThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyMinThroughputIopsQueryParameter != nil {

		// query param qos.policy.min_throughput_iops
		var qrQosPolicyMinThroughputIops int64

		if o.QosPolicyMinThroughputIopsQueryParameter != nil {
			qrQosPolicyMinThroughputIops = *o.QosPolicyMinThroughputIopsQueryParameter
		}
		qQosPolicyMinThroughputIops := swag.FormatInt64(qrQosPolicyMinThroughputIops)
		if qQosPolicyMinThroughputIops != "" {

			if err := r.SetQueryParam("qos.policy.min_throughput_iops", qQosPolicyMinThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyMinThroughputMbpsQueryParameter != nil {

		// query param qos.policy.min_throughput_mbps
		var qrQosPolicyMinThroughputMbps int64

		if o.QosPolicyMinThroughputMbpsQueryParameter != nil {
			qrQosPolicyMinThroughputMbps = *o.QosPolicyMinThroughputMbpsQueryParameter
		}
		qQosPolicyMinThroughputMbps := swag.FormatInt64(qrQosPolicyMinThroughputMbps)
		if qQosPolicyMinThroughputMbps != "" {

			if err := r.SetQueryParam("qos.policy.min_throughput_mbps", qQosPolicyMinThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyNameQueryParameter != nil {

		// query param qos.policy.name
		var qrQosPolicyName string

		if o.QosPolicyNameQueryParameter != nil {
			qrQosPolicyName = *o.QosPolicyNameQueryParameter
		}
		qQosPolicyName := qrQosPolicyName
		if qQosPolicyName != "" {

			if err := r.SetQueryParam("qos.policy.name", qQosPolicyName); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyUUIDQueryParameter != nil {

		// query param qos.policy.uuid
		var qrQosPolicyUUID string

		if o.QosPolicyUUIDQueryParameter != nil {
			qrQosPolicyUUID = *o.QosPolicyUUIDQueryParameter
		}
		qQosPolicyUUID := qrQosPolicyUUID
		if qQosPolicyUUID != "" {

			if err := r.SetQueryParam("qos.policy.uuid", qQosPolicyUUID); err != nil {
				return err
			}
		}
	}

	if o.QueueForEncryptionQueryParameter != nil {

		// query param queue_for_encryption
		var qrQueueForEncryption bool

		if o.QueueForEncryptionQueryParameter != nil {
			qrQueueForEncryption = *o.QueueForEncryptionQueryParameter
		}
		qQueueForEncryption := swag.FormatBool(qrQueueForEncryption)
		if qQueueForEncryption != "" {

			if err := r.SetQueryParam("queue_for_encryption", qQueueForEncryption); err != nil {
				return err
			}
		}
	}

	if o.QuotaStateQueryParameter != nil {

		// query param quota.state
		var qrQuotaState string

		if o.QuotaStateQueryParameter != nil {
			qrQuotaState = *o.QuotaStateQueryParameter
		}
		qQuotaState := qrQuotaState
		if qQuotaState != "" {

			if err := r.SetQueryParam("quota.state", qQuotaState); err != nil {
				return err
			}
		}
	}

	if o.RebalancingDataMovedQueryParameter != nil {

		// query param rebalancing.data_moved
		var qrRebalancingDataMoved int64

		if o.RebalancingDataMovedQueryParameter != nil {
			qrRebalancingDataMoved = *o.RebalancingDataMovedQueryParameter
		}
		qRebalancingDataMoved := swag.FormatInt64(qrRebalancingDataMoved)
		if qRebalancingDataMoved != "" {

			if err := r.SetQueryParam("rebalancing.data_moved", qRebalancingDataMoved); err != nil {
				return err
			}
		}
	}

	if o.RebalancingExcludeSnapshotsQueryParameter != nil {

		// query param rebalancing.exclude_snapshots
		var qrRebalancingExcludeSnapshots bool

		if o.RebalancingExcludeSnapshotsQueryParameter != nil {
			qrRebalancingExcludeSnapshots = *o.RebalancingExcludeSnapshotsQueryParameter
		}
		qRebalancingExcludeSnapshots := swag.FormatBool(qrRebalancingExcludeSnapshots)
		if qRebalancingExcludeSnapshots != "" {

			if err := r.SetQueryParam("rebalancing.exclude_snapshots", qRebalancingExcludeSnapshots); err != nil {
				return err
			}
		}
	}

	if o.RebalancingFailureReasonCodeQueryParameter != nil {

		// query param rebalancing.failure_reason.code
		var qrRebalancingFailureReasonCode string

		if o.RebalancingFailureReasonCodeQueryParameter != nil {
			qrRebalancingFailureReasonCode = *o.RebalancingFailureReasonCodeQueryParameter
		}
		qRebalancingFailureReasonCode := qrRebalancingFailureReasonCode
		if qRebalancingFailureReasonCode != "" {

			if err := r.SetQueryParam("rebalancing.failure_reason.code", qRebalancingFailureReasonCode); err != nil {
				return err
			}
		}
	}

	if o.RebalancingFailureReasonMessageQueryParameter != nil {

		// query param rebalancing.failure_reason.message
		var qrRebalancingFailureReasonMessage string

		if o.RebalancingFailureReasonMessageQueryParameter != nil {
			qrRebalancingFailureReasonMessage = *o.RebalancingFailureReasonMessageQueryParameter
		}
		qRebalancingFailureReasonMessage := qrRebalancingFailureReasonMessage
		if qRebalancingFailureReasonMessage != "" {

			if err := r.SetQueryParam("rebalancing.failure_reason.message", qRebalancingFailureReasonMessage); err != nil {
				return err
			}
		}
	}

	if o.RebalancingImbalancePercentQueryParameter != nil {

		// query param rebalancing.imbalance_percent
		var qrRebalancingImbalancePercent int64

		if o.RebalancingImbalancePercentQueryParameter != nil {
			qrRebalancingImbalancePercent = *o.RebalancingImbalancePercentQueryParameter
		}
		qRebalancingImbalancePercent := swag.FormatInt64(qrRebalancingImbalancePercent)
		if qRebalancingImbalancePercent != "" {

			if err := r.SetQueryParam("rebalancing.imbalance_percent", qRebalancingImbalancePercent); err != nil {
				return err
			}
		}
	}

	if o.RebalancingImbalanceSizeQueryParameter != nil {

		// query param rebalancing.imbalance_size
		var qrRebalancingImbalanceSize int64

		if o.RebalancingImbalanceSizeQueryParameter != nil {
			qrRebalancingImbalanceSize = *o.RebalancingImbalanceSizeQueryParameter
		}
		qRebalancingImbalanceSize := swag.FormatInt64(qrRebalancingImbalanceSize)
		if qRebalancingImbalanceSize != "" {

			if err := r.SetQueryParam("rebalancing.imbalance_size", qRebalancingImbalanceSize); err != nil {
				return err
			}
		}
	}

	if o.RebalancingMaxConstituentImbalancePercentQueryParameter != nil {

		// query param rebalancing.max_constituent_imbalance_percent
		var qrRebalancingMaxConstituentImbalancePercent int64

		if o.RebalancingMaxConstituentImbalancePercentQueryParameter != nil {
			qrRebalancingMaxConstituentImbalancePercent = *o.RebalancingMaxConstituentImbalancePercentQueryParameter
		}
		qRebalancingMaxConstituentImbalancePercent := swag.FormatInt64(qrRebalancingMaxConstituentImbalancePercent)
		if qRebalancingMaxConstituentImbalancePercent != "" {

			if err := r.SetQueryParam("rebalancing.max_constituent_imbalance_percent", qRebalancingMaxConstituentImbalancePercent); err != nil {
				return err
			}
		}
	}

	if o.RebalancingMaxFileMovesQueryParameter != nil {

		// query param rebalancing.max_file_moves
		var qrRebalancingMaxFileMoves int64

		if o.RebalancingMaxFileMovesQueryParameter != nil {
			qrRebalancingMaxFileMoves = *o.RebalancingMaxFileMovesQueryParameter
		}
		qRebalancingMaxFileMoves := swag.FormatInt64(qrRebalancingMaxFileMoves)
		if qRebalancingMaxFileMoves != "" {

			if err := r.SetQueryParam("rebalancing.max_file_moves", qRebalancingMaxFileMoves); err != nil {
				return err
			}
		}
	}

	if o.RebalancingMaxRuntimeQueryParameter != nil {

		// query param rebalancing.max_runtime
		var qrRebalancingMaxRuntime string

		if o.RebalancingMaxRuntimeQueryParameter != nil {
			qrRebalancingMaxRuntime = *o.RebalancingMaxRuntimeQueryParameter
		}
		qRebalancingMaxRuntime := qrRebalancingMaxRuntime
		if qRebalancingMaxRuntime != "" {

			if err := r.SetQueryParam("rebalancing.max_runtime", qRebalancingMaxRuntime); err != nil {
				return err
			}
		}
	}

	if o.RebalancingMaxThresholdQueryParameter != nil {

		// query param rebalancing.max_threshold
		var qrRebalancingMaxThreshold int64

		if o.RebalancingMaxThresholdQueryParameter != nil {
			qrRebalancingMaxThreshold = *o.RebalancingMaxThresholdQueryParameter
		}
		qRebalancingMaxThreshold := swag.FormatInt64(qrRebalancingMaxThreshold)
		if qRebalancingMaxThreshold != "" {

			if err := r.SetQueryParam("rebalancing.max_threshold", qRebalancingMaxThreshold); err != nil {
				return err
			}
		}
	}

	if o.RebalancingMinFileSizeQueryParameter != nil {

		// query param rebalancing.min_file_size
		var qrRebalancingMinFileSize int64

		if o.RebalancingMinFileSizeQueryParameter != nil {
			qrRebalancingMinFileSize = *o.RebalancingMinFileSizeQueryParameter
		}
		qRebalancingMinFileSize := swag.FormatInt64(qrRebalancingMinFileSize)
		if qRebalancingMinFileSize != "" {

			if err := r.SetQueryParam("rebalancing.min_file_size", qRebalancingMinFileSize); err != nil {
				return err
			}
		}
	}

	if o.RebalancingMinThresholdQueryParameter != nil {

		// query param rebalancing.min_threshold
		var qrRebalancingMinThreshold int64

		if o.RebalancingMinThresholdQueryParameter != nil {
			qrRebalancingMinThreshold = *o.RebalancingMinThresholdQueryParameter
		}
		qRebalancingMinThreshold := swag.FormatInt64(qrRebalancingMinThreshold)
		if qRebalancingMinThreshold != "" {

			if err := r.SetQueryParam("rebalancing.min_threshold", qRebalancingMinThreshold); err != nil {
				return err
			}
		}
	}

	if o.RebalancingRuntimeQueryParameter != nil {

		// query param rebalancing.runtime
		var qrRebalancingRuntime string

		if o.RebalancingRuntimeQueryParameter != nil {
			qrRebalancingRuntime = *o.RebalancingRuntimeQueryParameter
		}
		qRebalancingRuntime := qrRebalancingRuntime
		if qRebalancingRuntime != "" {

			if err := r.SetQueryParam("rebalancing.runtime", qRebalancingRuntime); err != nil {
				return err
			}
		}
	}

	if o.RebalancingStartTimeQueryParameter != nil {

		// query param rebalancing.start_time
		var qrRebalancingStartTime string

		if o.RebalancingStartTimeQueryParameter != nil {
			qrRebalancingStartTime = *o.RebalancingStartTimeQueryParameter
		}
		qRebalancingStartTime := qrRebalancingStartTime
		if qRebalancingStartTime != "" {

			if err := r.SetQueryParam("rebalancing.start_time", qRebalancingStartTime); err != nil {
				return err
			}
		}
	}

	if o.RebalancingStateQueryParameter != nil {

		// query param rebalancing.state
		var qrRebalancingState string

		if o.RebalancingStateQueryParameter != nil {
			qrRebalancingState = *o.RebalancingStateQueryParameter
		}
		qRebalancingState := qrRebalancingState
		if qRebalancingState != "" {

			if err := r.SetQueryParam("rebalancing.state", qRebalancingState); err != nil {
				return err
			}
		}
	}

	if o.RebalancingStopTimeQueryParameter != nil {

		// query param rebalancing.stop_time
		var qrRebalancingStopTime string

		if o.RebalancingStopTimeQueryParameter != nil {
			qrRebalancingStopTime = *o.RebalancingStopTimeQueryParameter
		}
		qRebalancingStopTime := qrRebalancingStopTime
		if qRebalancingStopTime != "" {

			if err := r.SetQueryParam("rebalancing.stop_time", qRebalancingStopTime); err != nil {
				return err
			}
		}
	}

	if o.RebalancingTargetUsedQueryParameter != nil {

		// query param rebalancing.target_used
		var qrRebalancingTargetUsed int64

		if o.RebalancingTargetUsedQueryParameter != nil {
			qrRebalancingTargetUsed = *o.RebalancingTargetUsedQueryParameter
		}
		qRebalancingTargetUsed := swag.FormatInt64(qrRebalancingTargetUsed)
		if qRebalancingTargetUsed != "" {

			if err := r.SetQueryParam("rebalancing.target_used", qRebalancingTargetUsed); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.ScheduledSnapshotNamingSchemeQueryParameter != nil {

		// query param scheduled_snapshot_naming_scheme
		var qrScheduledSnapshotNamingScheme string

		if o.ScheduledSnapshotNamingSchemeQueryParameter != nil {
			qrScheduledSnapshotNamingScheme = *o.ScheduledSnapshotNamingSchemeQueryParameter
		}
		qScheduledSnapshotNamingScheme := qrScheduledSnapshotNamingScheme
		if qScheduledSnapshotNamingScheme != "" {

			if err := r.SetQueryParam("scheduled_snapshot_naming_scheme", qScheduledSnapshotNamingScheme); err != nil {
				return err
			}
		}
	}

	if o.SizeQueryParameter != nil {

		// query param size
		var qrSize int64

		if o.SizeQueryParameter != nil {
			qrSize = *o.SizeQueryParameter
		}
		qSize := swag.FormatInt64(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.SnaplockAppendModeEnabledQueryParameter != nil {

		// query param snaplock.append_mode_enabled
		var qrSnaplockAppendModeEnabled bool

		if o.SnaplockAppendModeEnabledQueryParameter != nil {
			qrSnaplockAppendModeEnabled = *o.SnaplockAppendModeEnabledQueryParameter
		}
		qSnaplockAppendModeEnabled := swag.FormatBool(qrSnaplockAppendModeEnabled)
		if qSnaplockAppendModeEnabled != "" {

			if err := r.SetQueryParam("snaplock.append_mode_enabled", qSnaplockAppendModeEnabled); err != nil {
				return err
			}
		}
	}

	if o.SnaplockAutocommitPeriodQueryParameter != nil {

		// query param snaplock.autocommit_period
		var qrSnaplockAutocommitPeriod string

		if o.SnaplockAutocommitPeriodQueryParameter != nil {
			qrSnaplockAutocommitPeriod = *o.SnaplockAutocommitPeriodQueryParameter
		}
		qSnaplockAutocommitPeriod := qrSnaplockAutocommitPeriod
		if qSnaplockAutocommitPeriod != "" {

			if err := r.SetQueryParam("snaplock.autocommit_period", qSnaplockAutocommitPeriod); err != nil {
				return err
			}
		}
	}

	if o.SnaplockComplianceClockTimeQueryParameter != nil {

		// query param snaplock.compliance_clock_time
		var qrSnaplockComplianceClockTime string

		if o.SnaplockComplianceClockTimeQueryParameter != nil {
			qrSnaplockComplianceClockTime = *o.SnaplockComplianceClockTimeQueryParameter
		}
		qSnaplockComplianceClockTime := qrSnaplockComplianceClockTime
		if qSnaplockComplianceClockTime != "" {

			if err := r.SetQueryParam("snaplock.compliance_clock_time", qSnaplockComplianceClockTime); err != nil {
				return err
			}
		}
	}

	if o.SnaplockExpiryTimeQueryParameter != nil {

		// query param snaplock.expiry_time
		var qrSnaplockExpiryTime string

		if o.SnaplockExpiryTimeQueryParameter != nil {
			qrSnaplockExpiryTime = *o.SnaplockExpiryTimeQueryParameter
		}
		qSnaplockExpiryTime := qrSnaplockExpiryTime
		if qSnaplockExpiryTime != "" {

			if err := r.SetQueryParam("snaplock.expiry_time", qSnaplockExpiryTime); err != nil {
				return err
			}
		}
	}

	if o.SnaplockIsAuditLogQueryParameter != nil {

		// query param snaplock.is_audit_log
		var qrSnaplockIsAuditLog bool

		if o.SnaplockIsAuditLogQueryParameter != nil {
			qrSnaplockIsAuditLog = *o.SnaplockIsAuditLogQueryParameter
		}
		qSnaplockIsAuditLog := swag.FormatBool(qrSnaplockIsAuditLog)
		if qSnaplockIsAuditLog != "" {

			if err := r.SetQueryParam("snaplock.is_audit_log", qSnaplockIsAuditLog); err != nil {
				return err
			}
		}
	}

	if o.SnaplockLitigationCountQueryParameter != nil {

		// query param snaplock.litigation_count
		var qrSnaplockLitigationCount int64

		if o.SnaplockLitigationCountQueryParameter != nil {
			qrSnaplockLitigationCount = *o.SnaplockLitigationCountQueryParameter
		}
		qSnaplockLitigationCount := swag.FormatInt64(qrSnaplockLitigationCount)
		if qSnaplockLitigationCount != "" {

			if err := r.SetQueryParam("snaplock.litigation_count", qSnaplockLitigationCount); err != nil {
				return err
			}
		}
	}

	if o.SnaplockPrivilegedDeleteQueryParameter != nil {

		// query param snaplock.privileged_delete
		var qrSnaplockPrivilegedDelete string

		if o.SnaplockPrivilegedDeleteQueryParameter != nil {
			qrSnaplockPrivilegedDelete = *o.SnaplockPrivilegedDeleteQueryParameter
		}
		qSnaplockPrivilegedDelete := qrSnaplockPrivilegedDelete
		if qSnaplockPrivilegedDelete != "" {

			if err := r.SetQueryParam("snaplock.privileged_delete", qSnaplockPrivilegedDelete); err != nil {
				return err
			}
		}
	}

	if o.SnaplockRetentionDefaultQueryParameter != nil {

		// query param snaplock.retention.default
		var qrSnaplockRetentionDefault string

		if o.SnaplockRetentionDefaultQueryParameter != nil {
			qrSnaplockRetentionDefault = *o.SnaplockRetentionDefaultQueryParameter
		}
		qSnaplockRetentionDefault := qrSnaplockRetentionDefault
		if qSnaplockRetentionDefault != "" {

			if err := r.SetQueryParam("snaplock.retention.default", qSnaplockRetentionDefault); err != nil {
				return err
			}
		}
	}

	if o.SnaplockRetentionMaximumQueryParameter != nil {

		// query param snaplock.retention.maximum
		var qrSnaplockRetentionMaximum string

		if o.SnaplockRetentionMaximumQueryParameter != nil {
			qrSnaplockRetentionMaximum = *o.SnaplockRetentionMaximumQueryParameter
		}
		qSnaplockRetentionMaximum := qrSnaplockRetentionMaximum
		if qSnaplockRetentionMaximum != "" {

			if err := r.SetQueryParam("snaplock.retention.maximum", qSnaplockRetentionMaximum); err != nil {
				return err
			}
		}
	}

	if o.SnaplockRetentionMinimumQueryParameter != nil {

		// query param snaplock.retention.minimum
		var qrSnaplockRetentionMinimum string

		if o.SnaplockRetentionMinimumQueryParameter != nil {
			qrSnaplockRetentionMinimum = *o.SnaplockRetentionMinimumQueryParameter
		}
		qSnaplockRetentionMinimum := qrSnaplockRetentionMinimum
		if qSnaplockRetentionMinimum != "" {

			if err := r.SetQueryParam("snaplock.retention.minimum", qSnaplockRetentionMinimum); err != nil {
				return err
			}
		}
	}

	if o.SnaplockTypeQueryParameter != nil {

		// query param snaplock.type
		var qrSnaplockType string

		if o.SnaplockTypeQueryParameter != nil {
			qrSnaplockType = *o.SnaplockTypeQueryParameter
		}
		qSnaplockType := qrSnaplockType
		if qSnaplockType != "" {

			if err := r.SetQueryParam("snaplock.type", qSnaplockType); err != nil {
				return err
			}
		}
	}

	if o.SnaplockUnspecifiedRetentionFileCountQueryParameter != nil {

		// query param snaplock.unspecified_retention_file_count
		var qrSnaplockUnspecifiedRetentionFileCount int64

		if o.SnaplockUnspecifiedRetentionFileCountQueryParameter != nil {
			qrSnaplockUnspecifiedRetentionFileCount = *o.SnaplockUnspecifiedRetentionFileCountQueryParameter
		}
		qSnaplockUnspecifiedRetentionFileCount := swag.FormatInt64(qrSnaplockUnspecifiedRetentionFileCount)
		if qSnaplockUnspecifiedRetentionFileCount != "" {

			if err := r.SetQueryParam("snaplock.unspecified_retention_file_count", qSnaplockUnspecifiedRetentionFileCount); err != nil {
				return err
			}
		}
	}

	if o.SnapmirrorDestinationsIsCloudQueryParameter != nil {

		// query param snapmirror.destinations.is_cloud
		var qrSnapmirrorDestinationsIsCloud bool

		if o.SnapmirrorDestinationsIsCloudQueryParameter != nil {
			qrSnapmirrorDestinationsIsCloud = *o.SnapmirrorDestinationsIsCloudQueryParameter
		}
		qSnapmirrorDestinationsIsCloud := swag.FormatBool(qrSnapmirrorDestinationsIsCloud)
		if qSnapmirrorDestinationsIsCloud != "" {

			if err := r.SetQueryParam("snapmirror.destinations.is_cloud", qSnapmirrorDestinationsIsCloud); err != nil {
				return err
			}
		}
	}

	if o.SnapmirrorDestinationsIsOntapQueryParameter != nil {

		// query param snapmirror.destinations.is_ontap
		var qrSnapmirrorDestinationsIsOntap bool

		if o.SnapmirrorDestinationsIsOntapQueryParameter != nil {
			qrSnapmirrorDestinationsIsOntap = *o.SnapmirrorDestinationsIsOntapQueryParameter
		}
		qSnapmirrorDestinationsIsOntap := swag.FormatBool(qrSnapmirrorDestinationsIsOntap)
		if qSnapmirrorDestinationsIsOntap != "" {

			if err := r.SetQueryParam("snapmirror.destinations.is_ontap", qSnapmirrorDestinationsIsOntap); err != nil {
				return err
			}
		}
	}

	if o.SnapmirrorIsProtectedQueryParameter != nil {

		// query param snapmirror.is_protected
		var qrSnapmirrorIsProtected bool

		if o.SnapmirrorIsProtectedQueryParameter != nil {
			qrSnapmirrorIsProtected = *o.SnapmirrorIsProtectedQueryParameter
		}
		qSnapmirrorIsProtected := swag.FormatBool(qrSnapmirrorIsProtected)
		if qSnapmirrorIsProtected != "" {

			if err := r.SetQueryParam("snapmirror.is_protected", qSnapmirrorIsProtected); err != nil {
				return err
			}
		}
	}

	if o.SnapshotCountQueryParameter != nil {

		// query param snapshot_count
		var qrSnapshotCount int64

		if o.SnapshotCountQueryParameter != nil {
			qrSnapshotCount = *o.SnapshotCountQueryParameter
		}
		qSnapshotCount := swag.FormatInt64(qrSnapshotCount)
		if qSnapshotCount != "" {

			if err := r.SetQueryParam("snapshot_count", qSnapshotCount); err != nil {
				return err
			}
		}
	}

	if o.SnapshotDirectoryAccessEnabledQueryParameter != nil {

		// query param snapshot_directory_access_enabled
		var qrSnapshotDirectoryAccessEnabled bool

		if o.SnapshotDirectoryAccessEnabledQueryParameter != nil {
			qrSnapshotDirectoryAccessEnabled = *o.SnapshotDirectoryAccessEnabledQueryParameter
		}
		qSnapshotDirectoryAccessEnabled := swag.FormatBool(qrSnapshotDirectoryAccessEnabled)
		if qSnapshotDirectoryAccessEnabled != "" {

			if err := r.SetQueryParam("snapshot_directory_access_enabled", qSnapshotDirectoryAccessEnabled); err != nil {
				return err
			}
		}
	}

	if o.SnapshotPolicyNameQueryParameter != nil {

		// query param snapshot_policy.name
		var qrSnapshotPolicyName string

		if o.SnapshotPolicyNameQueryParameter != nil {
			qrSnapshotPolicyName = *o.SnapshotPolicyNameQueryParameter
		}
		qSnapshotPolicyName := qrSnapshotPolicyName
		if qSnapshotPolicyName != "" {

			if err := r.SetQueryParam("snapshot_policy.name", qSnapshotPolicyName); err != nil {
				return err
			}
		}
	}

	if o.SnapshotPolicyUUIDQueryParameter != nil {

		// query param snapshot_policy.uuid
		var qrSnapshotPolicyUUID string

		if o.SnapshotPolicyUUIDQueryParameter != nil {
			qrSnapshotPolicyUUID = *o.SnapshotPolicyUUIDQueryParameter
		}
		qSnapshotPolicyUUID := qrSnapshotPolicyUUID
		if qSnapshotPolicyUUID != "" {

			if err := r.SetQueryParam("snapshot_policy.uuid", qSnapshotPolicyUUID); err != nil {
				return err
			}
		}
	}

	if o.SpaceAfsTotalQueryParameter != nil {

		// query param space.afs_total
		var qrSpaceAfsTotal int64

		if o.SpaceAfsTotalQueryParameter != nil {
			qrSpaceAfsTotal = *o.SpaceAfsTotalQueryParameter
		}
		qSpaceAfsTotal := swag.FormatInt64(qrSpaceAfsTotal)
		if qSpaceAfsTotal != "" {

			if err := r.SetQueryParam("space.afs_total", qSpaceAfsTotal); err != nil {
				return err
			}
		}
	}

	if o.SpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter != nil {

		// query param space.auto_adaptive_compression_footprint_data_reduction
		var qrSpaceAutoAdaptiveCompressionFootprintDataReduction int64

		if o.SpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter != nil {
			qrSpaceAutoAdaptiveCompressionFootprintDataReduction = *o.SpaceAutoAdaptiveCompressionFootprintDataReductionQueryParameter
		}
		qSpaceAutoAdaptiveCompressionFootprintDataReduction := swag.FormatInt64(qrSpaceAutoAdaptiveCompressionFootprintDataReduction)
		if qSpaceAutoAdaptiveCompressionFootprintDataReduction != "" {

			if err := r.SetQueryParam("space.auto_adaptive_compression_footprint_data_reduction", qSpaceAutoAdaptiveCompressionFootprintDataReduction); err != nil {
				return err
			}
		}
	}

	if o.SpaceAvailableQueryParameter != nil {

		// query param space.available
		var qrSpaceAvailable int64

		if o.SpaceAvailableQueryParameter != nil {
			qrSpaceAvailable = *o.SpaceAvailableQueryParameter
		}
		qSpaceAvailable := swag.FormatInt64(qrSpaceAvailable)
		if qSpaceAvailable != "" {

			if err := r.SetQueryParam("space.available", qSpaceAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceAvailablePercentQueryParameter != nil {

		// query param space.available_percent
		var qrSpaceAvailablePercent int64

		if o.SpaceAvailablePercentQueryParameter != nil {
			qrSpaceAvailablePercent = *o.SpaceAvailablePercentQueryParameter
		}
		qSpaceAvailablePercent := swag.FormatInt64(qrSpaceAvailablePercent)
		if qSpaceAvailablePercent != "" {

			if err := r.SetQueryParam("space.available_percent", qSpaceAvailablePercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageInactiveUserDataQueryParameter != nil {

		// query param space.block_storage_inactive_user_data
		var qrSpaceBlockStorageInactiveUserData int64

		if o.SpaceBlockStorageInactiveUserDataQueryParameter != nil {
			qrSpaceBlockStorageInactiveUserData = *o.SpaceBlockStorageInactiveUserDataQueryParameter
		}
		qSpaceBlockStorageInactiveUserData := swag.FormatInt64(qrSpaceBlockStorageInactiveUserData)
		if qSpaceBlockStorageInactiveUserData != "" {

			if err := r.SetQueryParam("space.block_storage_inactive_user_data", qSpaceBlockStorageInactiveUserData); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageInactiveUserDataPercentQueryParameter != nil {

		// query param space.block_storage_inactive_user_data_percent
		var qrSpaceBlockStorageInactiveUserDataPercent int64

		if o.SpaceBlockStorageInactiveUserDataPercentQueryParameter != nil {
			qrSpaceBlockStorageInactiveUserDataPercent = *o.SpaceBlockStorageInactiveUserDataPercentQueryParameter
		}
		qSpaceBlockStorageInactiveUserDataPercent := swag.FormatInt64(qrSpaceBlockStorageInactiveUserDataPercent)
		if qSpaceBlockStorageInactiveUserDataPercent != "" {

			if err := r.SetQueryParam("space.block_storage_inactive_user_data_percent", qSpaceBlockStorageInactiveUserDataPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceCapacityTierFootprintQueryParameter != nil {

		// query param space.capacity_tier_footprint
		var qrSpaceCapacityTierFootprint int64

		if o.SpaceCapacityTierFootprintQueryParameter != nil {
			qrSpaceCapacityTierFootprint = *o.SpaceCapacityTierFootprintQueryParameter
		}
		qSpaceCapacityTierFootprint := swag.FormatInt64(qrSpaceCapacityTierFootprint)
		if qSpaceCapacityTierFootprint != "" {

			if err := r.SetQueryParam("space.capacity_tier_footprint", qSpaceCapacityTierFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceCrossVolumeDedupeMetafilesFootprintQueryParameter != nil {

		// query param space.cross_volume_dedupe_metafiles_footprint
		var qrSpaceCrossVolumeDedupeMetafilesFootprint int64

		if o.SpaceCrossVolumeDedupeMetafilesFootprintQueryParameter != nil {
			qrSpaceCrossVolumeDedupeMetafilesFootprint = *o.SpaceCrossVolumeDedupeMetafilesFootprintQueryParameter
		}
		qSpaceCrossVolumeDedupeMetafilesFootprint := swag.FormatInt64(qrSpaceCrossVolumeDedupeMetafilesFootprint)
		if qSpaceCrossVolumeDedupeMetafilesFootprint != "" {

			if err := r.SetQueryParam("space.cross_volume_dedupe_metafiles_footprint", qSpaceCrossVolumeDedupeMetafilesFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter != nil {

		// query param space.cross_volume_dedupe_metafiles_temporary_footprint
		var qrSpaceCrossVolumeDedupeMetafilesTemporaryFootprint int64

		if o.SpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter != nil {
			qrSpaceCrossVolumeDedupeMetafilesTemporaryFootprint = *o.SpaceCrossVolumeDedupeMetafilesTemporaryFootprintQueryParameter
		}
		qSpaceCrossVolumeDedupeMetafilesTemporaryFootprint := swag.FormatInt64(qrSpaceCrossVolumeDedupeMetafilesTemporaryFootprint)
		if qSpaceCrossVolumeDedupeMetafilesTemporaryFootprint != "" {

			if err := r.SetQueryParam("space.cross_volume_dedupe_metafiles_temporary_footprint", qSpaceCrossVolumeDedupeMetafilesTemporaryFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceDedupeMetafilesFootprintQueryParameter != nil {

		// query param space.dedupe_metafiles_footprint
		var qrSpaceDedupeMetafilesFootprint int64

		if o.SpaceDedupeMetafilesFootprintQueryParameter != nil {
			qrSpaceDedupeMetafilesFootprint = *o.SpaceDedupeMetafilesFootprintQueryParameter
		}
		qSpaceDedupeMetafilesFootprint := swag.FormatInt64(qrSpaceDedupeMetafilesFootprint)
		if qSpaceDedupeMetafilesFootprint != "" {

			if err := r.SetQueryParam("space.dedupe_metafiles_footprint", qSpaceDedupeMetafilesFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceDedupeMetafilesTemporaryFootprintQueryParameter != nil {

		// query param space.dedupe_metafiles_temporary_footprint
		var qrSpaceDedupeMetafilesTemporaryFootprint int64

		if o.SpaceDedupeMetafilesTemporaryFootprintQueryParameter != nil {
			qrSpaceDedupeMetafilesTemporaryFootprint = *o.SpaceDedupeMetafilesTemporaryFootprintQueryParameter
		}
		qSpaceDedupeMetafilesTemporaryFootprint := swag.FormatInt64(qrSpaceDedupeMetafilesTemporaryFootprint)
		if qSpaceDedupeMetafilesTemporaryFootprint != "" {

			if err := r.SetQueryParam("space.dedupe_metafiles_temporary_footprint", qSpaceDedupeMetafilesTemporaryFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceDelayedFreeFootprintQueryParameter != nil {

		// query param space.delayed_free_footprint
		var qrSpaceDelayedFreeFootprint int64

		if o.SpaceDelayedFreeFootprintQueryParameter != nil {
			qrSpaceDelayedFreeFootprint = *o.SpaceDelayedFreeFootprintQueryParameter
		}
		qSpaceDelayedFreeFootprint := swag.FormatInt64(qrSpaceDelayedFreeFootprint)
		if qSpaceDelayedFreeFootprint != "" {

			if err := r.SetQueryParam("space.delayed_free_footprint", qSpaceDelayedFreeFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceEffectiveTotalFootprintQueryParameter != nil {

		// query param space.effective_total_footprint
		var qrSpaceEffectiveTotalFootprint int64

		if o.SpaceEffectiveTotalFootprintQueryParameter != nil {
			qrSpaceEffectiveTotalFootprint = *o.SpaceEffectiveTotalFootprintQueryParameter
		}
		qSpaceEffectiveTotalFootprint := swag.FormatInt64(qrSpaceEffectiveTotalFootprint)
		if qSpaceEffectiveTotalFootprint != "" {

			if err := r.SetQueryParam("space.effective_total_footprint", qSpaceEffectiveTotalFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceExpectedAvailableQueryParameter != nil {

		// query param space.expected_available
		var qrSpaceExpectedAvailable int64

		if o.SpaceExpectedAvailableQueryParameter != nil {
			qrSpaceExpectedAvailable = *o.SpaceExpectedAvailableQueryParameter
		}
		qSpaceExpectedAvailable := swag.FormatInt64(qrSpaceExpectedAvailable)
		if qSpaceExpectedAvailable != "" {

			if err := r.SetQueryParam("space.expected_available", qSpaceExpectedAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceFileOperationMetadataQueryParameter != nil {

		// query param space.file_operation_metadata
		var qrSpaceFileOperationMetadata int64

		if o.SpaceFileOperationMetadataQueryParameter != nil {
			qrSpaceFileOperationMetadata = *o.SpaceFileOperationMetadataQueryParameter
		}
		qSpaceFileOperationMetadata := swag.FormatInt64(qrSpaceFileOperationMetadata)
		if qSpaceFileOperationMetadata != "" {

			if err := r.SetQueryParam("space.file_operation_metadata", qSpaceFileOperationMetadata); err != nil {
				return err
			}
		}
	}

	if o.SpaceFilesystemSizeQueryParameter != nil {

		// query param space.filesystem_size
		var qrSpaceFilesystemSize int64

		if o.SpaceFilesystemSizeQueryParameter != nil {
			qrSpaceFilesystemSize = *o.SpaceFilesystemSizeQueryParameter
		}
		qSpaceFilesystemSize := swag.FormatInt64(qrSpaceFilesystemSize)
		if qSpaceFilesystemSize != "" {

			if err := r.SetQueryParam("space.filesystem_size", qSpaceFilesystemSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceFilesystemSizeFixedQueryParameter != nil {

		// query param space.filesystem_size_fixed
		var qrSpaceFilesystemSizeFixed bool

		if o.SpaceFilesystemSizeFixedQueryParameter != nil {
			qrSpaceFilesystemSizeFixed = *o.SpaceFilesystemSizeFixedQueryParameter
		}
		qSpaceFilesystemSizeFixed := swag.FormatBool(qrSpaceFilesystemSizeFixed)
		if qSpaceFilesystemSizeFixed != "" {

			if err := r.SetQueryParam("space.filesystem_size_fixed", qSpaceFilesystemSizeFixed); err != nil {
				return err
			}
		}
	}

	if o.SpaceFootprintQueryParameter != nil {

		// query param space.footprint
		var qrSpaceFootprint int64

		if o.SpaceFootprintQueryParameter != nil {
			qrSpaceFootprint = *o.SpaceFootprintQueryParameter
		}
		qSpaceFootprint := swag.FormatInt64(qrSpaceFootprint)
		if qSpaceFootprint != "" {

			if err := r.SetQueryParam("space.footprint", qSpaceFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceFractionalReserveQueryParameter != nil {

		// query param space.fractional_reserve
		var qrSpaceFractionalReserve int64

		if o.SpaceFractionalReserveQueryParameter != nil {
			qrSpaceFractionalReserve = *o.SpaceFractionalReserveQueryParameter
		}
		qSpaceFractionalReserve := swag.FormatInt64(qrSpaceFractionalReserve)
		if qSpaceFractionalReserve != "" {

			if err := r.SetQueryParam("space.fractional_reserve", qSpaceFractionalReserve); err != nil {
				return err
			}
		}
	}

	if o.SpaceFullThresholdPercentQueryParameter != nil {

		// query param space.full_threshold_percent
		var qrSpaceFullThresholdPercent int64

		if o.SpaceFullThresholdPercentQueryParameter != nil {
			qrSpaceFullThresholdPercent = *o.SpaceFullThresholdPercentQueryParameter
		}
		qSpaceFullThresholdPercent := swag.FormatInt64(qrSpaceFullThresholdPercent)
		if qSpaceFullThresholdPercent != "" {

			if err := r.SetQueryParam("space.full_threshold_percent", qSpaceFullThresholdPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceLocalTierFootprintQueryParameter != nil {

		// query param space.local_tier_footprint
		var qrSpaceLocalTierFootprint int64

		if o.SpaceLocalTierFootprintQueryParameter != nil {
			qrSpaceLocalTierFootprint = *o.SpaceLocalTierFootprintQueryParameter
		}
		qSpaceLocalTierFootprint := swag.FormatInt64(qrSpaceLocalTierFootprint)
		if qSpaceLocalTierFootprint != "" {

			if err := r.SetQueryParam("space.local_tier_footprint", qSpaceLocalTierFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceLogicalSpaceAvailableQueryParameter != nil {

		// query param space.logical_space.available
		var qrSpaceLogicalSpaceAvailable int64

		if o.SpaceLogicalSpaceAvailableQueryParameter != nil {
			qrSpaceLogicalSpaceAvailable = *o.SpaceLogicalSpaceAvailableQueryParameter
		}
		qSpaceLogicalSpaceAvailable := swag.FormatInt64(qrSpaceLogicalSpaceAvailable)
		if qSpaceLogicalSpaceAvailable != "" {

			if err := r.SetQueryParam("space.logical_space.available", qSpaceLogicalSpaceAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceLogicalSpaceEnforcementQueryParameter != nil {

		// query param space.logical_space.enforcement
		var qrSpaceLogicalSpaceEnforcement bool

		if o.SpaceLogicalSpaceEnforcementQueryParameter != nil {
			qrSpaceLogicalSpaceEnforcement = *o.SpaceLogicalSpaceEnforcementQueryParameter
		}
		qSpaceLogicalSpaceEnforcement := swag.FormatBool(qrSpaceLogicalSpaceEnforcement)
		if qSpaceLogicalSpaceEnforcement != "" {

			if err := r.SetQueryParam("space.logical_space.enforcement", qSpaceLogicalSpaceEnforcement); err != nil {
				return err
			}
		}
	}

	if o.SpaceLogicalSpaceReportingQueryParameter != nil {

		// query param space.logical_space.reporting
		var qrSpaceLogicalSpaceReporting bool

		if o.SpaceLogicalSpaceReportingQueryParameter != nil {
			qrSpaceLogicalSpaceReporting = *o.SpaceLogicalSpaceReportingQueryParameter
		}
		qSpaceLogicalSpaceReporting := swag.FormatBool(qrSpaceLogicalSpaceReporting)
		if qSpaceLogicalSpaceReporting != "" {

			if err := r.SetQueryParam("space.logical_space.reporting", qSpaceLogicalSpaceReporting); err != nil {
				return err
			}
		}
	}

	if o.SpaceLogicalSpaceUsedQueryParameter != nil {

		// query param space.logical_space.used
		var qrSpaceLogicalSpaceUsed int64

		if o.SpaceLogicalSpaceUsedQueryParameter != nil {
			qrSpaceLogicalSpaceUsed = *o.SpaceLogicalSpaceUsedQueryParameter
		}
		qSpaceLogicalSpaceUsed := swag.FormatInt64(qrSpaceLogicalSpaceUsed)
		if qSpaceLogicalSpaceUsed != "" {

			if err := r.SetQueryParam("space.logical_space.used", qSpaceLogicalSpaceUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceLogicalSpaceUsedByAfsQueryParameter != nil {

		// query param space.logical_space.used_by_afs
		var qrSpaceLogicalSpaceUsedByAfs int64

		if o.SpaceLogicalSpaceUsedByAfsQueryParameter != nil {
			qrSpaceLogicalSpaceUsedByAfs = *o.SpaceLogicalSpaceUsedByAfsQueryParameter
		}
		qSpaceLogicalSpaceUsedByAfs := swag.FormatInt64(qrSpaceLogicalSpaceUsedByAfs)
		if qSpaceLogicalSpaceUsedByAfs != "" {

			if err := r.SetQueryParam("space.logical_space.used_by_afs", qSpaceLogicalSpaceUsedByAfs); err != nil {
				return err
			}
		}
	}

	if o.SpaceLogicalSpaceUsedBySnapshotsQueryParameter != nil {

		// query param space.logical_space.used_by_snapshots
		var qrSpaceLogicalSpaceUsedBySnapshots int64

		if o.SpaceLogicalSpaceUsedBySnapshotsQueryParameter != nil {
			qrSpaceLogicalSpaceUsedBySnapshots = *o.SpaceLogicalSpaceUsedBySnapshotsQueryParameter
		}
		qSpaceLogicalSpaceUsedBySnapshots := swag.FormatInt64(qrSpaceLogicalSpaceUsedBySnapshots)
		if qSpaceLogicalSpaceUsedBySnapshots != "" {

			if err := r.SetQueryParam("space.logical_space.used_by_snapshots", qSpaceLogicalSpaceUsedBySnapshots); err != nil {
				return err
			}
		}
	}

	if o.SpaceLogicalSpaceUsedPercentQueryParameter != nil {

		// query param space.logical_space.used_percent
		var qrSpaceLogicalSpaceUsedPercent int64

		if o.SpaceLogicalSpaceUsedPercentQueryParameter != nil {
			qrSpaceLogicalSpaceUsedPercent = *o.SpaceLogicalSpaceUsedPercentQueryParameter
		}
		qSpaceLogicalSpaceUsedPercent := swag.FormatInt64(qrSpaceLogicalSpaceUsedPercent)
		if qSpaceLogicalSpaceUsedPercent != "" {

			if err := r.SetQueryParam("space.logical_space.used_percent", qSpaceLogicalSpaceUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceMetadataQueryParameter != nil {

		// query param space.metadata
		var qrSpaceMetadata int64

		if o.SpaceMetadataQueryParameter != nil {
			qrSpaceMetadata = *o.SpaceMetadataQueryParameter
		}
		qSpaceMetadata := swag.FormatInt64(qrSpaceMetadata)
		if qSpaceMetadata != "" {

			if err := r.SetQueryParam("space.metadata", qSpaceMetadata); err != nil {
				return err
			}
		}
	}

	if o.SpaceNearlyFullThresholdPercentQueryParameter != nil {

		// query param space.nearly_full_threshold_percent
		var qrSpaceNearlyFullThresholdPercent int64

		if o.SpaceNearlyFullThresholdPercentQueryParameter != nil {
			qrSpaceNearlyFullThresholdPercent = *o.SpaceNearlyFullThresholdPercentQueryParameter
		}
		qSpaceNearlyFullThresholdPercent := swag.FormatInt64(qrSpaceNearlyFullThresholdPercent)
		if qSpaceNearlyFullThresholdPercent != "" {

			if err := r.SetQueryParam("space.nearly_full_threshold_percent", qSpaceNearlyFullThresholdPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceOverProvisionedQueryParameter != nil {

		// query param space.over_provisioned
		var qrSpaceOverProvisioned int64

		if o.SpaceOverProvisionedQueryParameter != nil {
			qrSpaceOverProvisioned = *o.SpaceOverProvisionedQueryParameter
		}
		qSpaceOverProvisioned := swag.FormatInt64(qrSpaceOverProvisioned)
		if qSpaceOverProvisioned != "" {

			if err := r.SetQueryParam("space.over_provisioned", qSpaceOverProvisioned); err != nil {
				return err
			}
		}
	}

	if o.SpaceOverwriteReserveQueryParameter != nil {

		// query param space.overwrite_reserve
		var qrSpaceOverwriteReserve int64

		if o.SpaceOverwriteReserveQueryParameter != nil {
			qrSpaceOverwriteReserve = *o.SpaceOverwriteReserveQueryParameter
		}
		qSpaceOverwriteReserve := swag.FormatInt64(qrSpaceOverwriteReserve)
		if qSpaceOverwriteReserve != "" {

			if err := r.SetQueryParam("space.overwrite_reserve", qSpaceOverwriteReserve); err != nil {
				return err
			}
		}
	}

	if o.SpaceOverwriteReserveUsedQueryParameter != nil {

		// query param space.overwrite_reserve_used
		var qrSpaceOverwriteReserveUsed int64

		if o.SpaceOverwriteReserveUsedQueryParameter != nil {
			qrSpaceOverwriteReserveUsed = *o.SpaceOverwriteReserveUsedQueryParameter
		}
		qSpaceOverwriteReserveUsed := swag.FormatInt64(qrSpaceOverwriteReserveUsed)
		if qSpaceOverwriteReserveUsed != "" {

			if err := r.SetQueryParam("space.overwrite_reserve_used", qSpaceOverwriteReserveUsed); err != nil {
				return err
			}
		}
	}

	if o.SpacePercentUsedQueryParameter != nil {

		// query param space.percent_used
		var qrSpacePercentUsed int64

		if o.SpacePercentUsedQueryParameter != nil {
			qrSpacePercentUsed = *o.SpacePercentUsedQueryParameter
		}
		qSpacePercentUsed := swag.FormatInt64(qrSpacePercentUsed)
		if qSpacePercentUsed != "" {

			if err := r.SetQueryParam("space.percent_used", qSpacePercentUsed); err != nil {
				return err
			}
		}
	}

	if o.SpacePerformanceTierFootprintQueryParameter != nil {

		// query param space.performance_tier_footprint
		var qrSpacePerformanceTierFootprint int64

		if o.SpacePerformanceTierFootprintQueryParameter != nil {
			qrSpacePerformanceTierFootprint = *o.SpacePerformanceTierFootprintQueryParameter
		}
		qSpacePerformanceTierFootprint := swag.FormatInt64(qrSpacePerformanceTierFootprint)
		if qSpacePerformanceTierFootprint != "" {

			if err := r.SetQueryParam("space.performance_tier_footprint", qSpacePerformanceTierFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpacePhysicalUsedQueryParameter != nil {

		// query param space.physical_used
		var qrSpacePhysicalUsed int64

		if o.SpacePhysicalUsedQueryParameter != nil {
			qrSpacePhysicalUsed = *o.SpacePhysicalUsedQueryParameter
		}
		qSpacePhysicalUsed := swag.FormatInt64(qrSpacePhysicalUsed)
		if qSpacePhysicalUsed != "" {

			if err := r.SetQueryParam("space.physical_used", qSpacePhysicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpacePhysicalUsedPercentQueryParameter != nil {

		// query param space.physical_used_percent
		var qrSpacePhysicalUsedPercent int64

		if o.SpacePhysicalUsedPercentQueryParameter != nil {
			qrSpacePhysicalUsedPercent = *o.SpacePhysicalUsedPercentQueryParameter
		}
		qSpacePhysicalUsedPercent := swag.FormatInt64(qrSpacePhysicalUsedPercent)
		if qSpacePhysicalUsedPercent != "" {

			if err := r.SetQueryParam("space.physical_used_percent", qSpacePhysicalUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceSizeQueryParameter != nil {

		// query param space.size
		var qrSpaceSize int64

		if o.SpaceSizeQueryParameter != nil {
			qrSpaceSize = *o.SpaceSizeQueryParameter
		}
		qSpaceSize := swag.FormatInt64(qrSpaceSize)
		if qSpaceSize != "" {

			if err := r.SetQueryParam("space.size", qSpaceSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceSizeAvailableForSnapshotsQueryParameter != nil {

		// query param space.size_available_for_snapshots
		var qrSpaceSizeAvailableForSnapshots int64

		if o.SpaceSizeAvailableForSnapshotsQueryParameter != nil {
			qrSpaceSizeAvailableForSnapshots = *o.SpaceSizeAvailableForSnapshotsQueryParameter
		}
		qSpaceSizeAvailableForSnapshots := swag.FormatInt64(qrSpaceSizeAvailableForSnapshots)
		if qSpaceSizeAvailableForSnapshots != "" {

			if err := r.SetQueryParam("space.size_available_for_snapshots", qSpaceSizeAvailableForSnapshots); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapmirrorDestinationFootprintQueryParameter != nil {

		// query param space.snapmirror_destination_footprint
		var qrSpaceSnapmirrorDestinationFootprint int64

		if o.SpaceSnapmirrorDestinationFootprintQueryParameter != nil {
			qrSpaceSnapmirrorDestinationFootprint = *o.SpaceSnapmirrorDestinationFootprintQueryParameter
		}
		qSpaceSnapmirrorDestinationFootprint := swag.FormatInt64(qrSpaceSnapmirrorDestinationFootprint)
		if qSpaceSnapmirrorDestinationFootprint != "" {

			if err := r.SetQueryParam("space.snapmirror_destination_footprint", qSpaceSnapmirrorDestinationFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotAutodeleteTriggerQueryParameter != nil {

		// query param space.snapshot.autodelete_trigger
		var qrSpaceSnapshotAutodeleteTrigger string

		if o.SpaceSnapshotAutodeleteTriggerQueryParameter != nil {
			qrSpaceSnapshotAutodeleteTrigger = *o.SpaceSnapshotAutodeleteTriggerQueryParameter
		}
		qSpaceSnapshotAutodeleteTrigger := qrSpaceSnapshotAutodeleteTrigger
		if qSpaceSnapshotAutodeleteTrigger != "" {

			if err := r.SetQueryParam("space.snapshot.autodelete_trigger", qSpaceSnapshotAutodeleteTrigger); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReserveAvailableQueryParameter != nil {

		// query param space.snapshot.reserve_available
		var qrSpaceSnapshotReserveAvailable int64

		if o.SpaceSnapshotReserveAvailableQueryParameter != nil {
			qrSpaceSnapshotReserveAvailable = *o.SpaceSnapshotReserveAvailableQueryParameter
		}
		qSpaceSnapshotReserveAvailable := swag.FormatInt64(qrSpaceSnapshotReserveAvailable)
		if qSpaceSnapshotReserveAvailable != "" {

			if err := r.SetQueryParam("space.snapshot.reserve_available", qSpaceSnapshotReserveAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReservePercentQueryParameter != nil {

		// query param space.snapshot.reserve_percent
		var qrSpaceSnapshotReservePercent int64

		if o.SpaceSnapshotReservePercentQueryParameter != nil {
			qrSpaceSnapshotReservePercent = *o.SpaceSnapshotReservePercentQueryParameter
		}
		qSpaceSnapshotReservePercent := swag.FormatInt64(qrSpaceSnapshotReservePercent)
		if qSpaceSnapshotReservePercent != "" {

			if err := r.SetQueryParam("space.snapshot.reserve_percent", qSpaceSnapshotReservePercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReserveSizeQueryParameter != nil {

		// query param space.snapshot.reserve_size
		var qrSpaceSnapshotReserveSize int64

		if o.SpaceSnapshotReserveSizeQueryParameter != nil {
			qrSpaceSnapshotReserveSize = *o.SpaceSnapshotReserveSizeQueryParameter
		}
		qSpaceSnapshotReserveSize := swag.FormatInt64(qrSpaceSnapshotReserveSize)
		if qSpaceSnapshotReserveSize != "" {

			if err := r.SetQueryParam("space.snapshot.reserve_size", qSpaceSnapshotReserveSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotSpaceUsedPercentQueryParameter != nil {

		// query param space.snapshot.space_used_percent
		var qrSpaceSnapshotSpaceUsedPercent int64

		if o.SpaceSnapshotSpaceUsedPercentQueryParameter != nil {
			qrSpaceSnapshotSpaceUsedPercent = *o.SpaceSnapshotSpaceUsedPercentQueryParameter
		}
		qSpaceSnapshotSpaceUsedPercent := swag.FormatInt64(qrSpaceSnapshotSpaceUsedPercent)
		if qSpaceSnapshotSpaceUsedPercent != "" {

			if err := r.SetQueryParam("space.snapshot.space_used_percent", qSpaceSnapshotSpaceUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotUsedQueryParameter != nil {

		// query param space.snapshot.used
		var qrSpaceSnapshotUsed int64

		if o.SpaceSnapshotUsedQueryParameter != nil {
			qrSpaceSnapshotUsed = *o.SpaceSnapshotUsedQueryParameter
		}
		qSpaceSnapshotUsed := swag.FormatInt64(qrSpaceSnapshotUsed)
		if qSpaceSnapshotUsed != "" {

			if err := r.SetQueryParam("space.snapshot.used", qSpaceSnapshotUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReserveUnusableQueryParameter != nil {

		// query param space.snapshot_reserve_unusable
		var qrSpaceSnapshotReserveUnusable int64

		if o.SpaceSnapshotReserveUnusableQueryParameter != nil {
			qrSpaceSnapshotReserveUnusable = *o.SpaceSnapshotReserveUnusableQueryParameter
		}
		qSpaceSnapshotReserveUnusable := swag.FormatInt64(qrSpaceSnapshotReserveUnusable)
		if qSpaceSnapshotReserveUnusable != "" {

			if err := r.SetQueryParam("space.snapshot_reserve_unusable", qSpaceSnapshotReserveUnusable); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotSpillQueryParameter != nil {

		// query param space.snapshot_spill
		var qrSpaceSnapshotSpill int64

		if o.SpaceSnapshotSpillQueryParameter != nil {
			qrSpaceSnapshotSpill = *o.SpaceSnapshotSpillQueryParameter
		}
		qSpaceSnapshotSpill := swag.FormatInt64(qrSpaceSnapshotSpill)
		if qSpaceSnapshotSpill != "" {

			if err := r.SetQueryParam("space.snapshot_spill", qSpaceSnapshotSpill); err != nil {
				return err
			}
		}
	}

	if o.SpaceTotalFootprintQueryParameter != nil {

		// query param space.total_footprint
		var qrSpaceTotalFootprint int64

		if o.SpaceTotalFootprintQueryParameter != nil {
			qrSpaceTotalFootprint = *o.SpaceTotalFootprintQueryParameter
		}
		qSpaceTotalFootprint := swag.FormatInt64(qrSpaceTotalFootprint)
		if qSpaceTotalFootprint != "" {

			if err := r.SetQueryParam("space.total_footprint", qSpaceTotalFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceUsedQueryParameter != nil {

		// query param space.used
		var qrSpaceUsed int64

		if o.SpaceUsedQueryParameter != nil {
			qrSpaceUsed = *o.SpaceUsedQueryParameter
		}
		qSpaceUsed := swag.FormatInt64(qrSpaceUsed)
		if qSpaceUsed != "" {

			if err := r.SetQueryParam("space.used", qSpaceUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceUsedByAfsQueryParameter != nil {

		// query param space.used_by_afs
		var qrSpaceUsedByAfs int64

		if o.SpaceUsedByAfsQueryParameter != nil {
			qrSpaceUsedByAfs = *o.SpaceUsedByAfsQueryParameter
		}
		qSpaceUsedByAfs := swag.FormatInt64(qrSpaceUsedByAfs)
		if qSpaceUsedByAfs != "" {

			if err := r.SetQueryParam("space.used_by_afs", qSpaceUsedByAfs); err != nil {
				return err
			}
		}
	}

	if o.SpaceUserDataQueryParameter != nil {

		// query param space.user_data
		var qrSpaceUserData int64

		if o.SpaceUserDataQueryParameter != nil {
			qrSpaceUserData = *o.SpaceUserDataQueryParameter
		}
		qSpaceUserData := swag.FormatInt64(qrSpaceUserData)
		if qSpaceUserData != "" {

			if err := r.SetQueryParam("space.user_data", qSpaceUserData); err != nil {
				return err
			}
		}
	}

	if o.SpaceVolumeGuaranteeFootprintQueryParameter != nil {

		// query param space.volume_guarantee_footprint
		var qrSpaceVolumeGuaranteeFootprint int64

		if o.SpaceVolumeGuaranteeFootprintQueryParameter != nil {
			qrSpaceVolumeGuaranteeFootprint = *o.SpaceVolumeGuaranteeFootprintQueryParameter
		}
		qSpaceVolumeGuaranteeFootprint := swag.FormatInt64(qrSpaceVolumeGuaranteeFootprint)
		if qSpaceVolumeGuaranteeFootprint != "" {

			if err := r.SetQueryParam("space.volume_guarantee_footprint", qSpaceVolumeGuaranteeFootprint); err != nil {
				return err
			}
		}
	}

	if o.StateQueryParameter != nil {

		// query param state
		var qrState string

		if o.StateQueryParameter != nil {
			qrState = *o.StateQueryParameter
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawAccessCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.access.count
		var qrStatisticsCifsOpsRawAccessCount int64

		if o.StatisticsCifsOpsRawAccessCountQueryParameter != nil {
			qrStatisticsCifsOpsRawAccessCount = *o.StatisticsCifsOpsRawAccessCountQueryParameter
		}
		qStatisticsCifsOpsRawAccessCount := swag.FormatInt64(qrStatisticsCifsOpsRawAccessCount)
		if qStatisticsCifsOpsRawAccessCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.access.count", qStatisticsCifsOpsRawAccessCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawAccessTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.access.total_time
		var qrStatisticsCifsOpsRawAccessTotalTime int64

		if o.StatisticsCifsOpsRawAccessTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawAccessTotalTime = *o.StatisticsCifsOpsRawAccessTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawAccessTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawAccessTotalTime)
		if qStatisticsCifsOpsRawAccessTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.access.total_time", qStatisticsCifsOpsRawAccessTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawAuditCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.audit.count
		var qrStatisticsCifsOpsRawAuditCount int64

		if o.StatisticsCifsOpsRawAuditCountQueryParameter != nil {
			qrStatisticsCifsOpsRawAuditCount = *o.StatisticsCifsOpsRawAuditCountQueryParameter
		}
		qStatisticsCifsOpsRawAuditCount := swag.FormatInt64(qrStatisticsCifsOpsRawAuditCount)
		if qStatisticsCifsOpsRawAuditCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.audit.count", qStatisticsCifsOpsRawAuditCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawAuditTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.audit.total_time
		var qrStatisticsCifsOpsRawAuditTotalTime int64

		if o.StatisticsCifsOpsRawAuditTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawAuditTotalTime = *o.StatisticsCifsOpsRawAuditTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawAuditTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawAuditTotalTime)
		if qStatisticsCifsOpsRawAuditTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.audit.total_time", qStatisticsCifsOpsRawAuditTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateDirCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.dir.count
		var qrStatisticsCifsOpsRawCreateDirCount int64

		if o.StatisticsCifsOpsRawCreateDirCountQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateDirCount = *o.StatisticsCifsOpsRawCreateDirCountQueryParameter
		}
		qStatisticsCifsOpsRawCreateDirCount := swag.FormatInt64(qrStatisticsCifsOpsRawCreateDirCount)
		if qStatisticsCifsOpsRawCreateDirCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.dir.count", qStatisticsCifsOpsRawCreateDirCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateDirTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.dir.total_time
		var qrStatisticsCifsOpsRawCreateDirTotalTime int64

		if o.StatisticsCifsOpsRawCreateDirTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateDirTotalTime = *o.StatisticsCifsOpsRawCreateDirTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawCreateDirTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawCreateDirTotalTime)
		if qStatisticsCifsOpsRawCreateDirTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.dir.total_time", qStatisticsCifsOpsRawCreateDirTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateFileCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.file.count
		var qrStatisticsCifsOpsRawCreateFileCount int64

		if o.StatisticsCifsOpsRawCreateFileCountQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateFileCount = *o.StatisticsCifsOpsRawCreateFileCountQueryParameter
		}
		qStatisticsCifsOpsRawCreateFileCount := swag.FormatInt64(qrStatisticsCifsOpsRawCreateFileCount)
		if qStatisticsCifsOpsRawCreateFileCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.file.count", qStatisticsCifsOpsRawCreateFileCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateFileTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.file.total_time
		var qrStatisticsCifsOpsRawCreateFileTotalTime int64

		if o.StatisticsCifsOpsRawCreateFileTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateFileTotalTime = *o.StatisticsCifsOpsRawCreateFileTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawCreateFileTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawCreateFileTotalTime)
		if qStatisticsCifsOpsRawCreateFileTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.file.total_time", qStatisticsCifsOpsRawCreateFileTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateOtherCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.other.count
		var qrStatisticsCifsOpsRawCreateOtherCount int64

		if o.StatisticsCifsOpsRawCreateOtherCountQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateOtherCount = *o.StatisticsCifsOpsRawCreateOtherCountQueryParameter
		}
		qStatisticsCifsOpsRawCreateOtherCount := swag.FormatInt64(qrStatisticsCifsOpsRawCreateOtherCount)
		if qStatisticsCifsOpsRawCreateOtherCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.other.count", qStatisticsCifsOpsRawCreateOtherCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.other.total_time
		var qrStatisticsCifsOpsRawCreateOtherTotalTime int64

		if o.StatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateOtherTotalTime = *o.StatisticsCifsOpsRawCreateOtherTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawCreateOtherTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawCreateOtherTotalTime)
		if qStatisticsCifsOpsRawCreateOtherTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.other.total_time", qStatisticsCifsOpsRawCreateOtherTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateSymlinkCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.symlink.count
		var qrStatisticsCifsOpsRawCreateSymlinkCount int64

		if o.StatisticsCifsOpsRawCreateSymlinkCountQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateSymlinkCount = *o.StatisticsCifsOpsRawCreateSymlinkCountQueryParameter
		}
		qStatisticsCifsOpsRawCreateSymlinkCount := swag.FormatInt64(qrStatisticsCifsOpsRawCreateSymlinkCount)
		if qStatisticsCifsOpsRawCreateSymlinkCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.symlink.count", qStatisticsCifsOpsRawCreateSymlinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.create.symlink.total_time
		var qrStatisticsCifsOpsRawCreateSymlinkTotalTime int64

		if o.StatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawCreateSymlinkTotalTime = *o.StatisticsCifsOpsRawCreateSymlinkTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawCreateSymlinkTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawCreateSymlinkTotalTime)
		if qStatisticsCifsOpsRawCreateSymlinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.create.symlink.total_time", qStatisticsCifsOpsRawCreateSymlinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawGetattrCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.getattr.count
		var qrStatisticsCifsOpsRawGetattrCount int64

		if o.StatisticsCifsOpsRawGetattrCountQueryParameter != nil {
			qrStatisticsCifsOpsRawGetattrCount = *o.StatisticsCifsOpsRawGetattrCountQueryParameter
		}
		qStatisticsCifsOpsRawGetattrCount := swag.FormatInt64(qrStatisticsCifsOpsRawGetattrCount)
		if qStatisticsCifsOpsRawGetattrCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.getattr.count", qStatisticsCifsOpsRawGetattrCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawGetattrTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.getattr.total_time
		var qrStatisticsCifsOpsRawGetattrTotalTime int64

		if o.StatisticsCifsOpsRawGetattrTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawGetattrTotalTime = *o.StatisticsCifsOpsRawGetattrTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawGetattrTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawGetattrTotalTime)
		if qStatisticsCifsOpsRawGetattrTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.getattr.total_time", qStatisticsCifsOpsRawGetattrTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawLinkCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.link.count
		var qrStatisticsCifsOpsRawLinkCount int64

		if o.StatisticsCifsOpsRawLinkCountQueryParameter != nil {
			qrStatisticsCifsOpsRawLinkCount = *o.StatisticsCifsOpsRawLinkCountQueryParameter
		}
		qStatisticsCifsOpsRawLinkCount := swag.FormatInt64(qrStatisticsCifsOpsRawLinkCount)
		if qStatisticsCifsOpsRawLinkCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.link.count", qStatisticsCifsOpsRawLinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawLinkTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.link.total_time
		var qrStatisticsCifsOpsRawLinkTotalTime int64

		if o.StatisticsCifsOpsRawLinkTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawLinkTotalTime = *o.StatisticsCifsOpsRawLinkTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawLinkTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawLinkTotalTime)
		if qStatisticsCifsOpsRawLinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.link.total_time", qStatisticsCifsOpsRawLinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawLockCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.lock.count
		var qrStatisticsCifsOpsRawLockCount int64

		if o.StatisticsCifsOpsRawLockCountQueryParameter != nil {
			qrStatisticsCifsOpsRawLockCount = *o.StatisticsCifsOpsRawLockCountQueryParameter
		}
		qStatisticsCifsOpsRawLockCount := swag.FormatInt64(qrStatisticsCifsOpsRawLockCount)
		if qStatisticsCifsOpsRawLockCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.lock.count", qStatisticsCifsOpsRawLockCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawLockTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.lock.total_time
		var qrStatisticsCifsOpsRawLockTotalTime int64

		if o.StatisticsCifsOpsRawLockTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawLockTotalTime = *o.StatisticsCifsOpsRawLockTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawLockTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawLockTotalTime)
		if qStatisticsCifsOpsRawLockTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.lock.total_time", qStatisticsCifsOpsRawLockTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawLookupCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.lookup.count
		var qrStatisticsCifsOpsRawLookupCount int64

		if o.StatisticsCifsOpsRawLookupCountQueryParameter != nil {
			qrStatisticsCifsOpsRawLookupCount = *o.StatisticsCifsOpsRawLookupCountQueryParameter
		}
		qStatisticsCifsOpsRawLookupCount := swag.FormatInt64(qrStatisticsCifsOpsRawLookupCount)
		if qStatisticsCifsOpsRawLookupCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.lookup.count", qStatisticsCifsOpsRawLookupCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawLookupTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.lookup.total_time
		var qrStatisticsCifsOpsRawLookupTotalTime int64

		if o.StatisticsCifsOpsRawLookupTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawLookupTotalTime = *o.StatisticsCifsOpsRawLookupTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawLookupTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawLookupTotalTime)
		if qStatisticsCifsOpsRawLookupTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.lookup.total_time", qStatisticsCifsOpsRawLookupTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawOpenCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.open.count
		var qrStatisticsCifsOpsRawOpenCount int64

		if o.StatisticsCifsOpsRawOpenCountQueryParameter != nil {
			qrStatisticsCifsOpsRawOpenCount = *o.StatisticsCifsOpsRawOpenCountQueryParameter
		}
		qStatisticsCifsOpsRawOpenCount := swag.FormatInt64(qrStatisticsCifsOpsRawOpenCount)
		if qStatisticsCifsOpsRawOpenCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.open.count", qStatisticsCifsOpsRawOpenCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawOpenTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.open.total_time
		var qrStatisticsCifsOpsRawOpenTotalTime int64

		if o.StatisticsCifsOpsRawOpenTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawOpenTotalTime = *o.StatisticsCifsOpsRawOpenTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawOpenTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawOpenTotalTime)
		if qStatisticsCifsOpsRawOpenTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.open.total_time", qStatisticsCifsOpsRawOpenTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.read.count
		var qrStatisticsCifsOpsRawReadCount int64

		if o.StatisticsCifsOpsRawReadCountQueryParameter != nil {
			qrStatisticsCifsOpsRawReadCount = *o.StatisticsCifsOpsRawReadCountQueryParameter
		}
		qStatisticsCifsOpsRawReadCount := swag.FormatInt64(qrStatisticsCifsOpsRawReadCount)
		if qStatisticsCifsOpsRawReadCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.read.count", qStatisticsCifsOpsRawReadCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.read.total_time
		var qrStatisticsCifsOpsRawReadTotalTime int64

		if o.StatisticsCifsOpsRawReadTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawReadTotalTime = *o.StatisticsCifsOpsRawReadTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawReadTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawReadTotalTime)
		if qStatisticsCifsOpsRawReadTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.read.total_time", qStatisticsCifsOpsRawReadTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.read.volume_protocol_latency_histogram_counts
		var qrStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts int64

		if o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter != nil {
			qrStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts = *o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter
		}
		qStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts := swag.FormatInt64(qrStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts)
		if qStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.read.volume_protocol_latency_histogram_counts", qStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.read.volume_protocol_latency_histogram_labels
		var qrStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels string

		if o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {
			qrStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels = *o.StatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter
		}
		qStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels := qrStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels
		if qStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.read.volume_protocol_latency_histogram_labels", qStatisticsCifsOpsRawReadVolumeProtocolLatencyHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.read.volume_protocol_size_histogram_counts
		var qrStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts int64

		if o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter != nil {
			qrStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts = *o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter
		}
		qStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts := swag.FormatInt64(qrStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts)
		if qStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.read.volume_protocol_size_histogram_counts", qStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.read.volume_protocol_size_histogram_labels
		var qrStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels string

		if o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter != nil {
			qrStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels = *o.StatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter
		}
		qStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels := qrStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels
		if qStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.read.volume_protocol_size_histogram_labels", qStatisticsCifsOpsRawReadVolumeProtocolSizeHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReaddirCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.readdir.count
		var qrStatisticsCifsOpsRawReaddirCount int64

		if o.StatisticsCifsOpsRawReaddirCountQueryParameter != nil {
			qrStatisticsCifsOpsRawReaddirCount = *o.StatisticsCifsOpsRawReaddirCountQueryParameter
		}
		qStatisticsCifsOpsRawReaddirCount := swag.FormatInt64(qrStatisticsCifsOpsRawReaddirCount)
		if qStatisticsCifsOpsRawReaddirCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.readdir.count", qStatisticsCifsOpsRawReaddirCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReaddirTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.readdir.total_time
		var qrStatisticsCifsOpsRawReaddirTotalTime int64

		if o.StatisticsCifsOpsRawReaddirTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawReaddirTotalTime = *o.StatisticsCifsOpsRawReaddirTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawReaddirTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawReaddirTotalTime)
		if qStatisticsCifsOpsRawReaddirTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.readdir.total_time", qStatisticsCifsOpsRawReaddirTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadlinkCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.readlink.count
		var qrStatisticsCifsOpsRawReadlinkCount int64

		if o.StatisticsCifsOpsRawReadlinkCountQueryParameter != nil {
			qrStatisticsCifsOpsRawReadlinkCount = *o.StatisticsCifsOpsRawReadlinkCountQueryParameter
		}
		qStatisticsCifsOpsRawReadlinkCount := swag.FormatInt64(qrStatisticsCifsOpsRawReadlinkCount)
		if qStatisticsCifsOpsRawReadlinkCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.readlink.count", qStatisticsCifsOpsRawReadlinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawReadlinkTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.readlink.total_time
		var qrStatisticsCifsOpsRawReadlinkTotalTime int64

		if o.StatisticsCifsOpsRawReadlinkTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawReadlinkTotalTime = *o.StatisticsCifsOpsRawReadlinkTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawReadlinkTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawReadlinkTotalTime)
		if qStatisticsCifsOpsRawReadlinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.readlink.total_time", qStatisticsCifsOpsRawReadlinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawRenameCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.rename.count
		var qrStatisticsCifsOpsRawRenameCount int64

		if o.StatisticsCifsOpsRawRenameCountQueryParameter != nil {
			qrStatisticsCifsOpsRawRenameCount = *o.StatisticsCifsOpsRawRenameCountQueryParameter
		}
		qStatisticsCifsOpsRawRenameCount := swag.FormatInt64(qrStatisticsCifsOpsRawRenameCount)
		if qStatisticsCifsOpsRawRenameCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.rename.count", qStatisticsCifsOpsRawRenameCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawRenameTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.rename.total_time
		var qrStatisticsCifsOpsRawRenameTotalTime int64

		if o.StatisticsCifsOpsRawRenameTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawRenameTotalTime = *o.StatisticsCifsOpsRawRenameTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawRenameTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawRenameTotalTime)
		if qStatisticsCifsOpsRawRenameTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.rename.total_time", qStatisticsCifsOpsRawRenameTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawSetattrCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.setattr.count
		var qrStatisticsCifsOpsRawSetattrCount int64

		if o.StatisticsCifsOpsRawSetattrCountQueryParameter != nil {
			qrStatisticsCifsOpsRawSetattrCount = *o.StatisticsCifsOpsRawSetattrCountQueryParameter
		}
		qStatisticsCifsOpsRawSetattrCount := swag.FormatInt64(qrStatisticsCifsOpsRawSetattrCount)
		if qStatisticsCifsOpsRawSetattrCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.setattr.count", qStatisticsCifsOpsRawSetattrCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawSetattrTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.setattr.total_time
		var qrStatisticsCifsOpsRawSetattrTotalTime int64

		if o.StatisticsCifsOpsRawSetattrTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawSetattrTotalTime = *o.StatisticsCifsOpsRawSetattrTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawSetattrTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawSetattrTotalTime)
		if qStatisticsCifsOpsRawSetattrTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.setattr.total_time", qStatisticsCifsOpsRawSetattrTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawUnlinkCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.unlink.count
		var qrStatisticsCifsOpsRawUnlinkCount int64

		if o.StatisticsCifsOpsRawUnlinkCountQueryParameter != nil {
			qrStatisticsCifsOpsRawUnlinkCount = *o.StatisticsCifsOpsRawUnlinkCountQueryParameter
		}
		qStatisticsCifsOpsRawUnlinkCount := swag.FormatInt64(qrStatisticsCifsOpsRawUnlinkCount)
		if qStatisticsCifsOpsRawUnlinkCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.unlink.count", qStatisticsCifsOpsRawUnlinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawUnlinkTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.unlink.total_time
		var qrStatisticsCifsOpsRawUnlinkTotalTime int64

		if o.StatisticsCifsOpsRawUnlinkTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawUnlinkTotalTime = *o.StatisticsCifsOpsRawUnlinkTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawUnlinkTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawUnlinkTotalTime)
		if qStatisticsCifsOpsRawUnlinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.unlink.total_time", qStatisticsCifsOpsRawUnlinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWatchCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.watch.count
		var qrStatisticsCifsOpsRawWatchCount int64

		if o.StatisticsCifsOpsRawWatchCountQueryParameter != nil {
			qrStatisticsCifsOpsRawWatchCount = *o.StatisticsCifsOpsRawWatchCountQueryParameter
		}
		qStatisticsCifsOpsRawWatchCount := swag.FormatInt64(qrStatisticsCifsOpsRawWatchCount)
		if qStatisticsCifsOpsRawWatchCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.watch.count", qStatisticsCifsOpsRawWatchCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWatchTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.watch.total_time
		var qrStatisticsCifsOpsRawWatchTotalTime int64

		if o.StatisticsCifsOpsRawWatchTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawWatchTotalTime = *o.StatisticsCifsOpsRawWatchTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawWatchTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawWatchTotalTime)
		if qStatisticsCifsOpsRawWatchTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.watch.total_time", qStatisticsCifsOpsRawWatchTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWriteCountQueryParameter != nil {

		// query param statistics.cifs_ops_raw.write.count
		var qrStatisticsCifsOpsRawWriteCount int64

		if o.StatisticsCifsOpsRawWriteCountQueryParameter != nil {
			qrStatisticsCifsOpsRawWriteCount = *o.StatisticsCifsOpsRawWriteCountQueryParameter
		}
		qStatisticsCifsOpsRawWriteCount := swag.FormatInt64(qrStatisticsCifsOpsRawWriteCount)
		if qStatisticsCifsOpsRawWriteCount != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.write.count", qStatisticsCifsOpsRawWriteCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWriteTotalTimeQueryParameter != nil {

		// query param statistics.cifs_ops_raw.write.total_time
		var qrStatisticsCifsOpsRawWriteTotalTime int64

		if o.StatisticsCifsOpsRawWriteTotalTimeQueryParameter != nil {
			qrStatisticsCifsOpsRawWriteTotalTime = *o.StatisticsCifsOpsRawWriteTotalTimeQueryParameter
		}
		qStatisticsCifsOpsRawWriteTotalTime := swag.FormatInt64(qrStatisticsCifsOpsRawWriteTotalTime)
		if qStatisticsCifsOpsRawWriteTotalTime != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.write.total_time", qStatisticsCifsOpsRawWriteTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.write.volume_protocol_latency_histogram_counts
		var qrStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts int64

		if o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter != nil {
			qrStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts = *o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter
		}
		qStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts := swag.FormatInt64(qrStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts)
		if qStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.write.volume_protocol_latency_histogram_counts", qStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.write.volume_protocol_latency_histogram_labels
		var qrStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels string

		if o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {
			qrStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels = *o.StatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter
		}
		qStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels := qrStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels
		if qStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.write.volume_protocol_latency_histogram_labels", qStatisticsCifsOpsRawWriteVolumeProtocolLatencyHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.write.volume_protocol_size_histogram_counts
		var qrStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts int64

		if o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter != nil {
			qrStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts = *o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter
		}
		qStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts := swag.FormatInt64(qrStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts)
		if qStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.write.volume_protocol_size_histogram_counts", qStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter != nil {

		// query param statistics.cifs_ops_raw.write.volume_protocol_size_histogram_labels
		var qrStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels string

		if o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter != nil {
			qrStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels = *o.StatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter
		}
		qStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels := qrStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels
		if qStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.cifs_ops_raw.write.volume_protocol_size_histogram_labels", qStatisticsCifsOpsRawWriteVolumeProtocolSizeHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudIopsRawOtherQueryParameter != nil {

		// query param statistics.cloud.iops_raw.other
		var qrStatisticsCloudIopsRawOther int64

		if o.StatisticsCloudIopsRawOtherQueryParameter != nil {
			qrStatisticsCloudIopsRawOther = *o.StatisticsCloudIopsRawOtherQueryParameter
		}
		qStatisticsCloudIopsRawOther := swag.FormatInt64(qrStatisticsCloudIopsRawOther)
		if qStatisticsCloudIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.cloud.iops_raw.other", qStatisticsCloudIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudIopsRawReadQueryParameter != nil {

		// query param statistics.cloud.iops_raw.read
		var qrStatisticsCloudIopsRawRead int64

		if o.StatisticsCloudIopsRawReadQueryParameter != nil {
			qrStatisticsCloudIopsRawRead = *o.StatisticsCloudIopsRawReadQueryParameter
		}
		qStatisticsCloudIopsRawRead := swag.FormatInt64(qrStatisticsCloudIopsRawRead)
		if qStatisticsCloudIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.cloud.iops_raw.read", qStatisticsCloudIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudIopsRawTotalQueryParameter != nil {

		// query param statistics.cloud.iops_raw.total
		var qrStatisticsCloudIopsRawTotal int64

		if o.StatisticsCloudIopsRawTotalQueryParameter != nil {
			qrStatisticsCloudIopsRawTotal = *o.StatisticsCloudIopsRawTotalQueryParameter
		}
		qStatisticsCloudIopsRawTotal := swag.FormatInt64(qrStatisticsCloudIopsRawTotal)
		if qStatisticsCloudIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.cloud.iops_raw.total", qStatisticsCloudIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudIopsRawWriteQueryParameter != nil {

		// query param statistics.cloud.iops_raw.write
		var qrStatisticsCloudIopsRawWrite int64

		if o.StatisticsCloudIopsRawWriteQueryParameter != nil {
			qrStatisticsCloudIopsRawWrite = *o.StatisticsCloudIopsRawWriteQueryParameter
		}
		qStatisticsCloudIopsRawWrite := swag.FormatInt64(qrStatisticsCloudIopsRawWrite)
		if qStatisticsCloudIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.cloud.iops_raw.write", qStatisticsCloudIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudLatencyRawOtherQueryParameter != nil {

		// query param statistics.cloud.latency_raw.other
		var qrStatisticsCloudLatencyRawOther int64

		if o.StatisticsCloudLatencyRawOtherQueryParameter != nil {
			qrStatisticsCloudLatencyRawOther = *o.StatisticsCloudLatencyRawOtherQueryParameter
		}
		qStatisticsCloudLatencyRawOther := swag.FormatInt64(qrStatisticsCloudLatencyRawOther)
		if qStatisticsCloudLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.cloud.latency_raw.other", qStatisticsCloudLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudLatencyRawReadQueryParameter != nil {

		// query param statistics.cloud.latency_raw.read
		var qrStatisticsCloudLatencyRawRead int64

		if o.StatisticsCloudLatencyRawReadQueryParameter != nil {
			qrStatisticsCloudLatencyRawRead = *o.StatisticsCloudLatencyRawReadQueryParameter
		}
		qStatisticsCloudLatencyRawRead := swag.FormatInt64(qrStatisticsCloudLatencyRawRead)
		if qStatisticsCloudLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.cloud.latency_raw.read", qStatisticsCloudLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudLatencyRawTotalQueryParameter != nil {

		// query param statistics.cloud.latency_raw.total
		var qrStatisticsCloudLatencyRawTotal int64

		if o.StatisticsCloudLatencyRawTotalQueryParameter != nil {
			qrStatisticsCloudLatencyRawTotal = *o.StatisticsCloudLatencyRawTotalQueryParameter
		}
		qStatisticsCloudLatencyRawTotal := swag.FormatInt64(qrStatisticsCloudLatencyRawTotal)
		if qStatisticsCloudLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.cloud.latency_raw.total", qStatisticsCloudLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudLatencyRawWriteQueryParameter != nil {

		// query param statistics.cloud.latency_raw.write
		var qrStatisticsCloudLatencyRawWrite int64

		if o.StatisticsCloudLatencyRawWriteQueryParameter != nil {
			qrStatisticsCloudLatencyRawWrite = *o.StatisticsCloudLatencyRawWriteQueryParameter
		}
		qStatisticsCloudLatencyRawWrite := swag.FormatInt64(qrStatisticsCloudLatencyRawWrite)
		if qStatisticsCloudLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.cloud.latency_raw.write", qStatisticsCloudLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudStatusQueryParameter != nil {

		// query param statistics.cloud.status
		var qrStatisticsCloudStatus string

		if o.StatisticsCloudStatusQueryParameter != nil {
			qrStatisticsCloudStatus = *o.StatisticsCloudStatusQueryParameter
		}
		qStatisticsCloudStatus := qrStatisticsCloudStatus
		if qStatisticsCloudStatus != "" {

			if err := r.SetQueryParam("statistics.cloud.status", qStatisticsCloudStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsCloudTimestampQueryParameter != nil {

		// query param statistics.cloud.timestamp
		var qrStatisticsCloudTimestamp string

		if o.StatisticsCloudTimestampQueryParameter != nil {
			qrStatisticsCloudTimestamp = *o.StatisticsCloudTimestampQueryParameter
		}
		qStatisticsCloudTimestamp := qrStatisticsCloudTimestamp
		if qStatisticsCloudTimestamp != "" {

			if err := r.SetQueryParam("statistics.cloud.timestamp", qStatisticsCloudTimestamp); err != nil {
				return err
			}
		}
	}

	if o.StatisticsFlexcacheRawCacheMissBlocksQueryParameter != nil {

		// query param statistics.flexcache_raw.cache_miss_blocks
		var qrStatisticsFlexcacheRawCacheMissBlocks int64

		if o.StatisticsFlexcacheRawCacheMissBlocksQueryParameter != nil {
			qrStatisticsFlexcacheRawCacheMissBlocks = *o.StatisticsFlexcacheRawCacheMissBlocksQueryParameter
		}
		qStatisticsFlexcacheRawCacheMissBlocks := swag.FormatInt64(qrStatisticsFlexcacheRawCacheMissBlocks)
		if qStatisticsFlexcacheRawCacheMissBlocks != "" {

			if err := r.SetQueryParam("statistics.flexcache_raw.cache_miss_blocks", qStatisticsFlexcacheRawCacheMissBlocks); err != nil {
				return err
			}
		}
	}

	if o.StatisticsFlexcacheRawClientRequestedBlocksQueryParameter != nil {

		// query param statistics.flexcache_raw.client_requested_blocks
		var qrStatisticsFlexcacheRawClientRequestedBlocks int64

		if o.StatisticsFlexcacheRawClientRequestedBlocksQueryParameter != nil {
			qrStatisticsFlexcacheRawClientRequestedBlocks = *o.StatisticsFlexcacheRawClientRequestedBlocksQueryParameter
		}
		qStatisticsFlexcacheRawClientRequestedBlocks := swag.FormatInt64(qrStatisticsFlexcacheRawClientRequestedBlocks)
		if qStatisticsFlexcacheRawClientRequestedBlocks != "" {

			if err := r.SetQueryParam("statistics.flexcache_raw.client_requested_blocks", qStatisticsFlexcacheRawClientRequestedBlocks); err != nil {
				return err
			}
		}
	}

	if o.StatisticsFlexcacheRawStatusQueryParameter != nil {

		// query param statistics.flexcache_raw.status
		var qrStatisticsFlexcacheRawStatus string

		if o.StatisticsFlexcacheRawStatusQueryParameter != nil {
			qrStatisticsFlexcacheRawStatus = *o.StatisticsFlexcacheRawStatusQueryParameter
		}
		qStatisticsFlexcacheRawStatus := qrStatisticsFlexcacheRawStatus
		if qStatisticsFlexcacheRawStatus != "" {

			if err := r.SetQueryParam("statistics.flexcache_raw.status", qStatisticsFlexcacheRawStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsFlexcacheRawTimestampQueryParameter != nil {

		// query param statistics.flexcache_raw.timestamp
		var qrStatisticsFlexcacheRawTimestamp string

		if o.StatisticsFlexcacheRawTimestampQueryParameter != nil {
			qrStatisticsFlexcacheRawTimestamp = *o.StatisticsFlexcacheRawTimestampQueryParameter
		}
		qStatisticsFlexcacheRawTimestamp := qrStatisticsFlexcacheRawTimestamp
		if qStatisticsFlexcacheRawTimestamp != "" {

			if err := r.SetQueryParam("statistics.flexcache_raw.timestamp", qStatisticsFlexcacheRawTimestamp); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawOtherQueryParameter != nil {

		// query param statistics.iops_raw.other
		var qrStatisticsIopsRawOther int64

		if o.StatisticsIopsRawOtherQueryParameter != nil {
			qrStatisticsIopsRawOther = *o.StatisticsIopsRawOtherQueryParameter
		}
		qStatisticsIopsRawOther := swag.FormatInt64(qrStatisticsIopsRawOther)
		if qStatisticsIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.iops_raw.other", qStatisticsIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawReadQueryParameter != nil {

		// query param statistics.iops_raw.read
		var qrStatisticsIopsRawRead int64

		if o.StatisticsIopsRawReadQueryParameter != nil {
			qrStatisticsIopsRawRead = *o.StatisticsIopsRawReadQueryParameter
		}
		qStatisticsIopsRawRead := swag.FormatInt64(qrStatisticsIopsRawRead)
		if qStatisticsIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.iops_raw.read", qStatisticsIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawTotalQueryParameter != nil {

		// query param statistics.iops_raw.total
		var qrStatisticsIopsRawTotal int64

		if o.StatisticsIopsRawTotalQueryParameter != nil {
			qrStatisticsIopsRawTotal = *o.StatisticsIopsRawTotalQueryParameter
		}
		qStatisticsIopsRawTotal := swag.FormatInt64(qrStatisticsIopsRawTotal)
		if qStatisticsIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.iops_raw.total", qStatisticsIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawWriteQueryParameter != nil {

		// query param statistics.iops_raw.write
		var qrStatisticsIopsRawWrite int64

		if o.StatisticsIopsRawWriteQueryParameter != nil {
			qrStatisticsIopsRawWrite = *o.StatisticsIopsRawWriteQueryParameter
		}
		qStatisticsIopsRawWrite := swag.FormatInt64(qrStatisticsIopsRawWrite)
		if qStatisticsIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.iops_raw.write", qStatisticsIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawOtherQueryParameter != nil {

		// query param statistics.latency_raw.other
		var qrStatisticsLatencyRawOther int64

		if o.StatisticsLatencyRawOtherQueryParameter != nil {
			qrStatisticsLatencyRawOther = *o.StatisticsLatencyRawOtherQueryParameter
		}
		qStatisticsLatencyRawOther := swag.FormatInt64(qrStatisticsLatencyRawOther)
		if qStatisticsLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.latency_raw.other", qStatisticsLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawReadQueryParameter != nil {

		// query param statistics.latency_raw.read
		var qrStatisticsLatencyRawRead int64

		if o.StatisticsLatencyRawReadQueryParameter != nil {
			qrStatisticsLatencyRawRead = *o.StatisticsLatencyRawReadQueryParameter
		}
		qStatisticsLatencyRawRead := swag.FormatInt64(qrStatisticsLatencyRawRead)
		if qStatisticsLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.latency_raw.read", qStatisticsLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawTotalQueryParameter != nil {

		// query param statistics.latency_raw.total
		var qrStatisticsLatencyRawTotal int64

		if o.StatisticsLatencyRawTotalQueryParameter != nil {
			qrStatisticsLatencyRawTotal = *o.StatisticsLatencyRawTotalQueryParameter
		}
		qStatisticsLatencyRawTotal := swag.FormatInt64(qrStatisticsLatencyRawTotal)
		if qStatisticsLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.latency_raw.total", qStatisticsLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawWriteQueryParameter != nil {

		// query param statistics.latency_raw.write
		var qrStatisticsLatencyRawWrite int64

		if o.StatisticsLatencyRawWriteQueryParameter != nil {
			qrStatisticsLatencyRawWrite = *o.StatisticsLatencyRawWriteQueryParameter
		}
		qStatisticsLatencyRawWrite := swag.FormatInt64(qrStatisticsLatencyRawWrite)
		if qStatisticsLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.latency_raw.write", qStatisticsLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawAccessCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.access.count
		var qrStatisticsNfsOpsRawAccessCount int64

		if o.StatisticsNfsOpsRawAccessCountQueryParameter != nil {
			qrStatisticsNfsOpsRawAccessCount = *o.StatisticsNfsOpsRawAccessCountQueryParameter
		}
		qStatisticsNfsOpsRawAccessCount := swag.FormatInt64(qrStatisticsNfsOpsRawAccessCount)
		if qStatisticsNfsOpsRawAccessCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.access.count", qStatisticsNfsOpsRawAccessCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawAccessTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.access.total_time
		var qrStatisticsNfsOpsRawAccessTotalTime int64

		if o.StatisticsNfsOpsRawAccessTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawAccessTotalTime = *o.StatisticsNfsOpsRawAccessTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawAccessTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawAccessTotalTime)
		if qStatisticsNfsOpsRawAccessTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.access.total_time", qStatisticsNfsOpsRawAccessTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawAuditCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.audit.count
		var qrStatisticsNfsOpsRawAuditCount int64

		if o.StatisticsNfsOpsRawAuditCountQueryParameter != nil {
			qrStatisticsNfsOpsRawAuditCount = *o.StatisticsNfsOpsRawAuditCountQueryParameter
		}
		qStatisticsNfsOpsRawAuditCount := swag.FormatInt64(qrStatisticsNfsOpsRawAuditCount)
		if qStatisticsNfsOpsRawAuditCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.audit.count", qStatisticsNfsOpsRawAuditCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawAuditTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.audit.total_time
		var qrStatisticsNfsOpsRawAuditTotalTime int64

		if o.StatisticsNfsOpsRawAuditTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawAuditTotalTime = *o.StatisticsNfsOpsRawAuditTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawAuditTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawAuditTotalTime)
		if qStatisticsNfsOpsRawAuditTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.audit.total_time", qStatisticsNfsOpsRawAuditTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateDirCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.dir.count
		var qrStatisticsNfsOpsRawCreateDirCount int64

		if o.StatisticsNfsOpsRawCreateDirCountQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateDirCount = *o.StatisticsNfsOpsRawCreateDirCountQueryParameter
		}
		qStatisticsNfsOpsRawCreateDirCount := swag.FormatInt64(qrStatisticsNfsOpsRawCreateDirCount)
		if qStatisticsNfsOpsRawCreateDirCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.dir.count", qStatisticsNfsOpsRawCreateDirCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateDirTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.dir.total_time
		var qrStatisticsNfsOpsRawCreateDirTotalTime int64

		if o.StatisticsNfsOpsRawCreateDirTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateDirTotalTime = *o.StatisticsNfsOpsRawCreateDirTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawCreateDirTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawCreateDirTotalTime)
		if qStatisticsNfsOpsRawCreateDirTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.dir.total_time", qStatisticsNfsOpsRawCreateDirTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateFileCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.file.count
		var qrStatisticsNfsOpsRawCreateFileCount int64

		if o.StatisticsNfsOpsRawCreateFileCountQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateFileCount = *o.StatisticsNfsOpsRawCreateFileCountQueryParameter
		}
		qStatisticsNfsOpsRawCreateFileCount := swag.FormatInt64(qrStatisticsNfsOpsRawCreateFileCount)
		if qStatisticsNfsOpsRawCreateFileCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.file.count", qStatisticsNfsOpsRawCreateFileCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateFileTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.file.total_time
		var qrStatisticsNfsOpsRawCreateFileTotalTime int64

		if o.StatisticsNfsOpsRawCreateFileTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateFileTotalTime = *o.StatisticsNfsOpsRawCreateFileTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawCreateFileTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawCreateFileTotalTime)
		if qStatisticsNfsOpsRawCreateFileTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.file.total_time", qStatisticsNfsOpsRawCreateFileTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateOtherCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.other.count
		var qrStatisticsNfsOpsRawCreateOtherCount int64

		if o.StatisticsNfsOpsRawCreateOtherCountQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateOtherCount = *o.StatisticsNfsOpsRawCreateOtherCountQueryParameter
		}
		qStatisticsNfsOpsRawCreateOtherCount := swag.FormatInt64(qrStatisticsNfsOpsRawCreateOtherCount)
		if qStatisticsNfsOpsRawCreateOtherCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.other.count", qStatisticsNfsOpsRawCreateOtherCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.other.total_time
		var qrStatisticsNfsOpsRawCreateOtherTotalTime int64

		if o.StatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateOtherTotalTime = *o.StatisticsNfsOpsRawCreateOtherTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawCreateOtherTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawCreateOtherTotalTime)
		if qStatisticsNfsOpsRawCreateOtherTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.other.total_time", qStatisticsNfsOpsRawCreateOtherTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateSymlinkCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.symlink.count
		var qrStatisticsNfsOpsRawCreateSymlinkCount int64

		if o.StatisticsNfsOpsRawCreateSymlinkCountQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateSymlinkCount = *o.StatisticsNfsOpsRawCreateSymlinkCountQueryParameter
		}
		qStatisticsNfsOpsRawCreateSymlinkCount := swag.FormatInt64(qrStatisticsNfsOpsRawCreateSymlinkCount)
		if qStatisticsNfsOpsRawCreateSymlinkCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.symlink.count", qStatisticsNfsOpsRawCreateSymlinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.create.symlink.total_time
		var qrStatisticsNfsOpsRawCreateSymlinkTotalTime int64

		if o.StatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawCreateSymlinkTotalTime = *o.StatisticsNfsOpsRawCreateSymlinkTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawCreateSymlinkTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawCreateSymlinkTotalTime)
		if qStatisticsNfsOpsRawCreateSymlinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.create.symlink.total_time", qStatisticsNfsOpsRawCreateSymlinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawGetattrCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.getattr.count
		var qrStatisticsNfsOpsRawGetattrCount int64

		if o.StatisticsNfsOpsRawGetattrCountQueryParameter != nil {
			qrStatisticsNfsOpsRawGetattrCount = *o.StatisticsNfsOpsRawGetattrCountQueryParameter
		}
		qStatisticsNfsOpsRawGetattrCount := swag.FormatInt64(qrStatisticsNfsOpsRawGetattrCount)
		if qStatisticsNfsOpsRawGetattrCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.getattr.count", qStatisticsNfsOpsRawGetattrCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawGetattrTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.getattr.total_time
		var qrStatisticsNfsOpsRawGetattrTotalTime int64

		if o.StatisticsNfsOpsRawGetattrTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawGetattrTotalTime = *o.StatisticsNfsOpsRawGetattrTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawGetattrTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawGetattrTotalTime)
		if qStatisticsNfsOpsRawGetattrTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.getattr.total_time", qStatisticsNfsOpsRawGetattrTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawLinkCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.link.count
		var qrStatisticsNfsOpsRawLinkCount int64

		if o.StatisticsNfsOpsRawLinkCountQueryParameter != nil {
			qrStatisticsNfsOpsRawLinkCount = *o.StatisticsNfsOpsRawLinkCountQueryParameter
		}
		qStatisticsNfsOpsRawLinkCount := swag.FormatInt64(qrStatisticsNfsOpsRawLinkCount)
		if qStatisticsNfsOpsRawLinkCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.link.count", qStatisticsNfsOpsRawLinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawLinkTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.link.total_time
		var qrStatisticsNfsOpsRawLinkTotalTime int64

		if o.StatisticsNfsOpsRawLinkTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawLinkTotalTime = *o.StatisticsNfsOpsRawLinkTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawLinkTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawLinkTotalTime)
		if qStatisticsNfsOpsRawLinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.link.total_time", qStatisticsNfsOpsRawLinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawLockCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.lock.count
		var qrStatisticsNfsOpsRawLockCount int64

		if o.StatisticsNfsOpsRawLockCountQueryParameter != nil {
			qrStatisticsNfsOpsRawLockCount = *o.StatisticsNfsOpsRawLockCountQueryParameter
		}
		qStatisticsNfsOpsRawLockCount := swag.FormatInt64(qrStatisticsNfsOpsRawLockCount)
		if qStatisticsNfsOpsRawLockCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.lock.count", qStatisticsNfsOpsRawLockCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawLockTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.lock.total_time
		var qrStatisticsNfsOpsRawLockTotalTime int64

		if o.StatisticsNfsOpsRawLockTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawLockTotalTime = *o.StatisticsNfsOpsRawLockTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawLockTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawLockTotalTime)
		if qStatisticsNfsOpsRawLockTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.lock.total_time", qStatisticsNfsOpsRawLockTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawLookupCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.lookup.count
		var qrStatisticsNfsOpsRawLookupCount int64

		if o.StatisticsNfsOpsRawLookupCountQueryParameter != nil {
			qrStatisticsNfsOpsRawLookupCount = *o.StatisticsNfsOpsRawLookupCountQueryParameter
		}
		qStatisticsNfsOpsRawLookupCount := swag.FormatInt64(qrStatisticsNfsOpsRawLookupCount)
		if qStatisticsNfsOpsRawLookupCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.lookup.count", qStatisticsNfsOpsRawLookupCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawLookupTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.lookup.total_time
		var qrStatisticsNfsOpsRawLookupTotalTime int64

		if o.StatisticsNfsOpsRawLookupTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawLookupTotalTime = *o.StatisticsNfsOpsRawLookupTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawLookupTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawLookupTotalTime)
		if qStatisticsNfsOpsRawLookupTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.lookup.total_time", qStatisticsNfsOpsRawLookupTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawOpenCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.open.count
		var qrStatisticsNfsOpsRawOpenCount int64

		if o.StatisticsNfsOpsRawOpenCountQueryParameter != nil {
			qrStatisticsNfsOpsRawOpenCount = *o.StatisticsNfsOpsRawOpenCountQueryParameter
		}
		qStatisticsNfsOpsRawOpenCount := swag.FormatInt64(qrStatisticsNfsOpsRawOpenCount)
		if qStatisticsNfsOpsRawOpenCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.open.count", qStatisticsNfsOpsRawOpenCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawOpenTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.open.total_time
		var qrStatisticsNfsOpsRawOpenTotalTime int64

		if o.StatisticsNfsOpsRawOpenTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawOpenTotalTime = *o.StatisticsNfsOpsRawOpenTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawOpenTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawOpenTotalTime)
		if qStatisticsNfsOpsRawOpenTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.open.total_time", qStatisticsNfsOpsRawOpenTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.read.count
		var qrStatisticsNfsOpsRawReadCount int64

		if o.StatisticsNfsOpsRawReadCountQueryParameter != nil {
			qrStatisticsNfsOpsRawReadCount = *o.StatisticsNfsOpsRawReadCountQueryParameter
		}
		qStatisticsNfsOpsRawReadCount := swag.FormatInt64(qrStatisticsNfsOpsRawReadCount)
		if qStatisticsNfsOpsRawReadCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.read.count", qStatisticsNfsOpsRawReadCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.read.total_time
		var qrStatisticsNfsOpsRawReadTotalTime int64

		if o.StatisticsNfsOpsRawReadTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawReadTotalTime = *o.StatisticsNfsOpsRawReadTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawReadTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawReadTotalTime)
		if qStatisticsNfsOpsRawReadTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.read.total_time", qStatisticsNfsOpsRawReadTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.read.volume_protocol_latency_histogram_counts
		var qrStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts int64

		if o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter != nil {
			qrStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts = *o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCountsQueryParameter
		}
		qStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts := swag.FormatInt64(qrStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts)
		if qStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.read.volume_protocol_latency_histogram_counts", qStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.read.volume_protocol_latency_histogram_labels
		var qrStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels string

		if o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {
			qrStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels = *o.StatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabelsQueryParameter
		}
		qStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels := qrStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels
		if qStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.read.volume_protocol_latency_histogram_labels", qStatisticsNfsOpsRawReadVolumeProtocolLatencyHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.read.volume_protocol_size_histogram_counts
		var qrStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts int64

		if o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter != nil {
			qrStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts = *o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCountsQueryParameter
		}
		qStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts := swag.FormatInt64(qrStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts)
		if qStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.read.volume_protocol_size_histogram_counts", qStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.read.volume_protocol_size_histogram_labels
		var qrStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels string

		if o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter != nil {
			qrStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels = *o.StatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabelsQueryParameter
		}
		qStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels := qrStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels
		if qStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.read.volume_protocol_size_histogram_labels", qStatisticsNfsOpsRawReadVolumeProtocolSizeHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReaddirCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.readdir.count
		var qrStatisticsNfsOpsRawReaddirCount int64

		if o.StatisticsNfsOpsRawReaddirCountQueryParameter != nil {
			qrStatisticsNfsOpsRawReaddirCount = *o.StatisticsNfsOpsRawReaddirCountQueryParameter
		}
		qStatisticsNfsOpsRawReaddirCount := swag.FormatInt64(qrStatisticsNfsOpsRawReaddirCount)
		if qStatisticsNfsOpsRawReaddirCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.readdir.count", qStatisticsNfsOpsRawReaddirCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReaddirTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.readdir.total_time
		var qrStatisticsNfsOpsRawReaddirTotalTime int64

		if o.StatisticsNfsOpsRawReaddirTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawReaddirTotalTime = *o.StatisticsNfsOpsRawReaddirTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawReaddirTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawReaddirTotalTime)
		if qStatisticsNfsOpsRawReaddirTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.readdir.total_time", qStatisticsNfsOpsRawReaddirTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadlinkCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.readlink.count
		var qrStatisticsNfsOpsRawReadlinkCount int64

		if o.StatisticsNfsOpsRawReadlinkCountQueryParameter != nil {
			qrStatisticsNfsOpsRawReadlinkCount = *o.StatisticsNfsOpsRawReadlinkCountQueryParameter
		}
		qStatisticsNfsOpsRawReadlinkCount := swag.FormatInt64(qrStatisticsNfsOpsRawReadlinkCount)
		if qStatisticsNfsOpsRawReadlinkCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.readlink.count", qStatisticsNfsOpsRawReadlinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawReadlinkTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.readlink.total_time
		var qrStatisticsNfsOpsRawReadlinkTotalTime int64

		if o.StatisticsNfsOpsRawReadlinkTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawReadlinkTotalTime = *o.StatisticsNfsOpsRawReadlinkTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawReadlinkTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawReadlinkTotalTime)
		if qStatisticsNfsOpsRawReadlinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.readlink.total_time", qStatisticsNfsOpsRawReadlinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawRenameCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.rename.count
		var qrStatisticsNfsOpsRawRenameCount int64

		if o.StatisticsNfsOpsRawRenameCountQueryParameter != nil {
			qrStatisticsNfsOpsRawRenameCount = *o.StatisticsNfsOpsRawRenameCountQueryParameter
		}
		qStatisticsNfsOpsRawRenameCount := swag.FormatInt64(qrStatisticsNfsOpsRawRenameCount)
		if qStatisticsNfsOpsRawRenameCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.rename.count", qStatisticsNfsOpsRawRenameCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawRenameTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.rename.total_time
		var qrStatisticsNfsOpsRawRenameTotalTime int64

		if o.StatisticsNfsOpsRawRenameTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawRenameTotalTime = *o.StatisticsNfsOpsRawRenameTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawRenameTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawRenameTotalTime)
		if qStatisticsNfsOpsRawRenameTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.rename.total_time", qStatisticsNfsOpsRawRenameTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawSetattrCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.setattr.count
		var qrStatisticsNfsOpsRawSetattrCount int64

		if o.StatisticsNfsOpsRawSetattrCountQueryParameter != nil {
			qrStatisticsNfsOpsRawSetattrCount = *o.StatisticsNfsOpsRawSetattrCountQueryParameter
		}
		qStatisticsNfsOpsRawSetattrCount := swag.FormatInt64(qrStatisticsNfsOpsRawSetattrCount)
		if qStatisticsNfsOpsRawSetattrCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.setattr.count", qStatisticsNfsOpsRawSetattrCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawSetattrTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.setattr.total_time
		var qrStatisticsNfsOpsRawSetattrTotalTime int64

		if o.StatisticsNfsOpsRawSetattrTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawSetattrTotalTime = *o.StatisticsNfsOpsRawSetattrTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawSetattrTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawSetattrTotalTime)
		if qStatisticsNfsOpsRawSetattrTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.setattr.total_time", qStatisticsNfsOpsRawSetattrTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawUnlinkCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.unlink.count
		var qrStatisticsNfsOpsRawUnlinkCount int64

		if o.StatisticsNfsOpsRawUnlinkCountQueryParameter != nil {
			qrStatisticsNfsOpsRawUnlinkCount = *o.StatisticsNfsOpsRawUnlinkCountQueryParameter
		}
		qStatisticsNfsOpsRawUnlinkCount := swag.FormatInt64(qrStatisticsNfsOpsRawUnlinkCount)
		if qStatisticsNfsOpsRawUnlinkCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.unlink.count", qStatisticsNfsOpsRawUnlinkCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawUnlinkTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.unlink.total_time
		var qrStatisticsNfsOpsRawUnlinkTotalTime int64

		if o.StatisticsNfsOpsRawUnlinkTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawUnlinkTotalTime = *o.StatisticsNfsOpsRawUnlinkTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawUnlinkTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawUnlinkTotalTime)
		if qStatisticsNfsOpsRawUnlinkTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.unlink.total_time", qStatisticsNfsOpsRawUnlinkTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWatchCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.watch.count
		var qrStatisticsNfsOpsRawWatchCount int64

		if o.StatisticsNfsOpsRawWatchCountQueryParameter != nil {
			qrStatisticsNfsOpsRawWatchCount = *o.StatisticsNfsOpsRawWatchCountQueryParameter
		}
		qStatisticsNfsOpsRawWatchCount := swag.FormatInt64(qrStatisticsNfsOpsRawWatchCount)
		if qStatisticsNfsOpsRawWatchCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.watch.count", qStatisticsNfsOpsRawWatchCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWatchTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.watch.total_time
		var qrStatisticsNfsOpsRawWatchTotalTime int64

		if o.StatisticsNfsOpsRawWatchTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawWatchTotalTime = *o.StatisticsNfsOpsRawWatchTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawWatchTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawWatchTotalTime)
		if qStatisticsNfsOpsRawWatchTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.watch.total_time", qStatisticsNfsOpsRawWatchTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWriteCountQueryParameter != nil {

		// query param statistics.nfs_ops_raw.write.count
		var qrStatisticsNfsOpsRawWriteCount int64

		if o.StatisticsNfsOpsRawWriteCountQueryParameter != nil {
			qrStatisticsNfsOpsRawWriteCount = *o.StatisticsNfsOpsRawWriteCountQueryParameter
		}
		qStatisticsNfsOpsRawWriteCount := swag.FormatInt64(qrStatisticsNfsOpsRawWriteCount)
		if qStatisticsNfsOpsRawWriteCount != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.write.count", qStatisticsNfsOpsRawWriteCount); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWriteTotalTimeQueryParameter != nil {

		// query param statistics.nfs_ops_raw.write.total_time
		var qrStatisticsNfsOpsRawWriteTotalTime int64

		if o.StatisticsNfsOpsRawWriteTotalTimeQueryParameter != nil {
			qrStatisticsNfsOpsRawWriteTotalTime = *o.StatisticsNfsOpsRawWriteTotalTimeQueryParameter
		}
		qStatisticsNfsOpsRawWriteTotalTime := swag.FormatInt64(qrStatisticsNfsOpsRawWriteTotalTime)
		if qStatisticsNfsOpsRawWriteTotalTime != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.write.total_time", qStatisticsNfsOpsRawWriteTotalTime); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.write.volume_protocol_latency_histogram_counts
		var qrStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts int64

		if o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter != nil {
			qrStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts = *o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCountsQueryParameter
		}
		qStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts := swag.FormatInt64(qrStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts)
		if qStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.write.volume_protocol_latency_histogram_counts", qStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.write.volume_protocol_latency_histogram_labels
		var qrStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels string

		if o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter != nil {
			qrStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels = *o.StatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabelsQueryParameter
		}
		qStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels := qrStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels
		if qStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.write.volume_protocol_latency_histogram_labels", qStatisticsNfsOpsRawWriteVolumeProtocolLatencyHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.write.volume_protocol_size_histogram_counts
		var qrStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts int64

		if o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter != nil {
			qrStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts = *o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCountsQueryParameter
		}
		qStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts := swag.FormatInt64(qrStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts)
		if qStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.write.volume_protocol_size_histogram_counts", qStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramCounts); err != nil {
				return err
			}
		}
	}

	if o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter != nil {

		// query param statistics.nfs_ops_raw.write.volume_protocol_size_histogram_labels
		var qrStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels string

		if o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter != nil {
			qrStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels = *o.StatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabelsQueryParameter
		}
		qStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels := qrStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels
		if qStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels != "" {

			if err := r.SetQueryParam("statistics.nfs_ops_raw.write.volume_protocol_size_histogram_labels", qStatisticsNfsOpsRawWriteVolumeProtocolSizeHistogramLabels); err != nil {
				return err
			}
		}
	}

	if o.StatisticsStatusQueryParameter != nil {

		// query param statistics.status
		var qrStatisticsStatus string

		if o.StatisticsStatusQueryParameter != nil {
			qrStatisticsStatus = *o.StatisticsStatusQueryParameter
		}
		qStatisticsStatus := qrStatisticsStatus
		if qStatisticsStatus != "" {

			if err := r.SetQueryParam("statistics.status", qStatisticsStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawOtherQueryParameter != nil {

		// query param statistics.throughput_raw.other
		var qrStatisticsThroughputRawOther int64

		if o.StatisticsThroughputRawOtherQueryParameter != nil {
			qrStatisticsThroughputRawOther = *o.StatisticsThroughputRawOtherQueryParameter
		}
		qStatisticsThroughputRawOther := swag.FormatInt64(qrStatisticsThroughputRawOther)
		if qStatisticsThroughputRawOther != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.other", qStatisticsThroughputRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawReadQueryParameter != nil {

		// query param statistics.throughput_raw.read
		var qrStatisticsThroughputRawRead int64

		if o.StatisticsThroughputRawReadQueryParameter != nil {
			qrStatisticsThroughputRawRead = *o.StatisticsThroughputRawReadQueryParameter
		}
		qStatisticsThroughputRawRead := swag.FormatInt64(qrStatisticsThroughputRawRead)
		if qStatisticsThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.read", qStatisticsThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawTotalQueryParameter != nil {

		// query param statistics.throughput_raw.total
		var qrStatisticsThroughputRawTotal int64

		if o.StatisticsThroughputRawTotalQueryParameter != nil {
			qrStatisticsThroughputRawTotal = *o.StatisticsThroughputRawTotalQueryParameter
		}
		qStatisticsThroughputRawTotal := swag.FormatInt64(qrStatisticsThroughputRawTotal)
		if qStatisticsThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.total", qStatisticsThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawWriteQueryParameter != nil {

		// query param statistics.throughput_raw.write
		var qrStatisticsThroughputRawWrite int64

		if o.StatisticsThroughputRawWriteQueryParameter != nil {
			qrStatisticsThroughputRawWrite = *o.StatisticsThroughputRawWriteQueryParameter
		}
		qStatisticsThroughputRawWrite := swag.FormatInt64(qrStatisticsThroughputRawWrite)
		if qStatisticsThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.write", qStatisticsThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsTimestampQueryParameter != nil {

		// query param statistics.timestamp
		var qrStatisticsTimestamp string

		if o.StatisticsTimestampQueryParameter != nil {
			qrStatisticsTimestamp = *o.StatisticsTimestampQueryParameter
		}
		qStatisticsTimestamp := qrStatisticsTimestamp
		if qStatisticsTimestamp != "" {

			if err := r.SetQueryParam("statistics.timestamp", qStatisticsTimestamp); err != nil {
				return err
			}
		}
	}

	if o.StatusQueryParameter != nil {

		// query param status
		var qrStatus string

		if o.StatusQueryParameter != nil {
			qrStatus = *o.StatusQueryParameter
		}
		qStatus := qrStatus
		if qStatus != "" {

			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}
	}

	if o.StyleQueryParameter != nil {

		// query param style
		var qrStyle string

		if o.StyleQueryParameter != nil {
			qrStyle = *o.StyleQueryParameter
		}
		qStyle := qrStyle
		if qStyle != "" {

			if err := r.SetQueryParam("style", qStyle); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.TieringMinCoolingDaysQueryParameter != nil {

		// query param tiering.min_cooling_days
		var qrTieringMinCoolingDays int64

		if o.TieringMinCoolingDaysQueryParameter != nil {
			qrTieringMinCoolingDays = *o.TieringMinCoolingDaysQueryParameter
		}
		qTieringMinCoolingDays := swag.FormatInt64(qrTieringMinCoolingDays)
		if qTieringMinCoolingDays != "" {

			if err := r.SetQueryParam("tiering.min_cooling_days", qTieringMinCoolingDays); err != nil {
				return err
			}
		}
	}

	if o.TieringObjectTagsQueryParameter != nil {

		// query param tiering.object_tags
		var qrTieringObjectTags string

		if o.TieringObjectTagsQueryParameter != nil {
			qrTieringObjectTags = *o.TieringObjectTagsQueryParameter
		}
		qTieringObjectTags := qrTieringObjectTags
		if qTieringObjectTags != "" {

			if err := r.SetQueryParam("tiering.object_tags", qTieringObjectTags); err != nil {
				return err
			}
		}
	}

	if o.TieringPolicyQueryParameter != nil {

		// query param tiering.policy
		var qrTieringPolicy string

		if o.TieringPolicyQueryParameter != nil {
			qrTieringPolicy = *o.TieringPolicyQueryParameter
		}
		qTieringPolicy := qrTieringPolicy
		if qTieringPolicy != "" {

			if err := r.SetQueryParam("tiering.policy", qTieringPolicy); err != nil {
				return err
			}
		}
	}

	if o.TypeQueryParameter != nil {

		// query param type
		var qrType string

		if o.TypeQueryParameter != nil {
			qrType = *o.TypeQueryParameter
		}
		qType := qrType
		if qType != "" {

			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamVolumeCollectionGet binds the parameter fields
func (o *VolumeCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamVolumeCollectionGet binds the parameter order_by
func (o *VolumeCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
