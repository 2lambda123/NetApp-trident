// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewFlexcacheOriginCollectionGetParams creates a new FlexcacheOriginCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFlexcacheOriginCollectionGetParams() *FlexcacheOriginCollectionGetParams {
	return &FlexcacheOriginCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFlexcacheOriginCollectionGetParamsWithTimeout creates a new FlexcacheOriginCollectionGetParams object
// with the ability to set a timeout on a request.
func NewFlexcacheOriginCollectionGetParamsWithTimeout(timeout time.Duration) *FlexcacheOriginCollectionGetParams {
	return &FlexcacheOriginCollectionGetParams{
		timeout: timeout,
	}
}

// NewFlexcacheOriginCollectionGetParamsWithContext creates a new FlexcacheOriginCollectionGetParams object
// with the ability to set a context for a request.
func NewFlexcacheOriginCollectionGetParamsWithContext(ctx context.Context) *FlexcacheOriginCollectionGetParams {
	return &FlexcacheOriginCollectionGetParams{
		Context: ctx,
	}
}

// NewFlexcacheOriginCollectionGetParamsWithHTTPClient creates a new FlexcacheOriginCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewFlexcacheOriginCollectionGetParamsWithHTTPClient(client *http.Client) *FlexcacheOriginCollectionGetParams {
	return &FlexcacheOriginCollectionGetParams{
		HTTPClient: client,
	}
}

/* FlexcacheOriginCollectionGetParams contains all the parameters to send to the API endpoint
   for the flexcache origin collection get operation.

   Typically these are written to a http.Request.
*/
type FlexcacheOriginCollectionGetParams struct {

	/* BlockLevelInvalidation.

	   Filter by block_level_invalidation
	*/
	BlockLevelInvalidationQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* FlexcachesClusterName.

	   Filter by flexcaches.cluster.name
	*/
	FlexcachesClusterNameQueryParameter *string

	/* FlexcachesClusterUUID.

	   Filter by flexcaches.cluster.uuid
	*/
	FlexcachesClusterUUIDQueryParameter *string

	/* FlexcachesCreateTime.

	   Filter by flexcaches.create_time
	*/
	FlexcachesCreateTimeQueryParameter *string

	/* FlexcachesIPAddress.

	   Filter by flexcaches.ip_address
	*/
	FlexcachesIPAddressQueryParameter *string

	/* FlexcachesSize.

	   Filter by flexcaches.size
	*/
	FlexcachesSizeQueryParameter *int64

	/* FlexcachesState.

	   Filter by flexcaches.state
	*/
	FlexcachesStateQueryParameter *string

	/* FlexcachesSvmName.

	   Filter by flexcaches.svm.name
	*/
	FlexcachesSVMNameQueryParameter *string

	/* FlexcachesSvmUUID.

	   Filter by flexcaches.svm.uuid
	*/
	FlexcachesSVMUUIDQueryParameter *string

	/* FlexcachesVolumeName.

	   Filter by flexcaches.volume.name
	*/
	FlexcachesVolumeNameQueryParameter *string

	/* FlexcachesVolumeUUID.

	   Filter by flexcaches.volume.uuid
	*/
	FlexcachesVolumeUUIDQueryParameter *string

	/* GlobalFileLockingEnabled.

	   Filter by global_file_locking_enabled
	*/
	GlobalFileLockingEnabledQueryParameter *bool

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the flexcache origin collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FlexcacheOriginCollectionGetParams) WithDefaults() *FlexcacheOriginCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the flexcache origin collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FlexcacheOriginCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := FlexcacheOriginCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithTimeout(timeout time.Duration) *FlexcacheOriginCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithContext(ctx context.Context) *FlexcacheOriginCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithHTTPClient(client *http.Client) *FlexcacheOriginCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBlockLevelInvalidationQueryParameter adds the blockLevelInvalidation to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithBlockLevelInvalidationQueryParameter(blockLevelInvalidation *bool) *FlexcacheOriginCollectionGetParams {
	o.SetBlockLevelInvalidationQueryParameter(blockLevelInvalidation)
	return o
}

// SetBlockLevelInvalidationQueryParameter adds the blockLevelInvalidation to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetBlockLevelInvalidationQueryParameter(blockLevelInvalidation *bool) {
	o.BlockLevelInvalidationQueryParameter = blockLevelInvalidation
}

// WithFieldsQueryParameter adds the fields to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFieldsQueryParameter(fields []string) *FlexcacheOriginCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithFlexcachesClusterNameQueryParameter adds the flexcachesClusterName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesClusterNameQueryParameter(flexcachesClusterName *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesClusterNameQueryParameter(flexcachesClusterName)
	return o
}

// SetFlexcachesClusterNameQueryParameter adds the flexcachesClusterName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesClusterNameQueryParameter(flexcachesClusterName *string) {
	o.FlexcachesClusterNameQueryParameter = flexcachesClusterName
}

// WithFlexcachesClusterUUIDQueryParameter adds the flexcachesClusterUUID to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesClusterUUIDQueryParameter(flexcachesClusterUUID *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesClusterUUIDQueryParameter(flexcachesClusterUUID)
	return o
}

// SetFlexcachesClusterUUIDQueryParameter adds the flexcachesClusterUuid to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesClusterUUIDQueryParameter(flexcachesClusterUUID *string) {
	o.FlexcachesClusterUUIDQueryParameter = flexcachesClusterUUID
}

// WithFlexcachesCreateTimeQueryParameter adds the flexcachesCreateTime to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesCreateTimeQueryParameter(flexcachesCreateTime *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesCreateTimeQueryParameter(flexcachesCreateTime)
	return o
}

// SetFlexcachesCreateTimeQueryParameter adds the flexcachesCreateTime to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesCreateTimeQueryParameter(flexcachesCreateTime *string) {
	o.FlexcachesCreateTimeQueryParameter = flexcachesCreateTime
}

// WithFlexcachesIPAddressQueryParameter adds the flexcachesIPAddress to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesIPAddressQueryParameter(flexcachesIPAddress *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesIPAddressQueryParameter(flexcachesIPAddress)
	return o
}

// SetFlexcachesIPAddressQueryParameter adds the flexcachesIpAddress to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesIPAddressQueryParameter(flexcachesIPAddress *string) {
	o.FlexcachesIPAddressQueryParameter = flexcachesIPAddress
}

// WithFlexcachesSizeQueryParameter adds the flexcachesSize to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesSizeQueryParameter(flexcachesSize *int64) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesSizeQueryParameter(flexcachesSize)
	return o
}

// SetFlexcachesSizeQueryParameter adds the flexcachesSize to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesSizeQueryParameter(flexcachesSize *int64) {
	o.FlexcachesSizeQueryParameter = flexcachesSize
}

// WithFlexcachesStateQueryParameter adds the flexcachesState to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesStateQueryParameter(flexcachesState *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesStateQueryParameter(flexcachesState)
	return o
}

// SetFlexcachesStateQueryParameter adds the flexcachesState to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesStateQueryParameter(flexcachesState *string) {
	o.FlexcachesStateQueryParameter = flexcachesState
}

// WithFlexcachesSVMNameQueryParameter adds the flexcachesSvmName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesSVMNameQueryParameter(flexcachesSvmName *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesSVMNameQueryParameter(flexcachesSvmName)
	return o
}

// SetFlexcachesSVMNameQueryParameter adds the flexcachesSvmName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesSVMNameQueryParameter(flexcachesSvmName *string) {
	o.FlexcachesSVMNameQueryParameter = flexcachesSvmName
}

// WithFlexcachesSVMUUIDQueryParameter adds the flexcachesSvmUUID to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesSVMUUIDQueryParameter(flexcachesSvmUUID *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesSVMUUIDQueryParameter(flexcachesSvmUUID)
	return o
}

// SetFlexcachesSVMUUIDQueryParameter adds the flexcachesSvmUuid to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesSVMUUIDQueryParameter(flexcachesSvmUUID *string) {
	o.FlexcachesSVMUUIDQueryParameter = flexcachesSvmUUID
}

// WithFlexcachesVolumeNameQueryParameter adds the flexcachesVolumeName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesVolumeNameQueryParameter(flexcachesVolumeName *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesVolumeNameQueryParameter(flexcachesVolumeName)
	return o
}

// SetFlexcachesVolumeNameQueryParameter adds the flexcachesVolumeName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesVolumeNameQueryParameter(flexcachesVolumeName *string) {
	o.FlexcachesVolumeNameQueryParameter = flexcachesVolumeName
}

// WithFlexcachesVolumeUUIDQueryParameter adds the flexcachesVolumeUUID to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithFlexcachesVolumeUUIDQueryParameter(flexcachesVolumeUUID *string) *FlexcacheOriginCollectionGetParams {
	o.SetFlexcachesVolumeUUIDQueryParameter(flexcachesVolumeUUID)
	return o
}

// SetFlexcachesVolumeUUIDQueryParameter adds the flexcachesVolumeUuid to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetFlexcachesVolumeUUIDQueryParameter(flexcachesVolumeUUID *string) {
	o.FlexcachesVolumeUUIDQueryParameter = flexcachesVolumeUUID
}

// WithGlobalFileLockingEnabledQueryParameter adds the globalFileLockingEnabled to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithGlobalFileLockingEnabledQueryParameter(globalFileLockingEnabled *bool) *FlexcacheOriginCollectionGetParams {
	o.SetGlobalFileLockingEnabledQueryParameter(globalFileLockingEnabled)
	return o
}

// SetGlobalFileLockingEnabledQueryParameter adds the globalFileLockingEnabled to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetGlobalFileLockingEnabledQueryParameter(globalFileLockingEnabled *bool) {
	o.GlobalFileLockingEnabledQueryParameter = globalFileLockingEnabled
}

// WithMaxRecordsQueryParameter adds the maxRecords to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *FlexcacheOriginCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithNameQueryParameter(name *string) *FlexcacheOriginCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *FlexcacheOriginCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithReturnRecordsQueryParameter adds the returnRecords to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *FlexcacheOriginCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *FlexcacheOriginCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSVMNameQueryParameter adds the svmName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *FlexcacheOriginCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *FlexcacheOriginCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUUIDQueryParameter adds the uuid to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) WithUUIDQueryParameter(uuid *string) *FlexcacheOriginCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the flexcache origin collection get params
func (o *FlexcacheOriginCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *FlexcacheOriginCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BlockLevelInvalidationQueryParameter != nil {

		// query param block_level_invalidation
		var qrBlockLevelInvalidation bool

		if o.BlockLevelInvalidationQueryParameter != nil {
			qrBlockLevelInvalidation = *o.BlockLevelInvalidationQueryParameter
		}
		qBlockLevelInvalidation := swag.FormatBool(qrBlockLevelInvalidation)
		if qBlockLevelInvalidation != "" {

			if err := r.SetQueryParam("block_level_invalidation", qBlockLevelInvalidation); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.FlexcachesClusterNameQueryParameter != nil {

		// query param flexcaches.cluster.name
		var qrFlexcachesClusterName string

		if o.FlexcachesClusterNameQueryParameter != nil {
			qrFlexcachesClusterName = *o.FlexcachesClusterNameQueryParameter
		}
		qFlexcachesClusterName := qrFlexcachesClusterName
		if qFlexcachesClusterName != "" {

			if err := r.SetQueryParam("flexcaches.cluster.name", qFlexcachesClusterName); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesClusterUUIDQueryParameter != nil {

		// query param flexcaches.cluster.uuid
		var qrFlexcachesClusterUUID string

		if o.FlexcachesClusterUUIDQueryParameter != nil {
			qrFlexcachesClusterUUID = *o.FlexcachesClusterUUIDQueryParameter
		}
		qFlexcachesClusterUUID := qrFlexcachesClusterUUID
		if qFlexcachesClusterUUID != "" {

			if err := r.SetQueryParam("flexcaches.cluster.uuid", qFlexcachesClusterUUID); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesCreateTimeQueryParameter != nil {

		// query param flexcaches.create_time
		var qrFlexcachesCreateTime string

		if o.FlexcachesCreateTimeQueryParameter != nil {
			qrFlexcachesCreateTime = *o.FlexcachesCreateTimeQueryParameter
		}
		qFlexcachesCreateTime := qrFlexcachesCreateTime
		if qFlexcachesCreateTime != "" {

			if err := r.SetQueryParam("flexcaches.create_time", qFlexcachesCreateTime); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesIPAddressQueryParameter != nil {

		// query param flexcaches.ip_address
		var qrFlexcachesIPAddress string

		if o.FlexcachesIPAddressQueryParameter != nil {
			qrFlexcachesIPAddress = *o.FlexcachesIPAddressQueryParameter
		}
		qFlexcachesIPAddress := qrFlexcachesIPAddress
		if qFlexcachesIPAddress != "" {

			if err := r.SetQueryParam("flexcaches.ip_address", qFlexcachesIPAddress); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesSizeQueryParameter != nil {

		// query param flexcaches.size
		var qrFlexcachesSize int64

		if o.FlexcachesSizeQueryParameter != nil {
			qrFlexcachesSize = *o.FlexcachesSizeQueryParameter
		}
		qFlexcachesSize := swag.FormatInt64(qrFlexcachesSize)
		if qFlexcachesSize != "" {

			if err := r.SetQueryParam("flexcaches.size", qFlexcachesSize); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesStateQueryParameter != nil {

		// query param flexcaches.state
		var qrFlexcachesState string

		if o.FlexcachesStateQueryParameter != nil {
			qrFlexcachesState = *o.FlexcachesStateQueryParameter
		}
		qFlexcachesState := qrFlexcachesState
		if qFlexcachesState != "" {

			if err := r.SetQueryParam("flexcaches.state", qFlexcachesState); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesSVMNameQueryParameter != nil {

		// query param flexcaches.svm.name
		var qrFlexcachesSvmName string

		if o.FlexcachesSVMNameQueryParameter != nil {
			qrFlexcachesSvmName = *o.FlexcachesSVMNameQueryParameter
		}
		qFlexcachesSvmName := qrFlexcachesSvmName
		if qFlexcachesSvmName != "" {

			if err := r.SetQueryParam("flexcaches.svm.name", qFlexcachesSvmName); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesSVMUUIDQueryParameter != nil {

		// query param flexcaches.svm.uuid
		var qrFlexcachesSvmUUID string

		if o.FlexcachesSVMUUIDQueryParameter != nil {
			qrFlexcachesSvmUUID = *o.FlexcachesSVMUUIDQueryParameter
		}
		qFlexcachesSvmUUID := qrFlexcachesSvmUUID
		if qFlexcachesSvmUUID != "" {

			if err := r.SetQueryParam("flexcaches.svm.uuid", qFlexcachesSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesVolumeNameQueryParameter != nil {

		// query param flexcaches.volume.name
		var qrFlexcachesVolumeName string

		if o.FlexcachesVolumeNameQueryParameter != nil {
			qrFlexcachesVolumeName = *o.FlexcachesVolumeNameQueryParameter
		}
		qFlexcachesVolumeName := qrFlexcachesVolumeName
		if qFlexcachesVolumeName != "" {

			if err := r.SetQueryParam("flexcaches.volume.name", qFlexcachesVolumeName); err != nil {
				return err
			}
		}
	}

	if o.FlexcachesVolumeUUIDQueryParameter != nil {

		// query param flexcaches.volume.uuid
		var qrFlexcachesVolumeUUID string

		if o.FlexcachesVolumeUUIDQueryParameter != nil {
			qrFlexcachesVolumeUUID = *o.FlexcachesVolumeUUIDQueryParameter
		}
		qFlexcachesVolumeUUID := qrFlexcachesVolumeUUID
		if qFlexcachesVolumeUUID != "" {

			if err := r.SetQueryParam("flexcaches.volume.uuid", qFlexcachesVolumeUUID); err != nil {
				return err
			}
		}
	}

	if o.GlobalFileLockingEnabledQueryParameter != nil {

		// query param global_file_locking_enabled
		var qrGlobalFileLockingEnabled bool

		if o.GlobalFileLockingEnabledQueryParameter != nil {
			qrGlobalFileLockingEnabled = *o.GlobalFileLockingEnabledQueryParameter
		}
		qGlobalFileLockingEnabled := swag.FormatBool(qrGlobalFileLockingEnabled)
		if qGlobalFileLockingEnabled != "" {

			if err := r.SetQueryParam("global_file_locking_enabled", qGlobalFileLockingEnabled); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamFlexcacheOriginCollectionGet binds the parameter fields
func (o *FlexcacheOriginCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamFlexcacheOriginCollectionGet binds the parameter order_by
func (o *FlexcacheOriginCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
