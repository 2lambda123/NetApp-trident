// Code generated by go-swagger; DO NOT EDIT.

package object_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewBucketsCollectionGetParams creates a new BucketsCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewBucketsCollectionGetParams() *BucketsCollectionGetParams {
	return &BucketsCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewBucketsCollectionGetParamsWithTimeout creates a new BucketsCollectionGetParams object
// with the ability to set a timeout on a request.
func NewBucketsCollectionGetParamsWithTimeout(timeout time.Duration) *BucketsCollectionGetParams {
	return &BucketsCollectionGetParams{
		timeout: timeout,
	}
}

// NewBucketsCollectionGetParamsWithContext creates a new BucketsCollectionGetParams object
// with the ability to set a context for a request.
func NewBucketsCollectionGetParamsWithContext(ctx context.Context) *BucketsCollectionGetParams {
	return &BucketsCollectionGetParams{
		Context: ctx,
	}
}

// NewBucketsCollectionGetParamsWithHTTPClient creates a new BucketsCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewBucketsCollectionGetParamsWithHTTPClient(client *http.Client) *BucketsCollectionGetParams {
	return &BucketsCollectionGetParams{
		HTTPClient: client,
	}
}

/* BucketsCollectionGetParams contains all the parameters to send to the API endpoint
   for the buckets collection get operation.

   Typically these are written to a http.Request.
*/
type BucketsCollectionGetParams struct {

	/* Comment.

	   Filter by comment
	*/
	CommentQueryParameter *string

	/* EncryptionEnabled.

	   Filter by encryption.enabled
	*/
	EncryptionEnabledQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* LogicalUsedSize.

	   Filter by logical_used_size
	*/
	LogicalUsedSizeQueryParameter *int64

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* PolicyStatementsActions.

	   Filter by policy.statements.actions
	*/
	PolicyStatementsActionsQueryParameter *string

	/* PolicyStatementsConditionsDelimiters.

	   Filter by policy.statements.conditions.delimiters
	*/
	PolicyStatementsConditionsDelimitersQueryParameter *string

	/* PolicyStatementsConditionsMaxKeys.

	   Filter by policy.statements.conditions.max_keys
	*/
	PolicyStatementsConditionsMaxKeysQueryParameter *int64

	/* PolicyStatementsConditionsOperator.

	   Filter by policy.statements.conditions.operator
	*/
	PolicyStatementsConditionsOperatorQueryParameter *string

	/* PolicyStatementsConditionsPrefixes.

	   Filter by policy.statements.conditions.prefixes
	*/
	PolicyStatementsConditionsPrefixesQueryParameter *string

	/* PolicyStatementsConditionsSourceIps.

	   Filter by policy.statements.conditions.source_ips
	*/
	PolicyStatementsConditionsSourceIPsQueryParameter *string

	/* PolicyStatementsConditionsUsernames.

	   Filter by policy.statements.conditions.usernames
	*/
	PolicyStatementsConditionsUsernamesQueryParameter *string

	/* PolicyStatementsEffect.

	   Filter by policy.statements.effect
	*/
	PolicyStatementsEffectQueryParameter *string

	/* PolicyStatementsPrincipals.

	   Filter by policy.statements.principals
	*/
	PolicyStatementsPrincipalsQueryParameter *string

	/* PolicyStatementsResources.

	   Filter by policy.statements.resources
	*/
	PolicyStatementsResourcesQueryParameter *string

	/* PolicyStatementsSid.

	   Filter by policy.statements.sid
	*/
	PolicyStatementsSIDQueryParameter *string

	/* ProtectionStatusDestinationIsCloud.

	   Filter by protection_status.destination.is_cloud
	*/
	ProtectionStatusDestinationIsCloudQueryParameter *bool

	/* ProtectionStatusDestinationIsOntap.

	   Filter by protection_status.destination.is_ontap
	*/
	ProtectionStatusDestinationIsOntapQueryParameter *bool

	/* ProtectionStatusIsProtected.

	   Filter by protection_status.is_protected
	*/
	ProtectionStatusIsProtectedQueryParameter *bool

	/* QosPolicyMaxThroughputIops.

	   Filter by qos_policy.max_throughput_iops
	*/
	QosPolicyMaxThroughputIopsQueryParameter *int64

	/* QosPolicyMaxThroughputMbps.

	   Filter by qos_policy.max_throughput_mbps
	*/
	QosPolicyMaxThroughputMbpsQueryParameter *int64

	/* QosPolicyMinThroughputIops.

	   Filter by qos_policy.min_throughput_iops
	*/
	QosPolicyMinThroughputIopsQueryParameter *int64

	/* QosPolicyMinThroughputMbps.

	   Filter by qos_policy.min_throughput_mbps
	*/
	QosPolicyMinThroughputMbpsQueryParameter *int64

	/* QosPolicyName.

	   Filter by qos_policy.name
	*/
	QosPolicyNameQueryParameter *string

	/* QosPolicyUUID.

	   Filter by qos_policy.uuid
	*/
	QosPolicyUUIDQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* Role.

	   Filter by role
	*/
	RoleQueryParameter *string

	/* Size.

	   Filter by size
	*/
	SizeQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   UUID of the SVM to which this object belongs.
	*/
	SVMUUIDPathParameter string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	/* VolumeName.

	   Filter by volume.name
	*/
	VolumeNameQueryParameter *string

	/* VolumeUUID.

	   Filter by volume.uuid
	*/
	VolumeUUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the buckets collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BucketsCollectionGetParams) WithDefaults() *BucketsCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the buckets collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BucketsCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := BucketsCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the buckets collection get params
func (o *BucketsCollectionGetParams) WithTimeout(timeout time.Duration) *BucketsCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the buckets collection get params
func (o *BucketsCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the buckets collection get params
func (o *BucketsCollectionGetParams) WithContext(ctx context.Context) *BucketsCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the buckets collection get params
func (o *BucketsCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the buckets collection get params
func (o *BucketsCollectionGetParams) WithHTTPClient(client *http.Client) *BucketsCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the buckets collection get params
func (o *BucketsCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCommentQueryParameter adds the comment to the buckets collection get params
func (o *BucketsCollectionGetParams) WithCommentQueryParameter(comment *string) *BucketsCollectionGetParams {
	o.SetCommentQueryParameter(comment)
	return o
}

// SetCommentQueryParameter adds the comment to the buckets collection get params
func (o *BucketsCollectionGetParams) SetCommentQueryParameter(comment *string) {
	o.CommentQueryParameter = comment
}

// WithEncryptionEnabledQueryParameter adds the encryptionEnabled to the buckets collection get params
func (o *BucketsCollectionGetParams) WithEncryptionEnabledQueryParameter(encryptionEnabled *bool) *BucketsCollectionGetParams {
	o.SetEncryptionEnabledQueryParameter(encryptionEnabled)
	return o
}

// SetEncryptionEnabledQueryParameter adds the encryptionEnabled to the buckets collection get params
func (o *BucketsCollectionGetParams) SetEncryptionEnabledQueryParameter(encryptionEnabled *bool) {
	o.EncryptionEnabledQueryParameter = encryptionEnabled
}

// WithFieldsQueryParameter adds the fields to the buckets collection get params
func (o *BucketsCollectionGetParams) WithFieldsQueryParameter(fields []string) *BucketsCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the buckets collection get params
func (o *BucketsCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithLogicalUsedSizeQueryParameter adds the logicalUsedSize to the buckets collection get params
func (o *BucketsCollectionGetParams) WithLogicalUsedSizeQueryParameter(logicalUsedSize *int64) *BucketsCollectionGetParams {
	o.SetLogicalUsedSizeQueryParameter(logicalUsedSize)
	return o
}

// SetLogicalUsedSizeQueryParameter adds the logicalUsedSize to the buckets collection get params
func (o *BucketsCollectionGetParams) SetLogicalUsedSizeQueryParameter(logicalUsedSize *int64) {
	o.LogicalUsedSizeQueryParameter = logicalUsedSize
}

// WithMaxRecordsQueryParameter adds the maxRecords to the buckets collection get params
func (o *BucketsCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *BucketsCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the buckets collection get params
func (o *BucketsCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the buckets collection get params
func (o *BucketsCollectionGetParams) WithNameQueryParameter(name *string) *BucketsCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the buckets collection get params
func (o *BucketsCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the buckets collection get params
func (o *BucketsCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *BucketsCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the buckets collection get params
func (o *BucketsCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPolicyStatementsActionsQueryParameter adds the policyStatementsActions to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsActionsQueryParameter(policyStatementsActions *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsActionsQueryParameter(policyStatementsActions)
	return o
}

// SetPolicyStatementsActionsQueryParameter adds the policyStatementsActions to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsActionsQueryParameter(policyStatementsActions *string) {
	o.PolicyStatementsActionsQueryParameter = policyStatementsActions
}

// WithPolicyStatementsConditionsDelimitersQueryParameter adds the policyStatementsConditionsDelimiters to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsConditionsDelimitersQueryParameter(policyStatementsConditionsDelimiters *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsConditionsDelimitersQueryParameter(policyStatementsConditionsDelimiters)
	return o
}

// SetPolicyStatementsConditionsDelimitersQueryParameter adds the policyStatementsConditionsDelimiters to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsConditionsDelimitersQueryParameter(policyStatementsConditionsDelimiters *string) {
	o.PolicyStatementsConditionsDelimitersQueryParameter = policyStatementsConditionsDelimiters
}

// WithPolicyStatementsConditionsMaxKeysQueryParameter adds the policyStatementsConditionsMaxKeys to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsConditionsMaxKeysQueryParameter(policyStatementsConditionsMaxKeys *int64) *BucketsCollectionGetParams {
	o.SetPolicyStatementsConditionsMaxKeysQueryParameter(policyStatementsConditionsMaxKeys)
	return o
}

// SetPolicyStatementsConditionsMaxKeysQueryParameter adds the policyStatementsConditionsMaxKeys to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsConditionsMaxKeysQueryParameter(policyStatementsConditionsMaxKeys *int64) {
	o.PolicyStatementsConditionsMaxKeysQueryParameter = policyStatementsConditionsMaxKeys
}

// WithPolicyStatementsConditionsOperatorQueryParameter adds the policyStatementsConditionsOperator to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsConditionsOperatorQueryParameter(policyStatementsConditionsOperator *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsConditionsOperatorQueryParameter(policyStatementsConditionsOperator)
	return o
}

// SetPolicyStatementsConditionsOperatorQueryParameter adds the policyStatementsConditionsOperator to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsConditionsOperatorQueryParameter(policyStatementsConditionsOperator *string) {
	o.PolicyStatementsConditionsOperatorQueryParameter = policyStatementsConditionsOperator
}

// WithPolicyStatementsConditionsPrefixesQueryParameter adds the policyStatementsConditionsPrefixes to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsConditionsPrefixesQueryParameter(policyStatementsConditionsPrefixes *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsConditionsPrefixesQueryParameter(policyStatementsConditionsPrefixes)
	return o
}

// SetPolicyStatementsConditionsPrefixesQueryParameter adds the policyStatementsConditionsPrefixes to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsConditionsPrefixesQueryParameter(policyStatementsConditionsPrefixes *string) {
	o.PolicyStatementsConditionsPrefixesQueryParameter = policyStatementsConditionsPrefixes
}

// WithPolicyStatementsConditionsSourceIPsQueryParameter adds the policyStatementsConditionsSourceIps to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsConditionsSourceIPsQueryParameter(policyStatementsConditionsSourceIps *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsConditionsSourceIPsQueryParameter(policyStatementsConditionsSourceIps)
	return o
}

// SetPolicyStatementsConditionsSourceIPsQueryParameter adds the policyStatementsConditionsSourceIps to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsConditionsSourceIPsQueryParameter(policyStatementsConditionsSourceIps *string) {
	o.PolicyStatementsConditionsSourceIPsQueryParameter = policyStatementsConditionsSourceIps
}

// WithPolicyStatementsConditionsUsernamesQueryParameter adds the policyStatementsConditionsUsernames to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsConditionsUsernamesQueryParameter(policyStatementsConditionsUsernames *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsConditionsUsernamesQueryParameter(policyStatementsConditionsUsernames)
	return o
}

// SetPolicyStatementsConditionsUsernamesQueryParameter adds the policyStatementsConditionsUsernames to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsConditionsUsernamesQueryParameter(policyStatementsConditionsUsernames *string) {
	o.PolicyStatementsConditionsUsernamesQueryParameter = policyStatementsConditionsUsernames
}

// WithPolicyStatementsEffectQueryParameter adds the policyStatementsEffect to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsEffectQueryParameter(policyStatementsEffect *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsEffectQueryParameter(policyStatementsEffect)
	return o
}

// SetPolicyStatementsEffectQueryParameter adds the policyStatementsEffect to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsEffectQueryParameter(policyStatementsEffect *string) {
	o.PolicyStatementsEffectQueryParameter = policyStatementsEffect
}

// WithPolicyStatementsPrincipalsQueryParameter adds the policyStatementsPrincipals to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsPrincipalsQueryParameter(policyStatementsPrincipals *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsPrincipalsQueryParameter(policyStatementsPrincipals)
	return o
}

// SetPolicyStatementsPrincipalsQueryParameter adds the policyStatementsPrincipals to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsPrincipalsQueryParameter(policyStatementsPrincipals *string) {
	o.PolicyStatementsPrincipalsQueryParameter = policyStatementsPrincipals
}

// WithPolicyStatementsResourcesQueryParameter adds the policyStatementsResources to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsResourcesQueryParameter(policyStatementsResources *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsResourcesQueryParameter(policyStatementsResources)
	return o
}

// SetPolicyStatementsResourcesQueryParameter adds the policyStatementsResources to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsResourcesQueryParameter(policyStatementsResources *string) {
	o.PolicyStatementsResourcesQueryParameter = policyStatementsResources
}

// WithPolicyStatementsSIDQueryParameter adds the policyStatementsSid to the buckets collection get params
func (o *BucketsCollectionGetParams) WithPolicyStatementsSIDQueryParameter(policyStatementsSid *string) *BucketsCollectionGetParams {
	o.SetPolicyStatementsSIDQueryParameter(policyStatementsSid)
	return o
}

// SetPolicyStatementsSIDQueryParameter adds the policyStatementsSid to the buckets collection get params
func (o *BucketsCollectionGetParams) SetPolicyStatementsSIDQueryParameter(policyStatementsSid *string) {
	o.PolicyStatementsSIDQueryParameter = policyStatementsSid
}

// WithProtectionStatusDestinationIsCloudQueryParameter adds the protectionStatusDestinationIsCloud to the buckets collection get params
func (o *BucketsCollectionGetParams) WithProtectionStatusDestinationIsCloudQueryParameter(protectionStatusDestinationIsCloud *bool) *BucketsCollectionGetParams {
	o.SetProtectionStatusDestinationIsCloudQueryParameter(protectionStatusDestinationIsCloud)
	return o
}

// SetProtectionStatusDestinationIsCloudQueryParameter adds the protectionStatusDestinationIsCloud to the buckets collection get params
func (o *BucketsCollectionGetParams) SetProtectionStatusDestinationIsCloudQueryParameter(protectionStatusDestinationIsCloud *bool) {
	o.ProtectionStatusDestinationIsCloudQueryParameter = protectionStatusDestinationIsCloud
}

// WithProtectionStatusDestinationIsOntapQueryParameter adds the protectionStatusDestinationIsOntap to the buckets collection get params
func (o *BucketsCollectionGetParams) WithProtectionStatusDestinationIsOntapQueryParameter(protectionStatusDestinationIsOntap *bool) *BucketsCollectionGetParams {
	o.SetProtectionStatusDestinationIsOntapQueryParameter(protectionStatusDestinationIsOntap)
	return o
}

// SetProtectionStatusDestinationIsOntapQueryParameter adds the protectionStatusDestinationIsOntap to the buckets collection get params
func (o *BucketsCollectionGetParams) SetProtectionStatusDestinationIsOntapQueryParameter(protectionStatusDestinationIsOntap *bool) {
	o.ProtectionStatusDestinationIsOntapQueryParameter = protectionStatusDestinationIsOntap
}

// WithProtectionStatusIsProtectedQueryParameter adds the protectionStatusIsProtected to the buckets collection get params
func (o *BucketsCollectionGetParams) WithProtectionStatusIsProtectedQueryParameter(protectionStatusIsProtected *bool) *BucketsCollectionGetParams {
	o.SetProtectionStatusIsProtectedQueryParameter(protectionStatusIsProtected)
	return o
}

// SetProtectionStatusIsProtectedQueryParameter adds the protectionStatusIsProtected to the buckets collection get params
func (o *BucketsCollectionGetParams) SetProtectionStatusIsProtectedQueryParameter(protectionStatusIsProtected *bool) {
	o.ProtectionStatusIsProtectedQueryParameter = protectionStatusIsProtected
}

// WithQosPolicyMaxThroughputIopsQueryParameter adds the qosPolicyMaxThroughputIops to the buckets collection get params
func (o *BucketsCollectionGetParams) WithQosPolicyMaxThroughputIopsQueryParameter(qosPolicyMaxThroughputIops *int64) *BucketsCollectionGetParams {
	o.SetQosPolicyMaxThroughputIopsQueryParameter(qosPolicyMaxThroughputIops)
	return o
}

// SetQosPolicyMaxThroughputIopsQueryParameter adds the qosPolicyMaxThroughputIops to the buckets collection get params
func (o *BucketsCollectionGetParams) SetQosPolicyMaxThroughputIopsQueryParameter(qosPolicyMaxThroughputIops *int64) {
	o.QosPolicyMaxThroughputIopsQueryParameter = qosPolicyMaxThroughputIops
}

// WithQosPolicyMaxThroughputMbpsQueryParameter adds the qosPolicyMaxThroughputMbps to the buckets collection get params
func (o *BucketsCollectionGetParams) WithQosPolicyMaxThroughputMbpsQueryParameter(qosPolicyMaxThroughputMbps *int64) *BucketsCollectionGetParams {
	o.SetQosPolicyMaxThroughputMbpsQueryParameter(qosPolicyMaxThroughputMbps)
	return o
}

// SetQosPolicyMaxThroughputMbpsQueryParameter adds the qosPolicyMaxThroughputMbps to the buckets collection get params
func (o *BucketsCollectionGetParams) SetQosPolicyMaxThroughputMbpsQueryParameter(qosPolicyMaxThroughputMbps *int64) {
	o.QosPolicyMaxThroughputMbpsQueryParameter = qosPolicyMaxThroughputMbps
}

// WithQosPolicyMinThroughputIopsQueryParameter adds the qosPolicyMinThroughputIops to the buckets collection get params
func (o *BucketsCollectionGetParams) WithQosPolicyMinThroughputIopsQueryParameter(qosPolicyMinThroughputIops *int64) *BucketsCollectionGetParams {
	o.SetQosPolicyMinThroughputIopsQueryParameter(qosPolicyMinThroughputIops)
	return o
}

// SetQosPolicyMinThroughputIopsQueryParameter adds the qosPolicyMinThroughputIops to the buckets collection get params
func (o *BucketsCollectionGetParams) SetQosPolicyMinThroughputIopsQueryParameter(qosPolicyMinThroughputIops *int64) {
	o.QosPolicyMinThroughputIopsQueryParameter = qosPolicyMinThroughputIops
}

// WithQosPolicyMinThroughputMbpsQueryParameter adds the qosPolicyMinThroughputMbps to the buckets collection get params
func (o *BucketsCollectionGetParams) WithQosPolicyMinThroughputMbpsQueryParameter(qosPolicyMinThroughputMbps *int64) *BucketsCollectionGetParams {
	o.SetQosPolicyMinThroughputMbpsQueryParameter(qosPolicyMinThroughputMbps)
	return o
}

// SetQosPolicyMinThroughputMbpsQueryParameter adds the qosPolicyMinThroughputMbps to the buckets collection get params
func (o *BucketsCollectionGetParams) SetQosPolicyMinThroughputMbpsQueryParameter(qosPolicyMinThroughputMbps *int64) {
	o.QosPolicyMinThroughputMbpsQueryParameter = qosPolicyMinThroughputMbps
}

// WithQosPolicyNameQueryParameter adds the qosPolicyName to the buckets collection get params
func (o *BucketsCollectionGetParams) WithQosPolicyNameQueryParameter(qosPolicyName *string) *BucketsCollectionGetParams {
	o.SetQosPolicyNameQueryParameter(qosPolicyName)
	return o
}

// SetQosPolicyNameQueryParameter adds the qosPolicyName to the buckets collection get params
func (o *BucketsCollectionGetParams) SetQosPolicyNameQueryParameter(qosPolicyName *string) {
	o.QosPolicyNameQueryParameter = qosPolicyName
}

// WithQosPolicyUUIDQueryParameter adds the qosPolicyUUID to the buckets collection get params
func (o *BucketsCollectionGetParams) WithQosPolicyUUIDQueryParameter(qosPolicyUUID *string) *BucketsCollectionGetParams {
	o.SetQosPolicyUUIDQueryParameter(qosPolicyUUID)
	return o
}

// SetQosPolicyUUIDQueryParameter adds the qosPolicyUuid to the buckets collection get params
func (o *BucketsCollectionGetParams) SetQosPolicyUUIDQueryParameter(qosPolicyUUID *string) {
	o.QosPolicyUUIDQueryParameter = qosPolicyUUID
}

// WithReturnRecordsQueryParameter adds the returnRecords to the buckets collection get params
func (o *BucketsCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *BucketsCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the buckets collection get params
func (o *BucketsCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the buckets collection get params
func (o *BucketsCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *BucketsCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the buckets collection get params
func (o *BucketsCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithRoleQueryParameter adds the role to the buckets collection get params
func (o *BucketsCollectionGetParams) WithRoleQueryParameter(role *string) *BucketsCollectionGetParams {
	o.SetRoleQueryParameter(role)
	return o
}

// SetRoleQueryParameter adds the role to the buckets collection get params
func (o *BucketsCollectionGetParams) SetRoleQueryParameter(role *string) {
	o.RoleQueryParameter = role
}

// WithSizeQueryParameter adds the size to the buckets collection get params
func (o *BucketsCollectionGetParams) WithSizeQueryParameter(size *int64) *BucketsCollectionGetParams {
	o.SetSizeQueryParameter(size)
	return o
}

// SetSizeQueryParameter adds the size to the buckets collection get params
func (o *BucketsCollectionGetParams) SetSizeQueryParameter(size *int64) {
	o.SizeQueryParameter = size
}

// WithSVMNameQueryParameter adds the svmName to the buckets collection get params
func (o *BucketsCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *BucketsCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the buckets collection get params
func (o *BucketsCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDPathParameter adds the svmUUID to the buckets collection get params
func (o *BucketsCollectionGetParams) WithSVMUUIDPathParameter(svmUUID string) *BucketsCollectionGetParams {
	o.SetSVMUUIDPathParameter(svmUUID)
	return o
}

// SetSVMUUIDPathParameter adds the svmUuid to the buckets collection get params
func (o *BucketsCollectionGetParams) SetSVMUUIDPathParameter(svmUUID string) {
	o.SVMUUIDPathParameter = svmUUID
}

// WithUUIDQueryParameter adds the uuid to the buckets collection get params
func (o *BucketsCollectionGetParams) WithUUIDQueryParameter(uuid *string) *BucketsCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the buckets collection get params
func (o *BucketsCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WithVolumeNameQueryParameter adds the volumeName to the buckets collection get params
func (o *BucketsCollectionGetParams) WithVolumeNameQueryParameter(volumeName *string) *BucketsCollectionGetParams {
	o.SetVolumeNameQueryParameter(volumeName)
	return o
}

// SetVolumeNameQueryParameter adds the volumeName to the buckets collection get params
func (o *BucketsCollectionGetParams) SetVolumeNameQueryParameter(volumeName *string) {
	o.VolumeNameQueryParameter = volumeName
}

// WithVolumeUUIDQueryParameter adds the volumeUUID to the buckets collection get params
func (o *BucketsCollectionGetParams) WithVolumeUUIDQueryParameter(volumeUUID *string) *BucketsCollectionGetParams {
	o.SetVolumeUUIDQueryParameter(volumeUUID)
	return o
}

// SetVolumeUUIDQueryParameter adds the volumeUuid to the buckets collection get params
func (o *BucketsCollectionGetParams) SetVolumeUUIDQueryParameter(volumeUUID *string) {
	o.VolumeUUIDQueryParameter = volumeUUID
}

// WriteToRequest writes these params to a swagger request
func (o *BucketsCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CommentQueryParameter != nil {

		// query param comment
		var qrComment string

		if o.CommentQueryParameter != nil {
			qrComment = *o.CommentQueryParameter
		}
		qComment := qrComment
		if qComment != "" {

			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}
	}

	if o.EncryptionEnabledQueryParameter != nil {

		// query param encryption.enabled
		var qrEncryptionEnabled bool

		if o.EncryptionEnabledQueryParameter != nil {
			qrEncryptionEnabled = *o.EncryptionEnabledQueryParameter
		}
		qEncryptionEnabled := swag.FormatBool(qrEncryptionEnabled)
		if qEncryptionEnabled != "" {

			if err := r.SetQueryParam("encryption.enabled", qEncryptionEnabled); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.LogicalUsedSizeQueryParameter != nil {

		// query param logical_used_size
		var qrLogicalUsedSize int64

		if o.LogicalUsedSizeQueryParameter != nil {
			qrLogicalUsedSize = *o.LogicalUsedSizeQueryParameter
		}
		qLogicalUsedSize := swag.FormatInt64(qrLogicalUsedSize)
		if qLogicalUsedSize != "" {

			if err := r.SetQueryParam("logical_used_size", qLogicalUsedSize); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PolicyStatementsActionsQueryParameter != nil {

		// query param policy.statements.actions
		var qrPolicyStatementsActions string

		if o.PolicyStatementsActionsQueryParameter != nil {
			qrPolicyStatementsActions = *o.PolicyStatementsActionsQueryParameter
		}
		qPolicyStatementsActions := qrPolicyStatementsActions
		if qPolicyStatementsActions != "" {

			if err := r.SetQueryParam("policy.statements.actions", qPolicyStatementsActions); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsConditionsDelimitersQueryParameter != nil {

		// query param policy.statements.conditions.delimiters
		var qrPolicyStatementsConditionsDelimiters string

		if o.PolicyStatementsConditionsDelimitersQueryParameter != nil {
			qrPolicyStatementsConditionsDelimiters = *o.PolicyStatementsConditionsDelimitersQueryParameter
		}
		qPolicyStatementsConditionsDelimiters := qrPolicyStatementsConditionsDelimiters
		if qPolicyStatementsConditionsDelimiters != "" {

			if err := r.SetQueryParam("policy.statements.conditions.delimiters", qPolicyStatementsConditionsDelimiters); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsConditionsMaxKeysQueryParameter != nil {

		// query param policy.statements.conditions.max_keys
		var qrPolicyStatementsConditionsMaxKeys int64

		if o.PolicyStatementsConditionsMaxKeysQueryParameter != nil {
			qrPolicyStatementsConditionsMaxKeys = *o.PolicyStatementsConditionsMaxKeysQueryParameter
		}
		qPolicyStatementsConditionsMaxKeys := swag.FormatInt64(qrPolicyStatementsConditionsMaxKeys)
		if qPolicyStatementsConditionsMaxKeys != "" {

			if err := r.SetQueryParam("policy.statements.conditions.max_keys", qPolicyStatementsConditionsMaxKeys); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsConditionsOperatorQueryParameter != nil {

		// query param policy.statements.conditions.operator
		var qrPolicyStatementsConditionsOperator string

		if o.PolicyStatementsConditionsOperatorQueryParameter != nil {
			qrPolicyStatementsConditionsOperator = *o.PolicyStatementsConditionsOperatorQueryParameter
		}
		qPolicyStatementsConditionsOperator := qrPolicyStatementsConditionsOperator
		if qPolicyStatementsConditionsOperator != "" {

			if err := r.SetQueryParam("policy.statements.conditions.operator", qPolicyStatementsConditionsOperator); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsConditionsPrefixesQueryParameter != nil {

		// query param policy.statements.conditions.prefixes
		var qrPolicyStatementsConditionsPrefixes string

		if o.PolicyStatementsConditionsPrefixesQueryParameter != nil {
			qrPolicyStatementsConditionsPrefixes = *o.PolicyStatementsConditionsPrefixesQueryParameter
		}
		qPolicyStatementsConditionsPrefixes := qrPolicyStatementsConditionsPrefixes
		if qPolicyStatementsConditionsPrefixes != "" {

			if err := r.SetQueryParam("policy.statements.conditions.prefixes", qPolicyStatementsConditionsPrefixes); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsConditionsSourceIPsQueryParameter != nil {

		// query param policy.statements.conditions.source_ips
		var qrPolicyStatementsConditionsSourceIps string

		if o.PolicyStatementsConditionsSourceIPsQueryParameter != nil {
			qrPolicyStatementsConditionsSourceIps = *o.PolicyStatementsConditionsSourceIPsQueryParameter
		}
		qPolicyStatementsConditionsSourceIps := qrPolicyStatementsConditionsSourceIps
		if qPolicyStatementsConditionsSourceIps != "" {

			if err := r.SetQueryParam("policy.statements.conditions.source_ips", qPolicyStatementsConditionsSourceIps); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsConditionsUsernamesQueryParameter != nil {

		// query param policy.statements.conditions.usernames
		var qrPolicyStatementsConditionsUsernames string

		if o.PolicyStatementsConditionsUsernamesQueryParameter != nil {
			qrPolicyStatementsConditionsUsernames = *o.PolicyStatementsConditionsUsernamesQueryParameter
		}
		qPolicyStatementsConditionsUsernames := qrPolicyStatementsConditionsUsernames
		if qPolicyStatementsConditionsUsernames != "" {

			if err := r.SetQueryParam("policy.statements.conditions.usernames", qPolicyStatementsConditionsUsernames); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsEffectQueryParameter != nil {

		// query param policy.statements.effect
		var qrPolicyStatementsEffect string

		if o.PolicyStatementsEffectQueryParameter != nil {
			qrPolicyStatementsEffect = *o.PolicyStatementsEffectQueryParameter
		}
		qPolicyStatementsEffect := qrPolicyStatementsEffect
		if qPolicyStatementsEffect != "" {

			if err := r.SetQueryParam("policy.statements.effect", qPolicyStatementsEffect); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsPrincipalsQueryParameter != nil {

		// query param policy.statements.principals
		var qrPolicyStatementsPrincipals string

		if o.PolicyStatementsPrincipalsQueryParameter != nil {
			qrPolicyStatementsPrincipals = *o.PolicyStatementsPrincipalsQueryParameter
		}
		qPolicyStatementsPrincipals := qrPolicyStatementsPrincipals
		if qPolicyStatementsPrincipals != "" {

			if err := r.SetQueryParam("policy.statements.principals", qPolicyStatementsPrincipals); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsResourcesQueryParameter != nil {

		// query param policy.statements.resources
		var qrPolicyStatementsResources string

		if o.PolicyStatementsResourcesQueryParameter != nil {
			qrPolicyStatementsResources = *o.PolicyStatementsResourcesQueryParameter
		}
		qPolicyStatementsResources := qrPolicyStatementsResources
		if qPolicyStatementsResources != "" {

			if err := r.SetQueryParam("policy.statements.resources", qPolicyStatementsResources); err != nil {
				return err
			}
		}
	}

	if o.PolicyStatementsSIDQueryParameter != nil {

		// query param policy.statements.sid
		var qrPolicyStatementsSid string

		if o.PolicyStatementsSIDQueryParameter != nil {
			qrPolicyStatementsSid = *o.PolicyStatementsSIDQueryParameter
		}
		qPolicyStatementsSid := qrPolicyStatementsSid
		if qPolicyStatementsSid != "" {

			if err := r.SetQueryParam("policy.statements.sid", qPolicyStatementsSid); err != nil {
				return err
			}
		}
	}

	if o.ProtectionStatusDestinationIsCloudQueryParameter != nil {

		// query param protection_status.destination.is_cloud
		var qrProtectionStatusDestinationIsCloud bool

		if o.ProtectionStatusDestinationIsCloudQueryParameter != nil {
			qrProtectionStatusDestinationIsCloud = *o.ProtectionStatusDestinationIsCloudQueryParameter
		}
		qProtectionStatusDestinationIsCloud := swag.FormatBool(qrProtectionStatusDestinationIsCloud)
		if qProtectionStatusDestinationIsCloud != "" {

			if err := r.SetQueryParam("protection_status.destination.is_cloud", qProtectionStatusDestinationIsCloud); err != nil {
				return err
			}
		}
	}

	if o.ProtectionStatusDestinationIsOntapQueryParameter != nil {

		// query param protection_status.destination.is_ontap
		var qrProtectionStatusDestinationIsOntap bool

		if o.ProtectionStatusDestinationIsOntapQueryParameter != nil {
			qrProtectionStatusDestinationIsOntap = *o.ProtectionStatusDestinationIsOntapQueryParameter
		}
		qProtectionStatusDestinationIsOntap := swag.FormatBool(qrProtectionStatusDestinationIsOntap)
		if qProtectionStatusDestinationIsOntap != "" {

			if err := r.SetQueryParam("protection_status.destination.is_ontap", qProtectionStatusDestinationIsOntap); err != nil {
				return err
			}
		}
	}

	if o.ProtectionStatusIsProtectedQueryParameter != nil {

		// query param protection_status.is_protected
		var qrProtectionStatusIsProtected bool

		if o.ProtectionStatusIsProtectedQueryParameter != nil {
			qrProtectionStatusIsProtected = *o.ProtectionStatusIsProtectedQueryParameter
		}
		qProtectionStatusIsProtected := swag.FormatBool(qrProtectionStatusIsProtected)
		if qProtectionStatusIsProtected != "" {

			if err := r.SetQueryParam("protection_status.is_protected", qProtectionStatusIsProtected); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyMaxThroughputIopsQueryParameter != nil {

		// query param qos_policy.max_throughput_iops
		var qrQosPolicyMaxThroughputIops int64

		if o.QosPolicyMaxThroughputIopsQueryParameter != nil {
			qrQosPolicyMaxThroughputIops = *o.QosPolicyMaxThroughputIopsQueryParameter
		}
		qQosPolicyMaxThroughputIops := swag.FormatInt64(qrQosPolicyMaxThroughputIops)
		if qQosPolicyMaxThroughputIops != "" {

			if err := r.SetQueryParam("qos_policy.max_throughput_iops", qQosPolicyMaxThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyMaxThroughputMbpsQueryParameter != nil {

		// query param qos_policy.max_throughput_mbps
		var qrQosPolicyMaxThroughputMbps int64

		if o.QosPolicyMaxThroughputMbpsQueryParameter != nil {
			qrQosPolicyMaxThroughputMbps = *o.QosPolicyMaxThroughputMbpsQueryParameter
		}
		qQosPolicyMaxThroughputMbps := swag.FormatInt64(qrQosPolicyMaxThroughputMbps)
		if qQosPolicyMaxThroughputMbps != "" {

			if err := r.SetQueryParam("qos_policy.max_throughput_mbps", qQosPolicyMaxThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyMinThroughputIopsQueryParameter != nil {

		// query param qos_policy.min_throughput_iops
		var qrQosPolicyMinThroughputIops int64

		if o.QosPolicyMinThroughputIopsQueryParameter != nil {
			qrQosPolicyMinThroughputIops = *o.QosPolicyMinThroughputIopsQueryParameter
		}
		qQosPolicyMinThroughputIops := swag.FormatInt64(qrQosPolicyMinThroughputIops)
		if qQosPolicyMinThroughputIops != "" {

			if err := r.SetQueryParam("qos_policy.min_throughput_iops", qQosPolicyMinThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyMinThroughputMbpsQueryParameter != nil {

		// query param qos_policy.min_throughput_mbps
		var qrQosPolicyMinThroughputMbps int64

		if o.QosPolicyMinThroughputMbpsQueryParameter != nil {
			qrQosPolicyMinThroughputMbps = *o.QosPolicyMinThroughputMbpsQueryParameter
		}
		qQosPolicyMinThroughputMbps := swag.FormatInt64(qrQosPolicyMinThroughputMbps)
		if qQosPolicyMinThroughputMbps != "" {

			if err := r.SetQueryParam("qos_policy.min_throughput_mbps", qQosPolicyMinThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyNameQueryParameter != nil {

		// query param qos_policy.name
		var qrQosPolicyName string

		if o.QosPolicyNameQueryParameter != nil {
			qrQosPolicyName = *o.QosPolicyNameQueryParameter
		}
		qQosPolicyName := qrQosPolicyName
		if qQosPolicyName != "" {

			if err := r.SetQueryParam("qos_policy.name", qQosPolicyName); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyUUIDQueryParameter != nil {

		// query param qos_policy.uuid
		var qrQosPolicyUUID string

		if o.QosPolicyUUIDQueryParameter != nil {
			qrQosPolicyUUID = *o.QosPolicyUUIDQueryParameter
		}
		qQosPolicyUUID := qrQosPolicyUUID
		if qQosPolicyUUID != "" {

			if err := r.SetQueryParam("qos_policy.uuid", qQosPolicyUUID); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.RoleQueryParameter != nil {

		// query param role
		var qrRole string

		if o.RoleQueryParameter != nil {
			qrRole = *o.RoleQueryParameter
		}
		qRole := qrRole
		if qRole != "" {

			if err := r.SetQueryParam("role", qRole); err != nil {
				return err
			}
		}
	}

	if o.SizeQueryParameter != nil {

		// query param size
		var qrSize int64

		if o.SizeQueryParameter != nil {
			qrSize = *o.SizeQueryParameter
		}
		qSize := swag.FormatInt64(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	// path param svm.uuid
	if err := r.SetPathParam("svm.uuid", o.SVMUUIDPathParameter); err != nil {
		return err
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if o.VolumeNameQueryParameter != nil {

		// query param volume.name
		var qrVolumeName string

		if o.VolumeNameQueryParameter != nil {
			qrVolumeName = *o.VolumeNameQueryParameter
		}
		qVolumeName := qrVolumeName
		if qVolumeName != "" {

			if err := r.SetQueryParam("volume.name", qVolumeName); err != nil {
				return err
			}
		}
	}

	if o.VolumeUUIDQueryParameter != nil {

		// query param volume.uuid
		var qrVolumeUUID string

		if o.VolumeUUIDQueryParameter != nil {
			qrVolumeUUID = *o.VolumeUUIDQueryParameter
		}
		qVolumeUUID := qrVolumeUUID
		if qVolumeUUID != "" {

			if err := r.SetQueryParam("volume.uuid", qVolumeUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamBucketsCollectionGet binds the parameter fields
func (o *BucketsCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamBucketsCollectionGet binds the parameter order_by
func (o *BucketsCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
