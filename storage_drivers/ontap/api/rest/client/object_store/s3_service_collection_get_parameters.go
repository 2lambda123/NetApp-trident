// Code generated by go-swagger; DO NOT EDIT.

package object_store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewS3ServiceCollectionGetParams creates a new S3ServiceCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewS3ServiceCollectionGetParams() *S3ServiceCollectionGetParams {
	return &S3ServiceCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewS3ServiceCollectionGetParamsWithTimeout creates a new S3ServiceCollectionGetParams object
// with the ability to set a timeout on a request.
func NewS3ServiceCollectionGetParamsWithTimeout(timeout time.Duration) *S3ServiceCollectionGetParams {
	return &S3ServiceCollectionGetParams{
		timeout: timeout,
	}
}

// NewS3ServiceCollectionGetParamsWithContext creates a new S3ServiceCollectionGetParams object
// with the ability to set a context for a request.
func NewS3ServiceCollectionGetParamsWithContext(ctx context.Context) *S3ServiceCollectionGetParams {
	return &S3ServiceCollectionGetParams{
		Context: ctx,
	}
}

// NewS3ServiceCollectionGetParamsWithHTTPClient creates a new S3ServiceCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewS3ServiceCollectionGetParamsWithHTTPClient(client *http.Client) *S3ServiceCollectionGetParams {
	return &S3ServiceCollectionGetParams{
		HTTPClient: client,
	}
}

/* S3ServiceCollectionGetParams contains all the parameters to send to the API endpoint
   for the s3 service collection get operation.

   Typically these are written to a http.Request.
*/
type S3ServiceCollectionGetParams struct {

	/* BucketsComment.

	   Filter by buckets.comment
	*/
	BucketsCommentQueryParameter *string

	/* BucketsEncryptionEnabled.

	   Filter by buckets.encryption.enabled
	*/
	BucketsEncryptionEnabledQueryParameter *bool

	/* BucketsLogicalUsedSize.

	   Filter by buckets.logical_used_size
	*/
	BucketsLogicalUsedSizeQueryParameter *int64

	/* BucketsName.

	   Filter by buckets.name
	*/
	BucketsNameQueryParameter *string

	/* BucketsPolicyStatementsActions.

	   Filter by buckets.policy.statements.actions
	*/
	BucketsPolicyStatementsActionsQueryParameter *string

	/* BucketsPolicyStatementsConditionsDelimiters.

	   Filter by buckets.policy.statements.conditions.delimiters
	*/
	BucketsPolicyStatementsConditionsDelimitersQueryParameter *string

	/* BucketsPolicyStatementsConditionsMaxKeys.

	   Filter by buckets.policy.statements.conditions.max_keys
	*/
	BucketsPolicyStatementsConditionsMaxKeysQueryParameter *int64

	/* BucketsPolicyStatementsConditionsOperator.

	   Filter by buckets.policy.statements.conditions.operator
	*/
	BucketsPolicyStatementsConditionsOperatorQueryParameter *string

	/* BucketsPolicyStatementsConditionsPrefixes.

	   Filter by buckets.policy.statements.conditions.prefixes
	*/
	BucketsPolicyStatementsConditionsPrefixesQueryParameter *string

	/* BucketsPolicyStatementsConditionsSourceIps.

	   Filter by buckets.policy.statements.conditions.source_ips
	*/
	BucketsPolicyStatementsConditionsSourceIPsQueryParameter *string

	/* BucketsPolicyStatementsConditionsUsernames.

	   Filter by buckets.policy.statements.conditions.usernames
	*/
	BucketsPolicyStatementsConditionsUsernamesQueryParameter *string

	/* BucketsPolicyStatementsEffect.

	   Filter by buckets.policy.statements.effect
	*/
	BucketsPolicyStatementsEffectQueryParameter *string

	/* BucketsPolicyStatementsPrincipals.

	   Filter by buckets.policy.statements.principals
	*/
	BucketsPolicyStatementsPrincipalsQueryParameter *string

	/* BucketsPolicyStatementsResources.

	   Filter by buckets.policy.statements.resources
	*/
	BucketsPolicyStatementsResourcesQueryParameter *string

	/* BucketsPolicyStatementsSid.

	   Filter by buckets.policy.statements.sid
	*/
	BucketsPolicyStatementsSIDQueryParameter *string

	/* BucketsProtectionStatusDestinationIsCloud.

	   Filter by buckets.protection_status.destination.is_cloud
	*/
	BucketsProtectionStatusDestinationIsCloudQueryParameter *bool

	/* BucketsProtectionStatusDestinationIsOntap.

	   Filter by buckets.protection_status.destination.is_ontap
	*/
	BucketsProtectionStatusDestinationIsOntapQueryParameter *bool

	/* BucketsProtectionStatusIsProtected.

	   Filter by buckets.protection_status.is_protected
	*/
	BucketsProtectionStatusIsProtectedQueryParameter *bool

	/* BucketsQosPolicyMaxThroughputIops.

	   Filter by buckets.qos_policy.max_throughput_iops
	*/
	BucketsQosPolicyMaxThroughputIopsQueryParameter *int64

	/* BucketsQosPolicyMaxThroughputMbps.

	   Filter by buckets.qos_policy.max_throughput_mbps
	*/
	BucketsQosPolicyMaxThroughputMbpsQueryParameter *int64

	/* BucketsQosPolicyMinThroughputIops.

	   Filter by buckets.qos_policy.min_throughput_iops
	*/
	BucketsQosPolicyMinThroughputIopsQueryParameter *int64

	/* BucketsQosPolicyMinThroughputMbps.

	   Filter by buckets.qos_policy.min_throughput_mbps
	*/
	BucketsQosPolicyMinThroughputMbpsQueryParameter *int64

	/* BucketsQosPolicyName.

	   Filter by buckets.qos_policy.name
	*/
	BucketsQosPolicyNameQueryParameter *string

	/* BucketsQosPolicyUUID.

	   Filter by buckets.qos_policy.uuid
	*/
	BucketsQosPolicyUUIDQueryParameter *string

	/* BucketsRole.

	   Filter by buckets.role
	*/
	BucketsRoleQueryParameter *string

	/* BucketsSize.

	   Filter by buckets.size
	*/
	BucketsSizeQueryParameter *int64

	/* BucketsSvmName.

	   Filter by buckets.svm.name
	*/
	BucketsSVMNameQueryParameter *string

	/* BucketsSvmUUID.

	   Filter by buckets.svm.uuid
	*/
	BucketsSVMUUIDQueryParameter *string

	/* BucketsUUID.

	   Filter by buckets.uuid
	*/
	BucketsUUIDQueryParameter *string

	/* BucketsVolumeName.

	   Filter by buckets.volume.name
	*/
	BucketsVolumeNameQueryParameter *string

	/* BucketsVolumeUUID.

	   Filter by buckets.volume.uuid
	*/
	BucketsVolumeUUIDQueryParameter *string

	/* CertificateName.

	   Filter by certificate.name
	*/
	CertificateNameQueryParameter *string

	/* CertificateUUID.

	   Filter by certificate.uuid
	*/
	CertificateUUIDQueryParameter *string

	/* Comment.

	   Filter by comment
	*/
	CommentQueryParameter *string

	/* Enabled.

	   Filter by enabled
	*/
	EnabledQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* IsHTTPEnabled.

	   Filter by is_http_enabled
	*/
	IsHTTPEnabledQueryParameter *bool

	/* IsHTTPSEnabled.

	   Filter by is_https_enabled
	*/
	IsHTTPsEnabledQueryParameter *bool

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* MetricDuration.

	   Filter by metric.duration
	*/
	MetricDurationQueryParameter *string

	/* MetricIopsOther.

	   Filter by metric.iops.other
	*/
	MetricIopsOtherQueryParameter *int64

	/* MetricIopsRead.

	   Filter by metric.iops.read
	*/
	MetricIopsReadQueryParameter *int64

	/* MetricIopsTotal.

	   Filter by metric.iops.total
	*/
	MetricIopsTotalQueryParameter *int64

	/* MetricIopsWrite.

	   Filter by metric.iops.write
	*/
	MetricIopsWriteQueryParameter *int64

	/* MetricLatencyOther.

	   Filter by metric.latency.other
	*/
	MetricLatencyOtherQueryParameter *int64

	/* MetricLatencyRead.

	   Filter by metric.latency.read
	*/
	MetricLatencyReadQueryParameter *int64

	/* MetricLatencyTotal.

	   Filter by metric.latency.total
	*/
	MetricLatencyTotalQueryParameter *int64

	/* MetricLatencyWrite.

	   Filter by metric.latency.write
	*/
	MetricLatencyWriteQueryParameter *int64

	/* MetricStatus.

	   Filter by metric.status
	*/
	MetricStatusQueryParameter *string

	/* MetricThroughputRead.

	   Filter by metric.throughput.read
	*/
	MetricThroughputReadQueryParameter *int64

	/* MetricThroughputTotal.

	   Filter by metric.throughput.total
	*/
	MetricThroughputTotalQueryParameter *int64

	/* MetricThroughputWrite.

	   Filter by metric.throughput.write
	*/
	MetricThroughputWriteQueryParameter *int64

	/* MetricTimestamp.

	   Filter by metric.timestamp
	*/
	MetricTimestampQueryParameter *string

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* Port.

	   Filter by port
	*/
	PortQueryParameter *int64

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SecurePort.

	   Filter by secure_port
	*/
	SecurePortQueryParameter *int64

	/* StatisticsIopsRawOther.

	   Filter by statistics.iops_raw.other
	*/
	StatisticsIopsRawOtherQueryParameter *int64

	/* StatisticsIopsRawRead.

	   Filter by statistics.iops_raw.read
	*/
	StatisticsIopsRawReadQueryParameter *int64

	/* StatisticsIopsRawTotal.

	   Filter by statistics.iops_raw.total
	*/
	StatisticsIopsRawTotalQueryParameter *int64

	/* StatisticsIopsRawWrite.

	   Filter by statistics.iops_raw.write
	*/
	StatisticsIopsRawWriteQueryParameter *int64

	/* StatisticsLatencyRawOther.

	   Filter by statistics.latency_raw.other
	*/
	StatisticsLatencyRawOtherQueryParameter *int64

	/* StatisticsLatencyRawRead.

	   Filter by statistics.latency_raw.read
	*/
	StatisticsLatencyRawReadQueryParameter *int64

	/* StatisticsLatencyRawTotal.

	   Filter by statistics.latency_raw.total
	*/
	StatisticsLatencyRawTotalQueryParameter *int64

	/* StatisticsLatencyRawWrite.

	   Filter by statistics.latency_raw.write
	*/
	StatisticsLatencyRawWriteQueryParameter *int64

	/* StatisticsStatus.

	   Filter by statistics.status
	*/
	StatisticsStatusQueryParameter *string

	/* StatisticsThroughputRawRead.

	   Filter by statistics.throughput_raw.read
	*/
	StatisticsThroughputRawReadQueryParameter *int64

	/* StatisticsThroughputRawTotal.

	   Filter by statistics.throughput_raw.total
	*/
	StatisticsThroughputRawTotalQueryParameter *int64

	/* StatisticsThroughputRawWrite.

	   Filter by statistics.throughput_raw.write
	*/
	StatisticsThroughputRawWriteQueryParameter *int64

	/* StatisticsTimestamp.

	   Filter by statistics.timestamp
	*/
	StatisticsTimestampQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UsersAccessKey.

	   Filter by users.access_key
	*/
	UsersAccessKeyQueryParameter *string

	/* UsersComment.

	   Filter by users.comment
	*/
	UsersCommentQueryParameter *string

	/* UsersName.

	   Filter by users.name
	*/
	UsersNameQueryParameter *string

	/* UsersSvmName.

	   Filter by users.svm.name
	*/
	UsersSVMNameQueryParameter *string

	/* UsersSvmUUID.

	   Filter by users.svm.uuid
	*/
	UsersSVMUUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the s3 service collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *S3ServiceCollectionGetParams) WithDefaults() *S3ServiceCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the s3 service collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *S3ServiceCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := S3ServiceCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithTimeout(timeout time.Duration) *S3ServiceCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithContext(ctx context.Context) *S3ServiceCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithHTTPClient(client *http.Client) *S3ServiceCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBucketsCommentQueryParameter adds the bucketsComment to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsCommentQueryParameter(bucketsComment *string) *S3ServiceCollectionGetParams {
	o.SetBucketsCommentQueryParameter(bucketsComment)
	return o
}

// SetBucketsCommentQueryParameter adds the bucketsComment to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsCommentQueryParameter(bucketsComment *string) {
	o.BucketsCommentQueryParameter = bucketsComment
}

// WithBucketsEncryptionEnabledQueryParameter adds the bucketsEncryptionEnabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsEncryptionEnabledQueryParameter(bucketsEncryptionEnabled *bool) *S3ServiceCollectionGetParams {
	o.SetBucketsEncryptionEnabledQueryParameter(bucketsEncryptionEnabled)
	return o
}

// SetBucketsEncryptionEnabledQueryParameter adds the bucketsEncryptionEnabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsEncryptionEnabledQueryParameter(bucketsEncryptionEnabled *bool) {
	o.BucketsEncryptionEnabledQueryParameter = bucketsEncryptionEnabled
}

// WithBucketsLogicalUsedSizeQueryParameter adds the bucketsLogicalUsedSize to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsLogicalUsedSizeQueryParameter(bucketsLogicalUsedSize *int64) *S3ServiceCollectionGetParams {
	o.SetBucketsLogicalUsedSizeQueryParameter(bucketsLogicalUsedSize)
	return o
}

// SetBucketsLogicalUsedSizeQueryParameter adds the bucketsLogicalUsedSize to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsLogicalUsedSizeQueryParameter(bucketsLogicalUsedSize *int64) {
	o.BucketsLogicalUsedSizeQueryParameter = bucketsLogicalUsedSize
}

// WithBucketsNameQueryParameter adds the bucketsName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsNameQueryParameter(bucketsName *string) *S3ServiceCollectionGetParams {
	o.SetBucketsNameQueryParameter(bucketsName)
	return o
}

// SetBucketsNameQueryParameter adds the bucketsName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsNameQueryParameter(bucketsName *string) {
	o.BucketsNameQueryParameter = bucketsName
}

// WithBucketsPolicyStatementsActionsQueryParameter adds the bucketsPolicyStatementsActions to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsActionsQueryParameter(bucketsPolicyStatementsActions *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsActionsQueryParameter(bucketsPolicyStatementsActions)
	return o
}

// SetBucketsPolicyStatementsActionsQueryParameter adds the bucketsPolicyStatementsActions to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsActionsQueryParameter(bucketsPolicyStatementsActions *string) {
	o.BucketsPolicyStatementsActionsQueryParameter = bucketsPolicyStatementsActions
}

// WithBucketsPolicyStatementsConditionsDelimitersQueryParameter adds the bucketsPolicyStatementsConditionsDelimiters to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsConditionsDelimitersQueryParameter(bucketsPolicyStatementsConditionsDelimiters *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsConditionsDelimitersQueryParameter(bucketsPolicyStatementsConditionsDelimiters)
	return o
}

// SetBucketsPolicyStatementsConditionsDelimitersQueryParameter adds the bucketsPolicyStatementsConditionsDelimiters to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsConditionsDelimitersQueryParameter(bucketsPolicyStatementsConditionsDelimiters *string) {
	o.BucketsPolicyStatementsConditionsDelimitersQueryParameter = bucketsPolicyStatementsConditionsDelimiters
}

// WithBucketsPolicyStatementsConditionsMaxKeysQueryParameter adds the bucketsPolicyStatementsConditionsMaxKeys to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsConditionsMaxKeysQueryParameter(bucketsPolicyStatementsConditionsMaxKeys *int64) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsConditionsMaxKeysQueryParameter(bucketsPolicyStatementsConditionsMaxKeys)
	return o
}

// SetBucketsPolicyStatementsConditionsMaxKeysQueryParameter adds the bucketsPolicyStatementsConditionsMaxKeys to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsConditionsMaxKeysQueryParameter(bucketsPolicyStatementsConditionsMaxKeys *int64) {
	o.BucketsPolicyStatementsConditionsMaxKeysQueryParameter = bucketsPolicyStatementsConditionsMaxKeys
}

// WithBucketsPolicyStatementsConditionsOperatorQueryParameter adds the bucketsPolicyStatementsConditionsOperator to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsConditionsOperatorQueryParameter(bucketsPolicyStatementsConditionsOperator *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsConditionsOperatorQueryParameter(bucketsPolicyStatementsConditionsOperator)
	return o
}

// SetBucketsPolicyStatementsConditionsOperatorQueryParameter adds the bucketsPolicyStatementsConditionsOperator to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsConditionsOperatorQueryParameter(bucketsPolicyStatementsConditionsOperator *string) {
	o.BucketsPolicyStatementsConditionsOperatorQueryParameter = bucketsPolicyStatementsConditionsOperator
}

// WithBucketsPolicyStatementsConditionsPrefixesQueryParameter adds the bucketsPolicyStatementsConditionsPrefixes to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsConditionsPrefixesQueryParameter(bucketsPolicyStatementsConditionsPrefixes *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsConditionsPrefixesQueryParameter(bucketsPolicyStatementsConditionsPrefixes)
	return o
}

// SetBucketsPolicyStatementsConditionsPrefixesQueryParameter adds the bucketsPolicyStatementsConditionsPrefixes to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsConditionsPrefixesQueryParameter(bucketsPolicyStatementsConditionsPrefixes *string) {
	o.BucketsPolicyStatementsConditionsPrefixesQueryParameter = bucketsPolicyStatementsConditionsPrefixes
}

// WithBucketsPolicyStatementsConditionsSourceIPsQueryParameter adds the bucketsPolicyStatementsConditionsSourceIps to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsConditionsSourceIPsQueryParameter(bucketsPolicyStatementsConditionsSourceIps *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsConditionsSourceIPsQueryParameter(bucketsPolicyStatementsConditionsSourceIps)
	return o
}

// SetBucketsPolicyStatementsConditionsSourceIPsQueryParameter adds the bucketsPolicyStatementsConditionsSourceIps to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsConditionsSourceIPsQueryParameter(bucketsPolicyStatementsConditionsSourceIps *string) {
	o.BucketsPolicyStatementsConditionsSourceIPsQueryParameter = bucketsPolicyStatementsConditionsSourceIps
}

// WithBucketsPolicyStatementsConditionsUsernamesQueryParameter adds the bucketsPolicyStatementsConditionsUsernames to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsConditionsUsernamesQueryParameter(bucketsPolicyStatementsConditionsUsernames *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsConditionsUsernamesQueryParameter(bucketsPolicyStatementsConditionsUsernames)
	return o
}

// SetBucketsPolicyStatementsConditionsUsernamesQueryParameter adds the bucketsPolicyStatementsConditionsUsernames to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsConditionsUsernamesQueryParameter(bucketsPolicyStatementsConditionsUsernames *string) {
	o.BucketsPolicyStatementsConditionsUsernamesQueryParameter = bucketsPolicyStatementsConditionsUsernames
}

// WithBucketsPolicyStatementsEffectQueryParameter adds the bucketsPolicyStatementsEffect to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsEffectQueryParameter(bucketsPolicyStatementsEffect *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsEffectQueryParameter(bucketsPolicyStatementsEffect)
	return o
}

// SetBucketsPolicyStatementsEffectQueryParameter adds the bucketsPolicyStatementsEffect to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsEffectQueryParameter(bucketsPolicyStatementsEffect *string) {
	o.BucketsPolicyStatementsEffectQueryParameter = bucketsPolicyStatementsEffect
}

// WithBucketsPolicyStatementsPrincipalsQueryParameter adds the bucketsPolicyStatementsPrincipals to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsPrincipalsQueryParameter(bucketsPolicyStatementsPrincipals *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsPrincipalsQueryParameter(bucketsPolicyStatementsPrincipals)
	return o
}

// SetBucketsPolicyStatementsPrincipalsQueryParameter adds the bucketsPolicyStatementsPrincipals to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsPrincipalsQueryParameter(bucketsPolicyStatementsPrincipals *string) {
	o.BucketsPolicyStatementsPrincipalsQueryParameter = bucketsPolicyStatementsPrincipals
}

// WithBucketsPolicyStatementsResourcesQueryParameter adds the bucketsPolicyStatementsResources to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsResourcesQueryParameter(bucketsPolicyStatementsResources *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsResourcesQueryParameter(bucketsPolicyStatementsResources)
	return o
}

// SetBucketsPolicyStatementsResourcesQueryParameter adds the bucketsPolicyStatementsResources to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsResourcesQueryParameter(bucketsPolicyStatementsResources *string) {
	o.BucketsPolicyStatementsResourcesQueryParameter = bucketsPolicyStatementsResources
}

// WithBucketsPolicyStatementsSIDQueryParameter adds the bucketsPolicyStatementsSid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsPolicyStatementsSIDQueryParameter(bucketsPolicyStatementsSid *string) *S3ServiceCollectionGetParams {
	o.SetBucketsPolicyStatementsSIDQueryParameter(bucketsPolicyStatementsSid)
	return o
}

// SetBucketsPolicyStatementsSIDQueryParameter adds the bucketsPolicyStatementsSid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsPolicyStatementsSIDQueryParameter(bucketsPolicyStatementsSid *string) {
	o.BucketsPolicyStatementsSIDQueryParameter = bucketsPolicyStatementsSid
}

// WithBucketsProtectionStatusDestinationIsCloudQueryParameter adds the bucketsProtectionStatusDestinationIsCloud to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsProtectionStatusDestinationIsCloudQueryParameter(bucketsProtectionStatusDestinationIsCloud *bool) *S3ServiceCollectionGetParams {
	o.SetBucketsProtectionStatusDestinationIsCloudQueryParameter(bucketsProtectionStatusDestinationIsCloud)
	return o
}

// SetBucketsProtectionStatusDestinationIsCloudQueryParameter adds the bucketsProtectionStatusDestinationIsCloud to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsProtectionStatusDestinationIsCloudQueryParameter(bucketsProtectionStatusDestinationIsCloud *bool) {
	o.BucketsProtectionStatusDestinationIsCloudQueryParameter = bucketsProtectionStatusDestinationIsCloud
}

// WithBucketsProtectionStatusDestinationIsOntapQueryParameter adds the bucketsProtectionStatusDestinationIsOntap to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsProtectionStatusDestinationIsOntapQueryParameter(bucketsProtectionStatusDestinationIsOntap *bool) *S3ServiceCollectionGetParams {
	o.SetBucketsProtectionStatusDestinationIsOntapQueryParameter(bucketsProtectionStatusDestinationIsOntap)
	return o
}

// SetBucketsProtectionStatusDestinationIsOntapQueryParameter adds the bucketsProtectionStatusDestinationIsOntap to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsProtectionStatusDestinationIsOntapQueryParameter(bucketsProtectionStatusDestinationIsOntap *bool) {
	o.BucketsProtectionStatusDestinationIsOntapQueryParameter = bucketsProtectionStatusDestinationIsOntap
}

// WithBucketsProtectionStatusIsProtectedQueryParameter adds the bucketsProtectionStatusIsProtected to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsProtectionStatusIsProtectedQueryParameter(bucketsProtectionStatusIsProtected *bool) *S3ServiceCollectionGetParams {
	o.SetBucketsProtectionStatusIsProtectedQueryParameter(bucketsProtectionStatusIsProtected)
	return o
}

// SetBucketsProtectionStatusIsProtectedQueryParameter adds the bucketsProtectionStatusIsProtected to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsProtectionStatusIsProtectedQueryParameter(bucketsProtectionStatusIsProtected *bool) {
	o.BucketsProtectionStatusIsProtectedQueryParameter = bucketsProtectionStatusIsProtected
}

// WithBucketsQosPolicyMaxThroughputIopsQueryParameter adds the bucketsQosPolicyMaxThroughputIops to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsQosPolicyMaxThroughputIopsQueryParameter(bucketsQosPolicyMaxThroughputIops *int64) *S3ServiceCollectionGetParams {
	o.SetBucketsQosPolicyMaxThroughputIopsQueryParameter(bucketsQosPolicyMaxThroughputIops)
	return o
}

// SetBucketsQosPolicyMaxThroughputIopsQueryParameter adds the bucketsQosPolicyMaxThroughputIops to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsQosPolicyMaxThroughputIopsQueryParameter(bucketsQosPolicyMaxThroughputIops *int64) {
	o.BucketsQosPolicyMaxThroughputIopsQueryParameter = bucketsQosPolicyMaxThroughputIops
}

// WithBucketsQosPolicyMaxThroughputMbpsQueryParameter adds the bucketsQosPolicyMaxThroughputMbps to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsQosPolicyMaxThroughputMbpsQueryParameter(bucketsQosPolicyMaxThroughputMbps *int64) *S3ServiceCollectionGetParams {
	o.SetBucketsQosPolicyMaxThroughputMbpsQueryParameter(bucketsQosPolicyMaxThroughputMbps)
	return o
}

// SetBucketsQosPolicyMaxThroughputMbpsQueryParameter adds the bucketsQosPolicyMaxThroughputMbps to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsQosPolicyMaxThroughputMbpsQueryParameter(bucketsQosPolicyMaxThroughputMbps *int64) {
	o.BucketsQosPolicyMaxThroughputMbpsQueryParameter = bucketsQosPolicyMaxThroughputMbps
}

// WithBucketsQosPolicyMinThroughputIopsQueryParameter adds the bucketsQosPolicyMinThroughputIops to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsQosPolicyMinThroughputIopsQueryParameter(bucketsQosPolicyMinThroughputIops *int64) *S3ServiceCollectionGetParams {
	o.SetBucketsQosPolicyMinThroughputIopsQueryParameter(bucketsQosPolicyMinThroughputIops)
	return o
}

// SetBucketsQosPolicyMinThroughputIopsQueryParameter adds the bucketsQosPolicyMinThroughputIops to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsQosPolicyMinThroughputIopsQueryParameter(bucketsQosPolicyMinThroughputIops *int64) {
	o.BucketsQosPolicyMinThroughputIopsQueryParameter = bucketsQosPolicyMinThroughputIops
}

// WithBucketsQosPolicyMinThroughputMbpsQueryParameter adds the bucketsQosPolicyMinThroughputMbps to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsQosPolicyMinThroughputMbpsQueryParameter(bucketsQosPolicyMinThroughputMbps *int64) *S3ServiceCollectionGetParams {
	o.SetBucketsQosPolicyMinThroughputMbpsQueryParameter(bucketsQosPolicyMinThroughputMbps)
	return o
}

// SetBucketsQosPolicyMinThroughputMbpsQueryParameter adds the bucketsQosPolicyMinThroughputMbps to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsQosPolicyMinThroughputMbpsQueryParameter(bucketsQosPolicyMinThroughputMbps *int64) {
	o.BucketsQosPolicyMinThroughputMbpsQueryParameter = bucketsQosPolicyMinThroughputMbps
}

// WithBucketsQosPolicyNameQueryParameter adds the bucketsQosPolicyName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsQosPolicyNameQueryParameter(bucketsQosPolicyName *string) *S3ServiceCollectionGetParams {
	o.SetBucketsQosPolicyNameQueryParameter(bucketsQosPolicyName)
	return o
}

// SetBucketsQosPolicyNameQueryParameter adds the bucketsQosPolicyName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsQosPolicyNameQueryParameter(bucketsQosPolicyName *string) {
	o.BucketsQosPolicyNameQueryParameter = bucketsQosPolicyName
}

// WithBucketsQosPolicyUUIDQueryParameter adds the bucketsQosPolicyUUID to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsQosPolicyUUIDQueryParameter(bucketsQosPolicyUUID *string) *S3ServiceCollectionGetParams {
	o.SetBucketsQosPolicyUUIDQueryParameter(bucketsQosPolicyUUID)
	return o
}

// SetBucketsQosPolicyUUIDQueryParameter adds the bucketsQosPolicyUuid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsQosPolicyUUIDQueryParameter(bucketsQosPolicyUUID *string) {
	o.BucketsQosPolicyUUIDQueryParameter = bucketsQosPolicyUUID
}

// WithBucketsRoleQueryParameter adds the bucketsRole to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsRoleQueryParameter(bucketsRole *string) *S3ServiceCollectionGetParams {
	o.SetBucketsRoleQueryParameter(bucketsRole)
	return o
}

// SetBucketsRoleQueryParameter adds the bucketsRole to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsRoleQueryParameter(bucketsRole *string) {
	o.BucketsRoleQueryParameter = bucketsRole
}

// WithBucketsSizeQueryParameter adds the bucketsSize to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsSizeQueryParameter(bucketsSize *int64) *S3ServiceCollectionGetParams {
	o.SetBucketsSizeQueryParameter(bucketsSize)
	return o
}

// SetBucketsSizeQueryParameter adds the bucketsSize to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsSizeQueryParameter(bucketsSize *int64) {
	o.BucketsSizeQueryParameter = bucketsSize
}

// WithBucketsSVMNameQueryParameter adds the bucketsSvmName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsSVMNameQueryParameter(bucketsSvmName *string) *S3ServiceCollectionGetParams {
	o.SetBucketsSVMNameQueryParameter(bucketsSvmName)
	return o
}

// SetBucketsSVMNameQueryParameter adds the bucketsSvmName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsSVMNameQueryParameter(bucketsSvmName *string) {
	o.BucketsSVMNameQueryParameter = bucketsSvmName
}

// WithBucketsSVMUUIDQueryParameter adds the bucketsSvmUUID to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsSVMUUIDQueryParameter(bucketsSvmUUID *string) *S3ServiceCollectionGetParams {
	o.SetBucketsSVMUUIDQueryParameter(bucketsSvmUUID)
	return o
}

// SetBucketsSVMUUIDQueryParameter adds the bucketsSvmUuid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsSVMUUIDQueryParameter(bucketsSvmUUID *string) {
	o.BucketsSVMUUIDQueryParameter = bucketsSvmUUID
}

// WithBucketsUUIDQueryParameter adds the bucketsUUID to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsUUIDQueryParameter(bucketsUUID *string) *S3ServiceCollectionGetParams {
	o.SetBucketsUUIDQueryParameter(bucketsUUID)
	return o
}

// SetBucketsUUIDQueryParameter adds the bucketsUuid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsUUIDQueryParameter(bucketsUUID *string) {
	o.BucketsUUIDQueryParameter = bucketsUUID
}

// WithBucketsVolumeNameQueryParameter adds the bucketsVolumeName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsVolumeNameQueryParameter(bucketsVolumeName *string) *S3ServiceCollectionGetParams {
	o.SetBucketsVolumeNameQueryParameter(bucketsVolumeName)
	return o
}

// SetBucketsVolumeNameQueryParameter adds the bucketsVolumeName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsVolumeNameQueryParameter(bucketsVolumeName *string) {
	o.BucketsVolumeNameQueryParameter = bucketsVolumeName
}

// WithBucketsVolumeUUIDQueryParameter adds the bucketsVolumeUUID to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithBucketsVolumeUUIDQueryParameter(bucketsVolumeUUID *string) *S3ServiceCollectionGetParams {
	o.SetBucketsVolumeUUIDQueryParameter(bucketsVolumeUUID)
	return o
}

// SetBucketsVolumeUUIDQueryParameter adds the bucketsVolumeUuid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetBucketsVolumeUUIDQueryParameter(bucketsVolumeUUID *string) {
	o.BucketsVolumeUUIDQueryParameter = bucketsVolumeUUID
}

// WithCertificateNameQueryParameter adds the certificateName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithCertificateNameQueryParameter(certificateName *string) *S3ServiceCollectionGetParams {
	o.SetCertificateNameQueryParameter(certificateName)
	return o
}

// SetCertificateNameQueryParameter adds the certificateName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetCertificateNameQueryParameter(certificateName *string) {
	o.CertificateNameQueryParameter = certificateName
}

// WithCertificateUUIDQueryParameter adds the certificateUUID to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithCertificateUUIDQueryParameter(certificateUUID *string) *S3ServiceCollectionGetParams {
	o.SetCertificateUUIDQueryParameter(certificateUUID)
	return o
}

// SetCertificateUUIDQueryParameter adds the certificateUuid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetCertificateUUIDQueryParameter(certificateUUID *string) {
	o.CertificateUUIDQueryParameter = certificateUUID
}

// WithCommentQueryParameter adds the comment to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithCommentQueryParameter(comment *string) *S3ServiceCollectionGetParams {
	o.SetCommentQueryParameter(comment)
	return o
}

// SetCommentQueryParameter adds the comment to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetCommentQueryParameter(comment *string) {
	o.CommentQueryParameter = comment
}

// WithEnabledQueryParameter adds the enabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithEnabledQueryParameter(enabled *bool) *S3ServiceCollectionGetParams {
	o.SetEnabledQueryParameter(enabled)
	return o
}

// SetEnabledQueryParameter adds the enabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetEnabledQueryParameter(enabled *bool) {
	o.EnabledQueryParameter = enabled
}

// WithFieldsQueryParameter adds the fields to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithFieldsQueryParameter(fields []string) *S3ServiceCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithIsHTTPEnabledQueryParameter adds the isHTTPEnabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithIsHTTPEnabledQueryParameter(isHTTPEnabled *bool) *S3ServiceCollectionGetParams {
	o.SetIsHTTPEnabledQueryParameter(isHTTPEnabled)
	return o
}

// SetIsHTTPEnabledQueryParameter adds the isHttpEnabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetIsHTTPEnabledQueryParameter(isHTTPEnabled *bool) {
	o.IsHTTPEnabledQueryParameter = isHTTPEnabled
}

// WithIsHTTPsEnabledQueryParameter adds the isHTTPSEnabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithIsHTTPsEnabledQueryParameter(isHTTPSEnabled *bool) *S3ServiceCollectionGetParams {
	o.SetIsHTTPsEnabledQueryParameter(isHTTPSEnabled)
	return o
}

// SetIsHTTPsEnabledQueryParameter adds the isHttpsEnabled to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetIsHTTPsEnabledQueryParameter(isHTTPSEnabled *bool) {
	o.IsHTTPsEnabledQueryParameter = isHTTPSEnabled
}

// WithMaxRecordsQueryParameter adds the maxRecords to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *S3ServiceCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMetricDurationQueryParameter adds the metricDuration to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricDurationQueryParameter(metricDuration *string) *S3ServiceCollectionGetParams {
	o.SetMetricDurationQueryParameter(metricDuration)
	return o
}

// SetMetricDurationQueryParameter adds the metricDuration to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricDurationQueryParameter(metricDuration *string) {
	o.MetricDurationQueryParameter = metricDuration
}

// WithMetricIopsOtherQueryParameter adds the metricIopsOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricIopsOtherQueryParameter(metricIopsOther *int64) *S3ServiceCollectionGetParams {
	o.SetMetricIopsOtherQueryParameter(metricIopsOther)
	return o
}

// SetMetricIopsOtherQueryParameter adds the metricIopsOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricIopsOtherQueryParameter(metricIopsOther *int64) {
	o.MetricIopsOtherQueryParameter = metricIopsOther
}

// WithMetricIopsReadQueryParameter adds the metricIopsRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricIopsReadQueryParameter(metricIopsRead *int64) *S3ServiceCollectionGetParams {
	o.SetMetricIopsReadQueryParameter(metricIopsRead)
	return o
}

// SetMetricIopsReadQueryParameter adds the metricIopsRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricIopsReadQueryParameter(metricIopsRead *int64) {
	o.MetricIopsReadQueryParameter = metricIopsRead
}

// WithMetricIopsTotalQueryParameter adds the metricIopsTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricIopsTotalQueryParameter(metricIopsTotal *int64) *S3ServiceCollectionGetParams {
	o.SetMetricIopsTotalQueryParameter(metricIopsTotal)
	return o
}

// SetMetricIopsTotalQueryParameter adds the metricIopsTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricIopsTotalQueryParameter(metricIopsTotal *int64) {
	o.MetricIopsTotalQueryParameter = metricIopsTotal
}

// WithMetricIopsWriteQueryParameter adds the metricIopsWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricIopsWriteQueryParameter(metricIopsWrite *int64) *S3ServiceCollectionGetParams {
	o.SetMetricIopsWriteQueryParameter(metricIopsWrite)
	return o
}

// SetMetricIopsWriteQueryParameter adds the metricIopsWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricIopsWriteQueryParameter(metricIopsWrite *int64) {
	o.MetricIopsWriteQueryParameter = metricIopsWrite
}

// WithMetricLatencyOtherQueryParameter adds the metricLatencyOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricLatencyOtherQueryParameter(metricLatencyOther *int64) *S3ServiceCollectionGetParams {
	o.SetMetricLatencyOtherQueryParameter(metricLatencyOther)
	return o
}

// SetMetricLatencyOtherQueryParameter adds the metricLatencyOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricLatencyOtherQueryParameter(metricLatencyOther *int64) {
	o.MetricLatencyOtherQueryParameter = metricLatencyOther
}

// WithMetricLatencyReadQueryParameter adds the metricLatencyRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricLatencyReadQueryParameter(metricLatencyRead *int64) *S3ServiceCollectionGetParams {
	o.SetMetricLatencyReadQueryParameter(metricLatencyRead)
	return o
}

// SetMetricLatencyReadQueryParameter adds the metricLatencyRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricLatencyReadQueryParameter(metricLatencyRead *int64) {
	o.MetricLatencyReadQueryParameter = metricLatencyRead
}

// WithMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) *S3ServiceCollectionGetParams {
	o.SetMetricLatencyTotalQueryParameter(metricLatencyTotal)
	return o
}

// SetMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) {
	o.MetricLatencyTotalQueryParameter = metricLatencyTotal
}

// WithMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) *S3ServiceCollectionGetParams {
	o.SetMetricLatencyWriteQueryParameter(metricLatencyWrite)
	return o
}

// SetMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) {
	o.MetricLatencyWriteQueryParameter = metricLatencyWrite
}

// WithMetricStatusQueryParameter adds the metricStatus to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricStatusQueryParameter(metricStatus *string) *S3ServiceCollectionGetParams {
	o.SetMetricStatusQueryParameter(metricStatus)
	return o
}

// SetMetricStatusQueryParameter adds the metricStatus to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricStatusQueryParameter(metricStatus *string) {
	o.MetricStatusQueryParameter = metricStatus
}

// WithMetricThroughputReadQueryParameter adds the metricThroughputRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricThroughputReadQueryParameter(metricThroughputRead *int64) *S3ServiceCollectionGetParams {
	o.SetMetricThroughputReadQueryParameter(metricThroughputRead)
	return o
}

// SetMetricThroughputReadQueryParameter adds the metricThroughputRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricThroughputReadQueryParameter(metricThroughputRead *int64) {
	o.MetricThroughputReadQueryParameter = metricThroughputRead
}

// WithMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) *S3ServiceCollectionGetParams {
	o.SetMetricThroughputTotalQueryParameter(metricThroughputTotal)
	return o
}

// SetMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) {
	o.MetricThroughputTotalQueryParameter = metricThroughputTotal
}

// WithMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) *S3ServiceCollectionGetParams {
	o.SetMetricThroughputWriteQueryParameter(metricThroughputWrite)
	return o
}

// SetMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) {
	o.MetricThroughputWriteQueryParameter = metricThroughputWrite
}

// WithMetricTimestampQueryParameter adds the metricTimestamp to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithMetricTimestampQueryParameter(metricTimestamp *string) *S3ServiceCollectionGetParams {
	o.SetMetricTimestampQueryParameter(metricTimestamp)
	return o
}

// SetMetricTimestampQueryParameter adds the metricTimestamp to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetMetricTimestampQueryParameter(metricTimestamp *string) {
	o.MetricTimestampQueryParameter = metricTimestamp
}

// WithNameQueryParameter adds the name to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithNameQueryParameter(name *string) *S3ServiceCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *S3ServiceCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithPortQueryParameter adds the port to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithPortQueryParameter(port *int64) *S3ServiceCollectionGetParams {
	o.SetPortQueryParameter(port)
	return o
}

// SetPortQueryParameter adds the port to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetPortQueryParameter(port *int64) {
	o.PortQueryParameter = port
}

// WithReturnRecordsQueryParameter adds the returnRecords to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *S3ServiceCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *S3ServiceCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSecurePortQueryParameter adds the securePort to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithSecurePortQueryParameter(securePort *int64) *S3ServiceCollectionGetParams {
	o.SetSecurePortQueryParameter(securePort)
	return o
}

// SetSecurePortQueryParameter adds the securePort to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetSecurePortQueryParameter(securePort *int64) {
	o.SecurePortQueryParameter = securePort
}

// WithStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther)
	return o
}

// SetStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) {
	o.StatisticsIopsRawOtherQueryParameter = statisticsIopsRawOther
}

// WithStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead)
	return o
}

// SetStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) {
	o.StatisticsIopsRawReadQueryParameter = statisticsIopsRawRead
}

// WithStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal)
	return o
}

// SetStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) {
	o.StatisticsIopsRawTotalQueryParameter = statisticsIopsRawTotal
}

// WithStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite)
	return o
}

// SetStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) {
	o.StatisticsIopsRawWriteQueryParameter = statisticsIopsRawWrite
}

// WithStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther)
	return o
}

// SetStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) {
	o.StatisticsLatencyRawOtherQueryParameter = statisticsLatencyRawOther
}

// WithStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead)
	return o
}

// SetStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) {
	o.StatisticsLatencyRawReadQueryParameter = statisticsLatencyRawRead
}

// WithStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal)
	return o
}

// SetStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) {
	o.StatisticsLatencyRawTotalQueryParameter = statisticsLatencyRawTotal
}

// WithStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite)
	return o
}

// SetStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) {
	o.StatisticsLatencyRawWriteQueryParameter = statisticsLatencyRawWrite
}

// WithStatisticsStatusQueryParameter adds the statisticsStatus to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsStatusQueryParameter(statisticsStatus *string) *S3ServiceCollectionGetParams {
	o.SetStatisticsStatusQueryParameter(statisticsStatus)
	return o
}

// SetStatisticsStatusQueryParameter adds the statisticsStatus to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsStatusQueryParameter(statisticsStatus *string) {
	o.StatisticsStatusQueryParameter = statisticsStatus
}

// WithStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead)
	return o
}

// SetStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) {
	o.StatisticsThroughputRawReadQueryParameter = statisticsThroughputRawRead
}

// WithStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal)
	return o
}

// SetStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) {
	o.StatisticsThroughputRawTotalQueryParameter = statisticsThroughputRawTotal
}

// WithStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) *S3ServiceCollectionGetParams {
	o.SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite)
	return o
}

// SetStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) {
	o.StatisticsThroughputRawWriteQueryParameter = statisticsThroughputRawWrite
}

// WithStatisticsTimestampQueryParameter adds the statisticsTimestamp to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithStatisticsTimestampQueryParameter(statisticsTimestamp *string) *S3ServiceCollectionGetParams {
	o.SetStatisticsTimestampQueryParameter(statisticsTimestamp)
	return o
}

// SetStatisticsTimestampQueryParameter adds the statisticsTimestamp to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetStatisticsTimestampQueryParameter(statisticsTimestamp *string) {
	o.StatisticsTimestampQueryParameter = statisticsTimestamp
}

// WithSVMNameQueryParameter adds the svmName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *S3ServiceCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *S3ServiceCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUsersAccessKeyQueryParameter adds the usersAccessKey to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithUsersAccessKeyQueryParameter(usersAccessKey *string) *S3ServiceCollectionGetParams {
	o.SetUsersAccessKeyQueryParameter(usersAccessKey)
	return o
}

// SetUsersAccessKeyQueryParameter adds the usersAccessKey to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetUsersAccessKeyQueryParameter(usersAccessKey *string) {
	o.UsersAccessKeyQueryParameter = usersAccessKey
}

// WithUsersCommentQueryParameter adds the usersComment to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithUsersCommentQueryParameter(usersComment *string) *S3ServiceCollectionGetParams {
	o.SetUsersCommentQueryParameter(usersComment)
	return o
}

// SetUsersCommentQueryParameter adds the usersComment to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetUsersCommentQueryParameter(usersComment *string) {
	o.UsersCommentQueryParameter = usersComment
}

// WithUsersNameQueryParameter adds the usersName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithUsersNameQueryParameter(usersName *string) *S3ServiceCollectionGetParams {
	o.SetUsersNameQueryParameter(usersName)
	return o
}

// SetUsersNameQueryParameter adds the usersName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetUsersNameQueryParameter(usersName *string) {
	o.UsersNameQueryParameter = usersName
}

// WithUsersSVMNameQueryParameter adds the usersSvmName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithUsersSVMNameQueryParameter(usersSvmName *string) *S3ServiceCollectionGetParams {
	o.SetUsersSVMNameQueryParameter(usersSvmName)
	return o
}

// SetUsersSVMNameQueryParameter adds the usersSvmName to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetUsersSVMNameQueryParameter(usersSvmName *string) {
	o.UsersSVMNameQueryParameter = usersSvmName
}

// WithUsersSVMUUIDQueryParameter adds the usersSvmUUID to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) WithUsersSVMUUIDQueryParameter(usersSvmUUID *string) *S3ServiceCollectionGetParams {
	o.SetUsersSVMUUIDQueryParameter(usersSvmUUID)
	return o
}

// SetUsersSVMUUIDQueryParameter adds the usersSvmUuid to the s3 service collection get params
func (o *S3ServiceCollectionGetParams) SetUsersSVMUUIDQueryParameter(usersSvmUUID *string) {
	o.UsersSVMUUIDQueryParameter = usersSvmUUID
}

// WriteToRequest writes these params to a swagger request
func (o *S3ServiceCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BucketsCommentQueryParameter != nil {

		// query param buckets.comment
		var qrBucketsComment string

		if o.BucketsCommentQueryParameter != nil {
			qrBucketsComment = *o.BucketsCommentQueryParameter
		}
		qBucketsComment := qrBucketsComment
		if qBucketsComment != "" {

			if err := r.SetQueryParam("buckets.comment", qBucketsComment); err != nil {
				return err
			}
		}
	}

	if o.BucketsEncryptionEnabledQueryParameter != nil {

		// query param buckets.encryption.enabled
		var qrBucketsEncryptionEnabled bool

		if o.BucketsEncryptionEnabledQueryParameter != nil {
			qrBucketsEncryptionEnabled = *o.BucketsEncryptionEnabledQueryParameter
		}
		qBucketsEncryptionEnabled := swag.FormatBool(qrBucketsEncryptionEnabled)
		if qBucketsEncryptionEnabled != "" {

			if err := r.SetQueryParam("buckets.encryption.enabled", qBucketsEncryptionEnabled); err != nil {
				return err
			}
		}
	}

	if o.BucketsLogicalUsedSizeQueryParameter != nil {

		// query param buckets.logical_used_size
		var qrBucketsLogicalUsedSize int64

		if o.BucketsLogicalUsedSizeQueryParameter != nil {
			qrBucketsLogicalUsedSize = *o.BucketsLogicalUsedSizeQueryParameter
		}
		qBucketsLogicalUsedSize := swag.FormatInt64(qrBucketsLogicalUsedSize)
		if qBucketsLogicalUsedSize != "" {

			if err := r.SetQueryParam("buckets.logical_used_size", qBucketsLogicalUsedSize); err != nil {
				return err
			}
		}
	}

	if o.BucketsNameQueryParameter != nil {

		// query param buckets.name
		var qrBucketsName string

		if o.BucketsNameQueryParameter != nil {
			qrBucketsName = *o.BucketsNameQueryParameter
		}
		qBucketsName := qrBucketsName
		if qBucketsName != "" {

			if err := r.SetQueryParam("buckets.name", qBucketsName); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsActionsQueryParameter != nil {

		// query param buckets.policy.statements.actions
		var qrBucketsPolicyStatementsActions string

		if o.BucketsPolicyStatementsActionsQueryParameter != nil {
			qrBucketsPolicyStatementsActions = *o.BucketsPolicyStatementsActionsQueryParameter
		}
		qBucketsPolicyStatementsActions := qrBucketsPolicyStatementsActions
		if qBucketsPolicyStatementsActions != "" {

			if err := r.SetQueryParam("buckets.policy.statements.actions", qBucketsPolicyStatementsActions); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsConditionsDelimitersQueryParameter != nil {

		// query param buckets.policy.statements.conditions.delimiters
		var qrBucketsPolicyStatementsConditionsDelimiters string

		if o.BucketsPolicyStatementsConditionsDelimitersQueryParameter != nil {
			qrBucketsPolicyStatementsConditionsDelimiters = *o.BucketsPolicyStatementsConditionsDelimitersQueryParameter
		}
		qBucketsPolicyStatementsConditionsDelimiters := qrBucketsPolicyStatementsConditionsDelimiters
		if qBucketsPolicyStatementsConditionsDelimiters != "" {

			if err := r.SetQueryParam("buckets.policy.statements.conditions.delimiters", qBucketsPolicyStatementsConditionsDelimiters); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsConditionsMaxKeysQueryParameter != nil {

		// query param buckets.policy.statements.conditions.max_keys
		var qrBucketsPolicyStatementsConditionsMaxKeys int64

		if o.BucketsPolicyStatementsConditionsMaxKeysQueryParameter != nil {
			qrBucketsPolicyStatementsConditionsMaxKeys = *o.BucketsPolicyStatementsConditionsMaxKeysQueryParameter
		}
		qBucketsPolicyStatementsConditionsMaxKeys := swag.FormatInt64(qrBucketsPolicyStatementsConditionsMaxKeys)
		if qBucketsPolicyStatementsConditionsMaxKeys != "" {

			if err := r.SetQueryParam("buckets.policy.statements.conditions.max_keys", qBucketsPolicyStatementsConditionsMaxKeys); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsConditionsOperatorQueryParameter != nil {

		// query param buckets.policy.statements.conditions.operator
		var qrBucketsPolicyStatementsConditionsOperator string

		if o.BucketsPolicyStatementsConditionsOperatorQueryParameter != nil {
			qrBucketsPolicyStatementsConditionsOperator = *o.BucketsPolicyStatementsConditionsOperatorQueryParameter
		}
		qBucketsPolicyStatementsConditionsOperator := qrBucketsPolicyStatementsConditionsOperator
		if qBucketsPolicyStatementsConditionsOperator != "" {

			if err := r.SetQueryParam("buckets.policy.statements.conditions.operator", qBucketsPolicyStatementsConditionsOperator); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsConditionsPrefixesQueryParameter != nil {

		// query param buckets.policy.statements.conditions.prefixes
		var qrBucketsPolicyStatementsConditionsPrefixes string

		if o.BucketsPolicyStatementsConditionsPrefixesQueryParameter != nil {
			qrBucketsPolicyStatementsConditionsPrefixes = *o.BucketsPolicyStatementsConditionsPrefixesQueryParameter
		}
		qBucketsPolicyStatementsConditionsPrefixes := qrBucketsPolicyStatementsConditionsPrefixes
		if qBucketsPolicyStatementsConditionsPrefixes != "" {

			if err := r.SetQueryParam("buckets.policy.statements.conditions.prefixes", qBucketsPolicyStatementsConditionsPrefixes); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsConditionsSourceIPsQueryParameter != nil {

		// query param buckets.policy.statements.conditions.source_ips
		var qrBucketsPolicyStatementsConditionsSourceIps string

		if o.BucketsPolicyStatementsConditionsSourceIPsQueryParameter != nil {
			qrBucketsPolicyStatementsConditionsSourceIps = *o.BucketsPolicyStatementsConditionsSourceIPsQueryParameter
		}
		qBucketsPolicyStatementsConditionsSourceIps := qrBucketsPolicyStatementsConditionsSourceIps
		if qBucketsPolicyStatementsConditionsSourceIps != "" {

			if err := r.SetQueryParam("buckets.policy.statements.conditions.source_ips", qBucketsPolicyStatementsConditionsSourceIps); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsConditionsUsernamesQueryParameter != nil {

		// query param buckets.policy.statements.conditions.usernames
		var qrBucketsPolicyStatementsConditionsUsernames string

		if o.BucketsPolicyStatementsConditionsUsernamesQueryParameter != nil {
			qrBucketsPolicyStatementsConditionsUsernames = *o.BucketsPolicyStatementsConditionsUsernamesQueryParameter
		}
		qBucketsPolicyStatementsConditionsUsernames := qrBucketsPolicyStatementsConditionsUsernames
		if qBucketsPolicyStatementsConditionsUsernames != "" {

			if err := r.SetQueryParam("buckets.policy.statements.conditions.usernames", qBucketsPolicyStatementsConditionsUsernames); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsEffectQueryParameter != nil {

		// query param buckets.policy.statements.effect
		var qrBucketsPolicyStatementsEffect string

		if o.BucketsPolicyStatementsEffectQueryParameter != nil {
			qrBucketsPolicyStatementsEffect = *o.BucketsPolicyStatementsEffectQueryParameter
		}
		qBucketsPolicyStatementsEffect := qrBucketsPolicyStatementsEffect
		if qBucketsPolicyStatementsEffect != "" {

			if err := r.SetQueryParam("buckets.policy.statements.effect", qBucketsPolicyStatementsEffect); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsPrincipalsQueryParameter != nil {

		// query param buckets.policy.statements.principals
		var qrBucketsPolicyStatementsPrincipals string

		if o.BucketsPolicyStatementsPrincipalsQueryParameter != nil {
			qrBucketsPolicyStatementsPrincipals = *o.BucketsPolicyStatementsPrincipalsQueryParameter
		}
		qBucketsPolicyStatementsPrincipals := qrBucketsPolicyStatementsPrincipals
		if qBucketsPolicyStatementsPrincipals != "" {

			if err := r.SetQueryParam("buckets.policy.statements.principals", qBucketsPolicyStatementsPrincipals); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsResourcesQueryParameter != nil {

		// query param buckets.policy.statements.resources
		var qrBucketsPolicyStatementsResources string

		if o.BucketsPolicyStatementsResourcesQueryParameter != nil {
			qrBucketsPolicyStatementsResources = *o.BucketsPolicyStatementsResourcesQueryParameter
		}
		qBucketsPolicyStatementsResources := qrBucketsPolicyStatementsResources
		if qBucketsPolicyStatementsResources != "" {

			if err := r.SetQueryParam("buckets.policy.statements.resources", qBucketsPolicyStatementsResources); err != nil {
				return err
			}
		}
	}

	if o.BucketsPolicyStatementsSIDQueryParameter != nil {

		// query param buckets.policy.statements.sid
		var qrBucketsPolicyStatementsSid string

		if o.BucketsPolicyStatementsSIDQueryParameter != nil {
			qrBucketsPolicyStatementsSid = *o.BucketsPolicyStatementsSIDQueryParameter
		}
		qBucketsPolicyStatementsSid := qrBucketsPolicyStatementsSid
		if qBucketsPolicyStatementsSid != "" {

			if err := r.SetQueryParam("buckets.policy.statements.sid", qBucketsPolicyStatementsSid); err != nil {
				return err
			}
		}
	}

	if o.BucketsProtectionStatusDestinationIsCloudQueryParameter != nil {

		// query param buckets.protection_status.destination.is_cloud
		var qrBucketsProtectionStatusDestinationIsCloud bool

		if o.BucketsProtectionStatusDestinationIsCloudQueryParameter != nil {
			qrBucketsProtectionStatusDestinationIsCloud = *o.BucketsProtectionStatusDestinationIsCloudQueryParameter
		}
		qBucketsProtectionStatusDestinationIsCloud := swag.FormatBool(qrBucketsProtectionStatusDestinationIsCloud)
		if qBucketsProtectionStatusDestinationIsCloud != "" {

			if err := r.SetQueryParam("buckets.protection_status.destination.is_cloud", qBucketsProtectionStatusDestinationIsCloud); err != nil {
				return err
			}
		}
	}

	if o.BucketsProtectionStatusDestinationIsOntapQueryParameter != nil {

		// query param buckets.protection_status.destination.is_ontap
		var qrBucketsProtectionStatusDestinationIsOntap bool

		if o.BucketsProtectionStatusDestinationIsOntapQueryParameter != nil {
			qrBucketsProtectionStatusDestinationIsOntap = *o.BucketsProtectionStatusDestinationIsOntapQueryParameter
		}
		qBucketsProtectionStatusDestinationIsOntap := swag.FormatBool(qrBucketsProtectionStatusDestinationIsOntap)
		if qBucketsProtectionStatusDestinationIsOntap != "" {

			if err := r.SetQueryParam("buckets.protection_status.destination.is_ontap", qBucketsProtectionStatusDestinationIsOntap); err != nil {
				return err
			}
		}
	}

	if o.BucketsProtectionStatusIsProtectedQueryParameter != nil {

		// query param buckets.protection_status.is_protected
		var qrBucketsProtectionStatusIsProtected bool

		if o.BucketsProtectionStatusIsProtectedQueryParameter != nil {
			qrBucketsProtectionStatusIsProtected = *o.BucketsProtectionStatusIsProtectedQueryParameter
		}
		qBucketsProtectionStatusIsProtected := swag.FormatBool(qrBucketsProtectionStatusIsProtected)
		if qBucketsProtectionStatusIsProtected != "" {

			if err := r.SetQueryParam("buckets.protection_status.is_protected", qBucketsProtectionStatusIsProtected); err != nil {
				return err
			}
		}
	}

	if o.BucketsQosPolicyMaxThroughputIopsQueryParameter != nil {

		// query param buckets.qos_policy.max_throughput_iops
		var qrBucketsQosPolicyMaxThroughputIops int64

		if o.BucketsQosPolicyMaxThroughputIopsQueryParameter != nil {
			qrBucketsQosPolicyMaxThroughputIops = *o.BucketsQosPolicyMaxThroughputIopsQueryParameter
		}
		qBucketsQosPolicyMaxThroughputIops := swag.FormatInt64(qrBucketsQosPolicyMaxThroughputIops)
		if qBucketsQosPolicyMaxThroughputIops != "" {

			if err := r.SetQueryParam("buckets.qos_policy.max_throughput_iops", qBucketsQosPolicyMaxThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.BucketsQosPolicyMaxThroughputMbpsQueryParameter != nil {

		// query param buckets.qos_policy.max_throughput_mbps
		var qrBucketsQosPolicyMaxThroughputMbps int64

		if o.BucketsQosPolicyMaxThroughputMbpsQueryParameter != nil {
			qrBucketsQosPolicyMaxThroughputMbps = *o.BucketsQosPolicyMaxThroughputMbpsQueryParameter
		}
		qBucketsQosPolicyMaxThroughputMbps := swag.FormatInt64(qrBucketsQosPolicyMaxThroughputMbps)
		if qBucketsQosPolicyMaxThroughputMbps != "" {

			if err := r.SetQueryParam("buckets.qos_policy.max_throughput_mbps", qBucketsQosPolicyMaxThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.BucketsQosPolicyMinThroughputIopsQueryParameter != nil {

		// query param buckets.qos_policy.min_throughput_iops
		var qrBucketsQosPolicyMinThroughputIops int64

		if o.BucketsQosPolicyMinThroughputIopsQueryParameter != nil {
			qrBucketsQosPolicyMinThroughputIops = *o.BucketsQosPolicyMinThroughputIopsQueryParameter
		}
		qBucketsQosPolicyMinThroughputIops := swag.FormatInt64(qrBucketsQosPolicyMinThroughputIops)
		if qBucketsQosPolicyMinThroughputIops != "" {

			if err := r.SetQueryParam("buckets.qos_policy.min_throughput_iops", qBucketsQosPolicyMinThroughputIops); err != nil {
				return err
			}
		}
	}

	if o.BucketsQosPolicyMinThroughputMbpsQueryParameter != nil {

		// query param buckets.qos_policy.min_throughput_mbps
		var qrBucketsQosPolicyMinThroughputMbps int64

		if o.BucketsQosPolicyMinThroughputMbpsQueryParameter != nil {
			qrBucketsQosPolicyMinThroughputMbps = *o.BucketsQosPolicyMinThroughputMbpsQueryParameter
		}
		qBucketsQosPolicyMinThroughputMbps := swag.FormatInt64(qrBucketsQosPolicyMinThroughputMbps)
		if qBucketsQosPolicyMinThroughputMbps != "" {

			if err := r.SetQueryParam("buckets.qos_policy.min_throughput_mbps", qBucketsQosPolicyMinThroughputMbps); err != nil {
				return err
			}
		}
	}

	if o.BucketsQosPolicyNameQueryParameter != nil {

		// query param buckets.qos_policy.name
		var qrBucketsQosPolicyName string

		if o.BucketsQosPolicyNameQueryParameter != nil {
			qrBucketsQosPolicyName = *o.BucketsQosPolicyNameQueryParameter
		}
		qBucketsQosPolicyName := qrBucketsQosPolicyName
		if qBucketsQosPolicyName != "" {

			if err := r.SetQueryParam("buckets.qos_policy.name", qBucketsQosPolicyName); err != nil {
				return err
			}
		}
	}

	if o.BucketsQosPolicyUUIDQueryParameter != nil {

		// query param buckets.qos_policy.uuid
		var qrBucketsQosPolicyUUID string

		if o.BucketsQosPolicyUUIDQueryParameter != nil {
			qrBucketsQosPolicyUUID = *o.BucketsQosPolicyUUIDQueryParameter
		}
		qBucketsQosPolicyUUID := qrBucketsQosPolicyUUID
		if qBucketsQosPolicyUUID != "" {

			if err := r.SetQueryParam("buckets.qos_policy.uuid", qBucketsQosPolicyUUID); err != nil {
				return err
			}
		}
	}

	if o.BucketsRoleQueryParameter != nil {

		// query param buckets.role
		var qrBucketsRole string

		if o.BucketsRoleQueryParameter != nil {
			qrBucketsRole = *o.BucketsRoleQueryParameter
		}
		qBucketsRole := qrBucketsRole
		if qBucketsRole != "" {

			if err := r.SetQueryParam("buckets.role", qBucketsRole); err != nil {
				return err
			}
		}
	}

	if o.BucketsSizeQueryParameter != nil {

		// query param buckets.size
		var qrBucketsSize int64

		if o.BucketsSizeQueryParameter != nil {
			qrBucketsSize = *o.BucketsSizeQueryParameter
		}
		qBucketsSize := swag.FormatInt64(qrBucketsSize)
		if qBucketsSize != "" {

			if err := r.SetQueryParam("buckets.size", qBucketsSize); err != nil {
				return err
			}
		}
	}

	if o.BucketsSVMNameQueryParameter != nil {

		// query param buckets.svm.name
		var qrBucketsSvmName string

		if o.BucketsSVMNameQueryParameter != nil {
			qrBucketsSvmName = *o.BucketsSVMNameQueryParameter
		}
		qBucketsSvmName := qrBucketsSvmName
		if qBucketsSvmName != "" {

			if err := r.SetQueryParam("buckets.svm.name", qBucketsSvmName); err != nil {
				return err
			}
		}
	}

	if o.BucketsSVMUUIDQueryParameter != nil {

		// query param buckets.svm.uuid
		var qrBucketsSvmUUID string

		if o.BucketsSVMUUIDQueryParameter != nil {
			qrBucketsSvmUUID = *o.BucketsSVMUUIDQueryParameter
		}
		qBucketsSvmUUID := qrBucketsSvmUUID
		if qBucketsSvmUUID != "" {

			if err := r.SetQueryParam("buckets.svm.uuid", qBucketsSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.BucketsUUIDQueryParameter != nil {

		// query param buckets.uuid
		var qrBucketsUUID string

		if o.BucketsUUIDQueryParameter != nil {
			qrBucketsUUID = *o.BucketsUUIDQueryParameter
		}
		qBucketsUUID := qrBucketsUUID
		if qBucketsUUID != "" {

			if err := r.SetQueryParam("buckets.uuid", qBucketsUUID); err != nil {
				return err
			}
		}
	}

	if o.BucketsVolumeNameQueryParameter != nil {

		// query param buckets.volume.name
		var qrBucketsVolumeName string

		if o.BucketsVolumeNameQueryParameter != nil {
			qrBucketsVolumeName = *o.BucketsVolumeNameQueryParameter
		}
		qBucketsVolumeName := qrBucketsVolumeName
		if qBucketsVolumeName != "" {

			if err := r.SetQueryParam("buckets.volume.name", qBucketsVolumeName); err != nil {
				return err
			}
		}
	}

	if o.BucketsVolumeUUIDQueryParameter != nil {

		// query param buckets.volume.uuid
		var qrBucketsVolumeUUID string

		if o.BucketsVolumeUUIDQueryParameter != nil {
			qrBucketsVolumeUUID = *o.BucketsVolumeUUIDQueryParameter
		}
		qBucketsVolumeUUID := qrBucketsVolumeUUID
		if qBucketsVolumeUUID != "" {

			if err := r.SetQueryParam("buckets.volume.uuid", qBucketsVolumeUUID); err != nil {
				return err
			}
		}
	}

	if o.CertificateNameQueryParameter != nil {

		// query param certificate.name
		var qrCertificateName string

		if o.CertificateNameQueryParameter != nil {
			qrCertificateName = *o.CertificateNameQueryParameter
		}
		qCertificateName := qrCertificateName
		if qCertificateName != "" {

			if err := r.SetQueryParam("certificate.name", qCertificateName); err != nil {
				return err
			}
		}
	}

	if o.CertificateUUIDQueryParameter != nil {

		// query param certificate.uuid
		var qrCertificateUUID string

		if o.CertificateUUIDQueryParameter != nil {
			qrCertificateUUID = *o.CertificateUUIDQueryParameter
		}
		qCertificateUUID := qrCertificateUUID
		if qCertificateUUID != "" {

			if err := r.SetQueryParam("certificate.uuid", qCertificateUUID); err != nil {
				return err
			}
		}
	}

	if o.CommentQueryParameter != nil {

		// query param comment
		var qrComment string

		if o.CommentQueryParameter != nil {
			qrComment = *o.CommentQueryParameter
		}
		qComment := qrComment
		if qComment != "" {

			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}
	}

	if o.EnabledQueryParameter != nil {

		// query param enabled
		var qrEnabled bool

		if o.EnabledQueryParameter != nil {
			qrEnabled = *o.EnabledQueryParameter
		}
		qEnabled := swag.FormatBool(qrEnabled)
		if qEnabled != "" {

			if err := r.SetQueryParam("enabled", qEnabled); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.IsHTTPEnabledQueryParameter != nil {

		// query param is_http_enabled
		var qrIsHTTPEnabled bool

		if o.IsHTTPEnabledQueryParameter != nil {
			qrIsHTTPEnabled = *o.IsHTTPEnabledQueryParameter
		}
		qIsHTTPEnabled := swag.FormatBool(qrIsHTTPEnabled)
		if qIsHTTPEnabled != "" {

			if err := r.SetQueryParam("is_http_enabled", qIsHTTPEnabled); err != nil {
				return err
			}
		}
	}

	if o.IsHTTPsEnabledQueryParameter != nil {

		// query param is_https_enabled
		var qrIsHTTPSEnabled bool

		if o.IsHTTPsEnabledQueryParameter != nil {
			qrIsHTTPSEnabled = *o.IsHTTPsEnabledQueryParameter
		}
		qIsHTTPSEnabled := swag.FormatBool(qrIsHTTPSEnabled)
		if qIsHTTPSEnabled != "" {

			if err := r.SetQueryParam("is_https_enabled", qIsHTTPSEnabled); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricDurationQueryParameter != nil {

		// query param metric.duration
		var qrMetricDuration string

		if o.MetricDurationQueryParameter != nil {
			qrMetricDuration = *o.MetricDurationQueryParameter
		}
		qMetricDuration := qrMetricDuration
		if qMetricDuration != "" {

			if err := r.SetQueryParam("metric.duration", qMetricDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsOtherQueryParameter != nil {

		// query param metric.iops.other
		var qrMetricIopsOther int64

		if o.MetricIopsOtherQueryParameter != nil {
			qrMetricIopsOther = *o.MetricIopsOtherQueryParameter
		}
		qMetricIopsOther := swag.FormatInt64(qrMetricIopsOther)
		if qMetricIopsOther != "" {

			if err := r.SetQueryParam("metric.iops.other", qMetricIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsReadQueryParameter != nil {

		// query param metric.iops.read
		var qrMetricIopsRead int64

		if o.MetricIopsReadQueryParameter != nil {
			qrMetricIopsRead = *o.MetricIopsReadQueryParameter
		}
		qMetricIopsRead := swag.FormatInt64(qrMetricIopsRead)
		if qMetricIopsRead != "" {

			if err := r.SetQueryParam("metric.iops.read", qMetricIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsTotalQueryParameter != nil {

		// query param metric.iops.total
		var qrMetricIopsTotal int64

		if o.MetricIopsTotalQueryParameter != nil {
			qrMetricIopsTotal = *o.MetricIopsTotalQueryParameter
		}
		qMetricIopsTotal := swag.FormatInt64(qrMetricIopsTotal)
		if qMetricIopsTotal != "" {

			if err := r.SetQueryParam("metric.iops.total", qMetricIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsWriteQueryParameter != nil {

		// query param metric.iops.write
		var qrMetricIopsWrite int64

		if o.MetricIopsWriteQueryParameter != nil {
			qrMetricIopsWrite = *o.MetricIopsWriteQueryParameter
		}
		qMetricIopsWrite := swag.FormatInt64(qrMetricIopsWrite)
		if qMetricIopsWrite != "" {

			if err := r.SetQueryParam("metric.iops.write", qMetricIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyOtherQueryParameter != nil {

		// query param metric.latency.other
		var qrMetricLatencyOther int64

		if o.MetricLatencyOtherQueryParameter != nil {
			qrMetricLatencyOther = *o.MetricLatencyOtherQueryParameter
		}
		qMetricLatencyOther := swag.FormatInt64(qrMetricLatencyOther)
		if qMetricLatencyOther != "" {

			if err := r.SetQueryParam("metric.latency.other", qMetricLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyReadQueryParameter != nil {

		// query param metric.latency.read
		var qrMetricLatencyRead int64

		if o.MetricLatencyReadQueryParameter != nil {
			qrMetricLatencyRead = *o.MetricLatencyReadQueryParameter
		}
		qMetricLatencyRead := swag.FormatInt64(qrMetricLatencyRead)
		if qMetricLatencyRead != "" {

			if err := r.SetQueryParam("metric.latency.read", qMetricLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyTotalQueryParameter != nil {

		// query param metric.latency.total
		var qrMetricLatencyTotal int64

		if o.MetricLatencyTotalQueryParameter != nil {
			qrMetricLatencyTotal = *o.MetricLatencyTotalQueryParameter
		}
		qMetricLatencyTotal := swag.FormatInt64(qrMetricLatencyTotal)
		if qMetricLatencyTotal != "" {

			if err := r.SetQueryParam("metric.latency.total", qMetricLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyWriteQueryParameter != nil {

		// query param metric.latency.write
		var qrMetricLatencyWrite int64

		if o.MetricLatencyWriteQueryParameter != nil {
			qrMetricLatencyWrite = *o.MetricLatencyWriteQueryParameter
		}
		qMetricLatencyWrite := swag.FormatInt64(qrMetricLatencyWrite)
		if qMetricLatencyWrite != "" {

			if err := r.SetQueryParam("metric.latency.write", qMetricLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricStatusQueryParameter != nil {

		// query param metric.status
		var qrMetricStatus string

		if o.MetricStatusQueryParameter != nil {
			qrMetricStatus = *o.MetricStatusQueryParameter
		}
		qMetricStatus := qrMetricStatus
		if qMetricStatus != "" {

			if err := r.SetQueryParam("metric.status", qMetricStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputReadQueryParameter != nil {

		// query param metric.throughput.read
		var qrMetricThroughputRead int64

		if o.MetricThroughputReadQueryParameter != nil {
			qrMetricThroughputRead = *o.MetricThroughputReadQueryParameter
		}
		qMetricThroughputRead := swag.FormatInt64(qrMetricThroughputRead)
		if qMetricThroughputRead != "" {

			if err := r.SetQueryParam("metric.throughput.read", qMetricThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputTotalQueryParameter != nil {

		// query param metric.throughput.total
		var qrMetricThroughputTotal int64

		if o.MetricThroughputTotalQueryParameter != nil {
			qrMetricThroughputTotal = *o.MetricThroughputTotalQueryParameter
		}
		qMetricThroughputTotal := swag.FormatInt64(qrMetricThroughputTotal)
		if qMetricThroughputTotal != "" {

			if err := r.SetQueryParam("metric.throughput.total", qMetricThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputWriteQueryParameter != nil {

		// query param metric.throughput.write
		var qrMetricThroughputWrite int64

		if o.MetricThroughputWriteQueryParameter != nil {
			qrMetricThroughputWrite = *o.MetricThroughputWriteQueryParameter
		}
		qMetricThroughputWrite := swag.FormatInt64(qrMetricThroughputWrite)
		if qMetricThroughputWrite != "" {

			if err := r.SetQueryParam("metric.throughput.write", qMetricThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricTimestampQueryParameter != nil {

		// query param metric.timestamp
		var qrMetricTimestamp string

		if o.MetricTimestampQueryParameter != nil {
			qrMetricTimestamp = *o.MetricTimestampQueryParameter
		}
		qMetricTimestamp := qrMetricTimestamp
		if qMetricTimestamp != "" {

			if err := r.SetQueryParam("metric.timestamp", qMetricTimestamp); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.PortQueryParameter != nil {

		// query param port
		var qrPort int64

		if o.PortQueryParameter != nil {
			qrPort = *o.PortQueryParameter
		}
		qPort := swag.FormatInt64(qrPort)
		if qPort != "" {

			if err := r.SetQueryParam("port", qPort); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SecurePortQueryParameter != nil {

		// query param secure_port
		var qrSecurePort int64

		if o.SecurePortQueryParameter != nil {
			qrSecurePort = *o.SecurePortQueryParameter
		}
		qSecurePort := swag.FormatInt64(qrSecurePort)
		if qSecurePort != "" {

			if err := r.SetQueryParam("secure_port", qSecurePort); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawOtherQueryParameter != nil {

		// query param statistics.iops_raw.other
		var qrStatisticsIopsRawOther int64

		if o.StatisticsIopsRawOtherQueryParameter != nil {
			qrStatisticsIopsRawOther = *o.StatisticsIopsRawOtherQueryParameter
		}
		qStatisticsIopsRawOther := swag.FormatInt64(qrStatisticsIopsRawOther)
		if qStatisticsIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.iops_raw.other", qStatisticsIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawReadQueryParameter != nil {

		// query param statistics.iops_raw.read
		var qrStatisticsIopsRawRead int64

		if o.StatisticsIopsRawReadQueryParameter != nil {
			qrStatisticsIopsRawRead = *o.StatisticsIopsRawReadQueryParameter
		}
		qStatisticsIopsRawRead := swag.FormatInt64(qrStatisticsIopsRawRead)
		if qStatisticsIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.iops_raw.read", qStatisticsIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawTotalQueryParameter != nil {

		// query param statistics.iops_raw.total
		var qrStatisticsIopsRawTotal int64

		if o.StatisticsIopsRawTotalQueryParameter != nil {
			qrStatisticsIopsRawTotal = *o.StatisticsIopsRawTotalQueryParameter
		}
		qStatisticsIopsRawTotal := swag.FormatInt64(qrStatisticsIopsRawTotal)
		if qStatisticsIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.iops_raw.total", qStatisticsIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawWriteQueryParameter != nil {

		// query param statistics.iops_raw.write
		var qrStatisticsIopsRawWrite int64

		if o.StatisticsIopsRawWriteQueryParameter != nil {
			qrStatisticsIopsRawWrite = *o.StatisticsIopsRawWriteQueryParameter
		}
		qStatisticsIopsRawWrite := swag.FormatInt64(qrStatisticsIopsRawWrite)
		if qStatisticsIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.iops_raw.write", qStatisticsIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawOtherQueryParameter != nil {

		// query param statistics.latency_raw.other
		var qrStatisticsLatencyRawOther int64

		if o.StatisticsLatencyRawOtherQueryParameter != nil {
			qrStatisticsLatencyRawOther = *o.StatisticsLatencyRawOtherQueryParameter
		}
		qStatisticsLatencyRawOther := swag.FormatInt64(qrStatisticsLatencyRawOther)
		if qStatisticsLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.latency_raw.other", qStatisticsLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawReadQueryParameter != nil {

		// query param statistics.latency_raw.read
		var qrStatisticsLatencyRawRead int64

		if o.StatisticsLatencyRawReadQueryParameter != nil {
			qrStatisticsLatencyRawRead = *o.StatisticsLatencyRawReadQueryParameter
		}
		qStatisticsLatencyRawRead := swag.FormatInt64(qrStatisticsLatencyRawRead)
		if qStatisticsLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.latency_raw.read", qStatisticsLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawTotalQueryParameter != nil {

		// query param statistics.latency_raw.total
		var qrStatisticsLatencyRawTotal int64

		if o.StatisticsLatencyRawTotalQueryParameter != nil {
			qrStatisticsLatencyRawTotal = *o.StatisticsLatencyRawTotalQueryParameter
		}
		qStatisticsLatencyRawTotal := swag.FormatInt64(qrStatisticsLatencyRawTotal)
		if qStatisticsLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.latency_raw.total", qStatisticsLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawWriteQueryParameter != nil {

		// query param statistics.latency_raw.write
		var qrStatisticsLatencyRawWrite int64

		if o.StatisticsLatencyRawWriteQueryParameter != nil {
			qrStatisticsLatencyRawWrite = *o.StatisticsLatencyRawWriteQueryParameter
		}
		qStatisticsLatencyRawWrite := swag.FormatInt64(qrStatisticsLatencyRawWrite)
		if qStatisticsLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.latency_raw.write", qStatisticsLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsStatusQueryParameter != nil {

		// query param statistics.status
		var qrStatisticsStatus string

		if o.StatisticsStatusQueryParameter != nil {
			qrStatisticsStatus = *o.StatisticsStatusQueryParameter
		}
		qStatisticsStatus := qrStatisticsStatus
		if qStatisticsStatus != "" {

			if err := r.SetQueryParam("statistics.status", qStatisticsStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawReadQueryParameter != nil {

		// query param statistics.throughput_raw.read
		var qrStatisticsThroughputRawRead int64

		if o.StatisticsThroughputRawReadQueryParameter != nil {
			qrStatisticsThroughputRawRead = *o.StatisticsThroughputRawReadQueryParameter
		}
		qStatisticsThroughputRawRead := swag.FormatInt64(qrStatisticsThroughputRawRead)
		if qStatisticsThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.read", qStatisticsThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawTotalQueryParameter != nil {

		// query param statistics.throughput_raw.total
		var qrStatisticsThroughputRawTotal int64

		if o.StatisticsThroughputRawTotalQueryParameter != nil {
			qrStatisticsThroughputRawTotal = *o.StatisticsThroughputRawTotalQueryParameter
		}
		qStatisticsThroughputRawTotal := swag.FormatInt64(qrStatisticsThroughputRawTotal)
		if qStatisticsThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.total", qStatisticsThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawWriteQueryParameter != nil {

		// query param statistics.throughput_raw.write
		var qrStatisticsThroughputRawWrite int64

		if o.StatisticsThroughputRawWriteQueryParameter != nil {
			qrStatisticsThroughputRawWrite = *o.StatisticsThroughputRawWriteQueryParameter
		}
		qStatisticsThroughputRawWrite := swag.FormatInt64(qrStatisticsThroughputRawWrite)
		if qStatisticsThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.write", qStatisticsThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsTimestampQueryParameter != nil {

		// query param statistics.timestamp
		var qrStatisticsTimestamp string

		if o.StatisticsTimestampQueryParameter != nil {
			qrStatisticsTimestamp = *o.StatisticsTimestampQueryParameter
		}
		qStatisticsTimestamp := qrStatisticsTimestamp
		if qStatisticsTimestamp != "" {

			if err := r.SetQueryParam("statistics.timestamp", qStatisticsTimestamp); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UsersAccessKeyQueryParameter != nil {

		// query param users.access_key
		var qrUsersAccessKey string

		if o.UsersAccessKeyQueryParameter != nil {
			qrUsersAccessKey = *o.UsersAccessKeyQueryParameter
		}
		qUsersAccessKey := qrUsersAccessKey
		if qUsersAccessKey != "" {

			if err := r.SetQueryParam("users.access_key", qUsersAccessKey); err != nil {
				return err
			}
		}
	}

	if o.UsersCommentQueryParameter != nil {

		// query param users.comment
		var qrUsersComment string

		if o.UsersCommentQueryParameter != nil {
			qrUsersComment = *o.UsersCommentQueryParameter
		}
		qUsersComment := qrUsersComment
		if qUsersComment != "" {

			if err := r.SetQueryParam("users.comment", qUsersComment); err != nil {
				return err
			}
		}
	}

	if o.UsersNameQueryParameter != nil {

		// query param users.name
		var qrUsersName string

		if o.UsersNameQueryParameter != nil {
			qrUsersName = *o.UsersNameQueryParameter
		}
		qUsersName := qrUsersName
		if qUsersName != "" {

			if err := r.SetQueryParam("users.name", qUsersName); err != nil {
				return err
			}
		}
	}

	if o.UsersSVMNameQueryParameter != nil {

		// query param users.svm.name
		var qrUsersSvmName string

		if o.UsersSVMNameQueryParameter != nil {
			qrUsersSvmName = *o.UsersSVMNameQueryParameter
		}
		qUsersSvmName := qrUsersSvmName
		if qUsersSvmName != "" {

			if err := r.SetQueryParam("users.svm.name", qUsersSvmName); err != nil {
				return err
			}
		}
	}

	if o.UsersSVMUUIDQueryParameter != nil {

		// query param users.svm.uuid
		var qrUsersSvmUUID string

		if o.UsersSVMUUIDQueryParameter != nil {
			qrUsersSvmUUID = *o.UsersSVMUUIDQueryParameter
		}
		qUsersSvmUUID := qrUsersSvmUUID
		if qUsersSvmUUID != "" {

			if err := r.SetQueryParam("users.svm.uuid", qUsersSvmUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamS3ServiceCollectionGet binds the parameter fields
func (o *S3ServiceCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamS3ServiceCollectionGet binds the parameter order_by
func (o *S3ServiceCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
