// Code generated by go-swagger; DO NOT EDIT.

package s_a_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/v21/storage_drivers/ontap/api/rest/models"
)

// IscsiCredentialsCreateReader is a Reader for the IscsiCredentialsCreate structure.
type IscsiCredentialsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IscsiCredentialsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewIscsiCredentialsCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewIscsiCredentialsCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIscsiCredentialsCreateCreated creates a IscsiCredentialsCreateCreated with default headers values
func NewIscsiCredentialsCreateCreated() *IscsiCredentialsCreateCreated {
	return &IscsiCredentialsCreateCreated{}
}

/* IscsiCredentialsCreateCreated describes a response with status code 201, with default header values.

Created
*/
type IscsiCredentialsCreateCreated struct {
	Payload *models.IscsiCredentialsResponse
}

func (o *IscsiCredentialsCreateCreated) Error() string {
	return fmt.Sprintf("[POST /protocols/san/iscsi/credentials][%d] iscsiCredentialsCreateCreated  %+v", 201, o.Payload)
}
func (o *IscsiCredentialsCreateCreated) GetPayload() *models.IscsiCredentialsResponse {
	return o.Payload
}

func (o *IscsiCredentialsCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IscsiCredentialsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIscsiCredentialsCreateDefault creates a IscsiCredentialsCreateDefault with default headers values
func NewIscsiCredentialsCreateDefault(code int) *IscsiCredentialsCreateDefault {
	return &IscsiCredentialsCreateDefault{
		_statusCode: code,
	}
}

/* IscsiCredentialsCreateDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 2621462 | An SVM with the specified UUID does not exist. |
| 2621706 | Both the SVM UUID and SVM name were supplied, but they do not refer to the same SVM. |
| 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
| 5373969 | A non-empty qualifier is required after the prefix. An example of a valid IQN is _iqn.1995-08.com.example:string_. |
| 5373970 | The IQN prefix is invalid. The correct IQN prefix is _iqn_. An example of a valid IQN is _iqn.1995-08.com.example:string_. |
| 5373971 | The date field is invalid. A valid date field is _yyyy-mm_. An example of a valid IQN is _iqn.1995-08.com.example:string_. |
| 5373972 | The naming authority and string fields can contain only the characters _a-z_, _0-9_, _._, _:_, and _-_. |
| 5373977 | The EUI-64 identifier field must be exactly 16 hexadecimal digits. |
| 5373978 | The EUI formatted initiator name supplied is invalid. A valid EUI format is _eui.XXXXXXXXXXXXXXXX_, where X is a hexadecimal digit. |
| 5373997 | The initiator name supplied in invalid. The valid initiator name formats are _iqn.1995-08.com.example:string_ or _eui.0123456789abcdef_. |
| 5374078 | The iSCSI service does not exist. |
| 5374142 | An iSCSI security credential already exists for the specified initiator. |
| 5374145 | The iSCSI security password must contain an even number of valid hex digits. |
| 5374147 | The CHAP inbound and outbound passwords must be different. |
| 5374149 | The inbound user and password properties are required for CHAP authentication. |
| 5374150 | Outbound CHAP authentication requires an outbound password. |
| 5374855 | The value for property `initiator_address.ranges.start` is greater than the value for property `initiator_address.ranges.end`. |
| 5374856 | The value for property `initiator_address.ranges.start` does not belong to the same IP address family as the value for property `initiator_address.ranges.end`. |
| 5374900 | Setting the CHAP authentication properties are not supported with authentication types _none_ or _deny_. |

*/
type IscsiCredentialsCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the iscsi credentials create default response
func (o *IscsiCredentialsCreateDefault) Code() int {
	return o._statusCode
}

func (o *IscsiCredentialsCreateDefault) Error() string {
	return fmt.Sprintf("[POST /protocols/san/iscsi/credentials][%d] iscsi_credentials_create default  %+v", o._statusCode, o.Payload)
}
func (o *IscsiCredentialsCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *IscsiCredentialsCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
