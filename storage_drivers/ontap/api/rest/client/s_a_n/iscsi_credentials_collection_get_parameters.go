// Code generated by go-swagger; DO NOT EDIT.

package s_a_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIscsiCredentialsCollectionGetParams creates a new IscsiCredentialsCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewIscsiCredentialsCollectionGetParams() *IscsiCredentialsCollectionGetParams {
	return &IscsiCredentialsCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewIscsiCredentialsCollectionGetParamsWithTimeout creates a new IscsiCredentialsCollectionGetParams object
// with the ability to set a timeout on a request.
func NewIscsiCredentialsCollectionGetParamsWithTimeout(timeout time.Duration) *IscsiCredentialsCollectionGetParams {
	return &IscsiCredentialsCollectionGetParams{
		timeout: timeout,
	}
}

// NewIscsiCredentialsCollectionGetParamsWithContext creates a new IscsiCredentialsCollectionGetParams object
// with the ability to set a context for a request.
func NewIscsiCredentialsCollectionGetParamsWithContext(ctx context.Context) *IscsiCredentialsCollectionGetParams {
	return &IscsiCredentialsCollectionGetParams{
		Context: ctx,
	}
}

// NewIscsiCredentialsCollectionGetParamsWithHTTPClient creates a new IscsiCredentialsCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewIscsiCredentialsCollectionGetParamsWithHTTPClient(client *http.Client) *IscsiCredentialsCollectionGetParams {
	return &IscsiCredentialsCollectionGetParams{
		HTTPClient: client,
	}
}

/* IscsiCredentialsCollectionGetParams contains all the parameters to send to the API endpoint
   for the iscsi credentials collection get operation.

   Typically these are written to a http.Request.
*/
type IscsiCredentialsCollectionGetParams struct {

	/* AuthenticationType.

	   Filter by authentication_type
	*/
	AuthenticationTypeQueryParameter *string

	/* ChapInboundUser.

	   Filter by chap.inbound.user
	*/
	ChapInboundUserQueryParameter *string

	/* ChapOutboundUser.

	   Filter by chap.outbound.user
	*/
	ChapOutboundUserQueryParameter *string

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* Initiator.

	   Filter by initiator
	*/
	InitiatorQueryParameter *string

	/* InitiatorAddressMasksAddress.

	   Filter by initiator_address.masks.address
	*/
	InitiatorAddressMasksAddressQueryParameter *string

	/* InitiatorAddressMasksFamily.

	   Filter by initiator_address.masks.family
	*/
	InitiatorAddressMasksFamilyQueryParameter *string

	/* InitiatorAddressMasksNetmask.

	   Filter by initiator_address.masks.netmask
	*/
	InitiatorAddressMasksNetmaskQueryParameter *string

	/* InitiatorAddressRangesEnd.

	   Filter by initiator_address.ranges.end
	*/
	InitiatorAddressRangesEndQueryParameter *string

	/* InitiatorAddressRangesFamily.

	   Filter by initiator_address.ranges.family
	*/
	InitiatorAddressRangesFamilyQueryParameter *string

	/* InitiatorAddressRangesStart.

	   Filter by initiator_address.ranges.start
	*/
	InitiatorAddressRangesStartQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the iscsi credentials collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IscsiCredentialsCollectionGetParams) WithDefaults() *IscsiCredentialsCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the iscsi credentials collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IscsiCredentialsCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := IscsiCredentialsCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithTimeout(timeout time.Duration) *IscsiCredentialsCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithContext(ctx context.Context) *IscsiCredentialsCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithHTTPClient(client *http.Client) *IscsiCredentialsCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthenticationTypeQueryParameter adds the authenticationType to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithAuthenticationTypeQueryParameter(authenticationType *string) *IscsiCredentialsCollectionGetParams {
	o.SetAuthenticationTypeQueryParameter(authenticationType)
	return o
}

// SetAuthenticationTypeQueryParameter adds the authenticationType to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetAuthenticationTypeQueryParameter(authenticationType *string) {
	o.AuthenticationTypeQueryParameter = authenticationType
}

// WithChapInboundUserQueryParameter adds the chapInboundUser to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithChapInboundUserQueryParameter(chapInboundUser *string) *IscsiCredentialsCollectionGetParams {
	o.SetChapInboundUserQueryParameter(chapInboundUser)
	return o
}

// SetChapInboundUserQueryParameter adds the chapInboundUser to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetChapInboundUserQueryParameter(chapInboundUser *string) {
	o.ChapInboundUserQueryParameter = chapInboundUser
}

// WithChapOutboundUserQueryParameter adds the chapOutboundUser to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithChapOutboundUserQueryParameter(chapOutboundUser *string) *IscsiCredentialsCollectionGetParams {
	o.SetChapOutboundUserQueryParameter(chapOutboundUser)
	return o
}

// SetChapOutboundUserQueryParameter adds the chapOutboundUser to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetChapOutboundUserQueryParameter(chapOutboundUser *string) {
	o.ChapOutboundUserQueryParameter = chapOutboundUser
}

// WithFieldsQueryParameter adds the fields to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithFieldsQueryParameter(fields []string) *IscsiCredentialsCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithInitiatorQueryParameter adds the initiator to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithInitiatorQueryParameter(initiator *string) *IscsiCredentialsCollectionGetParams {
	o.SetInitiatorQueryParameter(initiator)
	return o
}

// SetInitiatorQueryParameter adds the initiator to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetInitiatorQueryParameter(initiator *string) {
	o.InitiatorQueryParameter = initiator
}

// WithInitiatorAddressMasksAddressQueryParameter adds the initiatorAddressMasksAddress to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithInitiatorAddressMasksAddressQueryParameter(initiatorAddressMasksAddress *string) *IscsiCredentialsCollectionGetParams {
	o.SetInitiatorAddressMasksAddressQueryParameter(initiatorAddressMasksAddress)
	return o
}

// SetInitiatorAddressMasksAddressQueryParameter adds the initiatorAddressMasksAddress to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetInitiatorAddressMasksAddressQueryParameter(initiatorAddressMasksAddress *string) {
	o.InitiatorAddressMasksAddressQueryParameter = initiatorAddressMasksAddress
}

// WithInitiatorAddressMasksFamilyQueryParameter adds the initiatorAddressMasksFamily to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithInitiatorAddressMasksFamilyQueryParameter(initiatorAddressMasksFamily *string) *IscsiCredentialsCollectionGetParams {
	o.SetInitiatorAddressMasksFamilyQueryParameter(initiatorAddressMasksFamily)
	return o
}

// SetInitiatorAddressMasksFamilyQueryParameter adds the initiatorAddressMasksFamily to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetInitiatorAddressMasksFamilyQueryParameter(initiatorAddressMasksFamily *string) {
	o.InitiatorAddressMasksFamilyQueryParameter = initiatorAddressMasksFamily
}

// WithInitiatorAddressMasksNetmaskQueryParameter adds the initiatorAddressMasksNetmask to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithInitiatorAddressMasksNetmaskQueryParameter(initiatorAddressMasksNetmask *string) *IscsiCredentialsCollectionGetParams {
	o.SetInitiatorAddressMasksNetmaskQueryParameter(initiatorAddressMasksNetmask)
	return o
}

// SetInitiatorAddressMasksNetmaskQueryParameter adds the initiatorAddressMasksNetmask to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetInitiatorAddressMasksNetmaskQueryParameter(initiatorAddressMasksNetmask *string) {
	o.InitiatorAddressMasksNetmaskQueryParameter = initiatorAddressMasksNetmask
}

// WithInitiatorAddressRangesEndQueryParameter adds the initiatorAddressRangesEnd to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithInitiatorAddressRangesEndQueryParameter(initiatorAddressRangesEnd *string) *IscsiCredentialsCollectionGetParams {
	o.SetInitiatorAddressRangesEndQueryParameter(initiatorAddressRangesEnd)
	return o
}

// SetInitiatorAddressRangesEndQueryParameter adds the initiatorAddressRangesEnd to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetInitiatorAddressRangesEndQueryParameter(initiatorAddressRangesEnd *string) {
	o.InitiatorAddressRangesEndQueryParameter = initiatorAddressRangesEnd
}

// WithInitiatorAddressRangesFamilyQueryParameter adds the initiatorAddressRangesFamily to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithInitiatorAddressRangesFamilyQueryParameter(initiatorAddressRangesFamily *string) *IscsiCredentialsCollectionGetParams {
	o.SetInitiatorAddressRangesFamilyQueryParameter(initiatorAddressRangesFamily)
	return o
}

// SetInitiatorAddressRangesFamilyQueryParameter adds the initiatorAddressRangesFamily to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetInitiatorAddressRangesFamilyQueryParameter(initiatorAddressRangesFamily *string) {
	o.InitiatorAddressRangesFamilyQueryParameter = initiatorAddressRangesFamily
}

// WithInitiatorAddressRangesStartQueryParameter adds the initiatorAddressRangesStart to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithInitiatorAddressRangesStartQueryParameter(initiatorAddressRangesStart *string) *IscsiCredentialsCollectionGetParams {
	o.SetInitiatorAddressRangesStartQueryParameter(initiatorAddressRangesStart)
	return o
}

// SetInitiatorAddressRangesStartQueryParameter adds the initiatorAddressRangesStart to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetInitiatorAddressRangesStartQueryParameter(initiatorAddressRangesStart *string) {
	o.InitiatorAddressRangesStartQueryParameter = initiatorAddressRangesStart
}

// WithMaxRecordsQueryParameter adds the maxRecords to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *IscsiCredentialsCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithOrderByQueryParameter adds the orderBy to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *IscsiCredentialsCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithReturnRecordsQueryParameter adds the returnRecords to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *IscsiCredentialsCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *IscsiCredentialsCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSVMNameQueryParameter adds the svmName to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *IscsiCredentialsCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *IscsiCredentialsCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the iscsi credentials collection get params
func (o *IscsiCredentialsCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WriteToRequest writes these params to a swagger request
func (o *IscsiCredentialsCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AuthenticationTypeQueryParameter != nil {

		// query param authentication_type
		var qrAuthenticationType string

		if o.AuthenticationTypeQueryParameter != nil {
			qrAuthenticationType = *o.AuthenticationTypeQueryParameter
		}
		qAuthenticationType := qrAuthenticationType
		if qAuthenticationType != "" {

			if err := r.SetQueryParam("authentication_type", qAuthenticationType); err != nil {
				return err
			}
		}
	}

	if o.ChapInboundUserQueryParameter != nil {

		// query param chap.inbound.user
		var qrChapInboundUser string

		if o.ChapInboundUserQueryParameter != nil {
			qrChapInboundUser = *o.ChapInboundUserQueryParameter
		}
		qChapInboundUser := qrChapInboundUser
		if qChapInboundUser != "" {

			if err := r.SetQueryParam("chap.inbound.user", qChapInboundUser); err != nil {
				return err
			}
		}
	}

	if o.ChapOutboundUserQueryParameter != nil {

		// query param chap.outbound.user
		var qrChapOutboundUser string

		if o.ChapOutboundUserQueryParameter != nil {
			qrChapOutboundUser = *o.ChapOutboundUserQueryParameter
		}
		qChapOutboundUser := qrChapOutboundUser
		if qChapOutboundUser != "" {

			if err := r.SetQueryParam("chap.outbound.user", qChapOutboundUser); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.InitiatorQueryParameter != nil {

		// query param initiator
		var qrInitiator string

		if o.InitiatorQueryParameter != nil {
			qrInitiator = *o.InitiatorQueryParameter
		}
		qInitiator := qrInitiator
		if qInitiator != "" {

			if err := r.SetQueryParam("initiator", qInitiator); err != nil {
				return err
			}
		}
	}

	if o.InitiatorAddressMasksAddressQueryParameter != nil {

		// query param initiator_address.masks.address
		var qrInitiatorAddressMasksAddress string

		if o.InitiatorAddressMasksAddressQueryParameter != nil {
			qrInitiatorAddressMasksAddress = *o.InitiatorAddressMasksAddressQueryParameter
		}
		qInitiatorAddressMasksAddress := qrInitiatorAddressMasksAddress
		if qInitiatorAddressMasksAddress != "" {

			if err := r.SetQueryParam("initiator_address.masks.address", qInitiatorAddressMasksAddress); err != nil {
				return err
			}
		}
	}

	if o.InitiatorAddressMasksFamilyQueryParameter != nil {

		// query param initiator_address.masks.family
		var qrInitiatorAddressMasksFamily string

		if o.InitiatorAddressMasksFamilyQueryParameter != nil {
			qrInitiatorAddressMasksFamily = *o.InitiatorAddressMasksFamilyQueryParameter
		}
		qInitiatorAddressMasksFamily := qrInitiatorAddressMasksFamily
		if qInitiatorAddressMasksFamily != "" {

			if err := r.SetQueryParam("initiator_address.masks.family", qInitiatorAddressMasksFamily); err != nil {
				return err
			}
		}
	}

	if o.InitiatorAddressMasksNetmaskQueryParameter != nil {

		// query param initiator_address.masks.netmask
		var qrInitiatorAddressMasksNetmask string

		if o.InitiatorAddressMasksNetmaskQueryParameter != nil {
			qrInitiatorAddressMasksNetmask = *o.InitiatorAddressMasksNetmaskQueryParameter
		}
		qInitiatorAddressMasksNetmask := qrInitiatorAddressMasksNetmask
		if qInitiatorAddressMasksNetmask != "" {

			if err := r.SetQueryParam("initiator_address.masks.netmask", qInitiatorAddressMasksNetmask); err != nil {
				return err
			}
		}
	}

	if o.InitiatorAddressRangesEndQueryParameter != nil {

		// query param initiator_address.ranges.end
		var qrInitiatorAddressRangesEnd string

		if o.InitiatorAddressRangesEndQueryParameter != nil {
			qrInitiatorAddressRangesEnd = *o.InitiatorAddressRangesEndQueryParameter
		}
		qInitiatorAddressRangesEnd := qrInitiatorAddressRangesEnd
		if qInitiatorAddressRangesEnd != "" {

			if err := r.SetQueryParam("initiator_address.ranges.end", qInitiatorAddressRangesEnd); err != nil {
				return err
			}
		}
	}

	if o.InitiatorAddressRangesFamilyQueryParameter != nil {

		// query param initiator_address.ranges.family
		var qrInitiatorAddressRangesFamily string

		if o.InitiatorAddressRangesFamilyQueryParameter != nil {
			qrInitiatorAddressRangesFamily = *o.InitiatorAddressRangesFamilyQueryParameter
		}
		qInitiatorAddressRangesFamily := qrInitiatorAddressRangesFamily
		if qInitiatorAddressRangesFamily != "" {

			if err := r.SetQueryParam("initiator_address.ranges.family", qInitiatorAddressRangesFamily); err != nil {
				return err
			}
		}
	}

	if o.InitiatorAddressRangesStartQueryParameter != nil {

		// query param initiator_address.ranges.start
		var qrInitiatorAddressRangesStart string

		if o.InitiatorAddressRangesStartQueryParameter != nil {
			qrInitiatorAddressRangesStart = *o.InitiatorAddressRangesStartQueryParameter
		}
		qInitiatorAddressRangesStart := qrInitiatorAddressRangesStart
		if qInitiatorAddressRangesStart != "" {

			if err := r.SetQueryParam("initiator_address.ranges.start", qInitiatorAddressRangesStart); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamIscsiCredentialsCollectionGet binds the parameter fields
func (o *IscsiCredentialsCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamIscsiCredentialsCollectionGet binds the parameter order_by
func (o *IscsiCredentialsCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
