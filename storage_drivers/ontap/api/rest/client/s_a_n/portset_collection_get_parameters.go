// Code generated by go-swagger; DO NOT EDIT.

package s_a_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPortsetCollectionGetParams creates a new PortsetCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPortsetCollectionGetParams() *PortsetCollectionGetParams {
	return &PortsetCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPortsetCollectionGetParamsWithTimeout creates a new PortsetCollectionGetParams object
// with the ability to set a timeout on a request.
func NewPortsetCollectionGetParamsWithTimeout(timeout time.Duration) *PortsetCollectionGetParams {
	return &PortsetCollectionGetParams{
		timeout: timeout,
	}
}

// NewPortsetCollectionGetParamsWithContext creates a new PortsetCollectionGetParams object
// with the ability to set a context for a request.
func NewPortsetCollectionGetParamsWithContext(ctx context.Context) *PortsetCollectionGetParams {
	return &PortsetCollectionGetParams{
		Context: ctx,
	}
}

// NewPortsetCollectionGetParamsWithHTTPClient creates a new PortsetCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewPortsetCollectionGetParamsWithHTTPClient(client *http.Client) *PortsetCollectionGetParams {
	return &PortsetCollectionGetParams{
		HTTPClient: client,
	}
}

/* PortsetCollectionGetParams contains all the parameters to send to the API endpoint
   for the portset collection get operation.

   Typically these are written to a http.Request.
*/
type PortsetCollectionGetParams struct {

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* IgroupsName.

	   Filter by igroups.name
	*/
	IgroupsNameQueryParameter *string

	/* IgroupsUUID.

	   Filter by igroups.uuid
	*/
	IgroupsUUIDQueryParameter *string

	/* InterfacesFcName.

	   Filter by interfaces.fc.name
	*/
	InterfacesFcNameQueryParameter *string

	/* InterfacesFcUUID.

	   Filter by interfaces.fc.uuid
	*/
	InterfacesFcUUIDQueryParameter *string

	/* InterfacesFcWwpn.

	   Filter by interfaces.fc.wwpn
	*/
	InterfacesFcWwpnQueryParameter *string

	/* InterfacesIPIPAddress.

	   Filter by interfaces.ip.ip.address
	*/
	InterfacesIPIPAddressQueryParameter *string

	/* InterfacesIPName.

	   Filter by interfaces.ip.name
	*/
	InterfacesIPNameQueryParameter *string

	/* InterfacesIPUUID.

	   Filter by interfaces.ip.uuid
	*/
	InterfacesIPUUIDQueryParameter *string

	/* InterfacesUUID.

	   Filter by interfaces.uuid
	*/
	InterfacesUUIDQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* Protocol.

	   Filter by protocol
	*/
	ProtocolQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the portset collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PortsetCollectionGetParams) WithDefaults() *PortsetCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the portset collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PortsetCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := PortsetCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the portset collection get params
func (o *PortsetCollectionGetParams) WithTimeout(timeout time.Duration) *PortsetCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the portset collection get params
func (o *PortsetCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the portset collection get params
func (o *PortsetCollectionGetParams) WithContext(ctx context.Context) *PortsetCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the portset collection get params
func (o *PortsetCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the portset collection get params
func (o *PortsetCollectionGetParams) WithHTTPClient(client *http.Client) *PortsetCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the portset collection get params
func (o *PortsetCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsQueryParameter adds the fields to the portset collection get params
func (o *PortsetCollectionGetParams) WithFieldsQueryParameter(fields []string) *PortsetCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the portset collection get params
func (o *PortsetCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithIgroupsNameQueryParameter adds the igroupsName to the portset collection get params
func (o *PortsetCollectionGetParams) WithIgroupsNameQueryParameter(igroupsName *string) *PortsetCollectionGetParams {
	o.SetIgroupsNameQueryParameter(igroupsName)
	return o
}

// SetIgroupsNameQueryParameter adds the igroupsName to the portset collection get params
func (o *PortsetCollectionGetParams) SetIgroupsNameQueryParameter(igroupsName *string) {
	o.IgroupsNameQueryParameter = igroupsName
}

// WithIgroupsUUIDQueryParameter adds the igroupsUUID to the portset collection get params
func (o *PortsetCollectionGetParams) WithIgroupsUUIDQueryParameter(igroupsUUID *string) *PortsetCollectionGetParams {
	o.SetIgroupsUUIDQueryParameter(igroupsUUID)
	return o
}

// SetIgroupsUUIDQueryParameter adds the igroupsUuid to the portset collection get params
func (o *PortsetCollectionGetParams) SetIgroupsUUIDQueryParameter(igroupsUUID *string) {
	o.IgroupsUUIDQueryParameter = igroupsUUID
}

// WithInterfacesFcNameQueryParameter adds the interfacesFcName to the portset collection get params
func (o *PortsetCollectionGetParams) WithInterfacesFcNameQueryParameter(interfacesFcName *string) *PortsetCollectionGetParams {
	o.SetInterfacesFcNameQueryParameter(interfacesFcName)
	return o
}

// SetInterfacesFcNameQueryParameter adds the interfacesFcName to the portset collection get params
func (o *PortsetCollectionGetParams) SetInterfacesFcNameQueryParameter(interfacesFcName *string) {
	o.InterfacesFcNameQueryParameter = interfacesFcName
}

// WithInterfacesFcUUIDQueryParameter adds the interfacesFcUUID to the portset collection get params
func (o *PortsetCollectionGetParams) WithInterfacesFcUUIDQueryParameter(interfacesFcUUID *string) *PortsetCollectionGetParams {
	o.SetInterfacesFcUUIDQueryParameter(interfacesFcUUID)
	return o
}

// SetInterfacesFcUUIDQueryParameter adds the interfacesFcUuid to the portset collection get params
func (o *PortsetCollectionGetParams) SetInterfacesFcUUIDQueryParameter(interfacesFcUUID *string) {
	o.InterfacesFcUUIDQueryParameter = interfacesFcUUID
}

// WithInterfacesFcWwpnQueryParameter adds the interfacesFcWwpn to the portset collection get params
func (o *PortsetCollectionGetParams) WithInterfacesFcWwpnQueryParameter(interfacesFcWwpn *string) *PortsetCollectionGetParams {
	o.SetInterfacesFcWwpnQueryParameter(interfacesFcWwpn)
	return o
}

// SetInterfacesFcWwpnQueryParameter adds the interfacesFcWwpn to the portset collection get params
func (o *PortsetCollectionGetParams) SetInterfacesFcWwpnQueryParameter(interfacesFcWwpn *string) {
	o.InterfacesFcWwpnQueryParameter = interfacesFcWwpn
}

// WithInterfacesIPIPAddressQueryParameter adds the interfacesIPIPAddress to the portset collection get params
func (o *PortsetCollectionGetParams) WithInterfacesIPIPAddressQueryParameter(interfacesIPIPAddress *string) *PortsetCollectionGetParams {
	o.SetInterfacesIPIPAddressQueryParameter(interfacesIPIPAddress)
	return o
}

// SetInterfacesIPIPAddressQueryParameter adds the interfacesIpIpAddress to the portset collection get params
func (o *PortsetCollectionGetParams) SetInterfacesIPIPAddressQueryParameter(interfacesIPIPAddress *string) {
	o.InterfacesIPIPAddressQueryParameter = interfacesIPIPAddress
}

// WithInterfacesIPNameQueryParameter adds the interfacesIPName to the portset collection get params
func (o *PortsetCollectionGetParams) WithInterfacesIPNameQueryParameter(interfacesIPName *string) *PortsetCollectionGetParams {
	o.SetInterfacesIPNameQueryParameter(interfacesIPName)
	return o
}

// SetInterfacesIPNameQueryParameter adds the interfacesIpName to the portset collection get params
func (o *PortsetCollectionGetParams) SetInterfacesIPNameQueryParameter(interfacesIPName *string) {
	o.InterfacesIPNameQueryParameter = interfacesIPName
}

// WithInterfacesIPUUIDQueryParameter adds the interfacesIPUUID to the portset collection get params
func (o *PortsetCollectionGetParams) WithInterfacesIPUUIDQueryParameter(interfacesIPUUID *string) *PortsetCollectionGetParams {
	o.SetInterfacesIPUUIDQueryParameter(interfacesIPUUID)
	return o
}

// SetInterfacesIPUUIDQueryParameter adds the interfacesIpUuid to the portset collection get params
func (o *PortsetCollectionGetParams) SetInterfacesIPUUIDQueryParameter(interfacesIPUUID *string) {
	o.InterfacesIPUUIDQueryParameter = interfacesIPUUID
}

// WithInterfacesUUIDQueryParameter adds the interfacesUUID to the portset collection get params
func (o *PortsetCollectionGetParams) WithInterfacesUUIDQueryParameter(interfacesUUID *string) *PortsetCollectionGetParams {
	o.SetInterfacesUUIDQueryParameter(interfacesUUID)
	return o
}

// SetInterfacesUUIDQueryParameter adds the interfacesUuid to the portset collection get params
func (o *PortsetCollectionGetParams) SetInterfacesUUIDQueryParameter(interfacesUUID *string) {
	o.InterfacesUUIDQueryParameter = interfacesUUID
}

// WithMaxRecordsQueryParameter adds the maxRecords to the portset collection get params
func (o *PortsetCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *PortsetCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the portset collection get params
func (o *PortsetCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithNameQueryParameter adds the name to the portset collection get params
func (o *PortsetCollectionGetParams) WithNameQueryParameter(name *string) *PortsetCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the portset collection get params
func (o *PortsetCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the portset collection get params
func (o *PortsetCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *PortsetCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the portset collection get params
func (o *PortsetCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithProtocolQueryParameter adds the protocol to the portset collection get params
func (o *PortsetCollectionGetParams) WithProtocolQueryParameter(protocol *string) *PortsetCollectionGetParams {
	o.SetProtocolQueryParameter(protocol)
	return o
}

// SetProtocolQueryParameter adds the protocol to the portset collection get params
func (o *PortsetCollectionGetParams) SetProtocolQueryParameter(protocol *string) {
	o.ProtocolQueryParameter = protocol
}

// WithReturnRecordsQueryParameter adds the returnRecords to the portset collection get params
func (o *PortsetCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *PortsetCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the portset collection get params
func (o *PortsetCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the portset collection get params
func (o *PortsetCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *PortsetCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the portset collection get params
func (o *PortsetCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSVMNameQueryParameter adds the svmName to the portset collection get params
func (o *PortsetCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *PortsetCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the portset collection get params
func (o *PortsetCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the portset collection get params
func (o *PortsetCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *PortsetCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the portset collection get params
func (o *PortsetCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUUIDQueryParameter adds the uuid to the portset collection get params
func (o *PortsetCollectionGetParams) WithUUIDQueryParameter(uuid *string) *PortsetCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the portset collection get params
func (o *PortsetCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *PortsetCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.IgroupsNameQueryParameter != nil {

		// query param igroups.name
		var qrIgroupsName string

		if o.IgroupsNameQueryParameter != nil {
			qrIgroupsName = *o.IgroupsNameQueryParameter
		}
		qIgroupsName := qrIgroupsName
		if qIgroupsName != "" {

			if err := r.SetQueryParam("igroups.name", qIgroupsName); err != nil {
				return err
			}
		}
	}

	if o.IgroupsUUIDQueryParameter != nil {

		// query param igroups.uuid
		var qrIgroupsUUID string

		if o.IgroupsUUIDQueryParameter != nil {
			qrIgroupsUUID = *o.IgroupsUUIDQueryParameter
		}
		qIgroupsUUID := qrIgroupsUUID
		if qIgroupsUUID != "" {

			if err := r.SetQueryParam("igroups.uuid", qIgroupsUUID); err != nil {
				return err
			}
		}
	}

	if o.InterfacesFcNameQueryParameter != nil {

		// query param interfaces.fc.name
		var qrInterfacesFcName string

		if o.InterfacesFcNameQueryParameter != nil {
			qrInterfacesFcName = *o.InterfacesFcNameQueryParameter
		}
		qInterfacesFcName := qrInterfacesFcName
		if qInterfacesFcName != "" {

			if err := r.SetQueryParam("interfaces.fc.name", qInterfacesFcName); err != nil {
				return err
			}
		}
	}

	if o.InterfacesFcUUIDQueryParameter != nil {

		// query param interfaces.fc.uuid
		var qrInterfacesFcUUID string

		if o.InterfacesFcUUIDQueryParameter != nil {
			qrInterfacesFcUUID = *o.InterfacesFcUUIDQueryParameter
		}
		qInterfacesFcUUID := qrInterfacesFcUUID
		if qInterfacesFcUUID != "" {

			if err := r.SetQueryParam("interfaces.fc.uuid", qInterfacesFcUUID); err != nil {
				return err
			}
		}
	}

	if o.InterfacesFcWwpnQueryParameter != nil {

		// query param interfaces.fc.wwpn
		var qrInterfacesFcWwpn string

		if o.InterfacesFcWwpnQueryParameter != nil {
			qrInterfacesFcWwpn = *o.InterfacesFcWwpnQueryParameter
		}
		qInterfacesFcWwpn := qrInterfacesFcWwpn
		if qInterfacesFcWwpn != "" {

			if err := r.SetQueryParam("interfaces.fc.wwpn", qInterfacesFcWwpn); err != nil {
				return err
			}
		}
	}

	if o.InterfacesIPIPAddressQueryParameter != nil {

		// query param interfaces.ip.ip.address
		var qrInterfacesIPIPAddress string

		if o.InterfacesIPIPAddressQueryParameter != nil {
			qrInterfacesIPIPAddress = *o.InterfacesIPIPAddressQueryParameter
		}
		qInterfacesIPIPAddress := qrInterfacesIPIPAddress
		if qInterfacesIPIPAddress != "" {

			if err := r.SetQueryParam("interfaces.ip.ip.address", qInterfacesIPIPAddress); err != nil {
				return err
			}
		}
	}

	if o.InterfacesIPNameQueryParameter != nil {

		// query param interfaces.ip.name
		var qrInterfacesIPName string

		if o.InterfacesIPNameQueryParameter != nil {
			qrInterfacesIPName = *o.InterfacesIPNameQueryParameter
		}
		qInterfacesIPName := qrInterfacesIPName
		if qInterfacesIPName != "" {

			if err := r.SetQueryParam("interfaces.ip.name", qInterfacesIPName); err != nil {
				return err
			}
		}
	}

	if o.InterfacesIPUUIDQueryParameter != nil {

		// query param interfaces.ip.uuid
		var qrInterfacesIPUUID string

		if o.InterfacesIPUUIDQueryParameter != nil {
			qrInterfacesIPUUID = *o.InterfacesIPUUIDQueryParameter
		}
		qInterfacesIPUUID := qrInterfacesIPUUID
		if qInterfacesIPUUID != "" {

			if err := r.SetQueryParam("interfaces.ip.uuid", qInterfacesIPUUID); err != nil {
				return err
			}
		}
	}

	if o.InterfacesUUIDQueryParameter != nil {

		// query param interfaces.uuid
		var qrInterfacesUUID string

		if o.InterfacesUUIDQueryParameter != nil {
			qrInterfacesUUID = *o.InterfacesUUIDQueryParameter
		}
		qInterfacesUUID := qrInterfacesUUID
		if qInterfacesUUID != "" {

			if err := r.SetQueryParam("interfaces.uuid", qInterfacesUUID); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ProtocolQueryParameter != nil {

		// query param protocol
		var qrProtocol string

		if o.ProtocolQueryParameter != nil {
			qrProtocol = *o.ProtocolQueryParameter
		}
		qProtocol := qrProtocol
		if qProtocol != "" {

			if err := r.SetQueryParam("protocol", qProtocol); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPortsetCollectionGet binds the parameter fields
func (o *PortsetCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamPortsetCollectionGet binds the parameter order_by
func (o *PortsetCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
