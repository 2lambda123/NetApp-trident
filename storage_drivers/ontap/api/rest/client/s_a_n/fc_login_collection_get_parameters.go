// Code generated by go-swagger; DO NOT EDIT.

package s_a_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewFcLoginCollectionGetParams creates a new FcLoginCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFcLoginCollectionGetParams() *FcLoginCollectionGetParams {
	return &FcLoginCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFcLoginCollectionGetParamsWithTimeout creates a new FcLoginCollectionGetParams object
// with the ability to set a timeout on a request.
func NewFcLoginCollectionGetParamsWithTimeout(timeout time.Duration) *FcLoginCollectionGetParams {
	return &FcLoginCollectionGetParams{
		timeout: timeout,
	}
}

// NewFcLoginCollectionGetParamsWithContext creates a new FcLoginCollectionGetParams object
// with the ability to set a context for a request.
func NewFcLoginCollectionGetParamsWithContext(ctx context.Context) *FcLoginCollectionGetParams {
	return &FcLoginCollectionGetParams{
		Context: ctx,
	}
}

// NewFcLoginCollectionGetParamsWithHTTPClient creates a new FcLoginCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewFcLoginCollectionGetParamsWithHTTPClient(client *http.Client) *FcLoginCollectionGetParams {
	return &FcLoginCollectionGetParams{
		HTTPClient: client,
	}
}

/* FcLoginCollectionGetParams contains all the parameters to send to the API endpoint
   for the fc login collection get operation.

   Typically these are written to a http.Request.
*/
type FcLoginCollectionGetParams struct {

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* IgroupsName.

	   Filter by igroups.name
	*/
	IgroupsNameQueryParameter *string

	/* IgroupsUUID.

	   Filter by igroups.uuid
	*/
	IgroupsUUIDQueryParameter *string

	/* InitiatorAliases.

	   Filter by initiator.aliases
	*/
	InitiatorAliasesQueryParameter *string

	/* InitiatorComment.

	   Filter by initiator.comment
	*/
	InitiatorCommentQueryParameter *string

	/* InitiatorPortAddress.

	   Filter by initiator.port_address
	*/
	InitiatorPortAddressQueryParameter *string

	/* InitiatorWwnn.

	   Filter by initiator.wwnn
	*/
	InitiatorWwnnQueryParameter *string

	/* InitiatorWwpn.

	   Filter by initiator.wwpn
	*/
	InitiatorWwpnQueryParameter *string

	/* InterfaceName.

	   Filter by interface.name
	*/
	InterfaceNameQueryParameter *string

	/* InterfaceUUID.

	   Filter by interface.uuid
	*/
	InterfaceUUIDQueryParameter *string

	/* InterfaceWwpn.

	   Filter by interface.wwpn
	*/
	InterfaceWwpnQueryParameter *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* Protocol.

	   Filter by protocol
	*/
	ProtocolQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the fc login collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FcLoginCollectionGetParams) WithDefaults() *FcLoginCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the fc login collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FcLoginCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := FcLoginCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithTimeout(timeout time.Duration) *FcLoginCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithContext(ctx context.Context) *FcLoginCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithHTTPClient(client *http.Client) *FcLoginCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsQueryParameter adds the fields to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithFieldsQueryParameter(fields []string) *FcLoginCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithIgroupsNameQueryParameter adds the igroupsName to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithIgroupsNameQueryParameter(igroupsName *string) *FcLoginCollectionGetParams {
	o.SetIgroupsNameQueryParameter(igroupsName)
	return o
}

// SetIgroupsNameQueryParameter adds the igroupsName to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetIgroupsNameQueryParameter(igroupsName *string) {
	o.IgroupsNameQueryParameter = igroupsName
}

// WithIgroupsUUIDQueryParameter adds the igroupsUUID to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithIgroupsUUIDQueryParameter(igroupsUUID *string) *FcLoginCollectionGetParams {
	o.SetIgroupsUUIDQueryParameter(igroupsUUID)
	return o
}

// SetIgroupsUUIDQueryParameter adds the igroupsUuid to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetIgroupsUUIDQueryParameter(igroupsUUID *string) {
	o.IgroupsUUIDQueryParameter = igroupsUUID
}

// WithInitiatorAliasesQueryParameter adds the initiatorAliases to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInitiatorAliasesQueryParameter(initiatorAliases *string) *FcLoginCollectionGetParams {
	o.SetInitiatorAliasesQueryParameter(initiatorAliases)
	return o
}

// SetInitiatorAliasesQueryParameter adds the initiatorAliases to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInitiatorAliasesQueryParameter(initiatorAliases *string) {
	o.InitiatorAliasesQueryParameter = initiatorAliases
}

// WithInitiatorCommentQueryParameter adds the initiatorComment to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInitiatorCommentQueryParameter(initiatorComment *string) *FcLoginCollectionGetParams {
	o.SetInitiatorCommentQueryParameter(initiatorComment)
	return o
}

// SetInitiatorCommentQueryParameter adds the initiatorComment to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInitiatorCommentQueryParameter(initiatorComment *string) {
	o.InitiatorCommentQueryParameter = initiatorComment
}

// WithInitiatorPortAddressQueryParameter adds the initiatorPortAddress to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInitiatorPortAddressQueryParameter(initiatorPortAddress *string) *FcLoginCollectionGetParams {
	o.SetInitiatorPortAddressQueryParameter(initiatorPortAddress)
	return o
}

// SetInitiatorPortAddressQueryParameter adds the initiatorPortAddress to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInitiatorPortAddressQueryParameter(initiatorPortAddress *string) {
	o.InitiatorPortAddressQueryParameter = initiatorPortAddress
}

// WithInitiatorWwnnQueryParameter adds the initiatorWwnn to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInitiatorWwnnQueryParameter(initiatorWwnn *string) *FcLoginCollectionGetParams {
	o.SetInitiatorWwnnQueryParameter(initiatorWwnn)
	return o
}

// SetInitiatorWwnnQueryParameter adds the initiatorWwnn to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInitiatorWwnnQueryParameter(initiatorWwnn *string) {
	o.InitiatorWwnnQueryParameter = initiatorWwnn
}

// WithInitiatorWwpnQueryParameter adds the initiatorWwpn to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInitiatorWwpnQueryParameter(initiatorWwpn *string) *FcLoginCollectionGetParams {
	o.SetInitiatorWwpnQueryParameter(initiatorWwpn)
	return o
}

// SetInitiatorWwpnQueryParameter adds the initiatorWwpn to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInitiatorWwpnQueryParameter(initiatorWwpn *string) {
	o.InitiatorWwpnQueryParameter = initiatorWwpn
}

// WithInterfaceNameQueryParameter adds the interfaceName to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInterfaceNameQueryParameter(interfaceName *string) *FcLoginCollectionGetParams {
	o.SetInterfaceNameQueryParameter(interfaceName)
	return o
}

// SetInterfaceNameQueryParameter adds the interfaceName to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInterfaceNameQueryParameter(interfaceName *string) {
	o.InterfaceNameQueryParameter = interfaceName
}

// WithInterfaceUUIDQueryParameter adds the interfaceUUID to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInterfaceUUIDQueryParameter(interfaceUUID *string) *FcLoginCollectionGetParams {
	o.SetInterfaceUUIDQueryParameter(interfaceUUID)
	return o
}

// SetInterfaceUUIDQueryParameter adds the interfaceUuid to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInterfaceUUIDQueryParameter(interfaceUUID *string) {
	o.InterfaceUUIDQueryParameter = interfaceUUID
}

// WithInterfaceWwpnQueryParameter adds the interfaceWwpn to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithInterfaceWwpnQueryParameter(interfaceWwpn *string) *FcLoginCollectionGetParams {
	o.SetInterfaceWwpnQueryParameter(interfaceWwpn)
	return o
}

// SetInterfaceWwpnQueryParameter adds the interfaceWwpn to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetInterfaceWwpnQueryParameter(interfaceWwpn *string) {
	o.InterfaceWwpnQueryParameter = interfaceWwpn
}

// WithMaxRecordsQueryParameter adds the maxRecords to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *FcLoginCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithOrderByQueryParameter adds the orderBy to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *FcLoginCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithProtocolQueryParameter adds the protocol to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithProtocolQueryParameter(protocol *string) *FcLoginCollectionGetParams {
	o.SetProtocolQueryParameter(protocol)
	return o
}

// SetProtocolQueryParameter adds the protocol to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetProtocolQueryParameter(protocol *string) {
	o.ProtocolQueryParameter = protocol
}

// WithReturnRecordsQueryParameter adds the returnRecords to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *FcLoginCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *FcLoginCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSVMNameQueryParameter adds the svmName to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *FcLoginCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the fc login collection get params
func (o *FcLoginCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *FcLoginCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the fc login collection get params
func (o *FcLoginCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WriteToRequest writes these params to a swagger request
func (o *FcLoginCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.IgroupsNameQueryParameter != nil {

		// query param igroups.name
		var qrIgroupsName string

		if o.IgroupsNameQueryParameter != nil {
			qrIgroupsName = *o.IgroupsNameQueryParameter
		}
		qIgroupsName := qrIgroupsName
		if qIgroupsName != "" {

			if err := r.SetQueryParam("igroups.name", qIgroupsName); err != nil {
				return err
			}
		}
	}

	if o.IgroupsUUIDQueryParameter != nil {

		// query param igroups.uuid
		var qrIgroupsUUID string

		if o.IgroupsUUIDQueryParameter != nil {
			qrIgroupsUUID = *o.IgroupsUUIDQueryParameter
		}
		qIgroupsUUID := qrIgroupsUUID
		if qIgroupsUUID != "" {

			if err := r.SetQueryParam("igroups.uuid", qIgroupsUUID); err != nil {
				return err
			}
		}
	}

	if o.InitiatorAliasesQueryParameter != nil {

		// query param initiator.aliases
		var qrInitiatorAliases string

		if o.InitiatorAliasesQueryParameter != nil {
			qrInitiatorAliases = *o.InitiatorAliasesQueryParameter
		}
		qInitiatorAliases := qrInitiatorAliases
		if qInitiatorAliases != "" {

			if err := r.SetQueryParam("initiator.aliases", qInitiatorAliases); err != nil {
				return err
			}
		}
	}

	if o.InitiatorCommentQueryParameter != nil {

		// query param initiator.comment
		var qrInitiatorComment string

		if o.InitiatorCommentQueryParameter != nil {
			qrInitiatorComment = *o.InitiatorCommentQueryParameter
		}
		qInitiatorComment := qrInitiatorComment
		if qInitiatorComment != "" {

			if err := r.SetQueryParam("initiator.comment", qInitiatorComment); err != nil {
				return err
			}
		}
	}

	if o.InitiatorPortAddressQueryParameter != nil {

		// query param initiator.port_address
		var qrInitiatorPortAddress string

		if o.InitiatorPortAddressQueryParameter != nil {
			qrInitiatorPortAddress = *o.InitiatorPortAddressQueryParameter
		}
		qInitiatorPortAddress := qrInitiatorPortAddress
		if qInitiatorPortAddress != "" {

			if err := r.SetQueryParam("initiator.port_address", qInitiatorPortAddress); err != nil {
				return err
			}
		}
	}

	if o.InitiatorWwnnQueryParameter != nil {

		// query param initiator.wwnn
		var qrInitiatorWwnn string

		if o.InitiatorWwnnQueryParameter != nil {
			qrInitiatorWwnn = *o.InitiatorWwnnQueryParameter
		}
		qInitiatorWwnn := qrInitiatorWwnn
		if qInitiatorWwnn != "" {

			if err := r.SetQueryParam("initiator.wwnn", qInitiatorWwnn); err != nil {
				return err
			}
		}
	}

	if o.InitiatorWwpnQueryParameter != nil {

		// query param initiator.wwpn
		var qrInitiatorWwpn string

		if o.InitiatorWwpnQueryParameter != nil {
			qrInitiatorWwpn = *o.InitiatorWwpnQueryParameter
		}
		qInitiatorWwpn := qrInitiatorWwpn
		if qInitiatorWwpn != "" {

			if err := r.SetQueryParam("initiator.wwpn", qInitiatorWwpn); err != nil {
				return err
			}
		}
	}

	if o.InterfaceNameQueryParameter != nil {

		// query param interface.name
		var qrInterfaceName string

		if o.InterfaceNameQueryParameter != nil {
			qrInterfaceName = *o.InterfaceNameQueryParameter
		}
		qInterfaceName := qrInterfaceName
		if qInterfaceName != "" {

			if err := r.SetQueryParam("interface.name", qInterfaceName); err != nil {
				return err
			}
		}
	}

	if o.InterfaceUUIDQueryParameter != nil {

		// query param interface.uuid
		var qrInterfaceUUID string

		if o.InterfaceUUIDQueryParameter != nil {
			qrInterfaceUUID = *o.InterfaceUUIDQueryParameter
		}
		qInterfaceUUID := qrInterfaceUUID
		if qInterfaceUUID != "" {

			if err := r.SetQueryParam("interface.uuid", qInterfaceUUID); err != nil {
				return err
			}
		}
	}

	if o.InterfaceWwpnQueryParameter != nil {

		// query param interface.wwpn
		var qrInterfaceWwpn string

		if o.InterfaceWwpnQueryParameter != nil {
			qrInterfaceWwpn = *o.InterfaceWwpnQueryParameter
		}
		qInterfaceWwpn := qrInterfaceWwpn
		if qInterfaceWwpn != "" {

			if err := r.SetQueryParam("interface.wwpn", qInterfaceWwpn); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ProtocolQueryParameter != nil {

		// query param protocol
		var qrProtocol string

		if o.ProtocolQueryParameter != nil {
			qrProtocol = *o.ProtocolQueryParameter
		}
		qProtocol := qrProtocol
		if qProtocol != "" {

			if err := r.SetQueryParam("protocol", qProtocol); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamFcLoginCollectionGet binds the parameter fields
func (o *FcLoginCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamFcLoginCollectionGet binds the parameter order_by
func (o *FcLoginCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
