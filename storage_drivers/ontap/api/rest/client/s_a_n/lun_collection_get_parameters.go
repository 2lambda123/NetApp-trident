// Code generated by go-swagger; DO NOT EDIT.

package s_a_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLunCollectionGetParams creates a new LunCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLunCollectionGetParams() *LunCollectionGetParams {
	return &LunCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLunCollectionGetParamsWithTimeout creates a new LunCollectionGetParams object
// with the ability to set a timeout on a request.
func NewLunCollectionGetParamsWithTimeout(timeout time.Duration) *LunCollectionGetParams {
	return &LunCollectionGetParams{
		timeout: timeout,
	}
}

// NewLunCollectionGetParamsWithContext creates a new LunCollectionGetParams object
// with the ability to set a context for a request.
func NewLunCollectionGetParamsWithContext(ctx context.Context) *LunCollectionGetParams {
	return &LunCollectionGetParams{
		Context: ctx,
	}
}

// NewLunCollectionGetParamsWithHTTPClient creates a new LunCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewLunCollectionGetParamsWithHTTPClient(client *http.Client) *LunCollectionGetParams {
	return &LunCollectionGetParams{
		HTTPClient: client,
	}
}

/*
LunCollectionGetParams contains all the parameters to send to the API endpoint

	for the lun collection get operation.

	Typically these are written to a http.Request.
*/
type LunCollectionGetParams struct {

	/* AttributesName.

	   Filter by attributes.name
	*/
	AttributesNameQueryParameter *string

	/* AttributesValue.

	   Filter by attributes.value
	*/
	AttributesValueQueryParameter *string

	/* AutoDelete.

	   Filter by auto_delete
	*/
	AutoDeleteQueryParameter *bool

	/* Class.

	   Filter by class
	*/
	ClassQueryParameter *string

	/* Comment.

	   Filter by comment
	*/
	CommentQueryParameter *string

	/* ConsistencyGroupName.

	   Filter by consistency_group.name
	*/
	ConsistencyGroupNameQueryParameter *string

	/* ConsistencyGroupUUID.

	   Filter by consistency_group.uuid
	*/
	ConsistencyGroupUUIDQueryParameter *string

	/* CopyDestinationsMaxThroughput.

	   Filter by copy.destinations.max_throughput
	*/
	CopyDestinationsMaxThroughputQueryParameter *int64

	/* CopyDestinationsName.

	   Filter by copy.destinations.name
	*/
	CopyDestinationsNameQueryParameter *string

	/* CopyDestinationsProgressElapsed.

	   Filter by copy.destinations.progress.elapsed
	*/
	CopyDestinationsProgressElapsedQueryParameter *int64

	/* CopyDestinationsProgressFailureArgumentsCode.

	   Filter by copy.destinations.progress.failure.arguments.code
	*/
	CopyDestinationsProgressFailureArgumentsCodeQueryParameter *string

	/* CopyDestinationsProgressFailureArgumentsMessage.

	   Filter by copy.destinations.progress.failure.arguments.message
	*/
	CopyDestinationsProgressFailureArgumentsMessageQueryParameter *string

	/* CopyDestinationsProgressFailureCode.

	   Filter by copy.destinations.progress.failure.code
	*/
	CopyDestinationsProgressFailureCodeQueryParameter *string

	/* CopyDestinationsProgressFailureMessage.

	   Filter by copy.destinations.progress.failure.message
	*/
	CopyDestinationsProgressFailureMessageQueryParameter *string

	/* CopyDestinationsProgressFailureTarget.

	   Filter by copy.destinations.progress.failure.target
	*/
	CopyDestinationsProgressFailureTargetQueryParameter *string

	/* CopyDestinationsProgressPercentComplete.

	   Filter by copy.destinations.progress.percent_complete
	*/
	CopyDestinationsProgressPercentCompleteQueryParameter *int64

	/* CopyDestinationsProgressState.

	   Filter by copy.destinations.progress.state
	*/
	CopyDestinationsProgressStateQueryParameter *string

	/* CopyDestinationsProgressVolumeSnapshotBlocked.

	   Filter by copy.destinations.progress.volume_snapshot_blocked
	*/
	CopyDestinationsProgressVolumeSnapshotBlockedQueryParameter *bool

	/* CopyDestinationsUUID.

	   Filter by copy.destinations.uuid
	*/
	CopyDestinationsUUIDQueryParameter *string

	/* CopySourceMaxThroughput.

	   Filter by copy.source.max_throughput
	*/
	CopySourceMaxThroughputQueryParameter *int64

	/* CopySourceName.

	   Filter by copy.source.name
	*/
	CopySourceNameQueryParameter *string

	/* CopySourceProgressElapsed.

	   Filter by copy.source.progress.elapsed
	*/
	CopySourceProgressElapsedQueryParameter *int64

	/* CopySourceProgressFailureArgumentsCode.

	   Filter by copy.source.progress.failure.arguments.code
	*/
	CopySourceProgressFailureArgumentsCodeQueryParameter *string

	/* CopySourceProgressFailureArgumentsMessage.

	   Filter by copy.source.progress.failure.arguments.message
	*/
	CopySourceProgressFailureArgumentsMessageQueryParameter *string

	/* CopySourceProgressFailureCode.

	   Filter by copy.source.progress.failure.code
	*/
	CopySourceProgressFailureCodeQueryParameter *string

	/* CopySourceProgressFailureMessage.

	   Filter by copy.source.progress.failure.message
	*/
	CopySourceProgressFailureMessageQueryParameter *string

	/* CopySourceProgressFailureTarget.

	   Filter by copy.source.progress.failure.target
	*/
	CopySourceProgressFailureTargetQueryParameter *string

	/* CopySourceProgressPercentComplete.

	   Filter by copy.source.progress.percent_complete
	*/
	CopySourceProgressPercentCompleteQueryParameter *int64

	/* CopySourceProgressState.

	   Filter by copy.source.progress.state
	*/
	CopySourceProgressStateQueryParameter *string

	/* CopySourceProgressVolumeSnapshotBlocked.

	   Filter by copy.source.progress.volume_snapshot_blocked
	*/
	CopySourceProgressVolumeSnapshotBlockedQueryParameter *bool

	/* CopySourceUUID.

	   Filter by copy.source.uuid
	*/
	CopySourceUUIDQueryParameter *string

	/* CreateTime.

	   Filter by create_time
	*/
	CreateTimeQueryParameter *string

	/* Enabled.

	   Filter by enabled
	*/
	EnabledQueryParameter *bool

	/* Fields.

	   Specify the fields to return.
	*/
	FieldsQueryParameter []string

	/* LocationLogicalUnit.

	   Filter by location.logical_unit
	*/
	LocationLogicalUnitQueryParameter *string

	/* LocationNodeName.

	   Filter by location.node.name
	*/
	LocationNodeNameQueryParameter *string

	/* LocationNodeUUID.

	   Filter by location.node.uuid
	*/
	LocationNodeUUIDQueryParameter *string

	/* LocationQtreeID.

	   Filter by location.qtree.id
	*/
	LocationQtreeIDQueryParameter *int64

	/* LocationQtreeName.

	   Filter by location.qtree.name
	*/
	LocationQtreeNameQueryParameter *string

	/* LocationVolumeName.

	   Filter by location.volume.name
	*/
	LocationVolumeNameQueryParameter *string

	/* LocationVolumeUUID.

	   Filter by location.volume.uuid
	*/
	LocationVolumeUUIDQueryParameter *string

	/* LunMapsIgroupName.

	   Filter by lun_maps.igroup.name
	*/
	LunMapsIgroupNameQueryParameter *string

	/* LunMapsIgroupUUID.

	   Filter by lun_maps.igroup.uuid
	*/
	LunMapsIgroupUUIDQueryParameter *string

	/* LunMapsLogicalUnitNumber.

	   Filter by lun_maps.logical_unit_number
	*/
	LunMapsLogicalUnitNumberQueryParameter *int64

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecordsQueryParameter *int64

	/* MetricDuration.

	   Filter by metric.duration
	*/
	MetricDurationQueryParameter *string

	/* MetricIopsOther.

	   Filter by metric.iops.other
	*/
	MetricIopsOtherQueryParameter *int64

	/* MetricIopsRead.

	   Filter by metric.iops.read
	*/
	MetricIopsReadQueryParameter *int64

	/* MetricIopsTotal.

	   Filter by metric.iops.total
	*/
	MetricIopsTotalQueryParameter *int64

	/* MetricIopsWrite.

	   Filter by metric.iops.write
	*/
	MetricIopsWriteQueryParameter *int64

	/* MetricLatencyOther.

	   Filter by metric.latency.other
	*/
	MetricLatencyOtherQueryParameter *int64

	/* MetricLatencyRead.

	   Filter by metric.latency.read
	*/
	MetricLatencyReadQueryParameter *int64

	/* MetricLatencyTotal.

	   Filter by metric.latency.total
	*/
	MetricLatencyTotalQueryParameter *int64

	/* MetricLatencyWrite.

	   Filter by metric.latency.write
	*/
	MetricLatencyWriteQueryParameter *int64

	/* MetricStatus.

	   Filter by metric.status
	*/
	MetricStatusQueryParameter *string

	/* MetricThroughputOther.

	   Filter by metric.throughput.other
	*/
	MetricThroughputOtherQueryParameter *int64

	/* MetricThroughputRead.

	   Filter by metric.throughput.read
	*/
	MetricThroughputReadQueryParameter *int64

	/* MetricThroughputTotal.

	   Filter by metric.throughput.total
	*/
	MetricThroughputTotalQueryParameter *int64

	/* MetricThroughputWrite.

	   Filter by metric.throughput.write
	*/
	MetricThroughputWriteQueryParameter *int64

	/* MetricTimestamp.

	   Filter by metric.timestamp
	*/
	MetricTimestampQueryParameter *string

	/* MovementMaxThroughput.

	   Filter by movement.max_throughput
	*/
	MovementMaxThroughputQueryParameter *int64

	/* MovementPathsDestination.

	   Filter by movement.paths.destination
	*/
	MovementPathsDestinationQueryParameter *string

	/* MovementPathsSource.

	   Filter by movement.paths.source
	*/
	MovementPathsSourceQueryParameter *string

	/* MovementProgressElapsed.

	   Filter by movement.progress.elapsed
	*/
	MovementProgressElapsedQueryParameter *int64

	/* MovementProgressFailureArgumentsCode.

	   Filter by movement.progress.failure.arguments.code
	*/
	MovementProgressFailureArgumentsCodeQueryParameter *string

	/* MovementProgressFailureArgumentsMessage.

	   Filter by movement.progress.failure.arguments.message
	*/
	MovementProgressFailureArgumentsMessageQueryParameter *string

	/* MovementProgressFailureCode.

	   Filter by movement.progress.failure.code
	*/
	MovementProgressFailureCodeQueryParameter *string

	/* MovementProgressFailureMessage.

	   Filter by movement.progress.failure.message
	*/
	MovementProgressFailureMessageQueryParameter *string

	/* MovementProgressFailureTarget.

	   Filter by movement.progress.failure.target
	*/
	MovementProgressFailureTargetQueryParameter *string

	/* MovementProgressPercentComplete.

	   Filter by movement.progress.percent_complete
	*/
	MovementProgressPercentCompleteQueryParameter *int64

	/* MovementProgressState.

	   Filter by movement.progress.state
	*/
	MovementProgressStateQueryParameter *string

	/* MovementProgressVolumeSnapshotBlocked.

	   Filter by movement.progress.volume_snapshot_blocked
	*/
	MovementProgressVolumeSnapshotBlockedQueryParameter *bool

	/* Name.

	   Filter by name
	*/
	NameQueryParameter *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderByQueryParameter []string

	/* OsType.

	   Filter by os_type
	*/
	OsTypeQueryParameter *string

	/* QosPolicyName.

	   Filter by qos_policy.name
	*/
	QosPolicyNameQueryParameter *string

	/* QosPolicyUUID.

	   Filter by qos_policy.uuid
	*/
	QosPolicyUUIDQueryParameter *string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecordsQueryParameter *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeoutQueryParameter *int64

	/* SerialNumber.

	   Filter by serial_number
	*/
	SerialNumberQueryParameter *string

	/* SpaceGuaranteeRequested.

	   Filter by space.guarantee.requested
	*/
	SpaceGuaranteeRequestedQueryParameter *bool

	/* SpaceGuaranteeReserved.

	   Filter by space.guarantee.reserved
	*/
	SpaceGuaranteeReservedQueryParameter *bool

	/* SpaceScsiThinProvisioningSupportEnabled.

	   Filter by space.scsi_thin_provisioning_support_enabled
	*/
	SpaceScsiThinProvisioningSupportEnabledQueryParameter *bool

	/* SpaceSize.

	   Filter by space.size
	*/
	SpaceSizeQueryParameter *int64

	/* SpaceUsed.

	   Filter by space.used
	*/
	SpaceUsedQueryParameter *int64

	/* StatisticsIopsRawOther.

	   Filter by statistics.iops_raw.other
	*/
	StatisticsIopsRawOtherQueryParameter *int64

	/* StatisticsIopsRawRead.

	   Filter by statistics.iops_raw.read
	*/
	StatisticsIopsRawReadQueryParameter *int64

	/* StatisticsIopsRawTotal.

	   Filter by statistics.iops_raw.total
	*/
	StatisticsIopsRawTotalQueryParameter *int64

	/* StatisticsIopsRawWrite.

	   Filter by statistics.iops_raw.write
	*/
	StatisticsIopsRawWriteQueryParameter *int64

	/* StatisticsLatencyRawOther.

	   Filter by statistics.latency_raw.other
	*/
	StatisticsLatencyRawOtherQueryParameter *int64

	/* StatisticsLatencyRawRead.

	   Filter by statistics.latency_raw.read
	*/
	StatisticsLatencyRawReadQueryParameter *int64

	/* StatisticsLatencyRawTotal.

	   Filter by statistics.latency_raw.total
	*/
	StatisticsLatencyRawTotalQueryParameter *int64

	/* StatisticsLatencyRawWrite.

	   Filter by statistics.latency_raw.write
	*/
	StatisticsLatencyRawWriteQueryParameter *int64

	/* StatisticsStatus.

	   Filter by statistics.status
	*/
	StatisticsStatusQueryParameter *string

	/* StatisticsThroughputRawOther.

	   Filter by statistics.throughput_raw.other
	*/
	StatisticsThroughputRawOtherQueryParameter *int64

	/* StatisticsThroughputRawRead.

	   Filter by statistics.throughput_raw.read
	*/
	StatisticsThroughputRawReadQueryParameter *int64

	/* StatisticsThroughputRawTotal.

	   Filter by statistics.throughput_raw.total
	*/
	StatisticsThroughputRawTotalQueryParameter *int64

	/* StatisticsThroughputRawWrite.

	   Filter by statistics.throughput_raw.write
	*/
	StatisticsThroughputRawWriteQueryParameter *int64

	/* StatisticsTimestamp.

	   Filter by statistics.timestamp
	*/
	StatisticsTimestampQueryParameter *string

	/* StatusContainerState.

	   Filter by status.container_state
	*/
	StatusContainerStateQueryParameter *string

	/* StatusMapped.

	   Filter by status.mapped
	*/
	StatusMappedQueryParameter *bool

	/* StatusReadOnly.

	   Filter by status.read_only
	*/
	StatusReadOnlyQueryParameter *bool

	/* StatusState.

	   Filter by status.state
	*/
	StatusStateQueryParameter *string

	/* SvmName.

	   Filter by svm.name
	*/
	SVMNameQueryParameter *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SVMUUIDQueryParameter *string

	/* UUID.

	   Filter by uuid
	*/
	UUIDQueryParameter *string

	/* VvolBindingsID.

	   Filter by vvol.bindings.id
	*/
	VvolBindingsIDQueryParameter *int64

	/* VvolBindingsPartnerName.

	   Filter by vvol.bindings.partner.name
	*/
	VvolBindingsPartnerNameQueryParameter *string

	/* VvolBindingsPartnerUUID.

	   Filter by vvol.bindings.partner.uuid
	*/
	VvolBindingsPartnerUUIDQueryParameter *string

	/* VvolIsBound.

	   Filter by vvol.is_bound
	*/
	VvolIsBoundQueryParameter *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the lun collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LunCollectionGetParams) WithDefaults() *LunCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the lun collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LunCollectionGetParams) SetDefaults() {
	var (
		returnRecordsQueryParameterDefault = bool(true)

		returnTimeoutQueryParameterDefault = int64(15)
	)

	val := LunCollectionGetParams{
		ReturnRecordsQueryParameter: &returnRecordsQueryParameterDefault,
		ReturnTimeoutQueryParameter: &returnTimeoutQueryParameterDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the lun collection get params
func (o *LunCollectionGetParams) WithTimeout(timeout time.Duration) *LunCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the lun collection get params
func (o *LunCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the lun collection get params
func (o *LunCollectionGetParams) WithContext(ctx context.Context) *LunCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the lun collection get params
func (o *LunCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the lun collection get params
func (o *LunCollectionGetParams) WithHTTPClient(client *http.Client) *LunCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the lun collection get params
func (o *LunCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttributesNameQueryParameter adds the attributesName to the lun collection get params
func (o *LunCollectionGetParams) WithAttributesNameQueryParameter(attributesName *string) *LunCollectionGetParams {
	o.SetAttributesNameQueryParameter(attributesName)
	return o
}

// SetAttributesNameQueryParameter adds the attributesName to the lun collection get params
func (o *LunCollectionGetParams) SetAttributesNameQueryParameter(attributesName *string) {
	o.AttributesNameQueryParameter = attributesName
}

// WithAttributesValueQueryParameter adds the attributesValue to the lun collection get params
func (o *LunCollectionGetParams) WithAttributesValueQueryParameter(attributesValue *string) *LunCollectionGetParams {
	o.SetAttributesValueQueryParameter(attributesValue)
	return o
}

// SetAttributesValueQueryParameter adds the attributesValue to the lun collection get params
func (o *LunCollectionGetParams) SetAttributesValueQueryParameter(attributesValue *string) {
	o.AttributesValueQueryParameter = attributesValue
}

// WithAutoDeleteQueryParameter adds the autoDelete to the lun collection get params
func (o *LunCollectionGetParams) WithAutoDeleteQueryParameter(autoDelete *bool) *LunCollectionGetParams {
	o.SetAutoDeleteQueryParameter(autoDelete)
	return o
}

// SetAutoDeleteQueryParameter adds the autoDelete to the lun collection get params
func (o *LunCollectionGetParams) SetAutoDeleteQueryParameter(autoDelete *bool) {
	o.AutoDeleteQueryParameter = autoDelete
}

// WithClassQueryParameter adds the class to the lun collection get params
func (o *LunCollectionGetParams) WithClassQueryParameter(class *string) *LunCollectionGetParams {
	o.SetClassQueryParameter(class)
	return o
}

// SetClassQueryParameter adds the class to the lun collection get params
func (o *LunCollectionGetParams) SetClassQueryParameter(class *string) {
	o.ClassQueryParameter = class
}

// WithCommentQueryParameter adds the comment to the lun collection get params
func (o *LunCollectionGetParams) WithCommentQueryParameter(comment *string) *LunCollectionGetParams {
	o.SetCommentQueryParameter(comment)
	return o
}

// SetCommentQueryParameter adds the comment to the lun collection get params
func (o *LunCollectionGetParams) SetCommentQueryParameter(comment *string) {
	o.CommentQueryParameter = comment
}

// WithConsistencyGroupNameQueryParameter adds the consistencyGroupName to the lun collection get params
func (o *LunCollectionGetParams) WithConsistencyGroupNameQueryParameter(consistencyGroupName *string) *LunCollectionGetParams {
	o.SetConsistencyGroupNameQueryParameter(consistencyGroupName)
	return o
}

// SetConsistencyGroupNameQueryParameter adds the consistencyGroupName to the lun collection get params
func (o *LunCollectionGetParams) SetConsistencyGroupNameQueryParameter(consistencyGroupName *string) {
	o.ConsistencyGroupNameQueryParameter = consistencyGroupName
}

// WithConsistencyGroupUUIDQueryParameter adds the consistencyGroupUUID to the lun collection get params
func (o *LunCollectionGetParams) WithConsistencyGroupUUIDQueryParameter(consistencyGroupUUID *string) *LunCollectionGetParams {
	o.SetConsistencyGroupUUIDQueryParameter(consistencyGroupUUID)
	return o
}

// SetConsistencyGroupUUIDQueryParameter adds the consistencyGroupUuid to the lun collection get params
func (o *LunCollectionGetParams) SetConsistencyGroupUUIDQueryParameter(consistencyGroupUUID *string) {
	o.ConsistencyGroupUUIDQueryParameter = consistencyGroupUUID
}

// WithCopyDestinationsMaxThroughputQueryParameter adds the copyDestinationsMaxThroughput to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsMaxThroughputQueryParameter(copyDestinationsMaxThroughput *int64) *LunCollectionGetParams {
	o.SetCopyDestinationsMaxThroughputQueryParameter(copyDestinationsMaxThroughput)
	return o
}

// SetCopyDestinationsMaxThroughputQueryParameter adds the copyDestinationsMaxThroughput to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsMaxThroughputQueryParameter(copyDestinationsMaxThroughput *int64) {
	o.CopyDestinationsMaxThroughputQueryParameter = copyDestinationsMaxThroughput
}

// WithCopyDestinationsNameQueryParameter adds the copyDestinationsName to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsNameQueryParameter(copyDestinationsName *string) *LunCollectionGetParams {
	o.SetCopyDestinationsNameQueryParameter(copyDestinationsName)
	return o
}

// SetCopyDestinationsNameQueryParameter adds the copyDestinationsName to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsNameQueryParameter(copyDestinationsName *string) {
	o.CopyDestinationsNameQueryParameter = copyDestinationsName
}

// WithCopyDestinationsProgressElapsedQueryParameter adds the copyDestinationsProgressElapsed to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressElapsedQueryParameter(copyDestinationsProgressElapsed *int64) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressElapsedQueryParameter(copyDestinationsProgressElapsed)
	return o
}

// SetCopyDestinationsProgressElapsedQueryParameter adds the copyDestinationsProgressElapsed to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressElapsedQueryParameter(copyDestinationsProgressElapsed *int64) {
	o.CopyDestinationsProgressElapsedQueryParameter = copyDestinationsProgressElapsed
}

// WithCopyDestinationsProgressFailureArgumentsCodeQueryParameter adds the copyDestinationsProgressFailureArgumentsCode to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressFailureArgumentsCodeQueryParameter(copyDestinationsProgressFailureArgumentsCode *string) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressFailureArgumentsCodeQueryParameter(copyDestinationsProgressFailureArgumentsCode)
	return o
}

// SetCopyDestinationsProgressFailureArgumentsCodeQueryParameter adds the copyDestinationsProgressFailureArgumentsCode to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressFailureArgumentsCodeQueryParameter(copyDestinationsProgressFailureArgumentsCode *string) {
	o.CopyDestinationsProgressFailureArgumentsCodeQueryParameter = copyDestinationsProgressFailureArgumentsCode
}

// WithCopyDestinationsProgressFailureArgumentsMessageQueryParameter adds the copyDestinationsProgressFailureArgumentsMessage to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressFailureArgumentsMessageQueryParameter(copyDestinationsProgressFailureArgumentsMessage *string) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressFailureArgumentsMessageQueryParameter(copyDestinationsProgressFailureArgumentsMessage)
	return o
}

// SetCopyDestinationsProgressFailureArgumentsMessageQueryParameter adds the copyDestinationsProgressFailureArgumentsMessage to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressFailureArgumentsMessageQueryParameter(copyDestinationsProgressFailureArgumentsMessage *string) {
	o.CopyDestinationsProgressFailureArgumentsMessageQueryParameter = copyDestinationsProgressFailureArgumentsMessage
}

// WithCopyDestinationsProgressFailureCodeQueryParameter adds the copyDestinationsProgressFailureCode to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressFailureCodeQueryParameter(copyDestinationsProgressFailureCode *string) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressFailureCodeQueryParameter(copyDestinationsProgressFailureCode)
	return o
}

// SetCopyDestinationsProgressFailureCodeQueryParameter adds the copyDestinationsProgressFailureCode to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressFailureCodeQueryParameter(copyDestinationsProgressFailureCode *string) {
	o.CopyDestinationsProgressFailureCodeQueryParameter = copyDestinationsProgressFailureCode
}

// WithCopyDestinationsProgressFailureMessageQueryParameter adds the copyDestinationsProgressFailureMessage to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressFailureMessageQueryParameter(copyDestinationsProgressFailureMessage *string) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressFailureMessageQueryParameter(copyDestinationsProgressFailureMessage)
	return o
}

// SetCopyDestinationsProgressFailureMessageQueryParameter adds the copyDestinationsProgressFailureMessage to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressFailureMessageQueryParameter(copyDestinationsProgressFailureMessage *string) {
	o.CopyDestinationsProgressFailureMessageQueryParameter = copyDestinationsProgressFailureMessage
}

// WithCopyDestinationsProgressFailureTargetQueryParameter adds the copyDestinationsProgressFailureTarget to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressFailureTargetQueryParameter(copyDestinationsProgressFailureTarget *string) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressFailureTargetQueryParameter(copyDestinationsProgressFailureTarget)
	return o
}

// SetCopyDestinationsProgressFailureTargetQueryParameter adds the copyDestinationsProgressFailureTarget to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressFailureTargetQueryParameter(copyDestinationsProgressFailureTarget *string) {
	o.CopyDestinationsProgressFailureTargetQueryParameter = copyDestinationsProgressFailureTarget
}

// WithCopyDestinationsProgressPercentCompleteQueryParameter adds the copyDestinationsProgressPercentComplete to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressPercentCompleteQueryParameter(copyDestinationsProgressPercentComplete *int64) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressPercentCompleteQueryParameter(copyDestinationsProgressPercentComplete)
	return o
}

// SetCopyDestinationsProgressPercentCompleteQueryParameter adds the copyDestinationsProgressPercentComplete to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressPercentCompleteQueryParameter(copyDestinationsProgressPercentComplete *int64) {
	o.CopyDestinationsProgressPercentCompleteQueryParameter = copyDestinationsProgressPercentComplete
}

// WithCopyDestinationsProgressStateQueryParameter adds the copyDestinationsProgressState to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressStateQueryParameter(copyDestinationsProgressState *string) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressStateQueryParameter(copyDestinationsProgressState)
	return o
}

// SetCopyDestinationsProgressStateQueryParameter adds the copyDestinationsProgressState to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressStateQueryParameter(copyDestinationsProgressState *string) {
	o.CopyDestinationsProgressStateQueryParameter = copyDestinationsProgressState
}

// WithCopyDestinationsProgressVolumeSnapshotBlockedQueryParameter adds the copyDestinationsProgressVolumeSnapshotBlocked to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsProgressVolumeSnapshotBlockedQueryParameter(copyDestinationsProgressVolumeSnapshotBlocked *bool) *LunCollectionGetParams {
	o.SetCopyDestinationsProgressVolumeSnapshotBlockedQueryParameter(copyDestinationsProgressVolumeSnapshotBlocked)
	return o
}

// SetCopyDestinationsProgressVolumeSnapshotBlockedQueryParameter adds the copyDestinationsProgressVolumeSnapshotBlocked to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsProgressVolumeSnapshotBlockedQueryParameter(copyDestinationsProgressVolumeSnapshotBlocked *bool) {
	o.CopyDestinationsProgressVolumeSnapshotBlockedQueryParameter = copyDestinationsProgressVolumeSnapshotBlocked
}

// WithCopyDestinationsUUIDQueryParameter adds the copyDestinationsUUID to the lun collection get params
func (o *LunCollectionGetParams) WithCopyDestinationsUUIDQueryParameter(copyDestinationsUUID *string) *LunCollectionGetParams {
	o.SetCopyDestinationsUUIDQueryParameter(copyDestinationsUUID)
	return o
}

// SetCopyDestinationsUUIDQueryParameter adds the copyDestinationsUuid to the lun collection get params
func (o *LunCollectionGetParams) SetCopyDestinationsUUIDQueryParameter(copyDestinationsUUID *string) {
	o.CopyDestinationsUUIDQueryParameter = copyDestinationsUUID
}

// WithCopySourceMaxThroughputQueryParameter adds the copySourceMaxThroughput to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceMaxThroughputQueryParameter(copySourceMaxThroughput *int64) *LunCollectionGetParams {
	o.SetCopySourceMaxThroughputQueryParameter(copySourceMaxThroughput)
	return o
}

// SetCopySourceMaxThroughputQueryParameter adds the copySourceMaxThroughput to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceMaxThroughputQueryParameter(copySourceMaxThroughput *int64) {
	o.CopySourceMaxThroughputQueryParameter = copySourceMaxThroughput
}

// WithCopySourceNameQueryParameter adds the copySourceName to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceNameQueryParameter(copySourceName *string) *LunCollectionGetParams {
	o.SetCopySourceNameQueryParameter(copySourceName)
	return o
}

// SetCopySourceNameQueryParameter adds the copySourceName to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceNameQueryParameter(copySourceName *string) {
	o.CopySourceNameQueryParameter = copySourceName
}

// WithCopySourceProgressElapsedQueryParameter adds the copySourceProgressElapsed to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressElapsedQueryParameter(copySourceProgressElapsed *int64) *LunCollectionGetParams {
	o.SetCopySourceProgressElapsedQueryParameter(copySourceProgressElapsed)
	return o
}

// SetCopySourceProgressElapsedQueryParameter adds the copySourceProgressElapsed to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressElapsedQueryParameter(copySourceProgressElapsed *int64) {
	o.CopySourceProgressElapsedQueryParameter = copySourceProgressElapsed
}

// WithCopySourceProgressFailureArgumentsCodeQueryParameter adds the copySourceProgressFailureArgumentsCode to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressFailureArgumentsCodeQueryParameter(copySourceProgressFailureArgumentsCode *string) *LunCollectionGetParams {
	o.SetCopySourceProgressFailureArgumentsCodeQueryParameter(copySourceProgressFailureArgumentsCode)
	return o
}

// SetCopySourceProgressFailureArgumentsCodeQueryParameter adds the copySourceProgressFailureArgumentsCode to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressFailureArgumentsCodeQueryParameter(copySourceProgressFailureArgumentsCode *string) {
	o.CopySourceProgressFailureArgumentsCodeQueryParameter = copySourceProgressFailureArgumentsCode
}

// WithCopySourceProgressFailureArgumentsMessageQueryParameter adds the copySourceProgressFailureArgumentsMessage to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressFailureArgumentsMessageQueryParameter(copySourceProgressFailureArgumentsMessage *string) *LunCollectionGetParams {
	o.SetCopySourceProgressFailureArgumentsMessageQueryParameter(copySourceProgressFailureArgumentsMessage)
	return o
}

// SetCopySourceProgressFailureArgumentsMessageQueryParameter adds the copySourceProgressFailureArgumentsMessage to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressFailureArgumentsMessageQueryParameter(copySourceProgressFailureArgumentsMessage *string) {
	o.CopySourceProgressFailureArgumentsMessageQueryParameter = copySourceProgressFailureArgumentsMessage
}

// WithCopySourceProgressFailureCodeQueryParameter adds the copySourceProgressFailureCode to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressFailureCodeQueryParameter(copySourceProgressFailureCode *string) *LunCollectionGetParams {
	o.SetCopySourceProgressFailureCodeQueryParameter(copySourceProgressFailureCode)
	return o
}

// SetCopySourceProgressFailureCodeQueryParameter adds the copySourceProgressFailureCode to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressFailureCodeQueryParameter(copySourceProgressFailureCode *string) {
	o.CopySourceProgressFailureCodeQueryParameter = copySourceProgressFailureCode
}

// WithCopySourceProgressFailureMessageQueryParameter adds the copySourceProgressFailureMessage to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressFailureMessageQueryParameter(copySourceProgressFailureMessage *string) *LunCollectionGetParams {
	o.SetCopySourceProgressFailureMessageQueryParameter(copySourceProgressFailureMessage)
	return o
}

// SetCopySourceProgressFailureMessageQueryParameter adds the copySourceProgressFailureMessage to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressFailureMessageQueryParameter(copySourceProgressFailureMessage *string) {
	o.CopySourceProgressFailureMessageQueryParameter = copySourceProgressFailureMessage
}

// WithCopySourceProgressFailureTargetQueryParameter adds the copySourceProgressFailureTarget to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressFailureTargetQueryParameter(copySourceProgressFailureTarget *string) *LunCollectionGetParams {
	o.SetCopySourceProgressFailureTargetQueryParameter(copySourceProgressFailureTarget)
	return o
}

// SetCopySourceProgressFailureTargetQueryParameter adds the copySourceProgressFailureTarget to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressFailureTargetQueryParameter(copySourceProgressFailureTarget *string) {
	o.CopySourceProgressFailureTargetQueryParameter = copySourceProgressFailureTarget
}

// WithCopySourceProgressPercentCompleteQueryParameter adds the copySourceProgressPercentComplete to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressPercentCompleteQueryParameter(copySourceProgressPercentComplete *int64) *LunCollectionGetParams {
	o.SetCopySourceProgressPercentCompleteQueryParameter(copySourceProgressPercentComplete)
	return o
}

// SetCopySourceProgressPercentCompleteQueryParameter adds the copySourceProgressPercentComplete to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressPercentCompleteQueryParameter(copySourceProgressPercentComplete *int64) {
	o.CopySourceProgressPercentCompleteQueryParameter = copySourceProgressPercentComplete
}

// WithCopySourceProgressStateQueryParameter adds the copySourceProgressState to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressStateQueryParameter(copySourceProgressState *string) *LunCollectionGetParams {
	o.SetCopySourceProgressStateQueryParameter(copySourceProgressState)
	return o
}

// SetCopySourceProgressStateQueryParameter adds the copySourceProgressState to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressStateQueryParameter(copySourceProgressState *string) {
	o.CopySourceProgressStateQueryParameter = copySourceProgressState
}

// WithCopySourceProgressVolumeSnapshotBlockedQueryParameter adds the copySourceProgressVolumeSnapshotBlocked to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceProgressVolumeSnapshotBlockedQueryParameter(copySourceProgressVolumeSnapshotBlocked *bool) *LunCollectionGetParams {
	o.SetCopySourceProgressVolumeSnapshotBlockedQueryParameter(copySourceProgressVolumeSnapshotBlocked)
	return o
}

// SetCopySourceProgressVolumeSnapshotBlockedQueryParameter adds the copySourceProgressVolumeSnapshotBlocked to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceProgressVolumeSnapshotBlockedQueryParameter(copySourceProgressVolumeSnapshotBlocked *bool) {
	o.CopySourceProgressVolumeSnapshotBlockedQueryParameter = copySourceProgressVolumeSnapshotBlocked
}

// WithCopySourceUUIDQueryParameter adds the copySourceUUID to the lun collection get params
func (o *LunCollectionGetParams) WithCopySourceUUIDQueryParameter(copySourceUUID *string) *LunCollectionGetParams {
	o.SetCopySourceUUIDQueryParameter(copySourceUUID)
	return o
}

// SetCopySourceUUIDQueryParameter adds the copySourceUuid to the lun collection get params
func (o *LunCollectionGetParams) SetCopySourceUUIDQueryParameter(copySourceUUID *string) {
	o.CopySourceUUIDQueryParameter = copySourceUUID
}

// WithCreateTimeQueryParameter adds the createTime to the lun collection get params
func (o *LunCollectionGetParams) WithCreateTimeQueryParameter(createTime *string) *LunCollectionGetParams {
	o.SetCreateTimeQueryParameter(createTime)
	return o
}

// SetCreateTimeQueryParameter adds the createTime to the lun collection get params
func (o *LunCollectionGetParams) SetCreateTimeQueryParameter(createTime *string) {
	o.CreateTimeQueryParameter = createTime
}

// WithEnabledQueryParameter adds the enabled to the lun collection get params
func (o *LunCollectionGetParams) WithEnabledQueryParameter(enabled *bool) *LunCollectionGetParams {
	o.SetEnabledQueryParameter(enabled)
	return o
}

// SetEnabledQueryParameter adds the enabled to the lun collection get params
func (o *LunCollectionGetParams) SetEnabledQueryParameter(enabled *bool) {
	o.EnabledQueryParameter = enabled
}

// WithFieldsQueryParameter adds the fields to the lun collection get params
func (o *LunCollectionGetParams) WithFieldsQueryParameter(fields []string) *LunCollectionGetParams {
	o.SetFieldsQueryParameter(fields)
	return o
}

// SetFieldsQueryParameter adds the fields to the lun collection get params
func (o *LunCollectionGetParams) SetFieldsQueryParameter(fields []string) {
	o.FieldsQueryParameter = fields
}

// WithLocationLogicalUnitQueryParameter adds the locationLogicalUnit to the lun collection get params
func (o *LunCollectionGetParams) WithLocationLogicalUnitQueryParameter(locationLogicalUnit *string) *LunCollectionGetParams {
	o.SetLocationLogicalUnitQueryParameter(locationLogicalUnit)
	return o
}

// SetLocationLogicalUnitQueryParameter adds the locationLogicalUnit to the lun collection get params
func (o *LunCollectionGetParams) SetLocationLogicalUnitQueryParameter(locationLogicalUnit *string) {
	o.LocationLogicalUnitQueryParameter = locationLogicalUnit
}

// WithLocationNodeNameQueryParameter adds the locationNodeName to the lun collection get params
func (o *LunCollectionGetParams) WithLocationNodeNameQueryParameter(locationNodeName *string) *LunCollectionGetParams {
	o.SetLocationNodeNameQueryParameter(locationNodeName)
	return o
}

// SetLocationNodeNameQueryParameter adds the locationNodeName to the lun collection get params
func (o *LunCollectionGetParams) SetLocationNodeNameQueryParameter(locationNodeName *string) {
	o.LocationNodeNameQueryParameter = locationNodeName
}

// WithLocationNodeUUIDQueryParameter adds the locationNodeUUID to the lun collection get params
func (o *LunCollectionGetParams) WithLocationNodeUUIDQueryParameter(locationNodeUUID *string) *LunCollectionGetParams {
	o.SetLocationNodeUUIDQueryParameter(locationNodeUUID)
	return o
}

// SetLocationNodeUUIDQueryParameter adds the locationNodeUuid to the lun collection get params
func (o *LunCollectionGetParams) SetLocationNodeUUIDQueryParameter(locationNodeUUID *string) {
	o.LocationNodeUUIDQueryParameter = locationNodeUUID
}

// WithLocationQtreeIDQueryParameter adds the locationQtreeID to the lun collection get params
func (o *LunCollectionGetParams) WithLocationQtreeIDQueryParameter(locationQtreeID *int64) *LunCollectionGetParams {
	o.SetLocationQtreeIDQueryParameter(locationQtreeID)
	return o
}

// SetLocationQtreeIDQueryParameter adds the locationQtreeId to the lun collection get params
func (o *LunCollectionGetParams) SetLocationQtreeIDQueryParameter(locationQtreeID *int64) {
	o.LocationQtreeIDQueryParameter = locationQtreeID
}

// WithLocationQtreeNameQueryParameter adds the locationQtreeName to the lun collection get params
func (o *LunCollectionGetParams) WithLocationQtreeNameQueryParameter(locationQtreeName *string) *LunCollectionGetParams {
	o.SetLocationQtreeNameQueryParameter(locationQtreeName)
	return o
}

// SetLocationQtreeNameQueryParameter adds the locationQtreeName to the lun collection get params
func (o *LunCollectionGetParams) SetLocationQtreeNameQueryParameter(locationQtreeName *string) {
	o.LocationQtreeNameQueryParameter = locationQtreeName
}

// WithLocationVolumeNameQueryParameter adds the locationVolumeName to the lun collection get params
func (o *LunCollectionGetParams) WithLocationVolumeNameQueryParameter(locationVolumeName *string) *LunCollectionGetParams {
	o.SetLocationVolumeNameQueryParameter(locationVolumeName)
	return o
}

// SetLocationVolumeNameQueryParameter adds the locationVolumeName to the lun collection get params
func (o *LunCollectionGetParams) SetLocationVolumeNameQueryParameter(locationVolumeName *string) {
	o.LocationVolumeNameQueryParameter = locationVolumeName
}

// WithLocationVolumeUUIDQueryParameter adds the locationVolumeUUID to the lun collection get params
func (o *LunCollectionGetParams) WithLocationVolumeUUIDQueryParameter(locationVolumeUUID *string) *LunCollectionGetParams {
	o.SetLocationVolumeUUIDQueryParameter(locationVolumeUUID)
	return o
}

// SetLocationVolumeUUIDQueryParameter adds the locationVolumeUuid to the lun collection get params
func (o *LunCollectionGetParams) SetLocationVolumeUUIDQueryParameter(locationVolumeUUID *string) {
	o.LocationVolumeUUIDQueryParameter = locationVolumeUUID
}

// WithLunMapsIgroupNameQueryParameter adds the lunMapsIgroupName to the lun collection get params
func (o *LunCollectionGetParams) WithLunMapsIgroupNameQueryParameter(lunMapsIgroupName *string) *LunCollectionGetParams {
	o.SetLunMapsIgroupNameQueryParameter(lunMapsIgroupName)
	return o
}

// SetLunMapsIgroupNameQueryParameter adds the lunMapsIgroupName to the lun collection get params
func (o *LunCollectionGetParams) SetLunMapsIgroupNameQueryParameter(lunMapsIgroupName *string) {
	o.LunMapsIgroupNameQueryParameter = lunMapsIgroupName
}

// WithLunMapsIgroupUUIDQueryParameter adds the lunMapsIgroupUUID to the lun collection get params
func (o *LunCollectionGetParams) WithLunMapsIgroupUUIDQueryParameter(lunMapsIgroupUUID *string) *LunCollectionGetParams {
	o.SetLunMapsIgroupUUIDQueryParameter(lunMapsIgroupUUID)
	return o
}

// SetLunMapsIgroupUUIDQueryParameter adds the lunMapsIgroupUuid to the lun collection get params
func (o *LunCollectionGetParams) SetLunMapsIgroupUUIDQueryParameter(lunMapsIgroupUUID *string) {
	o.LunMapsIgroupUUIDQueryParameter = lunMapsIgroupUUID
}

// WithLunMapsLogicalUnitNumberQueryParameter adds the lunMapsLogicalUnitNumber to the lun collection get params
func (o *LunCollectionGetParams) WithLunMapsLogicalUnitNumberQueryParameter(lunMapsLogicalUnitNumber *int64) *LunCollectionGetParams {
	o.SetLunMapsLogicalUnitNumberQueryParameter(lunMapsLogicalUnitNumber)
	return o
}

// SetLunMapsLogicalUnitNumberQueryParameter adds the lunMapsLogicalUnitNumber to the lun collection get params
func (o *LunCollectionGetParams) SetLunMapsLogicalUnitNumberQueryParameter(lunMapsLogicalUnitNumber *int64) {
	o.LunMapsLogicalUnitNumberQueryParameter = lunMapsLogicalUnitNumber
}

// WithMaxRecordsQueryParameter adds the maxRecords to the lun collection get params
func (o *LunCollectionGetParams) WithMaxRecordsQueryParameter(maxRecords *int64) *LunCollectionGetParams {
	o.SetMaxRecordsQueryParameter(maxRecords)
	return o
}

// SetMaxRecordsQueryParameter adds the maxRecords to the lun collection get params
func (o *LunCollectionGetParams) SetMaxRecordsQueryParameter(maxRecords *int64) {
	o.MaxRecordsQueryParameter = maxRecords
}

// WithMetricDurationQueryParameter adds the metricDuration to the lun collection get params
func (o *LunCollectionGetParams) WithMetricDurationQueryParameter(metricDuration *string) *LunCollectionGetParams {
	o.SetMetricDurationQueryParameter(metricDuration)
	return o
}

// SetMetricDurationQueryParameter adds the metricDuration to the lun collection get params
func (o *LunCollectionGetParams) SetMetricDurationQueryParameter(metricDuration *string) {
	o.MetricDurationQueryParameter = metricDuration
}

// WithMetricIopsOtherQueryParameter adds the metricIopsOther to the lun collection get params
func (o *LunCollectionGetParams) WithMetricIopsOtherQueryParameter(metricIopsOther *int64) *LunCollectionGetParams {
	o.SetMetricIopsOtherQueryParameter(metricIopsOther)
	return o
}

// SetMetricIopsOtherQueryParameter adds the metricIopsOther to the lun collection get params
func (o *LunCollectionGetParams) SetMetricIopsOtherQueryParameter(metricIopsOther *int64) {
	o.MetricIopsOtherQueryParameter = metricIopsOther
}

// WithMetricIopsReadQueryParameter adds the metricIopsRead to the lun collection get params
func (o *LunCollectionGetParams) WithMetricIopsReadQueryParameter(metricIopsRead *int64) *LunCollectionGetParams {
	o.SetMetricIopsReadQueryParameter(metricIopsRead)
	return o
}

// SetMetricIopsReadQueryParameter adds the metricIopsRead to the lun collection get params
func (o *LunCollectionGetParams) SetMetricIopsReadQueryParameter(metricIopsRead *int64) {
	o.MetricIopsReadQueryParameter = metricIopsRead
}

// WithMetricIopsTotalQueryParameter adds the metricIopsTotal to the lun collection get params
func (o *LunCollectionGetParams) WithMetricIopsTotalQueryParameter(metricIopsTotal *int64) *LunCollectionGetParams {
	o.SetMetricIopsTotalQueryParameter(metricIopsTotal)
	return o
}

// SetMetricIopsTotalQueryParameter adds the metricIopsTotal to the lun collection get params
func (o *LunCollectionGetParams) SetMetricIopsTotalQueryParameter(metricIopsTotal *int64) {
	o.MetricIopsTotalQueryParameter = metricIopsTotal
}

// WithMetricIopsWriteQueryParameter adds the metricIopsWrite to the lun collection get params
func (o *LunCollectionGetParams) WithMetricIopsWriteQueryParameter(metricIopsWrite *int64) *LunCollectionGetParams {
	o.SetMetricIopsWriteQueryParameter(metricIopsWrite)
	return o
}

// SetMetricIopsWriteQueryParameter adds the metricIopsWrite to the lun collection get params
func (o *LunCollectionGetParams) SetMetricIopsWriteQueryParameter(metricIopsWrite *int64) {
	o.MetricIopsWriteQueryParameter = metricIopsWrite
}

// WithMetricLatencyOtherQueryParameter adds the metricLatencyOther to the lun collection get params
func (o *LunCollectionGetParams) WithMetricLatencyOtherQueryParameter(metricLatencyOther *int64) *LunCollectionGetParams {
	o.SetMetricLatencyOtherQueryParameter(metricLatencyOther)
	return o
}

// SetMetricLatencyOtherQueryParameter adds the metricLatencyOther to the lun collection get params
func (o *LunCollectionGetParams) SetMetricLatencyOtherQueryParameter(metricLatencyOther *int64) {
	o.MetricLatencyOtherQueryParameter = metricLatencyOther
}

// WithMetricLatencyReadQueryParameter adds the metricLatencyRead to the lun collection get params
func (o *LunCollectionGetParams) WithMetricLatencyReadQueryParameter(metricLatencyRead *int64) *LunCollectionGetParams {
	o.SetMetricLatencyReadQueryParameter(metricLatencyRead)
	return o
}

// SetMetricLatencyReadQueryParameter adds the metricLatencyRead to the lun collection get params
func (o *LunCollectionGetParams) SetMetricLatencyReadQueryParameter(metricLatencyRead *int64) {
	o.MetricLatencyReadQueryParameter = metricLatencyRead
}

// WithMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the lun collection get params
func (o *LunCollectionGetParams) WithMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) *LunCollectionGetParams {
	o.SetMetricLatencyTotalQueryParameter(metricLatencyTotal)
	return o
}

// SetMetricLatencyTotalQueryParameter adds the metricLatencyTotal to the lun collection get params
func (o *LunCollectionGetParams) SetMetricLatencyTotalQueryParameter(metricLatencyTotal *int64) {
	o.MetricLatencyTotalQueryParameter = metricLatencyTotal
}

// WithMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the lun collection get params
func (o *LunCollectionGetParams) WithMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) *LunCollectionGetParams {
	o.SetMetricLatencyWriteQueryParameter(metricLatencyWrite)
	return o
}

// SetMetricLatencyWriteQueryParameter adds the metricLatencyWrite to the lun collection get params
func (o *LunCollectionGetParams) SetMetricLatencyWriteQueryParameter(metricLatencyWrite *int64) {
	o.MetricLatencyWriteQueryParameter = metricLatencyWrite
}

// WithMetricStatusQueryParameter adds the metricStatus to the lun collection get params
func (o *LunCollectionGetParams) WithMetricStatusQueryParameter(metricStatus *string) *LunCollectionGetParams {
	o.SetMetricStatusQueryParameter(metricStatus)
	return o
}

// SetMetricStatusQueryParameter adds the metricStatus to the lun collection get params
func (o *LunCollectionGetParams) SetMetricStatusQueryParameter(metricStatus *string) {
	o.MetricStatusQueryParameter = metricStatus
}

// WithMetricThroughputOtherQueryParameter adds the metricThroughputOther to the lun collection get params
func (o *LunCollectionGetParams) WithMetricThroughputOtherQueryParameter(metricThroughputOther *int64) *LunCollectionGetParams {
	o.SetMetricThroughputOtherQueryParameter(metricThroughputOther)
	return o
}

// SetMetricThroughputOtherQueryParameter adds the metricThroughputOther to the lun collection get params
func (o *LunCollectionGetParams) SetMetricThroughputOtherQueryParameter(metricThroughputOther *int64) {
	o.MetricThroughputOtherQueryParameter = metricThroughputOther
}

// WithMetricThroughputReadQueryParameter adds the metricThroughputRead to the lun collection get params
func (o *LunCollectionGetParams) WithMetricThroughputReadQueryParameter(metricThroughputRead *int64) *LunCollectionGetParams {
	o.SetMetricThroughputReadQueryParameter(metricThroughputRead)
	return o
}

// SetMetricThroughputReadQueryParameter adds the metricThroughputRead to the lun collection get params
func (o *LunCollectionGetParams) SetMetricThroughputReadQueryParameter(metricThroughputRead *int64) {
	o.MetricThroughputReadQueryParameter = metricThroughputRead
}

// WithMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the lun collection get params
func (o *LunCollectionGetParams) WithMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) *LunCollectionGetParams {
	o.SetMetricThroughputTotalQueryParameter(metricThroughputTotal)
	return o
}

// SetMetricThroughputTotalQueryParameter adds the metricThroughputTotal to the lun collection get params
func (o *LunCollectionGetParams) SetMetricThroughputTotalQueryParameter(metricThroughputTotal *int64) {
	o.MetricThroughputTotalQueryParameter = metricThroughputTotal
}

// WithMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the lun collection get params
func (o *LunCollectionGetParams) WithMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) *LunCollectionGetParams {
	o.SetMetricThroughputWriteQueryParameter(metricThroughputWrite)
	return o
}

// SetMetricThroughputWriteQueryParameter adds the metricThroughputWrite to the lun collection get params
func (o *LunCollectionGetParams) SetMetricThroughputWriteQueryParameter(metricThroughputWrite *int64) {
	o.MetricThroughputWriteQueryParameter = metricThroughputWrite
}

// WithMetricTimestampQueryParameter adds the metricTimestamp to the lun collection get params
func (o *LunCollectionGetParams) WithMetricTimestampQueryParameter(metricTimestamp *string) *LunCollectionGetParams {
	o.SetMetricTimestampQueryParameter(metricTimestamp)
	return o
}

// SetMetricTimestampQueryParameter adds the metricTimestamp to the lun collection get params
func (o *LunCollectionGetParams) SetMetricTimestampQueryParameter(metricTimestamp *string) {
	o.MetricTimestampQueryParameter = metricTimestamp
}

// WithMovementMaxThroughputQueryParameter adds the movementMaxThroughput to the lun collection get params
func (o *LunCollectionGetParams) WithMovementMaxThroughputQueryParameter(movementMaxThroughput *int64) *LunCollectionGetParams {
	o.SetMovementMaxThroughputQueryParameter(movementMaxThroughput)
	return o
}

// SetMovementMaxThroughputQueryParameter adds the movementMaxThroughput to the lun collection get params
func (o *LunCollectionGetParams) SetMovementMaxThroughputQueryParameter(movementMaxThroughput *int64) {
	o.MovementMaxThroughputQueryParameter = movementMaxThroughput
}

// WithMovementPathsDestinationQueryParameter adds the movementPathsDestination to the lun collection get params
func (o *LunCollectionGetParams) WithMovementPathsDestinationQueryParameter(movementPathsDestination *string) *LunCollectionGetParams {
	o.SetMovementPathsDestinationQueryParameter(movementPathsDestination)
	return o
}

// SetMovementPathsDestinationQueryParameter adds the movementPathsDestination to the lun collection get params
func (o *LunCollectionGetParams) SetMovementPathsDestinationQueryParameter(movementPathsDestination *string) {
	o.MovementPathsDestinationQueryParameter = movementPathsDestination
}

// WithMovementPathsSourceQueryParameter adds the movementPathsSource to the lun collection get params
func (o *LunCollectionGetParams) WithMovementPathsSourceQueryParameter(movementPathsSource *string) *LunCollectionGetParams {
	o.SetMovementPathsSourceQueryParameter(movementPathsSource)
	return o
}

// SetMovementPathsSourceQueryParameter adds the movementPathsSource to the lun collection get params
func (o *LunCollectionGetParams) SetMovementPathsSourceQueryParameter(movementPathsSource *string) {
	o.MovementPathsSourceQueryParameter = movementPathsSource
}

// WithMovementProgressElapsedQueryParameter adds the movementProgressElapsed to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressElapsedQueryParameter(movementProgressElapsed *int64) *LunCollectionGetParams {
	o.SetMovementProgressElapsedQueryParameter(movementProgressElapsed)
	return o
}

// SetMovementProgressElapsedQueryParameter adds the movementProgressElapsed to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressElapsedQueryParameter(movementProgressElapsed *int64) {
	o.MovementProgressElapsedQueryParameter = movementProgressElapsed
}

// WithMovementProgressFailureArgumentsCodeQueryParameter adds the movementProgressFailureArgumentsCode to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressFailureArgumentsCodeQueryParameter(movementProgressFailureArgumentsCode *string) *LunCollectionGetParams {
	o.SetMovementProgressFailureArgumentsCodeQueryParameter(movementProgressFailureArgumentsCode)
	return o
}

// SetMovementProgressFailureArgumentsCodeQueryParameter adds the movementProgressFailureArgumentsCode to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressFailureArgumentsCodeQueryParameter(movementProgressFailureArgumentsCode *string) {
	o.MovementProgressFailureArgumentsCodeQueryParameter = movementProgressFailureArgumentsCode
}

// WithMovementProgressFailureArgumentsMessageQueryParameter adds the movementProgressFailureArgumentsMessage to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressFailureArgumentsMessageQueryParameter(movementProgressFailureArgumentsMessage *string) *LunCollectionGetParams {
	o.SetMovementProgressFailureArgumentsMessageQueryParameter(movementProgressFailureArgumentsMessage)
	return o
}

// SetMovementProgressFailureArgumentsMessageQueryParameter adds the movementProgressFailureArgumentsMessage to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressFailureArgumentsMessageQueryParameter(movementProgressFailureArgumentsMessage *string) {
	o.MovementProgressFailureArgumentsMessageQueryParameter = movementProgressFailureArgumentsMessage
}

// WithMovementProgressFailureCodeQueryParameter adds the movementProgressFailureCode to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressFailureCodeQueryParameter(movementProgressFailureCode *string) *LunCollectionGetParams {
	o.SetMovementProgressFailureCodeQueryParameter(movementProgressFailureCode)
	return o
}

// SetMovementProgressFailureCodeQueryParameter adds the movementProgressFailureCode to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressFailureCodeQueryParameter(movementProgressFailureCode *string) {
	o.MovementProgressFailureCodeQueryParameter = movementProgressFailureCode
}

// WithMovementProgressFailureMessageQueryParameter adds the movementProgressFailureMessage to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressFailureMessageQueryParameter(movementProgressFailureMessage *string) *LunCollectionGetParams {
	o.SetMovementProgressFailureMessageQueryParameter(movementProgressFailureMessage)
	return o
}

// SetMovementProgressFailureMessageQueryParameter adds the movementProgressFailureMessage to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressFailureMessageQueryParameter(movementProgressFailureMessage *string) {
	o.MovementProgressFailureMessageQueryParameter = movementProgressFailureMessage
}

// WithMovementProgressFailureTargetQueryParameter adds the movementProgressFailureTarget to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressFailureTargetQueryParameter(movementProgressFailureTarget *string) *LunCollectionGetParams {
	o.SetMovementProgressFailureTargetQueryParameter(movementProgressFailureTarget)
	return o
}

// SetMovementProgressFailureTargetQueryParameter adds the movementProgressFailureTarget to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressFailureTargetQueryParameter(movementProgressFailureTarget *string) {
	o.MovementProgressFailureTargetQueryParameter = movementProgressFailureTarget
}

// WithMovementProgressPercentCompleteQueryParameter adds the movementProgressPercentComplete to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressPercentCompleteQueryParameter(movementProgressPercentComplete *int64) *LunCollectionGetParams {
	o.SetMovementProgressPercentCompleteQueryParameter(movementProgressPercentComplete)
	return o
}

// SetMovementProgressPercentCompleteQueryParameter adds the movementProgressPercentComplete to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressPercentCompleteQueryParameter(movementProgressPercentComplete *int64) {
	o.MovementProgressPercentCompleteQueryParameter = movementProgressPercentComplete
}

// WithMovementProgressStateQueryParameter adds the movementProgressState to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressStateQueryParameter(movementProgressState *string) *LunCollectionGetParams {
	o.SetMovementProgressStateQueryParameter(movementProgressState)
	return o
}

// SetMovementProgressStateQueryParameter adds the movementProgressState to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressStateQueryParameter(movementProgressState *string) {
	o.MovementProgressStateQueryParameter = movementProgressState
}

// WithMovementProgressVolumeSnapshotBlockedQueryParameter adds the movementProgressVolumeSnapshotBlocked to the lun collection get params
func (o *LunCollectionGetParams) WithMovementProgressVolumeSnapshotBlockedQueryParameter(movementProgressVolumeSnapshotBlocked *bool) *LunCollectionGetParams {
	o.SetMovementProgressVolumeSnapshotBlockedQueryParameter(movementProgressVolumeSnapshotBlocked)
	return o
}

// SetMovementProgressVolumeSnapshotBlockedQueryParameter adds the movementProgressVolumeSnapshotBlocked to the lun collection get params
func (o *LunCollectionGetParams) SetMovementProgressVolumeSnapshotBlockedQueryParameter(movementProgressVolumeSnapshotBlocked *bool) {
	o.MovementProgressVolumeSnapshotBlockedQueryParameter = movementProgressVolumeSnapshotBlocked
}

// WithNameQueryParameter adds the name to the lun collection get params
func (o *LunCollectionGetParams) WithNameQueryParameter(name *string) *LunCollectionGetParams {
	o.SetNameQueryParameter(name)
	return o
}

// SetNameQueryParameter adds the name to the lun collection get params
func (o *LunCollectionGetParams) SetNameQueryParameter(name *string) {
	o.NameQueryParameter = name
}

// WithOrderByQueryParameter adds the orderBy to the lun collection get params
func (o *LunCollectionGetParams) WithOrderByQueryParameter(orderBy []string) *LunCollectionGetParams {
	o.SetOrderByQueryParameter(orderBy)
	return o
}

// SetOrderByQueryParameter adds the orderBy to the lun collection get params
func (o *LunCollectionGetParams) SetOrderByQueryParameter(orderBy []string) {
	o.OrderByQueryParameter = orderBy
}

// WithOsTypeQueryParameter adds the osType to the lun collection get params
func (o *LunCollectionGetParams) WithOsTypeQueryParameter(osType *string) *LunCollectionGetParams {
	o.SetOsTypeQueryParameter(osType)
	return o
}

// SetOsTypeQueryParameter adds the osType to the lun collection get params
func (o *LunCollectionGetParams) SetOsTypeQueryParameter(osType *string) {
	o.OsTypeQueryParameter = osType
}

// WithQosPolicyNameQueryParameter adds the qosPolicyName to the lun collection get params
func (o *LunCollectionGetParams) WithQosPolicyNameQueryParameter(qosPolicyName *string) *LunCollectionGetParams {
	o.SetQosPolicyNameQueryParameter(qosPolicyName)
	return o
}

// SetQosPolicyNameQueryParameter adds the qosPolicyName to the lun collection get params
func (o *LunCollectionGetParams) SetQosPolicyNameQueryParameter(qosPolicyName *string) {
	o.QosPolicyNameQueryParameter = qosPolicyName
}

// WithQosPolicyUUIDQueryParameter adds the qosPolicyUUID to the lun collection get params
func (o *LunCollectionGetParams) WithQosPolicyUUIDQueryParameter(qosPolicyUUID *string) *LunCollectionGetParams {
	o.SetQosPolicyUUIDQueryParameter(qosPolicyUUID)
	return o
}

// SetQosPolicyUUIDQueryParameter adds the qosPolicyUuid to the lun collection get params
func (o *LunCollectionGetParams) SetQosPolicyUUIDQueryParameter(qosPolicyUUID *string) {
	o.QosPolicyUUIDQueryParameter = qosPolicyUUID
}

// WithReturnRecordsQueryParameter adds the returnRecords to the lun collection get params
func (o *LunCollectionGetParams) WithReturnRecordsQueryParameter(returnRecords *bool) *LunCollectionGetParams {
	o.SetReturnRecordsQueryParameter(returnRecords)
	return o
}

// SetReturnRecordsQueryParameter adds the returnRecords to the lun collection get params
func (o *LunCollectionGetParams) SetReturnRecordsQueryParameter(returnRecords *bool) {
	o.ReturnRecordsQueryParameter = returnRecords
}

// WithReturnTimeoutQueryParameter adds the returnTimeout to the lun collection get params
func (o *LunCollectionGetParams) WithReturnTimeoutQueryParameter(returnTimeout *int64) *LunCollectionGetParams {
	o.SetReturnTimeoutQueryParameter(returnTimeout)
	return o
}

// SetReturnTimeoutQueryParameter adds the returnTimeout to the lun collection get params
func (o *LunCollectionGetParams) SetReturnTimeoutQueryParameter(returnTimeout *int64) {
	o.ReturnTimeoutQueryParameter = returnTimeout
}

// WithSerialNumberQueryParameter adds the serialNumber to the lun collection get params
func (o *LunCollectionGetParams) WithSerialNumberQueryParameter(serialNumber *string) *LunCollectionGetParams {
	o.SetSerialNumberQueryParameter(serialNumber)
	return o
}

// SetSerialNumberQueryParameter adds the serialNumber to the lun collection get params
func (o *LunCollectionGetParams) SetSerialNumberQueryParameter(serialNumber *string) {
	o.SerialNumberQueryParameter = serialNumber
}

// WithSpaceGuaranteeRequestedQueryParameter adds the spaceGuaranteeRequested to the lun collection get params
func (o *LunCollectionGetParams) WithSpaceGuaranteeRequestedQueryParameter(spaceGuaranteeRequested *bool) *LunCollectionGetParams {
	o.SetSpaceGuaranteeRequestedQueryParameter(spaceGuaranteeRequested)
	return o
}

// SetSpaceGuaranteeRequestedQueryParameter adds the spaceGuaranteeRequested to the lun collection get params
func (o *LunCollectionGetParams) SetSpaceGuaranteeRequestedQueryParameter(spaceGuaranteeRequested *bool) {
	o.SpaceGuaranteeRequestedQueryParameter = spaceGuaranteeRequested
}

// WithSpaceGuaranteeReservedQueryParameter adds the spaceGuaranteeReserved to the lun collection get params
func (o *LunCollectionGetParams) WithSpaceGuaranteeReservedQueryParameter(spaceGuaranteeReserved *bool) *LunCollectionGetParams {
	o.SetSpaceGuaranteeReservedQueryParameter(spaceGuaranteeReserved)
	return o
}

// SetSpaceGuaranteeReservedQueryParameter adds the spaceGuaranteeReserved to the lun collection get params
func (o *LunCollectionGetParams) SetSpaceGuaranteeReservedQueryParameter(spaceGuaranteeReserved *bool) {
	o.SpaceGuaranteeReservedQueryParameter = spaceGuaranteeReserved
}

// WithSpaceScsiThinProvisioningSupportEnabledQueryParameter adds the spaceScsiThinProvisioningSupportEnabled to the lun collection get params
func (o *LunCollectionGetParams) WithSpaceScsiThinProvisioningSupportEnabledQueryParameter(spaceScsiThinProvisioningSupportEnabled *bool) *LunCollectionGetParams {
	o.SetSpaceScsiThinProvisioningSupportEnabledQueryParameter(spaceScsiThinProvisioningSupportEnabled)
	return o
}

// SetSpaceScsiThinProvisioningSupportEnabledQueryParameter adds the spaceScsiThinProvisioningSupportEnabled to the lun collection get params
func (o *LunCollectionGetParams) SetSpaceScsiThinProvisioningSupportEnabledQueryParameter(spaceScsiThinProvisioningSupportEnabled *bool) {
	o.SpaceScsiThinProvisioningSupportEnabledQueryParameter = spaceScsiThinProvisioningSupportEnabled
}

// WithSpaceSizeQueryParameter adds the spaceSize to the lun collection get params
func (o *LunCollectionGetParams) WithSpaceSizeQueryParameter(spaceSize *int64) *LunCollectionGetParams {
	o.SetSpaceSizeQueryParameter(spaceSize)
	return o
}

// SetSpaceSizeQueryParameter adds the spaceSize to the lun collection get params
func (o *LunCollectionGetParams) SetSpaceSizeQueryParameter(spaceSize *int64) {
	o.SpaceSizeQueryParameter = spaceSize
}

// WithSpaceUsedQueryParameter adds the spaceUsed to the lun collection get params
func (o *LunCollectionGetParams) WithSpaceUsedQueryParameter(spaceUsed *int64) *LunCollectionGetParams {
	o.SetSpaceUsedQueryParameter(spaceUsed)
	return o
}

// SetSpaceUsedQueryParameter adds the spaceUsed to the lun collection get params
func (o *LunCollectionGetParams) SetSpaceUsedQueryParameter(spaceUsed *int64) {
	o.SpaceUsedQueryParameter = spaceUsed
}

// WithStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) *LunCollectionGetParams {
	o.SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther)
	return o
}

// SetStatisticsIopsRawOtherQueryParameter adds the statisticsIopsRawOther to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsIopsRawOtherQueryParameter(statisticsIopsRawOther *int64) {
	o.StatisticsIopsRawOtherQueryParameter = statisticsIopsRawOther
}

// WithStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) *LunCollectionGetParams {
	o.SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead)
	return o
}

// SetStatisticsIopsRawReadQueryParameter adds the statisticsIopsRawRead to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsIopsRawReadQueryParameter(statisticsIopsRawRead *int64) {
	o.StatisticsIopsRawReadQueryParameter = statisticsIopsRawRead
}

// WithStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) *LunCollectionGetParams {
	o.SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal)
	return o
}

// SetStatisticsIopsRawTotalQueryParameter adds the statisticsIopsRawTotal to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsIopsRawTotalQueryParameter(statisticsIopsRawTotal *int64) {
	o.StatisticsIopsRawTotalQueryParameter = statisticsIopsRawTotal
}

// WithStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) *LunCollectionGetParams {
	o.SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite)
	return o
}

// SetStatisticsIopsRawWriteQueryParameter adds the statisticsIopsRawWrite to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsIopsRawWriteQueryParameter(statisticsIopsRawWrite *int64) {
	o.StatisticsIopsRawWriteQueryParameter = statisticsIopsRawWrite
}

// WithStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) *LunCollectionGetParams {
	o.SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther)
	return o
}

// SetStatisticsLatencyRawOtherQueryParameter adds the statisticsLatencyRawOther to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsLatencyRawOtherQueryParameter(statisticsLatencyRawOther *int64) {
	o.StatisticsLatencyRawOtherQueryParameter = statisticsLatencyRawOther
}

// WithStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) *LunCollectionGetParams {
	o.SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead)
	return o
}

// SetStatisticsLatencyRawReadQueryParameter adds the statisticsLatencyRawRead to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsLatencyRawReadQueryParameter(statisticsLatencyRawRead *int64) {
	o.StatisticsLatencyRawReadQueryParameter = statisticsLatencyRawRead
}

// WithStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) *LunCollectionGetParams {
	o.SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal)
	return o
}

// SetStatisticsLatencyRawTotalQueryParameter adds the statisticsLatencyRawTotal to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsLatencyRawTotalQueryParameter(statisticsLatencyRawTotal *int64) {
	o.StatisticsLatencyRawTotalQueryParameter = statisticsLatencyRawTotal
}

// WithStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) *LunCollectionGetParams {
	o.SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite)
	return o
}

// SetStatisticsLatencyRawWriteQueryParameter adds the statisticsLatencyRawWrite to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsLatencyRawWriteQueryParameter(statisticsLatencyRawWrite *int64) {
	o.StatisticsLatencyRawWriteQueryParameter = statisticsLatencyRawWrite
}

// WithStatisticsStatusQueryParameter adds the statisticsStatus to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsStatusQueryParameter(statisticsStatus *string) *LunCollectionGetParams {
	o.SetStatisticsStatusQueryParameter(statisticsStatus)
	return o
}

// SetStatisticsStatusQueryParameter adds the statisticsStatus to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsStatusQueryParameter(statisticsStatus *string) {
	o.StatisticsStatusQueryParameter = statisticsStatus
}

// WithStatisticsThroughputRawOtherQueryParameter adds the statisticsThroughputRawOther to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther *int64) *LunCollectionGetParams {
	o.SetStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther)
	return o
}

// SetStatisticsThroughputRawOtherQueryParameter adds the statisticsThroughputRawOther to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsThroughputRawOtherQueryParameter(statisticsThroughputRawOther *int64) {
	o.StatisticsThroughputRawOtherQueryParameter = statisticsThroughputRawOther
}

// WithStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) *LunCollectionGetParams {
	o.SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead)
	return o
}

// SetStatisticsThroughputRawReadQueryParameter adds the statisticsThroughputRawRead to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsThroughputRawReadQueryParameter(statisticsThroughputRawRead *int64) {
	o.StatisticsThroughputRawReadQueryParameter = statisticsThroughputRawRead
}

// WithStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) *LunCollectionGetParams {
	o.SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal)
	return o
}

// SetStatisticsThroughputRawTotalQueryParameter adds the statisticsThroughputRawTotal to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsThroughputRawTotalQueryParameter(statisticsThroughputRawTotal *int64) {
	o.StatisticsThroughputRawTotalQueryParameter = statisticsThroughputRawTotal
}

// WithStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) *LunCollectionGetParams {
	o.SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite)
	return o
}

// SetStatisticsThroughputRawWriteQueryParameter adds the statisticsThroughputRawWrite to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsThroughputRawWriteQueryParameter(statisticsThroughputRawWrite *int64) {
	o.StatisticsThroughputRawWriteQueryParameter = statisticsThroughputRawWrite
}

// WithStatisticsTimestampQueryParameter adds the statisticsTimestamp to the lun collection get params
func (o *LunCollectionGetParams) WithStatisticsTimestampQueryParameter(statisticsTimestamp *string) *LunCollectionGetParams {
	o.SetStatisticsTimestampQueryParameter(statisticsTimestamp)
	return o
}

// SetStatisticsTimestampQueryParameter adds the statisticsTimestamp to the lun collection get params
func (o *LunCollectionGetParams) SetStatisticsTimestampQueryParameter(statisticsTimestamp *string) {
	o.StatisticsTimestampQueryParameter = statisticsTimestamp
}

// WithStatusContainerStateQueryParameter adds the statusContainerState to the lun collection get params
func (o *LunCollectionGetParams) WithStatusContainerStateQueryParameter(statusContainerState *string) *LunCollectionGetParams {
	o.SetStatusContainerStateQueryParameter(statusContainerState)
	return o
}

// SetStatusContainerStateQueryParameter adds the statusContainerState to the lun collection get params
func (o *LunCollectionGetParams) SetStatusContainerStateQueryParameter(statusContainerState *string) {
	o.StatusContainerStateQueryParameter = statusContainerState
}

// WithStatusMappedQueryParameter adds the statusMapped to the lun collection get params
func (o *LunCollectionGetParams) WithStatusMappedQueryParameter(statusMapped *bool) *LunCollectionGetParams {
	o.SetStatusMappedQueryParameter(statusMapped)
	return o
}

// SetStatusMappedQueryParameter adds the statusMapped to the lun collection get params
func (o *LunCollectionGetParams) SetStatusMappedQueryParameter(statusMapped *bool) {
	o.StatusMappedQueryParameter = statusMapped
}

// WithStatusReadOnlyQueryParameter adds the statusReadOnly to the lun collection get params
func (o *LunCollectionGetParams) WithStatusReadOnlyQueryParameter(statusReadOnly *bool) *LunCollectionGetParams {
	o.SetStatusReadOnlyQueryParameter(statusReadOnly)
	return o
}

// SetStatusReadOnlyQueryParameter adds the statusReadOnly to the lun collection get params
func (o *LunCollectionGetParams) SetStatusReadOnlyQueryParameter(statusReadOnly *bool) {
	o.StatusReadOnlyQueryParameter = statusReadOnly
}

// WithStatusStateQueryParameter adds the statusState to the lun collection get params
func (o *LunCollectionGetParams) WithStatusStateQueryParameter(statusState *string) *LunCollectionGetParams {
	o.SetStatusStateQueryParameter(statusState)
	return o
}

// SetStatusStateQueryParameter adds the statusState to the lun collection get params
func (o *LunCollectionGetParams) SetStatusStateQueryParameter(statusState *string) {
	o.StatusStateQueryParameter = statusState
}

// WithSVMNameQueryParameter adds the svmName to the lun collection get params
func (o *LunCollectionGetParams) WithSVMNameQueryParameter(svmName *string) *LunCollectionGetParams {
	o.SetSVMNameQueryParameter(svmName)
	return o
}

// SetSVMNameQueryParameter adds the svmName to the lun collection get params
func (o *LunCollectionGetParams) SetSVMNameQueryParameter(svmName *string) {
	o.SVMNameQueryParameter = svmName
}

// WithSVMUUIDQueryParameter adds the svmUUID to the lun collection get params
func (o *LunCollectionGetParams) WithSVMUUIDQueryParameter(svmUUID *string) *LunCollectionGetParams {
	o.SetSVMUUIDQueryParameter(svmUUID)
	return o
}

// SetSVMUUIDQueryParameter adds the svmUuid to the lun collection get params
func (o *LunCollectionGetParams) SetSVMUUIDQueryParameter(svmUUID *string) {
	o.SVMUUIDQueryParameter = svmUUID
}

// WithUUIDQueryParameter adds the uuid to the lun collection get params
func (o *LunCollectionGetParams) WithUUIDQueryParameter(uuid *string) *LunCollectionGetParams {
	o.SetUUIDQueryParameter(uuid)
	return o
}

// SetUUIDQueryParameter adds the uuid to the lun collection get params
func (o *LunCollectionGetParams) SetUUIDQueryParameter(uuid *string) {
	o.UUIDQueryParameter = uuid
}

// WithVvolBindingsIDQueryParameter adds the vvolBindingsID to the lun collection get params
func (o *LunCollectionGetParams) WithVvolBindingsIDQueryParameter(vvolBindingsID *int64) *LunCollectionGetParams {
	o.SetVvolBindingsIDQueryParameter(vvolBindingsID)
	return o
}

// SetVvolBindingsIDQueryParameter adds the vvolBindingsId to the lun collection get params
func (o *LunCollectionGetParams) SetVvolBindingsIDQueryParameter(vvolBindingsID *int64) {
	o.VvolBindingsIDQueryParameter = vvolBindingsID
}

// WithVvolBindingsPartnerNameQueryParameter adds the vvolBindingsPartnerName to the lun collection get params
func (o *LunCollectionGetParams) WithVvolBindingsPartnerNameQueryParameter(vvolBindingsPartnerName *string) *LunCollectionGetParams {
	o.SetVvolBindingsPartnerNameQueryParameter(vvolBindingsPartnerName)
	return o
}

// SetVvolBindingsPartnerNameQueryParameter adds the vvolBindingsPartnerName to the lun collection get params
func (o *LunCollectionGetParams) SetVvolBindingsPartnerNameQueryParameter(vvolBindingsPartnerName *string) {
	o.VvolBindingsPartnerNameQueryParameter = vvolBindingsPartnerName
}

// WithVvolBindingsPartnerUUIDQueryParameter adds the vvolBindingsPartnerUUID to the lun collection get params
func (o *LunCollectionGetParams) WithVvolBindingsPartnerUUIDQueryParameter(vvolBindingsPartnerUUID *string) *LunCollectionGetParams {
	o.SetVvolBindingsPartnerUUIDQueryParameter(vvolBindingsPartnerUUID)
	return o
}

// SetVvolBindingsPartnerUUIDQueryParameter adds the vvolBindingsPartnerUuid to the lun collection get params
func (o *LunCollectionGetParams) SetVvolBindingsPartnerUUIDQueryParameter(vvolBindingsPartnerUUID *string) {
	o.VvolBindingsPartnerUUIDQueryParameter = vvolBindingsPartnerUUID
}

// WithVvolIsBoundQueryParameter adds the vvolIsBound to the lun collection get params
func (o *LunCollectionGetParams) WithVvolIsBoundQueryParameter(vvolIsBound *bool) *LunCollectionGetParams {
	o.SetVvolIsBoundQueryParameter(vvolIsBound)
	return o
}

// SetVvolIsBoundQueryParameter adds the vvolIsBound to the lun collection get params
func (o *LunCollectionGetParams) SetVvolIsBoundQueryParameter(vvolIsBound *bool) {
	o.VvolIsBoundQueryParameter = vvolIsBound
}

// WriteToRequest writes these params to a swagger request
func (o *LunCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AttributesNameQueryParameter != nil {

		// query param attributes.name
		var qrAttributesName string

		if o.AttributesNameQueryParameter != nil {
			qrAttributesName = *o.AttributesNameQueryParameter
		}
		qAttributesName := qrAttributesName
		if qAttributesName != "" {

			if err := r.SetQueryParam("attributes.name", qAttributesName); err != nil {
				return err
			}
		}
	}

	if o.AttributesValueQueryParameter != nil {

		// query param attributes.value
		var qrAttributesValue string

		if o.AttributesValueQueryParameter != nil {
			qrAttributesValue = *o.AttributesValueQueryParameter
		}
		qAttributesValue := qrAttributesValue
		if qAttributesValue != "" {

			if err := r.SetQueryParam("attributes.value", qAttributesValue); err != nil {
				return err
			}
		}
	}

	if o.AutoDeleteQueryParameter != nil {

		// query param auto_delete
		var qrAutoDelete bool

		if o.AutoDeleteQueryParameter != nil {
			qrAutoDelete = *o.AutoDeleteQueryParameter
		}
		qAutoDelete := swag.FormatBool(qrAutoDelete)
		if qAutoDelete != "" {

			if err := r.SetQueryParam("auto_delete", qAutoDelete); err != nil {
				return err
			}
		}
	}

	if o.ClassQueryParameter != nil {

		// query param class
		var qrClass string

		if o.ClassQueryParameter != nil {
			qrClass = *o.ClassQueryParameter
		}
		qClass := qrClass
		if qClass != "" {

			if err := r.SetQueryParam("class", qClass); err != nil {
				return err
			}
		}
	}

	if o.CommentQueryParameter != nil {

		// query param comment
		var qrComment string

		if o.CommentQueryParameter != nil {
			qrComment = *o.CommentQueryParameter
		}
		qComment := qrComment
		if qComment != "" {

			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}
	}

	if o.ConsistencyGroupNameQueryParameter != nil {

		// query param consistency_group.name
		var qrConsistencyGroupName string

		if o.ConsistencyGroupNameQueryParameter != nil {
			qrConsistencyGroupName = *o.ConsistencyGroupNameQueryParameter
		}
		qConsistencyGroupName := qrConsistencyGroupName
		if qConsistencyGroupName != "" {

			if err := r.SetQueryParam("consistency_group.name", qConsistencyGroupName); err != nil {
				return err
			}
		}
	}

	if o.ConsistencyGroupUUIDQueryParameter != nil {

		// query param consistency_group.uuid
		var qrConsistencyGroupUUID string

		if o.ConsistencyGroupUUIDQueryParameter != nil {
			qrConsistencyGroupUUID = *o.ConsistencyGroupUUIDQueryParameter
		}
		qConsistencyGroupUUID := qrConsistencyGroupUUID
		if qConsistencyGroupUUID != "" {

			if err := r.SetQueryParam("consistency_group.uuid", qConsistencyGroupUUID); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsMaxThroughputQueryParameter != nil {

		// query param copy.destinations.max_throughput
		var qrCopyDestinationsMaxThroughput int64

		if o.CopyDestinationsMaxThroughputQueryParameter != nil {
			qrCopyDestinationsMaxThroughput = *o.CopyDestinationsMaxThroughputQueryParameter
		}
		qCopyDestinationsMaxThroughput := swag.FormatInt64(qrCopyDestinationsMaxThroughput)
		if qCopyDestinationsMaxThroughput != "" {

			if err := r.SetQueryParam("copy.destinations.max_throughput", qCopyDestinationsMaxThroughput); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsNameQueryParameter != nil {

		// query param copy.destinations.name
		var qrCopyDestinationsName string

		if o.CopyDestinationsNameQueryParameter != nil {
			qrCopyDestinationsName = *o.CopyDestinationsNameQueryParameter
		}
		qCopyDestinationsName := qrCopyDestinationsName
		if qCopyDestinationsName != "" {

			if err := r.SetQueryParam("copy.destinations.name", qCopyDestinationsName); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressElapsedQueryParameter != nil {

		// query param copy.destinations.progress.elapsed
		var qrCopyDestinationsProgressElapsed int64

		if o.CopyDestinationsProgressElapsedQueryParameter != nil {
			qrCopyDestinationsProgressElapsed = *o.CopyDestinationsProgressElapsedQueryParameter
		}
		qCopyDestinationsProgressElapsed := swag.FormatInt64(qrCopyDestinationsProgressElapsed)
		if qCopyDestinationsProgressElapsed != "" {

			if err := r.SetQueryParam("copy.destinations.progress.elapsed", qCopyDestinationsProgressElapsed); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressFailureArgumentsCodeQueryParameter != nil {

		// query param copy.destinations.progress.failure.arguments.code
		var qrCopyDestinationsProgressFailureArgumentsCode string

		if o.CopyDestinationsProgressFailureArgumentsCodeQueryParameter != nil {
			qrCopyDestinationsProgressFailureArgumentsCode = *o.CopyDestinationsProgressFailureArgumentsCodeQueryParameter
		}
		qCopyDestinationsProgressFailureArgumentsCode := qrCopyDestinationsProgressFailureArgumentsCode
		if qCopyDestinationsProgressFailureArgumentsCode != "" {

			if err := r.SetQueryParam("copy.destinations.progress.failure.arguments.code", qCopyDestinationsProgressFailureArgumentsCode); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressFailureArgumentsMessageQueryParameter != nil {

		// query param copy.destinations.progress.failure.arguments.message
		var qrCopyDestinationsProgressFailureArgumentsMessage string

		if o.CopyDestinationsProgressFailureArgumentsMessageQueryParameter != nil {
			qrCopyDestinationsProgressFailureArgumentsMessage = *o.CopyDestinationsProgressFailureArgumentsMessageQueryParameter
		}
		qCopyDestinationsProgressFailureArgumentsMessage := qrCopyDestinationsProgressFailureArgumentsMessage
		if qCopyDestinationsProgressFailureArgumentsMessage != "" {

			if err := r.SetQueryParam("copy.destinations.progress.failure.arguments.message", qCopyDestinationsProgressFailureArgumentsMessage); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressFailureCodeQueryParameter != nil {

		// query param copy.destinations.progress.failure.code
		var qrCopyDestinationsProgressFailureCode string

		if o.CopyDestinationsProgressFailureCodeQueryParameter != nil {
			qrCopyDestinationsProgressFailureCode = *o.CopyDestinationsProgressFailureCodeQueryParameter
		}
		qCopyDestinationsProgressFailureCode := qrCopyDestinationsProgressFailureCode
		if qCopyDestinationsProgressFailureCode != "" {

			if err := r.SetQueryParam("copy.destinations.progress.failure.code", qCopyDestinationsProgressFailureCode); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressFailureMessageQueryParameter != nil {

		// query param copy.destinations.progress.failure.message
		var qrCopyDestinationsProgressFailureMessage string

		if o.CopyDestinationsProgressFailureMessageQueryParameter != nil {
			qrCopyDestinationsProgressFailureMessage = *o.CopyDestinationsProgressFailureMessageQueryParameter
		}
		qCopyDestinationsProgressFailureMessage := qrCopyDestinationsProgressFailureMessage
		if qCopyDestinationsProgressFailureMessage != "" {

			if err := r.SetQueryParam("copy.destinations.progress.failure.message", qCopyDestinationsProgressFailureMessage); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressFailureTargetQueryParameter != nil {

		// query param copy.destinations.progress.failure.target
		var qrCopyDestinationsProgressFailureTarget string

		if o.CopyDestinationsProgressFailureTargetQueryParameter != nil {
			qrCopyDestinationsProgressFailureTarget = *o.CopyDestinationsProgressFailureTargetQueryParameter
		}
		qCopyDestinationsProgressFailureTarget := qrCopyDestinationsProgressFailureTarget
		if qCopyDestinationsProgressFailureTarget != "" {

			if err := r.SetQueryParam("copy.destinations.progress.failure.target", qCopyDestinationsProgressFailureTarget); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressPercentCompleteQueryParameter != nil {

		// query param copy.destinations.progress.percent_complete
		var qrCopyDestinationsProgressPercentComplete int64

		if o.CopyDestinationsProgressPercentCompleteQueryParameter != nil {
			qrCopyDestinationsProgressPercentComplete = *o.CopyDestinationsProgressPercentCompleteQueryParameter
		}
		qCopyDestinationsProgressPercentComplete := swag.FormatInt64(qrCopyDestinationsProgressPercentComplete)
		if qCopyDestinationsProgressPercentComplete != "" {

			if err := r.SetQueryParam("copy.destinations.progress.percent_complete", qCopyDestinationsProgressPercentComplete); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressStateQueryParameter != nil {

		// query param copy.destinations.progress.state
		var qrCopyDestinationsProgressState string

		if o.CopyDestinationsProgressStateQueryParameter != nil {
			qrCopyDestinationsProgressState = *o.CopyDestinationsProgressStateQueryParameter
		}
		qCopyDestinationsProgressState := qrCopyDestinationsProgressState
		if qCopyDestinationsProgressState != "" {

			if err := r.SetQueryParam("copy.destinations.progress.state", qCopyDestinationsProgressState); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsProgressVolumeSnapshotBlockedQueryParameter != nil {

		// query param copy.destinations.progress.volume_snapshot_blocked
		var qrCopyDestinationsProgressVolumeSnapshotBlocked bool

		if o.CopyDestinationsProgressVolumeSnapshotBlockedQueryParameter != nil {
			qrCopyDestinationsProgressVolumeSnapshotBlocked = *o.CopyDestinationsProgressVolumeSnapshotBlockedQueryParameter
		}
		qCopyDestinationsProgressVolumeSnapshotBlocked := swag.FormatBool(qrCopyDestinationsProgressVolumeSnapshotBlocked)
		if qCopyDestinationsProgressVolumeSnapshotBlocked != "" {

			if err := r.SetQueryParam("copy.destinations.progress.volume_snapshot_blocked", qCopyDestinationsProgressVolumeSnapshotBlocked); err != nil {
				return err
			}
		}
	}

	if o.CopyDestinationsUUIDQueryParameter != nil {

		// query param copy.destinations.uuid
		var qrCopyDestinationsUUID string

		if o.CopyDestinationsUUIDQueryParameter != nil {
			qrCopyDestinationsUUID = *o.CopyDestinationsUUIDQueryParameter
		}
		qCopyDestinationsUUID := qrCopyDestinationsUUID
		if qCopyDestinationsUUID != "" {

			if err := r.SetQueryParam("copy.destinations.uuid", qCopyDestinationsUUID); err != nil {
				return err
			}
		}
	}

	if o.CopySourceMaxThroughputQueryParameter != nil {

		// query param copy.source.max_throughput
		var qrCopySourceMaxThroughput int64

		if o.CopySourceMaxThroughputQueryParameter != nil {
			qrCopySourceMaxThroughput = *o.CopySourceMaxThroughputQueryParameter
		}
		qCopySourceMaxThroughput := swag.FormatInt64(qrCopySourceMaxThroughput)
		if qCopySourceMaxThroughput != "" {

			if err := r.SetQueryParam("copy.source.max_throughput", qCopySourceMaxThroughput); err != nil {
				return err
			}
		}
	}

	if o.CopySourceNameQueryParameter != nil {

		// query param copy.source.name
		var qrCopySourceName string

		if o.CopySourceNameQueryParameter != nil {
			qrCopySourceName = *o.CopySourceNameQueryParameter
		}
		qCopySourceName := qrCopySourceName
		if qCopySourceName != "" {

			if err := r.SetQueryParam("copy.source.name", qCopySourceName); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressElapsedQueryParameter != nil {

		// query param copy.source.progress.elapsed
		var qrCopySourceProgressElapsed int64

		if o.CopySourceProgressElapsedQueryParameter != nil {
			qrCopySourceProgressElapsed = *o.CopySourceProgressElapsedQueryParameter
		}
		qCopySourceProgressElapsed := swag.FormatInt64(qrCopySourceProgressElapsed)
		if qCopySourceProgressElapsed != "" {

			if err := r.SetQueryParam("copy.source.progress.elapsed", qCopySourceProgressElapsed); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressFailureArgumentsCodeQueryParameter != nil {

		// query param copy.source.progress.failure.arguments.code
		var qrCopySourceProgressFailureArgumentsCode string

		if o.CopySourceProgressFailureArgumentsCodeQueryParameter != nil {
			qrCopySourceProgressFailureArgumentsCode = *o.CopySourceProgressFailureArgumentsCodeQueryParameter
		}
		qCopySourceProgressFailureArgumentsCode := qrCopySourceProgressFailureArgumentsCode
		if qCopySourceProgressFailureArgumentsCode != "" {

			if err := r.SetQueryParam("copy.source.progress.failure.arguments.code", qCopySourceProgressFailureArgumentsCode); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressFailureArgumentsMessageQueryParameter != nil {

		// query param copy.source.progress.failure.arguments.message
		var qrCopySourceProgressFailureArgumentsMessage string

		if o.CopySourceProgressFailureArgumentsMessageQueryParameter != nil {
			qrCopySourceProgressFailureArgumentsMessage = *o.CopySourceProgressFailureArgumentsMessageQueryParameter
		}
		qCopySourceProgressFailureArgumentsMessage := qrCopySourceProgressFailureArgumentsMessage
		if qCopySourceProgressFailureArgumentsMessage != "" {

			if err := r.SetQueryParam("copy.source.progress.failure.arguments.message", qCopySourceProgressFailureArgumentsMessage); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressFailureCodeQueryParameter != nil {

		// query param copy.source.progress.failure.code
		var qrCopySourceProgressFailureCode string

		if o.CopySourceProgressFailureCodeQueryParameter != nil {
			qrCopySourceProgressFailureCode = *o.CopySourceProgressFailureCodeQueryParameter
		}
		qCopySourceProgressFailureCode := qrCopySourceProgressFailureCode
		if qCopySourceProgressFailureCode != "" {

			if err := r.SetQueryParam("copy.source.progress.failure.code", qCopySourceProgressFailureCode); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressFailureMessageQueryParameter != nil {

		// query param copy.source.progress.failure.message
		var qrCopySourceProgressFailureMessage string

		if o.CopySourceProgressFailureMessageQueryParameter != nil {
			qrCopySourceProgressFailureMessage = *o.CopySourceProgressFailureMessageQueryParameter
		}
		qCopySourceProgressFailureMessage := qrCopySourceProgressFailureMessage
		if qCopySourceProgressFailureMessage != "" {

			if err := r.SetQueryParam("copy.source.progress.failure.message", qCopySourceProgressFailureMessage); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressFailureTargetQueryParameter != nil {

		// query param copy.source.progress.failure.target
		var qrCopySourceProgressFailureTarget string

		if o.CopySourceProgressFailureTargetQueryParameter != nil {
			qrCopySourceProgressFailureTarget = *o.CopySourceProgressFailureTargetQueryParameter
		}
		qCopySourceProgressFailureTarget := qrCopySourceProgressFailureTarget
		if qCopySourceProgressFailureTarget != "" {

			if err := r.SetQueryParam("copy.source.progress.failure.target", qCopySourceProgressFailureTarget); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressPercentCompleteQueryParameter != nil {

		// query param copy.source.progress.percent_complete
		var qrCopySourceProgressPercentComplete int64

		if o.CopySourceProgressPercentCompleteQueryParameter != nil {
			qrCopySourceProgressPercentComplete = *o.CopySourceProgressPercentCompleteQueryParameter
		}
		qCopySourceProgressPercentComplete := swag.FormatInt64(qrCopySourceProgressPercentComplete)
		if qCopySourceProgressPercentComplete != "" {

			if err := r.SetQueryParam("copy.source.progress.percent_complete", qCopySourceProgressPercentComplete); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressStateQueryParameter != nil {

		// query param copy.source.progress.state
		var qrCopySourceProgressState string

		if o.CopySourceProgressStateQueryParameter != nil {
			qrCopySourceProgressState = *o.CopySourceProgressStateQueryParameter
		}
		qCopySourceProgressState := qrCopySourceProgressState
		if qCopySourceProgressState != "" {

			if err := r.SetQueryParam("copy.source.progress.state", qCopySourceProgressState); err != nil {
				return err
			}
		}
	}

	if o.CopySourceProgressVolumeSnapshotBlockedQueryParameter != nil {

		// query param copy.source.progress.volume_snapshot_blocked
		var qrCopySourceProgressVolumeSnapshotBlocked bool

		if o.CopySourceProgressVolumeSnapshotBlockedQueryParameter != nil {
			qrCopySourceProgressVolumeSnapshotBlocked = *o.CopySourceProgressVolumeSnapshotBlockedQueryParameter
		}
		qCopySourceProgressVolumeSnapshotBlocked := swag.FormatBool(qrCopySourceProgressVolumeSnapshotBlocked)
		if qCopySourceProgressVolumeSnapshotBlocked != "" {

			if err := r.SetQueryParam("copy.source.progress.volume_snapshot_blocked", qCopySourceProgressVolumeSnapshotBlocked); err != nil {
				return err
			}
		}
	}

	if o.CopySourceUUIDQueryParameter != nil {

		// query param copy.source.uuid
		var qrCopySourceUUID string

		if o.CopySourceUUIDQueryParameter != nil {
			qrCopySourceUUID = *o.CopySourceUUIDQueryParameter
		}
		qCopySourceUUID := qrCopySourceUUID
		if qCopySourceUUID != "" {

			if err := r.SetQueryParam("copy.source.uuid", qCopySourceUUID); err != nil {
				return err
			}
		}
	}

	if o.CreateTimeQueryParameter != nil {

		// query param create_time
		var qrCreateTime string

		if o.CreateTimeQueryParameter != nil {
			qrCreateTime = *o.CreateTimeQueryParameter
		}
		qCreateTime := qrCreateTime
		if qCreateTime != "" {

			if err := r.SetQueryParam("create_time", qCreateTime); err != nil {
				return err
			}
		}
	}

	if o.EnabledQueryParameter != nil {

		// query param enabled
		var qrEnabled bool

		if o.EnabledQueryParameter != nil {
			qrEnabled = *o.EnabledQueryParameter
		}
		qEnabled := swag.FormatBool(qrEnabled)
		if qEnabled != "" {

			if err := r.SetQueryParam("enabled", qEnabled); err != nil {
				return err
			}
		}
	}

	if o.FieldsQueryParameter != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.LocationLogicalUnitQueryParameter != nil {

		// query param location.logical_unit
		var qrLocationLogicalUnit string

		if o.LocationLogicalUnitQueryParameter != nil {
			qrLocationLogicalUnit = *o.LocationLogicalUnitQueryParameter
		}
		qLocationLogicalUnit := qrLocationLogicalUnit
		if qLocationLogicalUnit != "" {

			if err := r.SetQueryParam("location.logical_unit", qLocationLogicalUnit); err != nil {
				return err
			}
		}
	}

	if o.LocationNodeNameQueryParameter != nil {

		// query param location.node.name
		var qrLocationNodeName string

		if o.LocationNodeNameQueryParameter != nil {
			qrLocationNodeName = *o.LocationNodeNameQueryParameter
		}
		qLocationNodeName := qrLocationNodeName
		if qLocationNodeName != "" {

			if err := r.SetQueryParam("location.node.name", qLocationNodeName); err != nil {
				return err
			}
		}
	}

	if o.LocationNodeUUIDQueryParameter != nil {

		// query param location.node.uuid
		var qrLocationNodeUUID string

		if o.LocationNodeUUIDQueryParameter != nil {
			qrLocationNodeUUID = *o.LocationNodeUUIDQueryParameter
		}
		qLocationNodeUUID := qrLocationNodeUUID
		if qLocationNodeUUID != "" {

			if err := r.SetQueryParam("location.node.uuid", qLocationNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.LocationQtreeIDQueryParameter != nil {

		// query param location.qtree.id
		var qrLocationQtreeID int64

		if o.LocationQtreeIDQueryParameter != nil {
			qrLocationQtreeID = *o.LocationQtreeIDQueryParameter
		}
		qLocationQtreeID := swag.FormatInt64(qrLocationQtreeID)
		if qLocationQtreeID != "" {

			if err := r.SetQueryParam("location.qtree.id", qLocationQtreeID); err != nil {
				return err
			}
		}
	}

	if o.LocationQtreeNameQueryParameter != nil {

		// query param location.qtree.name
		var qrLocationQtreeName string

		if o.LocationQtreeNameQueryParameter != nil {
			qrLocationQtreeName = *o.LocationQtreeNameQueryParameter
		}
		qLocationQtreeName := qrLocationQtreeName
		if qLocationQtreeName != "" {

			if err := r.SetQueryParam("location.qtree.name", qLocationQtreeName); err != nil {
				return err
			}
		}
	}

	if o.LocationVolumeNameQueryParameter != nil {

		// query param location.volume.name
		var qrLocationVolumeName string

		if o.LocationVolumeNameQueryParameter != nil {
			qrLocationVolumeName = *o.LocationVolumeNameQueryParameter
		}
		qLocationVolumeName := qrLocationVolumeName
		if qLocationVolumeName != "" {

			if err := r.SetQueryParam("location.volume.name", qLocationVolumeName); err != nil {
				return err
			}
		}
	}

	if o.LocationVolumeUUIDQueryParameter != nil {

		// query param location.volume.uuid
		var qrLocationVolumeUUID string

		if o.LocationVolumeUUIDQueryParameter != nil {
			qrLocationVolumeUUID = *o.LocationVolumeUUIDQueryParameter
		}
		qLocationVolumeUUID := qrLocationVolumeUUID
		if qLocationVolumeUUID != "" {

			if err := r.SetQueryParam("location.volume.uuid", qLocationVolumeUUID); err != nil {
				return err
			}
		}
	}

	if o.LunMapsIgroupNameQueryParameter != nil {

		// query param lun_maps.igroup.name
		var qrLunMapsIgroupName string

		if o.LunMapsIgroupNameQueryParameter != nil {
			qrLunMapsIgroupName = *o.LunMapsIgroupNameQueryParameter
		}
		qLunMapsIgroupName := qrLunMapsIgroupName
		if qLunMapsIgroupName != "" {

			if err := r.SetQueryParam("lun_maps.igroup.name", qLunMapsIgroupName); err != nil {
				return err
			}
		}
	}

	if o.LunMapsIgroupUUIDQueryParameter != nil {

		// query param lun_maps.igroup.uuid
		var qrLunMapsIgroupUUID string

		if o.LunMapsIgroupUUIDQueryParameter != nil {
			qrLunMapsIgroupUUID = *o.LunMapsIgroupUUIDQueryParameter
		}
		qLunMapsIgroupUUID := qrLunMapsIgroupUUID
		if qLunMapsIgroupUUID != "" {

			if err := r.SetQueryParam("lun_maps.igroup.uuid", qLunMapsIgroupUUID); err != nil {
				return err
			}
		}
	}

	if o.LunMapsLogicalUnitNumberQueryParameter != nil {

		// query param lun_maps.logical_unit_number
		var qrLunMapsLogicalUnitNumber int64

		if o.LunMapsLogicalUnitNumberQueryParameter != nil {
			qrLunMapsLogicalUnitNumber = *o.LunMapsLogicalUnitNumberQueryParameter
		}
		qLunMapsLogicalUnitNumber := swag.FormatInt64(qrLunMapsLogicalUnitNumber)
		if qLunMapsLogicalUnitNumber != "" {

			if err := r.SetQueryParam("lun_maps.logical_unit_number", qLunMapsLogicalUnitNumber); err != nil {
				return err
			}
		}
	}

	if o.MaxRecordsQueryParameter != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecordsQueryParameter != nil {
			qrMaxRecords = *o.MaxRecordsQueryParameter
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricDurationQueryParameter != nil {

		// query param metric.duration
		var qrMetricDuration string

		if o.MetricDurationQueryParameter != nil {
			qrMetricDuration = *o.MetricDurationQueryParameter
		}
		qMetricDuration := qrMetricDuration
		if qMetricDuration != "" {

			if err := r.SetQueryParam("metric.duration", qMetricDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsOtherQueryParameter != nil {

		// query param metric.iops.other
		var qrMetricIopsOther int64

		if o.MetricIopsOtherQueryParameter != nil {
			qrMetricIopsOther = *o.MetricIopsOtherQueryParameter
		}
		qMetricIopsOther := swag.FormatInt64(qrMetricIopsOther)
		if qMetricIopsOther != "" {

			if err := r.SetQueryParam("metric.iops.other", qMetricIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsReadQueryParameter != nil {

		// query param metric.iops.read
		var qrMetricIopsRead int64

		if o.MetricIopsReadQueryParameter != nil {
			qrMetricIopsRead = *o.MetricIopsReadQueryParameter
		}
		qMetricIopsRead := swag.FormatInt64(qrMetricIopsRead)
		if qMetricIopsRead != "" {

			if err := r.SetQueryParam("metric.iops.read", qMetricIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsTotalQueryParameter != nil {

		// query param metric.iops.total
		var qrMetricIopsTotal int64

		if o.MetricIopsTotalQueryParameter != nil {
			qrMetricIopsTotal = *o.MetricIopsTotalQueryParameter
		}
		qMetricIopsTotal := swag.FormatInt64(qrMetricIopsTotal)
		if qMetricIopsTotal != "" {

			if err := r.SetQueryParam("metric.iops.total", qMetricIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsWriteQueryParameter != nil {

		// query param metric.iops.write
		var qrMetricIopsWrite int64

		if o.MetricIopsWriteQueryParameter != nil {
			qrMetricIopsWrite = *o.MetricIopsWriteQueryParameter
		}
		qMetricIopsWrite := swag.FormatInt64(qrMetricIopsWrite)
		if qMetricIopsWrite != "" {

			if err := r.SetQueryParam("metric.iops.write", qMetricIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyOtherQueryParameter != nil {

		// query param metric.latency.other
		var qrMetricLatencyOther int64

		if o.MetricLatencyOtherQueryParameter != nil {
			qrMetricLatencyOther = *o.MetricLatencyOtherQueryParameter
		}
		qMetricLatencyOther := swag.FormatInt64(qrMetricLatencyOther)
		if qMetricLatencyOther != "" {

			if err := r.SetQueryParam("metric.latency.other", qMetricLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyReadQueryParameter != nil {

		// query param metric.latency.read
		var qrMetricLatencyRead int64

		if o.MetricLatencyReadQueryParameter != nil {
			qrMetricLatencyRead = *o.MetricLatencyReadQueryParameter
		}
		qMetricLatencyRead := swag.FormatInt64(qrMetricLatencyRead)
		if qMetricLatencyRead != "" {

			if err := r.SetQueryParam("metric.latency.read", qMetricLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyTotalQueryParameter != nil {

		// query param metric.latency.total
		var qrMetricLatencyTotal int64

		if o.MetricLatencyTotalQueryParameter != nil {
			qrMetricLatencyTotal = *o.MetricLatencyTotalQueryParameter
		}
		qMetricLatencyTotal := swag.FormatInt64(qrMetricLatencyTotal)
		if qMetricLatencyTotal != "" {

			if err := r.SetQueryParam("metric.latency.total", qMetricLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyWriteQueryParameter != nil {

		// query param metric.latency.write
		var qrMetricLatencyWrite int64

		if o.MetricLatencyWriteQueryParameter != nil {
			qrMetricLatencyWrite = *o.MetricLatencyWriteQueryParameter
		}
		qMetricLatencyWrite := swag.FormatInt64(qrMetricLatencyWrite)
		if qMetricLatencyWrite != "" {

			if err := r.SetQueryParam("metric.latency.write", qMetricLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricStatusQueryParameter != nil {

		// query param metric.status
		var qrMetricStatus string

		if o.MetricStatusQueryParameter != nil {
			qrMetricStatus = *o.MetricStatusQueryParameter
		}
		qMetricStatus := qrMetricStatus
		if qMetricStatus != "" {

			if err := r.SetQueryParam("metric.status", qMetricStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputOtherQueryParameter != nil {

		// query param metric.throughput.other
		var qrMetricThroughputOther int64

		if o.MetricThroughputOtherQueryParameter != nil {
			qrMetricThroughputOther = *o.MetricThroughputOtherQueryParameter
		}
		qMetricThroughputOther := swag.FormatInt64(qrMetricThroughputOther)
		if qMetricThroughputOther != "" {

			if err := r.SetQueryParam("metric.throughput.other", qMetricThroughputOther); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputReadQueryParameter != nil {

		// query param metric.throughput.read
		var qrMetricThroughputRead int64

		if o.MetricThroughputReadQueryParameter != nil {
			qrMetricThroughputRead = *o.MetricThroughputReadQueryParameter
		}
		qMetricThroughputRead := swag.FormatInt64(qrMetricThroughputRead)
		if qMetricThroughputRead != "" {

			if err := r.SetQueryParam("metric.throughput.read", qMetricThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputTotalQueryParameter != nil {

		// query param metric.throughput.total
		var qrMetricThroughputTotal int64

		if o.MetricThroughputTotalQueryParameter != nil {
			qrMetricThroughputTotal = *o.MetricThroughputTotalQueryParameter
		}
		qMetricThroughputTotal := swag.FormatInt64(qrMetricThroughputTotal)
		if qMetricThroughputTotal != "" {

			if err := r.SetQueryParam("metric.throughput.total", qMetricThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputWriteQueryParameter != nil {

		// query param metric.throughput.write
		var qrMetricThroughputWrite int64

		if o.MetricThroughputWriteQueryParameter != nil {
			qrMetricThroughputWrite = *o.MetricThroughputWriteQueryParameter
		}
		qMetricThroughputWrite := swag.FormatInt64(qrMetricThroughputWrite)
		if qMetricThroughputWrite != "" {

			if err := r.SetQueryParam("metric.throughput.write", qMetricThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricTimestampQueryParameter != nil {

		// query param metric.timestamp
		var qrMetricTimestamp string

		if o.MetricTimestampQueryParameter != nil {
			qrMetricTimestamp = *o.MetricTimestampQueryParameter
		}
		qMetricTimestamp := qrMetricTimestamp
		if qMetricTimestamp != "" {

			if err := r.SetQueryParam("metric.timestamp", qMetricTimestamp); err != nil {
				return err
			}
		}
	}

	if o.MovementMaxThroughputQueryParameter != nil {

		// query param movement.max_throughput
		var qrMovementMaxThroughput int64

		if o.MovementMaxThroughputQueryParameter != nil {
			qrMovementMaxThroughput = *o.MovementMaxThroughputQueryParameter
		}
		qMovementMaxThroughput := swag.FormatInt64(qrMovementMaxThroughput)
		if qMovementMaxThroughput != "" {

			if err := r.SetQueryParam("movement.max_throughput", qMovementMaxThroughput); err != nil {
				return err
			}
		}
	}

	if o.MovementPathsDestinationQueryParameter != nil {

		// query param movement.paths.destination
		var qrMovementPathsDestination string

		if o.MovementPathsDestinationQueryParameter != nil {
			qrMovementPathsDestination = *o.MovementPathsDestinationQueryParameter
		}
		qMovementPathsDestination := qrMovementPathsDestination
		if qMovementPathsDestination != "" {

			if err := r.SetQueryParam("movement.paths.destination", qMovementPathsDestination); err != nil {
				return err
			}
		}
	}

	if o.MovementPathsSourceQueryParameter != nil {

		// query param movement.paths.source
		var qrMovementPathsSource string

		if o.MovementPathsSourceQueryParameter != nil {
			qrMovementPathsSource = *o.MovementPathsSourceQueryParameter
		}
		qMovementPathsSource := qrMovementPathsSource
		if qMovementPathsSource != "" {

			if err := r.SetQueryParam("movement.paths.source", qMovementPathsSource); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressElapsedQueryParameter != nil {

		// query param movement.progress.elapsed
		var qrMovementProgressElapsed int64

		if o.MovementProgressElapsedQueryParameter != nil {
			qrMovementProgressElapsed = *o.MovementProgressElapsedQueryParameter
		}
		qMovementProgressElapsed := swag.FormatInt64(qrMovementProgressElapsed)
		if qMovementProgressElapsed != "" {

			if err := r.SetQueryParam("movement.progress.elapsed", qMovementProgressElapsed); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressFailureArgumentsCodeQueryParameter != nil {

		// query param movement.progress.failure.arguments.code
		var qrMovementProgressFailureArgumentsCode string

		if o.MovementProgressFailureArgumentsCodeQueryParameter != nil {
			qrMovementProgressFailureArgumentsCode = *o.MovementProgressFailureArgumentsCodeQueryParameter
		}
		qMovementProgressFailureArgumentsCode := qrMovementProgressFailureArgumentsCode
		if qMovementProgressFailureArgumentsCode != "" {

			if err := r.SetQueryParam("movement.progress.failure.arguments.code", qMovementProgressFailureArgumentsCode); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressFailureArgumentsMessageQueryParameter != nil {

		// query param movement.progress.failure.arguments.message
		var qrMovementProgressFailureArgumentsMessage string

		if o.MovementProgressFailureArgumentsMessageQueryParameter != nil {
			qrMovementProgressFailureArgumentsMessage = *o.MovementProgressFailureArgumentsMessageQueryParameter
		}
		qMovementProgressFailureArgumentsMessage := qrMovementProgressFailureArgumentsMessage
		if qMovementProgressFailureArgumentsMessage != "" {

			if err := r.SetQueryParam("movement.progress.failure.arguments.message", qMovementProgressFailureArgumentsMessage); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressFailureCodeQueryParameter != nil {

		// query param movement.progress.failure.code
		var qrMovementProgressFailureCode string

		if o.MovementProgressFailureCodeQueryParameter != nil {
			qrMovementProgressFailureCode = *o.MovementProgressFailureCodeQueryParameter
		}
		qMovementProgressFailureCode := qrMovementProgressFailureCode
		if qMovementProgressFailureCode != "" {

			if err := r.SetQueryParam("movement.progress.failure.code", qMovementProgressFailureCode); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressFailureMessageQueryParameter != nil {

		// query param movement.progress.failure.message
		var qrMovementProgressFailureMessage string

		if o.MovementProgressFailureMessageQueryParameter != nil {
			qrMovementProgressFailureMessage = *o.MovementProgressFailureMessageQueryParameter
		}
		qMovementProgressFailureMessage := qrMovementProgressFailureMessage
		if qMovementProgressFailureMessage != "" {

			if err := r.SetQueryParam("movement.progress.failure.message", qMovementProgressFailureMessage); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressFailureTargetQueryParameter != nil {

		// query param movement.progress.failure.target
		var qrMovementProgressFailureTarget string

		if o.MovementProgressFailureTargetQueryParameter != nil {
			qrMovementProgressFailureTarget = *o.MovementProgressFailureTargetQueryParameter
		}
		qMovementProgressFailureTarget := qrMovementProgressFailureTarget
		if qMovementProgressFailureTarget != "" {

			if err := r.SetQueryParam("movement.progress.failure.target", qMovementProgressFailureTarget); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressPercentCompleteQueryParameter != nil {

		// query param movement.progress.percent_complete
		var qrMovementProgressPercentComplete int64

		if o.MovementProgressPercentCompleteQueryParameter != nil {
			qrMovementProgressPercentComplete = *o.MovementProgressPercentCompleteQueryParameter
		}
		qMovementProgressPercentComplete := swag.FormatInt64(qrMovementProgressPercentComplete)
		if qMovementProgressPercentComplete != "" {

			if err := r.SetQueryParam("movement.progress.percent_complete", qMovementProgressPercentComplete); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressStateQueryParameter != nil {

		// query param movement.progress.state
		var qrMovementProgressState string

		if o.MovementProgressStateQueryParameter != nil {
			qrMovementProgressState = *o.MovementProgressStateQueryParameter
		}
		qMovementProgressState := qrMovementProgressState
		if qMovementProgressState != "" {

			if err := r.SetQueryParam("movement.progress.state", qMovementProgressState); err != nil {
				return err
			}
		}
	}

	if o.MovementProgressVolumeSnapshotBlockedQueryParameter != nil {

		// query param movement.progress.volume_snapshot_blocked
		var qrMovementProgressVolumeSnapshotBlocked bool

		if o.MovementProgressVolumeSnapshotBlockedQueryParameter != nil {
			qrMovementProgressVolumeSnapshotBlocked = *o.MovementProgressVolumeSnapshotBlockedQueryParameter
		}
		qMovementProgressVolumeSnapshotBlocked := swag.FormatBool(qrMovementProgressVolumeSnapshotBlocked)
		if qMovementProgressVolumeSnapshotBlocked != "" {

			if err := r.SetQueryParam("movement.progress.volume_snapshot_blocked", qMovementProgressVolumeSnapshotBlocked); err != nil {
				return err
			}
		}
	}

	if o.NameQueryParameter != nil {

		// query param name
		var qrName string

		if o.NameQueryParameter != nil {
			qrName = *o.NameQueryParameter
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrderByQueryParameter != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.OsTypeQueryParameter != nil {

		// query param os_type
		var qrOsType string

		if o.OsTypeQueryParameter != nil {
			qrOsType = *o.OsTypeQueryParameter
		}
		qOsType := qrOsType
		if qOsType != "" {

			if err := r.SetQueryParam("os_type", qOsType); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyNameQueryParameter != nil {

		// query param qos_policy.name
		var qrQosPolicyName string

		if o.QosPolicyNameQueryParameter != nil {
			qrQosPolicyName = *o.QosPolicyNameQueryParameter
		}
		qQosPolicyName := qrQosPolicyName
		if qQosPolicyName != "" {

			if err := r.SetQueryParam("qos_policy.name", qQosPolicyName); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyUUIDQueryParameter != nil {

		// query param qos_policy.uuid
		var qrQosPolicyUUID string

		if o.QosPolicyUUIDQueryParameter != nil {
			qrQosPolicyUUID = *o.QosPolicyUUIDQueryParameter
		}
		qQosPolicyUUID := qrQosPolicyUUID
		if qQosPolicyUUID != "" {

			if err := r.SetQueryParam("qos_policy.uuid", qQosPolicyUUID); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecordsQueryParameter != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecordsQueryParameter != nil {
			qrReturnRecords = *o.ReturnRecordsQueryParameter
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeoutQueryParameter != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeoutQueryParameter != nil {
			qrReturnTimeout = *o.ReturnTimeoutQueryParameter
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SerialNumberQueryParameter != nil {

		// query param serial_number
		var qrSerialNumber string

		if o.SerialNumberQueryParameter != nil {
			qrSerialNumber = *o.SerialNumberQueryParameter
		}
		qSerialNumber := qrSerialNumber
		if qSerialNumber != "" {

			if err := r.SetQueryParam("serial_number", qSerialNumber); err != nil {
				return err
			}
		}
	}

	if o.SpaceGuaranteeRequestedQueryParameter != nil {

		// query param space.guarantee.requested
		var qrSpaceGuaranteeRequested bool

		if o.SpaceGuaranteeRequestedQueryParameter != nil {
			qrSpaceGuaranteeRequested = *o.SpaceGuaranteeRequestedQueryParameter
		}
		qSpaceGuaranteeRequested := swag.FormatBool(qrSpaceGuaranteeRequested)
		if qSpaceGuaranteeRequested != "" {

			if err := r.SetQueryParam("space.guarantee.requested", qSpaceGuaranteeRequested); err != nil {
				return err
			}
		}
	}

	if o.SpaceGuaranteeReservedQueryParameter != nil {

		// query param space.guarantee.reserved
		var qrSpaceGuaranteeReserved bool

		if o.SpaceGuaranteeReservedQueryParameter != nil {
			qrSpaceGuaranteeReserved = *o.SpaceGuaranteeReservedQueryParameter
		}
		qSpaceGuaranteeReserved := swag.FormatBool(qrSpaceGuaranteeReserved)
		if qSpaceGuaranteeReserved != "" {

			if err := r.SetQueryParam("space.guarantee.reserved", qSpaceGuaranteeReserved); err != nil {
				return err
			}
		}
	}

	if o.SpaceScsiThinProvisioningSupportEnabledQueryParameter != nil {

		// query param space.scsi_thin_provisioning_support_enabled
		var qrSpaceScsiThinProvisioningSupportEnabled bool

		if o.SpaceScsiThinProvisioningSupportEnabledQueryParameter != nil {
			qrSpaceScsiThinProvisioningSupportEnabled = *o.SpaceScsiThinProvisioningSupportEnabledQueryParameter
		}
		qSpaceScsiThinProvisioningSupportEnabled := swag.FormatBool(qrSpaceScsiThinProvisioningSupportEnabled)
		if qSpaceScsiThinProvisioningSupportEnabled != "" {

			if err := r.SetQueryParam("space.scsi_thin_provisioning_support_enabled", qSpaceScsiThinProvisioningSupportEnabled); err != nil {
				return err
			}
		}
	}

	if o.SpaceSizeQueryParameter != nil {

		// query param space.size
		var qrSpaceSize int64

		if o.SpaceSizeQueryParameter != nil {
			qrSpaceSize = *o.SpaceSizeQueryParameter
		}
		qSpaceSize := swag.FormatInt64(qrSpaceSize)
		if qSpaceSize != "" {

			if err := r.SetQueryParam("space.size", qSpaceSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceUsedQueryParameter != nil {

		// query param space.used
		var qrSpaceUsed int64

		if o.SpaceUsedQueryParameter != nil {
			qrSpaceUsed = *o.SpaceUsedQueryParameter
		}
		qSpaceUsed := swag.FormatInt64(qrSpaceUsed)
		if qSpaceUsed != "" {

			if err := r.SetQueryParam("space.used", qSpaceUsed); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawOtherQueryParameter != nil {

		// query param statistics.iops_raw.other
		var qrStatisticsIopsRawOther int64

		if o.StatisticsIopsRawOtherQueryParameter != nil {
			qrStatisticsIopsRawOther = *o.StatisticsIopsRawOtherQueryParameter
		}
		qStatisticsIopsRawOther := swag.FormatInt64(qrStatisticsIopsRawOther)
		if qStatisticsIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.iops_raw.other", qStatisticsIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawReadQueryParameter != nil {

		// query param statistics.iops_raw.read
		var qrStatisticsIopsRawRead int64

		if o.StatisticsIopsRawReadQueryParameter != nil {
			qrStatisticsIopsRawRead = *o.StatisticsIopsRawReadQueryParameter
		}
		qStatisticsIopsRawRead := swag.FormatInt64(qrStatisticsIopsRawRead)
		if qStatisticsIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.iops_raw.read", qStatisticsIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawTotalQueryParameter != nil {

		// query param statistics.iops_raw.total
		var qrStatisticsIopsRawTotal int64

		if o.StatisticsIopsRawTotalQueryParameter != nil {
			qrStatisticsIopsRawTotal = *o.StatisticsIopsRawTotalQueryParameter
		}
		qStatisticsIopsRawTotal := swag.FormatInt64(qrStatisticsIopsRawTotal)
		if qStatisticsIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.iops_raw.total", qStatisticsIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawWriteQueryParameter != nil {

		// query param statistics.iops_raw.write
		var qrStatisticsIopsRawWrite int64

		if o.StatisticsIopsRawWriteQueryParameter != nil {
			qrStatisticsIopsRawWrite = *o.StatisticsIopsRawWriteQueryParameter
		}
		qStatisticsIopsRawWrite := swag.FormatInt64(qrStatisticsIopsRawWrite)
		if qStatisticsIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.iops_raw.write", qStatisticsIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawOtherQueryParameter != nil {

		// query param statistics.latency_raw.other
		var qrStatisticsLatencyRawOther int64

		if o.StatisticsLatencyRawOtherQueryParameter != nil {
			qrStatisticsLatencyRawOther = *o.StatisticsLatencyRawOtherQueryParameter
		}
		qStatisticsLatencyRawOther := swag.FormatInt64(qrStatisticsLatencyRawOther)
		if qStatisticsLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.latency_raw.other", qStatisticsLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawReadQueryParameter != nil {

		// query param statistics.latency_raw.read
		var qrStatisticsLatencyRawRead int64

		if o.StatisticsLatencyRawReadQueryParameter != nil {
			qrStatisticsLatencyRawRead = *o.StatisticsLatencyRawReadQueryParameter
		}
		qStatisticsLatencyRawRead := swag.FormatInt64(qrStatisticsLatencyRawRead)
		if qStatisticsLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.latency_raw.read", qStatisticsLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawTotalQueryParameter != nil {

		// query param statistics.latency_raw.total
		var qrStatisticsLatencyRawTotal int64

		if o.StatisticsLatencyRawTotalQueryParameter != nil {
			qrStatisticsLatencyRawTotal = *o.StatisticsLatencyRawTotalQueryParameter
		}
		qStatisticsLatencyRawTotal := swag.FormatInt64(qrStatisticsLatencyRawTotal)
		if qStatisticsLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.latency_raw.total", qStatisticsLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawWriteQueryParameter != nil {

		// query param statistics.latency_raw.write
		var qrStatisticsLatencyRawWrite int64

		if o.StatisticsLatencyRawWriteQueryParameter != nil {
			qrStatisticsLatencyRawWrite = *o.StatisticsLatencyRawWriteQueryParameter
		}
		qStatisticsLatencyRawWrite := swag.FormatInt64(qrStatisticsLatencyRawWrite)
		if qStatisticsLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.latency_raw.write", qStatisticsLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsStatusQueryParameter != nil {

		// query param statistics.status
		var qrStatisticsStatus string

		if o.StatisticsStatusQueryParameter != nil {
			qrStatisticsStatus = *o.StatisticsStatusQueryParameter
		}
		qStatisticsStatus := qrStatisticsStatus
		if qStatisticsStatus != "" {

			if err := r.SetQueryParam("statistics.status", qStatisticsStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawOtherQueryParameter != nil {

		// query param statistics.throughput_raw.other
		var qrStatisticsThroughputRawOther int64

		if o.StatisticsThroughputRawOtherQueryParameter != nil {
			qrStatisticsThroughputRawOther = *o.StatisticsThroughputRawOtherQueryParameter
		}
		qStatisticsThroughputRawOther := swag.FormatInt64(qrStatisticsThroughputRawOther)
		if qStatisticsThroughputRawOther != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.other", qStatisticsThroughputRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawReadQueryParameter != nil {

		// query param statistics.throughput_raw.read
		var qrStatisticsThroughputRawRead int64

		if o.StatisticsThroughputRawReadQueryParameter != nil {
			qrStatisticsThroughputRawRead = *o.StatisticsThroughputRawReadQueryParameter
		}
		qStatisticsThroughputRawRead := swag.FormatInt64(qrStatisticsThroughputRawRead)
		if qStatisticsThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.read", qStatisticsThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawTotalQueryParameter != nil {

		// query param statistics.throughput_raw.total
		var qrStatisticsThroughputRawTotal int64

		if o.StatisticsThroughputRawTotalQueryParameter != nil {
			qrStatisticsThroughputRawTotal = *o.StatisticsThroughputRawTotalQueryParameter
		}
		qStatisticsThroughputRawTotal := swag.FormatInt64(qrStatisticsThroughputRawTotal)
		if qStatisticsThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.total", qStatisticsThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawWriteQueryParameter != nil {

		// query param statistics.throughput_raw.write
		var qrStatisticsThroughputRawWrite int64

		if o.StatisticsThroughputRawWriteQueryParameter != nil {
			qrStatisticsThroughputRawWrite = *o.StatisticsThroughputRawWriteQueryParameter
		}
		qStatisticsThroughputRawWrite := swag.FormatInt64(qrStatisticsThroughputRawWrite)
		if qStatisticsThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.write", qStatisticsThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsTimestampQueryParameter != nil {

		// query param statistics.timestamp
		var qrStatisticsTimestamp string

		if o.StatisticsTimestampQueryParameter != nil {
			qrStatisticsTimestamp = *o.StatisticsTimestampQueryParameter
		}
		qStatisticsTimestamp := qrStatisticsTimestamp
		if qStatisticsTimestamp != "" {

			if err := r.SetQueryParam("statistics.timestamp", qStatisticsTimestamp); err != nil {
				return err
			}
		}
	}

	if o.StatusContainerStateQueryParameter != nil {

		// query param status.container_state
		var qrStatusContainerState string

		if o.StatusContainerStateQueryParameter != nil {
			qrStatusContainerState = *o.StatusContainerStateQueryParameter
		}
		qStatusContainerState := qrStatusContainerState
		if qStatusContainerState != "" {

			if err := r.SetQueryParam("status.container_state", qStatusContainerState); err != nil {
				return err
			}
		}
	}

	if o.StatusMappedQueryParameter != nil {

		// query param status.mapped
		var qrStatusMapped bool

		if o.StatusMappedQueryParameter != nil {
			qrStatusMapped = *o.StatusMappedQueryParameter
		}
		qStatusMapped := swag.FormatBool(qrStatusMapped)
		if qStatusMapped != "" {

			if err := r.SetQueryParam("status.mapped", qStatusMapped); err != nil {
				return err
			}
		}
	}

	if o.StatusReadOnlyQueryParameter != nil {

		// query param status.read_only
		var qrStatusReadOnly bool

		if o.StatusReadOnlyQueryParameter != nil {
			qrStatusReadOnly = *o.StatusReadOnlyQueryParameter
		}
		qStatusReadOnly := swag.FormatBool(qrStatusReadOnly)
		if qStatusReadOnly != "" {

			if err := r.SetQueryParam("status.read_only", qStatusReadOnly); err != nil {
				return err
			}
		}
	}

	if o.StatusStateQueryParameter != nil {

		// query param status.state
		var qrStatusState string

		if o.StatusStateQueryParameter != nil {
			qrStatusState = *o.StatusStateQueryParameter
		}
		qStatusState := qrStatusState
		if qStatusState != "" {

			if err := r.SetQueryParam("status.state", qStatusState); err != nil {
				return err
			}
		}
	}

	if o.SVMNameQueryParameter != nil {

		// query param svm.name
		var qrSvmName string

		if o.SVMNameQueryParameter != nil {
			qrSvmName = *o.SVMNameQueryParameter
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SVMUUIDQueryParameter != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SVMUUIDQueryParameter != nil {
			qrSvmUUID = *o.SVMUUIDQueryParameter
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UUIDQueryParameter != nil {

		// query param uuid
		var qrUUID string

		if o.UUIDQueryParameter != nil {
			qrUUID = *o.UUIDQueryParameter
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if o.VvolBindingsIDQueryParameter != nil {

		// query param vvol.bindings.id
		var qrVvolBindingsID int64

		if o.VvolBindingsIDQueryParameter != nil {
			qrVvolBindingsID = *o.VvolBindingsIDQueryParameter
		}
		qVvolBindingsID := swag.FormatInt64(qrVvolBindingsID)
		if qVvolBindingsID != "" {

			if err := r.SetQueryParam("vvol.bindings.id", qVvolBindingsID); err != nil {
				return err
			}
		}
	}

	if o.VvolBindingsPartnerNameQueryParameter != nil {

		// query param vvol.bindings.partner.name
		var qrVvolBindingsPartnerName string

		if o.VvolBindingsPartnerNameQueryParameter != nil {
			qrVvolBindingsPartnerName = *o.VvolBindingsPartnerNameQueryParameter
		}
		qVvolBindingsPartnerName := qrVvolBindingsPartnerName
		if qVvolBindingsPartnerName != "" {

			if err := r.SetQueryParam("vvol.bindings.partner.name", qVvolBindingsPartnerName); err != nil {
				return err
			}
		}
	}

	if o.VvolBindingsPartnerUUIDQueryParameter != nil {

		// query param vvol.bindings.partner.uuid
		var qrVvolBindingsPartnerUUID string

		if o.VvolBindingsPartnerUUIDQueryParameter != nil {
			qrVvolBindingsPartnerUUID = *o.VvolBindingsPartnerUUIDQueryParameter
		}
		qVvolBindingsPartnerUUID := qrVvolBindingsPartnerUUID
		if qVvolBindingsPartnerUUID != "" {

			if err := r.SetQueryParam("vvol.bindings.partner.uuid", qVvolBindingsPartnerUUID); err != nil {
				return err
			}
		}
	}

	if o.VvolIsBoundQueryParameter != nil {

		// query param vvol.is_bound
		var qrVvolIsBound bool

		if o.VvolIsBoundQueryParameter != nil {
			qrVvolIsBound = *o.VvolIsBoundQueryParameter
		}
		qVvolIsBound := swag.FormatBool(qrVvolIsBound)
		if qVvolIsBound != "" {

			if err := r.SetQueryParam("vvol.is_bound", qVvolIsBound); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamLunCollectionGet binds the parameter fields
func (o *LunCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.FieldsQueryParameter

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamLunCollectionGet binds the parameter order_by
func (o *LunCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderByQueryParameter

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
