// Code generated by go-swagger; DO NOT EDIT.

package s_a_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// PortsetDeleteReader is a Reader for the PortsetDelete structure.
type PortsetDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PortsetDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPortsetDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPortsetDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPortsetDeleteOK creates a PortsetDeleteOK with default headers values
func NewPortsetDeleteOK() *PortsetDeleteOK {
	return &PortsetDeleteOK{}
}

/* PortsetDeleteOK describes a response with status code 200, with default header values.

OK
*/
type PortsetDeleteOK struct {
}

func (o *PortsetDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /protocols/san/portsets/{uuid}][%d] portsetDeleteOK ", 200)
}

func (o *PortsetDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPortsetDeleteDefault creates a PortsetDeleteDefault with default headers values
func NewPortsetDeleteDefault(code int) *PortsetDeleteDefault {
	return &PortsetDeleteDefault{
		_statusCode: code,
	}
}

/* PortsetDeleteDefault describes a response with status code -1, with default header values.

 ONTAP Error Response Codes
| Error Code | Description |
| ---------- | ----------- |
| 5374063 | An attempt was made to delete a portset that is bound to an initiator group without using query parameter `allow_delete_while_bound`. |
| 5374908 | The portset does not exist. |

*/
type PortsetDeleteDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the portset delete default response
func (o *PortsetDeleteDefault) Code() int {
	return o._statusCode
}

func (o *PortsetDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /protocols/san/portsets/{uuid}][%d] portset_delete default  %+v", o._statusCode, o.Payload)
}
func (o *PortsetDeleteDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PortsetDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
