// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FpolicyEngines The engine defines how ONTAP makes and manages connections to external FPolicy servers.
//
// swagger:model fpolicy_engines
type FpolicyEngines struct {

	// Specifies the name to assign to the external server configuration.
	// Example: fp_ex_eng
	Name string `json:"name,omitempty"`

	// Port number of the FPolicy server application.
	// Example: 9876
	Port int64 `json:"port,omitempty"`

	// primary servers
	// Example: ["10.132.145.20","10.140.101.109"]
	PrimaryServers []string `json:"primary_servers,omitempty"`

	// secondary servers
	// Example: ["10.132.145.20","10.132.145.21"]
	SecondaryServers []string `json:"secondary_servers,omitempty"`

	// The notification mode determines what ONTAP does after sending notifications to FPolicy servers.
	//   The possible values are:
	//     * synchronous  - After sending a notification, wait for a response from the FPolicy server.
	//     * asynchronous - After sending a notification, file request processing continues.
	//
	// Enum: [synchronous asynchronous]
	Type *string `json:"type,omitempty"`
}

// Validate validates this fpolicy engines
func (m *FpolicyEngines) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var fpolicyEnginesTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["synchronous","asynchronous"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		fpolicyEnginesTypeTypePropEnum = append(fpolicyEnginesTypeTypePropEnum, v)
	}
}

const (

	// BEGIN DEBUGGING
	// fpolicy_engines
	// FpolicyEngines
	// type
	// Type
	// synchronous
	// END DEBUGGING
	// FpolicyEnginesTypeSynchronous captures enum value "synchronous"
	FpolicyEnginesTypeSynchronous string = "synchronous"

	// BEGIN DEBUGGING
	// fpolicy_engines
	// FpolicyEngines
	// type
	// Type
	// asynchronous
	// END DEBUGGING
	// FpolicyEnginesTypeAsynchronous captures enum value "asynchronous"
	FpolicyEnginesTypeAsynchronous string = "asynchronous"
)

// prop value enum
func (m *FpolicyEngines) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, fpolicyEnginesTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *FpolicyEngines) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this fpolicy engines based on context it is used
func (m *FpolicyEngines) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FpolicyEngines) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FpolicyEngines) UnmarshalBinary(b []byte) error {
	var res FpolicyEngines
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
