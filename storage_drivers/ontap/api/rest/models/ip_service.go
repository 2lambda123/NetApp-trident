// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// IPService ip service
// Example: data_nfs
//
// swagger:model ip_service
type IPService string

const (

	// IPServiceClusterCore captures enum value "cluster_core"
	IPServiceClusterCore IPService = "cluster_core"

	// IPServiceInterclusterCore captures enum value "intercluster_core"
	IPServiceInterclusterCore IPService = "intercluster_core"

	// IPServiceManagementCore captures enum value "management_core"
	IPServiceManagementCore IPService = "management_core"

	// IPServiceManagementAutosupport captures enum value "management_autosupport"
	IPServiceManagementAutosupport IPService = "management_autosupport"

	// IPServiceManagementBgp captures enum value "management_bgp"
	IPServiceManagementBgp IPService = "management_bgp"

	// IPServiceManagementEms captures enum value "management_ems"
	IPServiceManagementEms IPService = "management_ems"

	// IPServiceManagementHTTPS captures enum value "management_https"
	IPServiceManagementHTTPS IPService = "management_https"

	// IPServiceManagementSSH captures enum value "management_ssh"
	IPServiceManagementSSH IPService = "management_ssh"

	// IPServiceManagementPortmap captures enum value "management_portmap"
	IPServiceManagementPortmap IPService = "management_portmap"

	// IPServiceDataCore captures enum value "data_core"
	IPServiceDataCore IPService = "data_core"

	// IPServiceDataNfs captures enum value "data_nfs"
	IPServiceDataNfs IPService = "data_nfs"

	// IPServiceDataCifs captures enum value "data_cifs"
	IPServiceDataCifs IPService = "data_cifs"

	// IPServiceDataFlexcache captures enum value "data_flexcache"
	IPServiceDataFlexcache IPService = "data_flexcache"

	// IPServiceDataIscsi captures enum value "data_iscsi"
	IPServiceDataIscsi IPService = "data_iscsi"

	// IPServiceDataS3Server captures enum value "data_s3_server"
	IPServiceDataS3Server IPService = "data_s3_server"
)

// for schema
var ipServiceEnum []interface{}

func init() {
	var res []IPService
	if err := json.Unmarshal([]byte(`["cluster_core","intercluster_core","management_core","management_autosupport","management_bgp","management_ems","management_https","management_ssh","management_portmap","data_core","data_nfs","data_cifs","data_flexcache","data_iscsi","data_s3_server"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ipServiceEnum = append(ipServiceEnum, v)
	}
}

func (m IPService) validateIPServiceEnum(path, location string, value IPService) error {
	if err := validate.EnumCase(path, location, value, ipServiceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this ip service
func (m IPService) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateIPServiceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this ip service based on context it is used
func (m IPService) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
