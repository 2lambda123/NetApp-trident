// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MaxdataOnSanApplicationComponentsTiering tiering
//
// swagger:model maxdata_on_san_application_components_tiering
type MaxdataOnSanApplicationComponentsTiering struct {

	// Storage tiering placement rules for the container(s)
	// Enum: [best_effort disallowed]
	Control *string `json:"control,omitempty"`

	// object stores
	ObjectStores []*MaxdataOnSanApplicationComponentsTieringObjectStoresItems0 `json:"object_stores,omitempty"`

	// The storage tiering type of the application component.
	// Enum: [none snapshot_only]
	Policy *string `json:"policy,omitempty"`
}

// Validate validates this maxdata on san application components tiering
func (m *MaxdataOnSanApplicationComponentsTiering) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateControl(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectStores(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePolicy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var maxdataOnSanApplicationComponentsTieringTypeControlPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["best_effort","disallowed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		maxdataOnSanApplicationComponentsTieringTypeControlPropEnum = append(maxdataOnSanApplicationComponentsTieringTypeControlPropEnum, v)
	}
}

const (

	// BEGIN DEBUGGING
	// maxdata_on_san_application_components_tiering
	// MaxdataOnSanApplicationComponentsTiering
	// control
	// Control
	// best_effort
	// END DEBUGGING
	// MaxdataOnSanApplicationComponentsTieringControlBestEffort captures enum value "best_effort"
	MaxdataOnSanApplicationComponentsTieringControlBestEffort string = "best_effort"

	// BEGIN DEBUGGING
	// maxdata_on_san_application_components_tiering
	// MaxdataOnSanApplicationComponentsTiering
	// control
	// Control
	// disallowed
	// END DEBUGGING
	// MaxdataOnSanApplicationComponentsTieringControlDisallowed captures enum value "disallowed"
	MaxdataOnSanApplicationComponentsTieringControlDisallowed string = "disallowed"
)

// prop value enum
func (m *MaxdataOnSanApplicationComponentsTiering) validateControlEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, maxdataOnSanApplicationComponentsTieringTypeControlPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MaxdataOnSanApplicationComponentsTiering) validateControl(formats strfmt.Registry) error {
	if swag.IsZero(m.Control) { // not required
		return nil
	}

	// value enum
	if err := m.validateControlEnum("control", "body", *m.Control); err != nil {
		return err
	}

	return nil
}

func (m *MaxdataOnSanApplicationComponentsTiering) validateObjectStores(formats strfmt.Registry) error {
	if swag.IsZero(m.ObjectStores) { // not required
		return nil
	}

	for i := 0; i < len(m.ObjectStores); i++ {
		if swag.IsZero(m.ObjectStores[i]) { // not required
			continue
		}

		if m.ObjectStores[i] != nil {
			if err := m.ObjectStores[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("object_stores" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var maxdataOnSanApplicationComponentsTieringTypePolicyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","snapshot_only"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		maxdataOnSanApplicationComponentsTieringTypePolicyPropEnum = append(maxdataOnSanApplicationComponentsTieringTypePolicyPropEnum, v)
	}
}

const (

	// BEGIN DEBUGGING
	// maxdata_on_san_application_components_tiering
	// MaxdataOnSanApplicationComponentsTiering
	// policy
	// Policy
	// none
	// END DEBUGGING
	// MaxdataOnSanApplicationComponentsTieringPolicyNone captures enum value "none"
	MaxdataOnSanApplicationComponentsTieringPolicyNone string = "none"

	// BEGIN DEBUGGING
	// maxdata_on_san_application_components_tiering
	// MaxdataOnSanApplicationComponentsTiering
	// policy
	// Policy
	// snapshot_only
	// END DEBUGGING
	// MaxdataOnSanApplicationComponentsTieringPolicySnapshotOnly captures enum value "snapshot_only"
	MaxdataOnSanApplicationComponentsTieringPolicySnapshotOnly string = "snapshot_only"
)

// prop value enum
func (m *MaxdataOnSanApplicationComponentsTiering) validatePolicyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, maxdataOnSanApplicationComponentsTieringTypePolicyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MaxdataOnSanApplicationComponentsTiering) validatePolicy(formats strfmt.Registry) error {
	if swag.IsZero(m.Policy) { // not required
		return nil
	}

	// value enum
	if err := m.validatePolicyEnum("policy", "body", *m.Policy); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this maxdata on san application components tiering based on the context it is used
func (m *MaxdataOnSanApplicationComponentsTiering) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateObjectStores(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MaxdataOnSanApplicationComponentsTiering) contextValidateObjectStores(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.ObjectStores); i++ {

		if m.ObjectStores[i] != nil {
			if err := m.ObjectStores[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("object_stores" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *MaxdataOnSanApplicationComponentsTiering) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MaxdataOnSanApplicationComponentsTiering) UnmarshalBinary(b []byte) error {
	var res MaxdataOnSanApplicationComponentsTiering
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// MaxdataOnSanApplicationComponentsTieringObjectStoresItems0 maxdata on san application components tiering object stores items0
//
// swagger:model MaxdataOnSanApplicationComponentsTieringObjectStoresItems0
type MaxdataOnSanApplicationComponentsTieringObjectStoresItems0 struct {

	// The name of the object-store to use.
	// Max Length: 512
	// Min Length: 1
	Name string `json:"name,omitempty"`
}

// Validate validates this maxdata on san application components tiering object stores items0
func (m *MaxdataOnSanApplicationComponentsTieringObjectStoresItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MaxdataOnSanApplicationComponentsTieringObjectStoresItems0) validateName(formats strfmt.Registry) error {
	if swag.IsZero(m.Name) { // not required
		return nil
	}

	if err := validate.MinLength("name", "body", m.Name, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", m.Name, 512); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this maxdata on san application components tiering object stores items0 based on context it is used
func (m *MaxdataOnSanApplicationComponentsTieringObjectStoresItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MaxdataOnSanApplicationComponentsTieringObjectStoresItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MaxdataOnSanApplicationComponentsTieringObjectStoresItems0) UnmarshalBinary(b []byte) error {
	var res MaxdataOnSanApplicationComponentsTieringObjectStoresItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
